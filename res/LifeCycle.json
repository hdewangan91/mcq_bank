[{"q":"<p>You have created a React App. The code written by you has been given alongside. Now, you find that the code has some errors. Choose the option which correctly points out the error in the code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import React from 'react';\nclass SearchComponent extends React.Component {\n constructor(props) {\n this.txt = null;\n this.state = { term: '' };\n this.setInputRef = e =&gt; {\n this.txt = e;\n }\n }\n onInputChange(event) {\n this.setState({ term: this.txt.value });\n }\n render() {\n return (\n &lt;input\n value={this.state.term}\n onChange={this.onInputChange.bind(this)}\n ref={this.setInputRef} /&gt;\n );\n }\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>Add super(props); in the third line.</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>Add super(); in the third line.</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>Add super(props); in the onInputChange() function.</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>Add super(); in the onInputChange() function.</code></pre>\n\n<p> </p>","a":[{"id":1653157,"option":"1","correct":true},{"id":1653158,"option":"2","correct":false},{"id":1653159,"option":"3","correct":false},{"id":1653160,"option":"4","correct":false}]},{"q":"<p>You are creating a React App. You are using render method. You implement arrow functions in render method. The code snippet written by you is given alongside. In the next step, you check its working via browser. Can you use arrow functions with render methods? Choose from the given options.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class Disp extends Component {\n handleClick() {\n console.log('You Clicked');\n }\n render() {\n return &lt;button onClick={() =&gt; this.handleClick()}&gt;Click this&lt;/button&gt;;\n }\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>It will give an error</p>\n\n<p><strong>2.</strong></p>\n\n<p>Yes, we can use it, but it will not work</p>\n\n<p><strong>3.</strong></p>\n\n<p>Yes, we can totally use them</p>\n\n<p><strong>4.</strong></p>\n\n<p>No its is not recommended</p>","a":[{"id":1653153,"option":"1","correct":false},{"id":1653154,"option":"2","correct":false},{"id":1653155,"option":"3","correct":true},{"id":1653156,"option":"4","correct":false}]},{"q":"<p>You are creating a React App. You want to remove a mounted React component and clean up its event handlers and state. What kind of a function would you use for this? What will be the parameter of the function?</p>\n\n<pre class=\"prettyprint\"><code>Function(parameter)</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>componentWillUnmount (container)</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>unmountComponentAtNode(container)</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>unmountComponentAtNode(true)</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>unmountComponentAtNode(false)</code></pre>\n\n<p> </p>","a":[{"id":1653149,"option":"1","correct":false},{"id":1653150,"option":"2","correct":true},{"id":1653151,"option":"3","correct":false},{"id":1653152,"option":"4","correct":false}]},{"q":"<p>You have created a React App. Then, you see it in your browser to check if it is working properly. In this step, you find that a descendant component is throwing an error. Now, you have not written any code for catching the exception. You use the componentDidCatch() function to control the error. What would you write in the missing parameters of the following code in order to catch the exception?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>componentDidCatch(A, B)</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>error, render()</p>\n\n<p><strong>2.</strong></p>\n\n<p>error, info</p>\n\n<p><strong>3.</strong></p>\n\n<p>Both options A and B can be passed as parameters.</p>\n\n<p><strong>4.</strong></p>\n\n<p>error, define()</p>","a":[{"id":1653145,"option":"1","correct":false},{"id":1653146,"option":"2","correct":true},{"id":1653147,"option":"3","correct":false},{"id":1653148,"option":"4","correct":false}]}]