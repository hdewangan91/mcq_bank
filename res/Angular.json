[{"q":"<p>Alice is working on ElementRef class in Angular. As we know it can hold a reference to a DOM element. Now when she tries to use her application, some unknown data enters into her application from unknown sources. Help her to find which of the following occurs on her application?</p>","a":[{"id":1126972,"option":"Eavesdropping ","correct":false},{"id":1126973,"option":"Cross-site Scripting","correct":true},{"id":1126974,"option":"Password ","correct":false},{"id":1126975,"option":"DDoS ","correct":false}]},{"q":"<p>In Angular, you are working on Dependency injection. You are trying to create an injectable service. You are required to generate a class named <strong>MymoduleService</strong> in the folder<strong> src/app/module1</strong> and you have implemented the following Angular CLI command:</p>\n\n<p><strong>Angular CLI command</strong></p>\n\n<pre class=\"prettyprint\"><code>ng generate service module1/mymodule</code></pre>\n\n<p>Now, you have observed that this command creates the following default <strong>MyModuleService</strong></p>\n\n<p><strong>src/app/module1/mymodule.service.ts</strong></p>\n\n<pre class=\"prettyprint\"><code>import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MymoduleService {\n  constructor() { }\n}</code></pre>\n\n<p>Which of the following specifies that Angular can use this class in the DI system in this scenario?</p>","a":[{"id":1582646,"option":"Constructor(mymoduleservice:MymoduleService)","correct":false},{"id":1582647,"option":"root","correct":false},{"id":1582648,"option":"@Injectable decorator","correct":true},{"id":1582649,"option":"MymoduleService","correct":false}]},{"q":"<p>In Angular 6, which of the following statements about the <strong>PipeTransform</strong> class is correct:</p>\n\n<ol>\n\t<li>It is an interface that is implemented by pipes to perform a transformation.</li>\n\t<li>Angular invokes the transform method with the value of a binding as the first argument.</li>\n</ol>","a":[{"id":1127056,"option":"1","correct":false},{"id":1127057,"option":"2","correct":false},{"id":1127058,"option":"Both of these","correct":true},{"id":1127059,"option":"None of these","correct":false}]},{"q":"<p>In Angular 2, which of the following changes the appearance of a component or segment?</p>","a":[{"id":388742,"option":"Components","correct":false},{"id":388743,"option":"Structural","correct":false},{"id":388744,"option":"Attribute","correct":true},{"id":388745,"option":"Pipes","correct":false}]},{"q":"<p>In Angular 2, which of the following changes the DOM design by including and evacuating the DOM components?</p>","a":[{"id":388738,"option":"Components","correct":false},{"id":388739,"option":"Structural","correct":true},{"id":388740,"option":"Attribute","correct":false},{"id":388741,"option":"Pipes","correct":false}]},{"q":"<p>In Angular 2, which of the following directives is used with a layout?</p>","a":[{"id":388734,"option":"Components","correct":true},{"id":388735,"option":"Structural","correct":false},{"id":388736,"option":"Attribute","correct":false},{"id":388737,"option":"None of these","correct":false}]},{"q":"<p>In Angular 2, which of the following defines organizing the information through observables?</p>","a":[{"id":388384,"option":"Reactive programming","correct":true},{"id":388385,"option":"preventEventPropagation","correct":false},{"id":388386,"option":"RxJS","correct":false},{"id":388387,"option":"Flux","correct":false}]},{"q":"<p>In Angular 2, what is $parse used for?</p>","a":[{"id":388718,"option":"Converts an AngularJS expression into a function","correct":true},{"id":388719,"option":"Calls $compile ","correct":false},{"id":388720,"option":"Converts AngularJS scope values to VanillaJS values","correct":false},{"id":388721,"option":"Converts AngularJS code to VanillaJS","correct":false}]},{"q":"<p>In Angular 2, which of the following pipes formats the date value according to the locale rules?</p>","a":[{"id":388806,"option":"DataPipe","correct":false},{"id":388807,"option":"DatePipe","correct":true},{"id":388808,"option":"DatePipe.format()","correct":false},{"id":388809,"option":"None of these","correct":false}]},{"q":"<p>In Angular 2, which of the following commands is used to execute an Architect target with an optional custom builder configuration defined in your project?</p>","a":[{"id":388468,"option":"ng server","correct":false},{"id":388469,"option":"ng init","correct":false},{"id":388470,"option":"ng run","correct":true},{"id":388471,"option":"ng exec","correct":false}]},{"q":"<p>In Angular 2, which typing is used in the following code:</p>\n\n<pre class=\"prettyprint\"><code>public subtractNumbers(number1, number2){\n    return number1 - number2;\n}\n</code></pre>","a":[{"id":388488,"option":"Static","correct":false},{"id":388489,"option":"Dynamic","correct":true},{"id":388490,"option":"Import","correct":false},{"id":388491,"option":"Export","correct":false}]},{"q":"<p>In Angular 2, which of the following filters is used to convert an input string to the percentage format?</p>","a":[{"id":388500,"option":"percentage","correct":false},{"id":388501,"option":"percent","correct":true},{"id":388502,"option":"%","correct":false},{"id":388503,"option":"%%","correct":false}]},{"q":"<p>In Angular 2, which of these options have the following properties:</p>\n\n<ol>\n\t<li>It changes the appearance or behavior of a DOM element.</li>\n\t<li>These directives look like regular HTML attributes in templates.</li>\n</ol>","a":[{"id":388638,"option":"Attribute","correct":true},{"id":388639,"option":"Structural","correct":false},{"id":388640,"option":"Components","correct":false},{"id":388641,"option":"Typescript","correct":false}]},{"q":"<p>You are working on the Angular workspace configuration. Which of the following properties customizes the <code>ng generate</code> sub-command option defaults for your project?</p>","a":[{"id":388702,"option":"projectType","correct":false},{"id":388703,"option":"sourceRoot","correct":false},{"id":388704,"option":"prefix","correct":false},{"id":388705,"option":"schematics","correct":true}]},{"q":"<p>In Angular 2, you are passing information from one component to another component in your application. If you are required to use a route to pass this information to your application components, then which of the following interfaces is used to perform this action?</p>","a":[{"id":388710,"option":"ActivateRouteLink","correct":false},{"id":388711,"option":"Route","correct":false},{"id":388712,"option":"ActivateRoute","correct":true},{"id":388713,"option":"RouteLink","correct":false}]},{"q":"<p>In Angular 2, which of the following functions returns the HTML template?</p>","a":[{"id":388726,"option":"styleUrls","correct":false},{"id":388727,"option":"templateUrl","correct":true},{"id":388728,"option":"styles","correct":false},{"id":388729,"option":"template","correct":false}]},{"q":"<p>In Angular 2, what is the number of main building blocks that are identified by the architecture diagram?</p>","a":[{"id":388798,"option":"2","correct":false},{"id":388799,"option":"4","correct":false},{"id":388800,"option":"6","correct":false},{"id":388801,"option":"8","correct":true}]},{"q":"<p>In Angular, which of the following statements about the dependency injection(DI) are correct:</p>\n\n<ol>\n\t<li>Dependencies are services or objects that a class needs to perform its function.</li>\n\t<li>DI is a coding pattern that requires dependencies from external sources rather than creating them itself.</li>\n\t<li>DI framework also provides declared dependencies to a class even when that class is not instantiated.</li>\n</ol>\n\n<p> </p>","a":[{"id":536950,"option":"1 and 2","correct":true},{"id":536951,"option":"2 and 3","correct":false},{"id":536952,"option":"1 and 3","correct":false},{"id":536953,"option":"All of these","correct":false}]},{"q":"<p>Which of the following statements about Angular is false?</p>","a":[{"id":536938,"option":"A change-detection graph is a directed tree.","correct":false},{"id":536939,"option":"Change detection is not predicatable.","correct":true},{"id":536940,"option":"Change detection becomes stable after a single pass.","correct":false},{"id":536941,"option":"Change detection generates VM-friendly code for better performance.","correct":false}]},{"q":"<p>In Angular, Inversion of Control (IoC) does not serve the design purpose of ____________________.</p>","a":[{"id":536958,"option":"Decoupling the execution of a task from implementation","correct":false},{"id":536959,"option":"Focusing a module on the task it is designed for","correct":false},{"id":536960,"option":"Freeing modules from assumptions about how other systems do what they do and instead rely on contracts","correct":false},{"id":536961,"option":"Preventing side effects while replacing a factory","correct":true}]},{"q":"<p>Which of the following is a custom matcher in Angular?</p>","a":[{"id":536966,"option":"toHaveBeenCalledBefore","correct":false},{"id":536967,"option":"toBeGoofy","correct":true},{"id":536968,"option":"toBeFalsy","correct":false},{"id":536969,"option":"toThrowError","correct":false}]},{"q":"<p>In Angular, which of the following template syntaxes binds a property to an interpolated string?</p>","a":[{"id":609141,"option":"<div title=\"Hello {{ponyName}}\">","correct":false},{"id":609142,"option":"<div [title]=\"Hello ' + ponyName\">","correct":false},{"id":609143,"option":"Both of these","correct":true},{"id":609144,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about the Angular compilation is correct:</p>\n\n<ol>\n\t<li>The AOT compiler<em> </em>decreases load time for the production environment.</li>\n\t<li>The JIT compiler convert code at runtime as part of bootstrapping.</li>\n\t<li>The AOT compiler converts code before browser downloads during the build phase.</li>\n</ol>","a":[{"id":609297,"option":"1 and 2","correct":false},{"id":609298,"option":"1 and 3","correct":false},{"id":609299,"option":"2 and 3","correct":false},{"id":609300,"option":"All of these","correct":true}]},{"q":"<p>In Angular 5, which of the following expressions is not foldable during an AOT compilation?</p>","a":[{"id":609317,"option":"Array index","correct":false},{"id":609318,"option":"Spread in literal array","correct":true},{"id":609319,"option":"Template with substitutions","correct":false},{"id":609320,"option":"Literal string","correct":false}]},{"q":"<p>Which of the following options is not a part of Angular 4 file structure?</p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":641207,"option":"App.module.ts","correct":false},{"id":641208,"option":"App.component.ts","correct":false},{"id":641209,"option":"App.component.spec.ts","correct":false},{"id":641210,"option":"App.comp.ts","correct":true}]},{"q":"<p>Which of the following statements about the Angular 8 architecture are correct:</p>\n\n<ol>\n\t<li>It implements core and optional functionality as a set of TypeScript libraries.</li>\n\t<li>NgModules provides the compilation context for components.</li>\n\t<li>The views define components that are sets of screen elements that Angular can modify.</li>\n</ol>","a":[{"id":1126872,"option":"1 and 2","correct":true},{"id":1126873,"option":"2 and 3","correct":false},{"id":1126874,"option":"1 and 3","correct":false},{"id":1126875,"option":"All of these","correct":false}]},{"q":"<p>In Angular 8, which of the following statements about the metadata of components are correct:</p>\n\n<ol>\n\t<li>It associates components with a template that defines a controller module.</li>\n\t<li>A template combines ordinary HTML with Angular directives and binding markup.</li>\n\t<li>The metadata for a service class provides the information Angular needs to make it available to components through dependency injection (DI).</li>\n</ol>","a":[{"id":1126876,"option":"1 and 2","correct":false},{"id":1126877,"option":"2 and 3","correct":true},{"id":1126878,"option":"1 and 3","correct":false},{"id":1126879,"option":"All of these","correct":false}]},{"q":"<p>In Angular 8, data binding is used to define the communication between a component and DOM. Which of the following data binding techniques is used to retrieve data from a TypeScript code to an HTML template or a view?</p>","a":[{"id":1126892,"option":"Property binding","correct":true},{"id":1126893,"option":"String interpolation","correct":false},{"id":1126894,"option":"Event binding","correct":false},{"id":1126895,"option":"Two-way binding","correct":false}]},{"q":"<p>In Angular 7, which of the following statements about the <strong>ElementRef</strong> class is correct:</p>\n\n<ol>\n\t<li>It is a wrapper class around the native element outside of a view.</li>\n\t<li>It is supported by a render-specific element.</li>\n\t<li>In the browser, it is a DOM element.</li>\n</ol>","a":[{"id":1126968,"option":"1 and 2","correct":false},{"id":1126969,"option":"2 and 3","correct":true},{"id":1126970,"option":"1 and 3","correct":false},{"id":1126971,"option":"All of these","correct":false}]},{"q":"<p>In Angular 7, which of the following built-in pipes are valid:</p>\n\n<ol>\n\t<li>IntegerPipe</li>\n\t<li>DecimalPipe</li>\n\t<li>PercentPipe</li>\n\t<li>SlicePipe</li>\n</ol>","a":[{"id":1126980,"option":"1, 2, and 3","correct":false},{"id":1126981,"option":"2, 3, and 4","correct":true},{"id":1126982,"option":"1, 2, and 4","correct":false},{"id":1126983,"option":"1, 3, and 4","correct":false}]},{"q":"<p>In Angular 7, you are working on pipes. Determine the default value of the timezone parameter of the <strong>DatePipe</strong> component.</p>","a":[{"id":1126984,"option":"0","correct":false},{"id":1126985,"option":"1","correct":false},{"id":1126986,"option":"mediumDate","correct":false},{"id":1126987,"option":"undefined","correct":true}]},{"q":"<p>In Angular 7, you are working on routing your application. You must load and configure your route in a separate module that is imported by the <strong>AppModule</strong> root. If you are required to generate an <strong>AppRoutingModule </strong>module class in the <strong>app-routing.module.ts</strong> file by using CLI, then which of the following Angular syntaxes is used to perform this task?</p>","a":[{"id":1126988,"option":"ng generate module app-routing --module=app","correct":false},{"id":1126989,"option":"ng generate module app-routing src/app/lib --module=app","correct":false},{"id":1126990,"option":"ng generate module app-routing --flat --module=app","correct":true},{"id":1126991,"option":"None of these","correct":false}]},{"q":"<p>In Angular 7, which of the following statements about services is correct:</p>\n\n<ol>\n\t<li>It is a broad category that includes any values, functions, or features within its scope that an application requires.</li>\n\t<li>It is a class with a narrow and well-defined purpose.</li>\n</ol>","a":[{"id":1126992,"option":"1","correct":false},{"id":1126993,"option":"2","correct":false},{"id":1126994,"option":"Both of these","correct":true},{"id":1126995,"option":"None of these","correct":false}]},{"q":"<p>In Angular 7, you are working on HTTP client service. The <strong>HTTPClient.get()</strong> method is used to request data from the server. Which of the following values are responsible for the return types of this method:</p>\n\n<ol>\n\t<li>observe</li>\n\t<li>responseType</li>\n\t<li>response</li>\n</ol>","a":[{"id":1127000,"option":"1 and 2","correct":true},{"id":1127001,"option":"2 and 3","correct":false},{"id":1127002,"option":"1 and 3","correct":false},{"id":1127003,"option":"All of these","correct":false}]},{"q":"<p>In Angular 6, you are working on animations. Which of the statements about the <strong>trigger</strong> function are correct:</p>\n\n<ol>\n\t<li>The first parameter in this function is the name of the animation to be given to the HTML tag to which the animation needs to be applied.</li>\n\t<li>The first parameter in this function is the functions that have been imported.</li>\n\t<li>The second parameter in this function is the functions that have been imported.</li>\n\t<li>The second parameter in this function is the name of the animation to be given to the HTML tag to which animation needs to be applied.</li>\n</ol>","a":[{"id":1127008,"option":"1 and 2","correct":false},{"id":1127009,"option":"3 and 4","correct":false},{"id":1127010,"option":"1 and 3","correct":true},{"id":1127011,"option":"2 and 4","correct":false}]},{"q":"<p>In Angular 6, you are working on animations. Which of the following statements about the <strong>transition</strong> function are correct:</p>\n\n<ol>\n\t<li>The first argument accepts states.</li>\n\t<li>The second argument accepts states.</li>\n\t<li>The first argument accepts the <strong>animate </strong>function.</li>\n\t<li>The second argument accepts the <strong>animate</strong> function.</li>\n</ol>","a":[{"id":1127012,"option":"1 and 2","correct":false},{"id":1127013,"option":"2 and 3","correct":true},{"id":1127014,"option":"1 and 4","correct":false},{"id":1127015,"option":"1 and 3","correct":false}]},{"q":"<p>In Angular 6, you are working on HTTP Client. Which of the following methods is used to call the display method and pass the requested data as parameters in this <strong>display</strong> method?</p>","a":[{"id":1127020,"option":"get()","correct":false},{"id":1127021,"option":"display()","correct":false},{"id":1127022,"option":"subscribe()","correct":true},{"id":1127023,"option":"trigger()","correct":false}]},{"q":"<p>In Angular 6, you are working on the HTTP Client. If you have stored your data in an <strong>httpdata</strong> variable, then which of the following structural directives is used to display data in your browser over this variable in your <strong>.html</strong> file?</p>","a":[{"id":1127024,"option":"*ngFor","correct":true},{"id":1127025,"option":"*ngIf","correct":false},{"id":1127026,"option":"*ng-template","correct":false},{"id":1127027,"option":"*ngServer","correct":false}]},{"q":"<p>In Angular 6, which of the following processes is represented if <strong>{{}}</strong> are used for the data binding technique?</p>","a":[{"id":1127060,"option":"Migration","correct":false},{"id":1127061,"option":"Binding","correct":false},{"id":1127062,"option":"Chambering","correct":false},{"id":1127063,"option":"Interpolation","correct":true}]},{"q":"<p>In Angular 2, which of the following ways to create a structural directive is correct?</p>","a":[{"id":388746,"option":"@Directive({\r\n      selector: '[appDelay]'\r\n    })\r\n    export class DelayDirective {\r\n      constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n      ) { }\r\n\r\n      @Input()\r\n      set appDelay(time: number): void { }\r\n    }","correct":true},{"id":388747,"option":"export class DelayDirective {\r\n      constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n      ) { }\r\n\r\n      @Input()\r\n      set appDelay(time: number): void { }\r\n    }","correct":false},{"id":388748,"option":"export class DelayDirective {\r\n      constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n      ) { }","correct":false},{"id":388749,"option":"@Directive({\r\n      selector: '[appDelay]'\r\n    })\r\n    import class DelayDirective {\r\n      constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n      ) { }\r\n\r\n      @Input()\r\n      set appDelay(time: number): void { }\r\n    }","correct":false}]},{"q":"<p>In Angular 2, which of the following syntaxes for adding multiple router-outlets within the same template is correct?</p>","a":[{"id":388706,"option":" <div class=\"row\">\r\n   <div class=\"user\">\r\n     <router-outlet name=\"userList\"></router-outlet>\r\n   </div>\r\n   <div class=\"userInfo\">\r\n     <router-outlet name=\"userInfo\"></router-outlet>\r\n   </div>\r\n </div>","correct":true},{"id":388707,"option":"<div class=\"user\">\r\n      <router-outlet name=\"userList\"></router-outlet>\r\n    </div>\r\n    <div class=\"userInfo\">\r\n      <router-outlet name=\"userInfo\"></router-outlet>\r\n    </div>","correct":false},{"id":388708,"option":"<router-outlet name=\"userList\"></router-outlet>\r\n      <router-outlet name=\"userInfo\"></router-outlet>","correct":false},{"id":388709,"option":"<router-outlet name=\"userInfo, userList\"></router-outlet>","correct":false}]},{"q":"<p>In Angular 2, which of these strategies are used for dirty checking?</p>","a":[{"id":388682,"option":"By inference, by collection contents, and by value","correct":false},{"id":388683,"option":"By reference, by collection contents, and by value","correct":true},{"id":388684,"option":"By constructor, by collection contents, and by value","correct":false},{"id":388685,"option":"By inference, by collection contents, and by value","correct":false}]},{"q":"<p>In Angular 2, which of the following statements about <strong>typings</strong> is correct?</p>","a":[{"id":388484,"option":"Typings does not allow the TypeScript compiler to use existing classes and properties.","correct":false},{"id":388485,"option":"We cannot install typings from a repository using the typings command.","correct":false},{"id":388486,"option":"Both of these","correct":false},{"id":388487,"option":"None of these","correct":true}]},{"q":"<p>In Angular 2, which of the following statements is true?</p>","a":[{"id":388171,"option":"On change of scope value, $digest is called.","correct":false},{"id":388172,"option":"On change of scope value, $apply is called which in turn calls $digest.","correct":true},{"id":388173,"option":"On change of scope value, $watch is called.","correct":false},{"id":388174,"option":"On change of scope value, $inject is called.","correct":false}]},{"q":"<p>In Angular 2, how are all the numbers represented in <strong>TypeScript</strong>?</p>","a":[{"id":388191,"option":"Integer","correct":false},{"id":388192,"option":"Decimal","correct":false},{"id":388193,"option":"Floating","correct":true},{"id":388194,"option":"String","correct":false}]},{"q":"<p>Which of the following represent the components of Angular 2?</p>","a":[{"id":388372,"option":"Decorator,Template, and View","correct":false},{"id":388373,"option":"Template, Class, and Metadata","correct":true},{"id":388374,"option":"Delegates and Class","correct":false},{"id":388375,"option":"Decorator, Metadata, and Functions","correct":false}]},{"q":"<p>In Angular 2, which of the following ways for calling service in the component class is correct:</p>\n\n<ol>\n\t<li>Create or import the service to the component class.</li>\n\t<li>Add it as a component provider.</li>\n\t<li>Include it through dependency injection.</li>\n\t<li>Use the service function in the component.</li>\n</ol>","a":[{"id":388778,"option":"All of these","correct":true},{"id":388779,"option":"2, 3, and 4","correct":false},{"id":388780,"option":"3 and 4","correct":false},{"id":388781,"option":"4 only","correct":false}]},{"q":"<p>In Angular 2, in which of these folders the <strong>CLI</strong> stores the Angular-specific code?</p>","a":[{"id":388766,"option":"src folder","correct":false},{"id":388767,"option":"src/app folder","correct":true},{"id":388768,"option":"app folder","correct":false},{"id":388769,"option":"images folder","correct":false}]},{"q":"<p>In Angular2, what are the various types of pipes?</p>","a":[{"id":388416,"option":"Built-in","correct":false},{"id":388417,"option":"User-defined","correct":false},{"id":388418,"option":"Both of these","correct":false},{"id":388419,"option":"Pure and impure","correct":true}]},{"q":"<p>In Angular 2, which of the following statements about <em>$compile</em> is true?</p>","a":[{"id":388690,"option":"This service converts a HTML string to a fully functional DOM element.","correct":true},{"id":388691,"option":"This service compiles AngularJS to PlainJS.","correct":false},{"id":388692,"option":"This service connects the scope and root-scope.","correct":false},{"id":388693,"option":"This service calls the method app.rum.","correct":false}]},{"q":"<p>In Angular 2, which of the following interfaces is implemented by the pipe class?</p>","a":[{"id":388424,"option":"PipeTransform","correct":true},{"id":388425,"option":"Pipe","correct":false},{"id":388426,"option":"Transform","correct":false},{"id":388427,"option":"PipeTransformed","correct":false}]},{"q":"<p>Which of the following documents contains metadata for an Angular 2 project?</p>","a":[{"id":388448,"option":"tsconfig.json","correct":false},{"id":388449,"option":"package.json","correct":true},{"id":388450,"option":"systemjs.config.json","correct":false},{"id":388451,"option":"config.json","correct":false}]},{"q":"<p>In Angular 2, in how many ways binding can be used by the designed forms?</p>","a":[{"id":388472,"option":"1","correct":false},{"id":388473,"option":"2","correct":true},{"id":388474,"option":"3","correct":false},{"id":388475,"option":"4","correct":false}]},{"q":"<p>In Angular 2, which of the following is used to handle the form submissions?</p>","a":[{"id":388642,"option":"ngSubmit","correct":true},{"id":388643,"option":"Submit","correct":false},{"id":388644,"option":"ngReset","correct":false},{"id":388645,"option":"Reset","correct":false}]},{"q":"<p>In Angular2, the promise service in ES6 is a placeholder for future values. If you are required to create an instance of this service, then which of the following syntaxes in this scenario is correct?</p>","a":[{"id":388762,"option":"var promise = new Promise((resolve, reject) => {});","correct":true},{"id":388763,"option":"let promise => new Promise((resolve, reject) = {});","correct":false},{"id":388764,"option":"let promise = new Promise((resolve, reject) => ());","correct":false},{"id":388765,"option":"var promise = >new Promise((resolve, reject) = {});","correct":false}]},{"q":"<p>Which of the following statements related to $http and $resource in Angular is false?</p>","a":[{"id":536978,"option":"$http is meant to make ajax calls that can fetch any data xml, json, images etc.","correct":false},{"id":536979,"option":"$resource is meant for REST based calls (RESTFUL)","correct":false},{"id":536980,"option":"$http internally uses $resource","correct":true},{"id":536981,"option":"$resource internally uses $http","correct":false}]},{"q":"<p>In Angular, which zone notifies subscribers immediately after the final (onTurnDone()) callback before ending a VM event?</p>","a":[{"id":536946,"option":"onEventDone()","correct":true},{"id":536947,"option":"onTurnDone()","correct":false},{"id":536948,"option":"onTurnStart()","correct":false},{"id":536949,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about the Reactive form approach in Angular is not true:</p>\n\n<ol>\n\t<li> Gives us more control thus resulting in a better testable form by leveraging decoupling</li>\n\t<li> Binds directives and behavior by one/two-way binding to our templates</li>\n\t<li> Improves the user experience with features like reactive transformations, correlated validations etc.</li>\n\t<li> Handles complex scenarios as runtime validation rules</li>\n</ol>","a":[{"id":536962,"option":"1","correct":false},{"id":536963,"option":"2","correct":true},{"id":536964,"option":"3","correct":false},{"id":536965,"option":"4","correct":false}]},{"q":"<p>Which of the following statements about AoT compilation in Angular is not true:</p>\n\n<ol>\n\t<li>It accelerates rendering. The executable JavaScript code format allows the browser to render the application immediately without having to compile it first.</li>\n\t<li>It makes runtime faster. The compilation context is performed during runtime to the application.</li>\n\t<li>It helps to detect errors in advance. The Angular compiler is able to detect errors during the build process and these can be fixed before the user accesses the application in the browser.</li>\n\t<li>It allows for better security. AOT compiles HTML templates and components into JavaScript files long before they are served to the client.</li>\n</ol>","a":[{"id":536974,"option":"1","correct":false},{"id":536975,"option":"2","correct":true},{"id":536976,"option":"3","correct":false},{"id":536977,"option":"4","correct":false}]},{"q":"<p>In Angular, which of the following decorators will you use to bind the first result of the component content query (<code>myPredicate</code>) to a property (<code>myChildComponent</code>) of the class?</p>","a":[{"id":609193,"option":"@ViewChild(myPredicate) myChildComponent;","correct":false},{"id":609194,"option":"@ViewChildren(myPredicate) myChildComponents;","correct":false},{"id":609195,"option":"@ContentChild(myPredicate) myChildComponent;","correct":true},{"id":609196,"option":"@ContentChildren(myPredicate) myChildComponents;","correct":false}]},{"q":"<p>In Angular, which of the following statements about an <strong>entry component</strong> is correct? </p>","a":[{"id":616471,"option":"An entry component is any component that is loaded declaratively via its selector.","correct":false},{"id":616472,"option":"An entry component is any component that Angular loads imperatively by type.","correct":true},{"id":616473,"option":"An entry component is any component that inserts itself into the DOM at the selected element. ","correct":false},{"id":616474,"option":"All of these","correct":false}]},{"q":"<p>Which of the following is the correct order of steps that are followed by an Angular router after reading the browser URL and applying a URL redirect: </p>\n\n<ol>\n\t<li>  It activates Angular components to display the page.</li>\n\t<li>  It runs the guards that are defined in the router state.</li>\n\t<li>  It resolves the required data for the router state.</li>\n\t<li>  It figures out which router state corresponds to the URL.</li>\n\t<li>  It manages navigation and repeats the steps when a new page is requested.</li>\n</ol>","a":[{"id":616103,"option":"2, 4, 3, 1, and 5","correct":false},{"id":616104,"option":"4, 2, 3, 1, and 5  ","correct":true},{"id":616105,"option":"4, 3, 1, 2, and 5","correct":false},{"id":616106,"option":"2, 1, 4, 3, and 5","correct":false}]},{"q":"<p>What is the default <strong>view encapsulation</strong> mode in Angular?</p>","a":[{"id":617753,"option":"None","correct":false},{"id":617754,"option":"Emulated","correct":true},{"id":617755,"option":"Native","correct":false},{"id":617756,"option":"Component","correct":false}]},{"q":"<p>In which of the following scenarios will you use JSON web tokens in Angular 4?</p>","a":[{"id":641227,"option":"Authentication","correct":false},{"id":641228,"option":"Information exchange","correct":false},{"id":641229,"option":"Both of these","correct":true},{"id":641230,"option":"None of these","correct":false}]},{"q":"<p>Which of the following directives must be used to change the DOM layout by adding and removing DOM elements of Angular 4?</p>","a":[{"id":643496,"option":"Attribute directive","correct":false},{"id":643497,"option":"Structural directive","correct":true},{"id":643498,"option":"Built-in directive","correct":false},{"id":643499,"option":"All of these","correct":false}]},{"q":"<p>In Angular 4, which of the following statements about <strong>ngIf </strong>along<strong> </strong>with <strong>then</strong> and <strong>else </strong>template is incorrect?</p>","a":[{"id":643690,"option":"The 'then' template of ngIf cannot be changed because it is an inline template.","correct":true},{"id":643691,"option":"If 'then' template is bound to have different values then it displays <ng-template> body having the template reference value as 'then' value.","correct":false},{"id":643692,"option":"The value of 'then' block and 'else' block can be changed at the runtime.","correct":false},{"id":643693,"option":"None of these","correct":false}]},{"q":"<p>In Angular 4, which of the following options is used to set the HTTP request header?</p>","a":[{"id":644108,"option":"HTTP Interceptors","correct":true},{"id":644109,"option":"HttpClient Injectable class","correct":false},{"id":644110,"option":"Both of these","correct":false},{"id":644111,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is an invalid mouse event in Angular 5?</p>","a":[{"id":612441,"option":"(dblclick)","correct":false},{"id":612442,"option":"(click)","correct":false},{"id":612443,"option":"(drag)","correct":false},{"id":612444,"option":"(rgtclick)","correct":true}]},{"q":"<p>In Angular 4, which of the following properties is used by an alias provider to map one token to another to ensure dependency injection?</p>","a":[{"id":643698,"option":"useFactory","correct":false},{"id":643699,"option":"useClass","correct":false},{"id":643700,"option":"useValue","correct":false},{"id":643701,"option":"useExisting","correct":true}]},{"q":"<p>In Angular 4, which of the following animation transitions is applicable when an element is leaving?</p>","a":[{"id":643504,"option":"void => *","correct":false},{"id":643505,"option":" * => void","correct":true},{"id":643506,"option":"void ==> *","correct":false},{"id":643507,"option":" * ==> void","correct":false}]},{"q":"<p>In Angular 4, which of the following options is not a property of <strong>route</strong> interface?</p>","a":[{"id":642888,"option":"path","correct":false},{"id":642889,"option":"data","correct":false},{"id":642890,"option":"outlet","correct":false},{"id":642891,"option":"load","correct":true}]},{"q":"<p>In Angular 6, which of the following statements about the ngOnInit() method are correct:<br>\n1) It is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time.<br>\n2) It is invoked after any of the views or content children have been checked.<br>\n3) It is invoked only once when the directive is instantiated.</p>","a":[{"id":1127036,"option":"1 and 2","correct":false},{"id":1127037,"option":"2 and 3","correct":false},{"id":1127038,"option":"1 and 3","correct":true},{"id":1127039,"option":"All of these","correct":false}]},{"q":"<p>In Angular 8, <strong>Ivy </strong>and <strong>Bazel</strong> are recently-added features in Angular 8. Which of the following represent the advantages of using Bazel system:</p>\n\n<ol>\n\t<li>It is used in incremental builds and tests.</li>\n\t<li>It provides a condition where both the backend and the front end can be made with the same tool.</li>\n\t<li>It is a compiler that is used as a new rendering engine.</li>\n\t<li>It can remove builds and cache on the build farm.</li>\n</ol>","a":[{"id":1126864,"option":"1, 2, and 3","correct":false},{"id":1126865,"option":"1, 2, and 4","correct":true},{"id":1126866,"option":"1, 3, and 4","correct":false},{"id":1126867,"option":"All of these","correct":false}]},{"q":"<p>In Angular 7, if you are working on the Component Development Kit (CDK) set, then which of the following statements about the <strong>Virtual scrolling</strong> feature is correct?</p>","a":[{"id":1126944,"option":"It is used to display visible DOM elements to you because the next list is displayed after you scroll.","correct":false},{"id":1126945,"option":"This is used to provide faster experience as the full list is not loaded at one attempt.","correct":true},{"id":1126946,"option":"Both of these","correct":false},{"id":1126947,"option":"None of these","correct":false}]},{"q":"<p>In Angular 7, which of the following statements about the <strong>NgModule</strong> class is correct:</p>\n\n<ol>\n\t<li>The <strong>@NgModule</strong> decorator takes a metadata object that describes how to compile a component's template and how to create an injector at runtime.</li>\n\t<li>It identifies the module's own components, directives, and pipes through the <strong>export</strong> property.</li>\n</ol>","a":[{"id":1126948,"option":"1","correct":false},{"id":1126949,"option":"2","correct":false},{"id":1126950,"option":"Both of these","correct":true},{"id":1126951,"option":"None of these","correct":false}]},{"q":"<p>In Angular 7, you are working on data binding. You have created the following two files, <strong>app.component.ts</strong> and <strong>app.component.html</strong>, by using which you are required to display the usernames and to determine whether they are available in the list. Now, you must write an Angular syntax by replacing <strong>xyz</strong> in the <strong>.html</strong> file. Determine the valid syntax:<br>\n<br>\n<strong>app.component.ts</strong></p>\n\n<pre class=\"prettyprint\"><code>import { Component } from '@angular/core';\n@Component({ selector: 'app-root', templateUrl: './app.component.html',  styleUrls: ['./app.component.css'] }) \nexport class AppComponent\n    {    \n            names = [\"Alice\", “Bob”, “John”]; \n            isavailable = true; \n}</code></pre>\n\n<p><strong>app.component.html</strong></p>\n\n<pre class=\"prettyprint\"><code>names :\n            {{i}}              \n            Condition is valid.\n\n</code></pre>\n\n<p> </p>","a":[{"id":1126952,"option":"*ngFor = \"let i of names\"","correct":true},{"id":1126953,"option":"*ngFor = “for i in names”","correct":false},{"id":1126954,"option":"Both of these","correct":false},{"id":1126955,"option":"None of these","correct":false}]},{"q":"<p>In Angular 7, which of the statements about the <strong>ng-template</strong> element is correct:</p>\n\n<ol>\n\t<li>It is a virtual element and its content is available to users every time along with the structural directives irrespective of conditions.</li>\n\t<li>It is used to render HTML elements.</li>\n\t<li>It is used with the <strong>*ngIf </strong>directive to display the else condition.</li>\n</ol>","a":[{"id":1126956,"option":"1 and 2","correct":false},{"id":1126957,"option":"2 and 3","correct":true},{"id":1126958,"option":"1 and 3","correct":false},{"id":1126959,"option":"All of these","correct":false}]},{"q":"<p>In Angular 7, which of the following directives forms the main class having details of how the component must be processed, instantiated, and used at runtime?</p>","a":[{"id":1126960,"option":"Component ","correct":true},{"id":1126961,"option":"Structural ","correct":false},{"id":1126962,"option":"Attribute ","correct":false},{"id":1126963,"option":"None of these","correct":false}]},{"q":"<p>In Angular 7, which of the following directives changes the look and behavior of DOM elements?</p>","a":[{"id":1126964,"option":"Structural ","correct":false},{"id":1126965,"option":"Attribute ","correct":true},{"id":1126966,"option":"Component ","correct":false},{"id":1126967,"option":"All of these","correct":false}]},{"q":"<p>In Angular 7, you are working on the <strong>ElementRef</strong> class. You are required to return a null if the direct access to the native elements is not supported. Which of the following constructors of this class is used to perform this task?</p>","a":[{"id":1126976,"option":"nativeDOMAcess: T","correct":false},{"id":1126977,"option":"nativeDOM: T","correct":false},{"id":1126978,"option":"nativeElement: T","correct":true},{"id":1126979,"option":"nativeElementView: T","correct":false}]},{"q":"<p>In Angular 7, which of the features are provided by the HTTP client service:</p>\n\n<ol>\n\t<li>Streamlined error handling</li>\n\t<li>Non-testable features</li>\n\t<li>Request and response interception</li>\n</ol>","a":[{"id":1126996,"option":"1 and 2","correct":false},{"id":1126997,"option":"2 and 3","correct":false},{"id":1126998,"option":"1 and  3","correct":true},{"id":1126999,"option":"All of these","correct":false}]},{"q":"<p>In Angular 6, determine the default port number when a new project is created.</p>","a":[{"id":1127004,"option":"8000","correct":false},{"id":1127005,"option":"3000","correct":false},{"id":1127006,"option":"4200","correct":true},{"id":1127007,"option":"5600","correct":false}]},{"q":"<p>In Angular 6, which of the following statements about the template-driven forms is correct:</p>\n\n<ol>\n\t<li>The model form controls must be created by adding the <strong>ngModel </strong>directive and the <strong>name</strong> attribute.</li>\n\t<li>The <strong>ngForm</strong> directive must be included in the <strong>form</strong> template that is created.</li>\n</ol>","a":[{"id":1127016,"option":"1","correct":false},{"id":1127017,"option":"2","correct":false},{"id":1127018,"option":"Both of these","correct":true},{"id":1127019,"option":"None of these","correct":false}]},{"q":"<p>In Angular 6, you are working on the routing. If you have imported a <strong>RouterModule </strong>module from <strong>@angular/router </strong>package in your <strong>app.module.ts</strong> file, then which of these statements about the <strong>RouterModule </strong>in the following Angular code are correct:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>RouterModule.forRoot([\n    {\n         path: 'new-cmp',\n         component: NewCmpComponent\n    }\n])</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>It refers to the <strong>forRoot</strong> method that takes input as an array where this array has the object of the path and the component.</li>\n\t<li>The <strong>path</strong> variable is the name of the router and the <strong>component </strong>variable is the name of the class.</li>\n\t<li>The <strong>component</strong> variable is the name of the router and the <strong>path</strong> variable is the name of the class.</li>\n</ol>","a":[{"id":1127052,"option":"1 and 2","correct":true},{"id":1127053,"option":"2 and 3","correct":false},{"id":1127054,"option":"1 and 3","correct":false},{"id":1127055,"option":"All of these","correct":false}]},{"q":"<p>In Angular 2, which of the following basic steps of the <strong>dependency injection </strong>are correct:</p>\n\n<pre class=\"prettyprint\"><code>1. A class with @Injectable () should send the data that it is to be injected in “UserService”.\n2. A class with @Injectable () should send the data that it is to be injected in “User_Service”.\n3. A class with a constructor that accepts a type to be injected.\n4. A class with a destructor that accepts a type to be injected.\n</code></pre>","a":[{"id":388686,"option":"1 and 2","correct":false},{"id":388687,"option":"1, 2, 3, and 4","correct":false},{"id":388688,"option":"1 and 3","correct":true},{"id":388689,"option":"2 and 4","correct":false}]},{"q":"<p>In Angular 2, which of the following is used to concatenate strings?</p>","a":[{"id":388368,"option":"String interpolation","correct":true},{"id":388369,"option":"String compatibility","correct":false},{"id":388370,"option":"Variable interpolation","correct":false},{"id":388371,"option":"Variable compatibility","correct":false}]},{"q":"<p>In Angular 2, which of the following commands is used for installing the <em>ng2-pagination</em> third party control?</p>","a":[{"id":388440,"option":"npm install ng2-pagination","correct":false},{"id":388441,"option":"np install ng2-pagination --save","correct":false},{"id":388442,"option":"npm ng2-pagination --save","correct":false},{"id":388443,"option":"npm install ng2-pagination --save","correct":true}]},{"q":"<p>In Angular 2, which of the following classes encapsulates the <strong>GET, POST, or PUT</strong> methods and provides its result as a service across your application?</p>","a":[{"id":388758,"option":"Service","correct":true},{"id":388759,"option":"Pipes","correct":false},{"id":388760,"option":"Typescript","correct":false},{"id":388761,"option":"Class","correct":false}]},{"q":"<p>In Angular 2, which of the following is the visual part of a component?</p>","a":[{"id":388376,"option":"Decorator","correct":false},{"id":388377,"option":"Controller","correct":false},{"id":388378,"option":"View","correct":true},{"id":388379,"option":"User Interface","correct":false}]},{"q":"<p>In Angular 2, which of the following language structures will clone and infuse bits of templates of HTML in the markup expelling it from the DOM when the condition assesses to false?</p>\n\n<p> </p>","a":[{"id":388404,"option":"*ngIf=”conditional”","correct":true},{"id":388405,"option":"*ngIf='conditional'","correct":false},{"id":388406,"option":"ngIf=”conditional”","correct":false},{"id":388407,"option":"ngIf='conditional'","correct":false}]},{"q":"<p>In Angular 2, which of the following is used to create instances of dependencies?</p>","a":[{"id":388674,"option":"Injector","correct":true},{"id":388675,"option":"Provider","correct":false},{"id":388676,"option":"Dependency","correct":false},{"id":388677,"option":"Pipes","correct":false}]},{"q":"<p>In Angular 2, what is the correct sequence for creating custom pipes:</p>\n\n<pre class=\"prettyprint\"><code>1. Define a typescript class. \n2. Finish the class utilizing @Pipe. \n3. Execute PipeTransform interface. \n4. Abrogate change() strategy. \n5. Design the class in the application module with @NgModule. \n6. Ready to use custom pipe anywhere in the application.\n</code></pre>","a":[{"id":388420,"option":"2, 4, 6, 1, 3, 5","correct":false},{"id":388421,"option":"1, 2, 3, 4, 5, 6","correct":true},{"id":388422,"option":"1, 3, 4, 5, 2, 6","correct":false},{"id":388423,"option":"2, 5, 6, 1, 3, 4","correct":false}]},{"q":"<p>In Angular 2, which of the following files are generated on the execution of <strong><code>ng g component [name]</code></strong> command?</p>","a":[{"id":388754,"option":"Test specification","correct":false},{"id":388755,"option":"HTML","correct":false},{"id":388756,"option":"CSS","correct":false},{"id":388757,"option":"All of these","correct":true}]},{"q":"<p>In Angular 2, which of the following domain rules is not correct?</p>","a":[{"id":387251,"option":"@-moz-document domain(example.com)\r\n","correct":false},{"id":387252,"option":"@-moz-document domain(www.example.com)\r\n","correct":false},{"id":387253,"option":"@-moz-document domain(example.com/*)\r\n","correct":true},{"id":387254,"option":"@-moz-document domain(http://example.com)\r\n","correct":false}]},{"q":"<p>In Angular 2, which of the following is related to <strong>ECMAScript5</strong>?</p>","a":[{"id":388187,"option":"JQuery","correct":false},{"id":388188,"option":"JavaScript","correct":true},{"id":388189,"option":"ASP","correct":false},{"id":388190,"option":"Client","correct":false}]},{"q":"<p>In Angular 2, which of the following events is fired after initializing component's views and child views?</p>","a":[{"id":388810,"option":"ngAfterViewInit","correct":true},{"id":388811,"option":"ngAfterViewChecked","correct":false},{"id":388812,"option":"ngAfterContentChecked","correct":false},{"id":388813,"option":"ngAfterContentInit","correct":false}]},{"q":"<p>In Angular 2, which of the following events is fired before a directive or a component is destroyed?</p>","a":[{"id":388802,"option":"ngAfterViewChecked","correct":false},{"id":388803,"option":"ngOnDestroy","correct":true},{"id":388804,"option":"ngOnEnd","correct":false},{"id":388805,"option":"ngOnExit","correct":false}]},{"q":"<p>In Angular 2, which of the following are two approaches to create a form:</p>\n\n<ol>\n\t<li>Interface-driven</li>\n\t<li>Model-driven</li>\n\t<li>Template-driven</li>\n\t<li>Modular-driven<br>\n\t </li>\n</ol>","a":[{"id":388782,"option":"1 and 2","correct":false},{"id":388783,"option":"2 and 3","correct":true},{"id":388784,"option":"3 and 4","correct":false},{"id":388785,"option":"1 and 3","correct":false}]},{"q":"<p>In Angular 2, which of the following operators is used to catch errors on an existing stream and pass the exception?</p>","a":[{"id":388392,"option":".catch operator","correct":true},{"id":388393,"option":".release operator","correct":false},{"id":388394,"option":"Both of these","correct":false},{"id":388395,"option":"None of these","correct":false}]},{"q":"<p>What is the function of the following Angular 2 code:</p>\n\n<pre class=\"prettyprint\"><code>angular.injector(['main']).get('base64');</code></pre>\n\n<p> </p>","a":[{"id":387267,"option":"Creates a new instance of an injector","correct":true},{"id":387268,"option":"Reuses the already created injector","correct":false},{"id":387269,"option":"Creates a new angular app whose injector method is called","correct":false},{"id":387270,"option":"None of these","correct":false}]},{"q":"<p>In Angular2, you are working on the templates, which of these directives in the following JavaScript code is used to iterate over the lists:</p>\n\n<pre class=\"prettyprint\"><code>&lt;h2&gt;Items List&lt;/h2&gt;\n\n&lt;p&gt;&lt;i&gt;Pick an item from the list&lt;/i&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li *ngFor=\"let item of items\" (click)=\"selectItem(item)\"&gt;\n    {{item.name}}\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;app-item-detail *ngIf=\"selectedItem\" [item]=\"selectedItem\"&gt;&lt;/app-item-detail&gt;</code></pre>\n\n<p> </p>","a":[{"id":388183,"option":"*ngIF","correct":false},{"id":388184,"option":"*ngFor","correct":true},{"id":388185,"option":"<app-item-detail>","correct":false},{"id":388186,"option":"None of these","correct":false}]},{"q":"<p>In Angular 2, what is the function of the ng directives ngShow, and ngHide?</p>","a":[{"id":388770,"option":"Show and hide the directives","correct":false},{"id":388771,"option":"Show and hide the elements ","correct":true},{"id":388772,"option":"Returns the elements","correct":false},{"id":388773,"option":"Returns the services","correct":false}]},{"q":"<p>In Angular 2, which of the following defines the syntax of <strong>$routeParams?</strong></p>","a":[{"id":388400,"option":"params : {[key: string]}","correct":false},{"id":388401,"option":"params : [key: string]: string","correct":false},{"id":388402,"option":"params : {[key: string]: string}","correct":true},{"id":388403,"option":"params : {string}","correct":false}]},{"q":"<p>In Angular 2, which of the following commands is used to create a project?</p>","a":[{"id":388464,"option":"ng Project_name","correct":false},{"id":388465,"option":"ng new","correct":false},{"id":388466,"option":"ng new Project_name","correct":true},{"id":388467,"option":"ng server Project_name","correct":false}]},{"q":"<p>Which of the following statements about Angular 2 is true?</p>","a":[{"id":388480,"option":"$pristine will be TRUE, if the user has not interacted with the form yet.","correct":true},{"id":388481,"option":"$dirty will be false, if the user has already interacted with the form.","correct":false},{"id":388482,"option":"$invalid will be TRUE, if all containing form and controls are invalid.","correct":false},{"id":388483,"option":"$valid will be TRUE, if at least one containing form and control is valid.","correct":false}]},{"q":"<p>In Angular 2, which of the following ways to apply a <strong>filter</strong> is correct?</p>","a":[{"id":388496,"option":"Property-value || filter","correct":false},{"id":388497,"option":"Property-value && filter","correct":false},{"id":388498,"option":"Property-value | filter","correct":true},{"id":388499,"option":"Property-value ** filter","correct":false}]},{"q":"<p>In Angular 2, which of these directives combines property and event binding in a single notation?</p>","a":[{"id":388622,"option":"ngOnInit","correct":false},{"id":388623,"option":"ngModel","correct":true},{"id":388624,"option":"ngInit","correct":false},{"id":388625,"option":"ndString","correct":false}]},{"q":"<p>In Angular 2, which of these decorators is used to attach a class to a directive class containing metadata?</p>","a":[{"id":388630,"option":"@Typescript","correct":false},{"id":388631,"option":"@Pipe","correct":false},{"id":388632,"option":"@Directive","correct":true},{"id":388633,"option":"@User","correct":false}]},{"q":"<p>Which of these types of functions is related to the following Angular 2 code:</p>\n\n<pre class=\"prettyprint\"><code>let additionFunc = function (number1, number2)\n {\n    return number1 + number2;\n};\n</code></pre>","a":[{"id":388658,"option":"Normal","correct":false},{"id":388659,"option":"Anonymous","correct":true},{"id":388660,"option":"Named","correct":false},{"id":388661,"option":"Lambda","correct":false}]},{"q":"<p>In Angular 2, which of the following ways of identifying a position in ng-repeat is correct?</p>","a":[{"id":388650,"option":"track by $index","correct":true},{"id":388651,"option":"track by index","correct":false},{"id":388652,"option":"track by $i","correct":false},{"id":388653,"option":"track by i","correct":false}]},{"q":"<p>In Angular 2, which of the following processes is used to implement multiple pipes in a single expression?</p>","a":[{"id":388750,"option":"Join","correct":false},{"id":388751,"option":"Chain","correct":true},{"id":388752,"option":"Concatenate","correct":false},{"id":388753,"option":"Sync","correct":false}]},{"q":"<p>In Angular, what does the guards function return?</p>","a":[{"id":536990,"option":"Boolean value","correct":false},{"id":536991,"option":"Observable","correct":false},{"id":536992,"option":"Promise","correct":false},{"id":536993,"option":"All of these","correct":true}]},{"q":"<p>In Angular, which of the following cause change detection?</p>","a":[{"id":536934,"option":"Events: Click, submit","correct":false},{"id":536935,"option":"XHR: Fetching date from remote server","correct":false},{"id":536936,"option":"Timers: setTimeout(), setInterval()","correct":false},{"id":536937,"option":"All of these","correct":true}]},{"q":"<p>In Angular, the service provided on the component level is available _______________________.</p>","a":[{"id":536986,"option":"Only to its child components","correct":false},{"id":536987,"option":"Throughout all the components and their child components","correct":false},{"id":536988,"option":"Within the component injector or in any of its child component","correct":true},{"id":536989,"option":"Only to the root component","correct":false}]},{"q":"<p>In Angular, resolver is a code that is executed ________.</p>","a":[{"id":536994,"option":"After the component has loaded","correct":false},{"id":536995,"option":"When the link is clicked but before the component has loaded","correct":true},{"id":536996,"option":"When the link is clicked but it has not loaded yet","correct":false},{"id":536997,"option":"None of these","correct":false}]},{"q":"<p>In Angular, which of the following classes will you use to create a <strong>Form</strong> model?</p>","a":[{"id":608175,"option":"FormGroup","correct":false},{"id":608176,"option":"FormControl","correct":false},{"id":608177,"option":"Both of these","correct":true},{"id":608178,"option":"None of these","correct":false}]},{"q":"<p>In Angular 5, which of the following syntaxes is used for chaining the <strong>Filters (Pipes)</strong>?</p>","a":[{"id":608396,"option":"{{ expression | filter }}","correct":false},{"id":608397,"option":"{{ expression | filter1 | filter2 | ... }}","correct":true},{"id":608399,"option":"{{ expression | filter:argument1:argument2:... }}","correct":false},{"id":608402,"option":"All of these","correct":false}]},{"q":"<p>Which of the following statements about <strong>promise</strong> in Angular 5 is correct? </p>","a":[{"id":612445,"option":"A promise is a special type of object that is either used or constructed to handle asynchronous tasks.","correct":false},{"id":612446,"option":"A promise has three states-pending, resolved, and rejected.","correct":false},{"id":612447,"option":"We can construct promises using $q in Angular.","correct":false},{"id":612448,"option":"All of these","correct":true}]},{"q":"<p>Which of the following services is used to request and receive a response from the server in Angular?</p>","a":[{"id":616107,"option":"$server","correct":false},{"id":616108,"option":"$location","correct":false},{"id":616109,"option":"$http","correct":true},{"id":616110,"option":"$route","correct":false}]},{"q":"<p>In Angular 5, which of the following filters (Pipe) is used to select a subset of items from an array?</p>","a":[{"id":612437,"option":"json","correct":false},{"id":612438,"option":"limitTo","correct":false},{"id":612439,"option":"orderBy","correct":false},{"id":612440,"option":"slice","correct":true}]},{"q":"<p>Which of the following is the correct sequence of Angular lifecycle hooks?</p>","a":[{"id":616091,"option":"OnInit() -> OnChange()  ->  DoCheck()  -> AfterContentChecked()  ->  AfterContentInit()  -> AfterViewChecked()  -> AfterViewInit()  -> OnDestroy()","correct":false},{"id":616092,"option":"OnChange()  ->  OnInit()  ->  DoCheck()  ->  AfterContentChecked()   ->  AfterContentInit() ->  AfterViewChecked()  ->  AfterViewInit()  -> OnDestroy()","correct":false},{"id":616093,"option":"OnChange()  ->  OnInit()  ->  DoCheck()  ->  AfterContentChecked()   ->  AfterContentInit() -> AfterViewInit()  ->  AfterViewChecked()  ->  OnDestroy()","correct":false},{"id":616094,"option":"OnChange()  ->  OnInit()  ->  DoCheck()  ->  AfterContentInit()  ->  AfterContentChecked()  -> AfterViewInit()  ->  AfterViewChecked()  ->  OnDestroy()","correct":true}]},{"q":"<p>Which of the following commands will you use to create a production build of your application?</p>","a":[{"id":616516,"option":"ng build production","correct":false},{"id":616517,"option":"ng build  prod","correct":false},{"id":616518,"option":"ng buid -prod","correct":false},{"id":616519,"option":"ng build --prod","correct":true}]},{"q":"<p>Which of the following commands will you use to create a component called <strong>HackerComponent</strong>?</p>","a":[{"id":616512,"option":"ng generate component Hacker","correct":false},{"id":616513,"option":"ng g component Hacker","correct":false},{"id":616514,"option":"Both of these","correct":true},{"id":616515,"option":"None of these","correct":false}]},{"q":"<p>Which of the following encapsulation parameters will you set when you want Angular to use the shadow DOM?</p>","a":[{"id":616463,"option":"ViewEncapsulation.Native","correct":true},{"id":616464,"option":"ViewEncapsulation.Emulated","correct":false},{"id":616465,"option":"ViewEncapsulation.None","correct":false},{"id":616466,"option":"Any of these","correct":false}]},{"q":"<p>Which of these statements about the following Angular code is incorrect:</p>\n\n<pre class=\"prettyprint\"><code>   student: Student = null;     // this is at a class level\n\nngOnInit() {\n    const id: number = Number(this.activatedRoute.snapshot.params['id']);\n    if (id) {\n      this.studentEditSubscription = this.studentService.getStudentById(id).subscribe(\n        data =&gt; {\n          this.student = data as Student;\n          console.log(this.student);       \n        },\n        error =&gt; alert('The student you are trying to update does not exist'));\n    }\n    console.log(this.student);             \n  }\n\n\n// student.service.ts\ngetStudentById(id: number): Observable&lt;Object&gt; {\n   return this._httpClient.get(`${this.url}/${id}`);\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":612449,"option":"Observable code runs asynchronously","correct":false},{"id":612450,"option":"First console displays the student object while the second console prints NULL","correct":false},{"id":612451,"option":"Second console displays the student object while the first console prints NULL","correct":true},{"id":612452,"option":"Second console fires before the first one","correct":false}]},{"q":"<p>In Angular, which of the following life-cycle hooks is called whenever a component's inputs are changed?</p>","a":[{"id":612457,"option":"ngOnChanges","correct":true},{"id":612458,"option":"ngChanges","correct":false},{"id":612459,"option":"ngAfterContentChanges","correct":false},{"id":612460,"option":"ngContentChanges","correct":false}]},{"q":"<p>Which of the following features is not supported by the Angular 4 framework?</p>","a":[{"id":643574,"option":"Interfaces","correct":false},{"id":643575,"option":"Encapsulation","correct":false},{"id":643576,"option":"Inheritance","correct":false},{"id":643577,"option":"Polymorphism","correct":true}]},{"q":"<p>Which of the following ways to use the <strong>expect </strong>method with multiple criteria in Angular 4 by using jasmine is correct?</p>","a":[{"id":643982,"option":"@(:var2).expect(var1).toEqual('');\r\nexpect(var2).toEqual('');","correct":false},{"id":643983,"option":"expect(var1).toEqual(''); \r\n@(:var1).expect(var2).toEqual('');","correct":false},{"id":643984,"option":"expect(var1 == 1 && var2 == 2).toBeTruthy();","correct":true},{"id":643985,"option":"expect(var1 = 1 && var2 = 2).toBeTruthy();","correct":false}]},{"q":"<p>In Angular 4, which of the following queries is used to send parameters to the HTTP request?</p>","a":[{"id":644112,"option":"http.get(url, {var1: val1, var2: val2})","correct":false},{"id":644113,"option":"http.get(url, {params: {var1: val1, var2: val2}})","correct":true},{"id":644114,"option":"http.get(url, {params: new URLSearchParams{var1: val1, var2: val2}})","correct":false},{"id":644115,"option":"http.get(url, {params: new RequestOptions{var1: val1, var2: val2}})","correct":false}]},{"q":"<p>In Angular, which of the following is the default value of the configuration property in encapsulation?</p>","a":[{"id":643998,"option":"ViewEncapsulation.Native","correct":false},{"id":643999,"option":"ViewEncapsulation.Emulated","correct":true},{"id":644000,"option":"ViewEncapsulation.None","correct":false},{"id":644001,"option":"There is no default value","correct":false}]},{"q":"<p>In the Angular-Dependency Injection mechanism, which of the following components cannot be injected into each other as dependencies?</p>","a":[{"id":611943,"option":"Value","correct":true},{"id":611944,"option":"Service","correct":false},{"id":611945,"option":"Provider","correct":false},{"id":611946,"option":"None of these","correct":false}]},{"q":"<p>Which of the following syntaxes of the CLI command will you use to create your own component called MyComponent in Angular 5?</p>","a":[{"id":616427,"option":"ng g c MyComponent","correct":true},{"id":616428,"option":"ng new c MyComponent","correct":false},{"id":616429,"option":"ng build c MyComponent","correct":false},{"id":616430,"option":"ng lint c MyComponent","correct":false}]},{"q":"<p>Which of these options is the correct sequence of router events in Angular 4:</p>\n\n<ol>\n\t<li>\n\t<p><code>NavigationStart</code></p>\n\t</li>\n\t<li>\n\t<p><code>RoutesRecognized</code></p>\n\t</li>\n\t<li>\n\t<p><code>NavigationEnd</code></p>\n\t</li>\n\t<li>\n\t<p><code>RouteConfigLoadStart</code></p>\n\t</li>\n\t<li>\n\t<p><code>RouteConfigLoadEnd</code></p>\n\t</li>\n\t<li>\n\t<p><code>NavigationError</code></p>\n\t</li>\n\t<li>\n\t<p><code>NavigationCancel</code></p>\n\t</li>\n</ol>","a":[{"id":644298,"option":"1->4->2->5->6->7->3","correct":false},{"id":644299,"option":"1->4->5->2->3->7->6","correct":true},{"id":644300,"option":"1->4->5->2->3->6->7","correct":false},{"id":644301,"option":"1->4->5->2->7->6->3","correct":false}]},{"q":"<p>Which of the following statements about loading an Angular module are correct?</p>\n\n<ol>\n\t<li>If modules are loaded on-demand, then it is called lazy loading.</li>\n\t<li>In lazy loading, modules are loaded asynchronously.</li>\n\t<li>In lazy loading, modules must be imported into the application module.</li>\n</ol>","a":[{"id":642892,"option":"1 and 2 only","correct":true},{"id":642893,"option":"1 and 3 only","correct":false},{"id":642894,"option":"2 and 3 only","correct":false},{"id":642895,"option":"All of these","correct":false}]},{"q":"<p>Which of the following CLI commands is used to generate a component in Angular 4?</p>","a":[{"id":641223,"option":"ng generate component COMPNAME","correct":false},{"id":641224,"option":"ng g c COMPNAME","correct":false},{"id":641225,"option":"Both of these","correct":true},{"id":641226,"option":"None of these","correct":false}]},{"q":"<p>Which of the following Angular loading schemes loads modules before the application starts?</p>\n\n<p> </p>","a":[{"id":642896,"option":"Preloading","correct":false},{"id":642897,"option":"Eager loading","correct":true},{"id":642898,"option":"Lazy loading","correct":false},{"id":642899,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about Angular 8 NgModules are correct:</p>\n\n<ol>\n\t<li>They import the functionalities form other NgModules like other JavaScript modules.</li>\n\t<li>They allow their own functionality to be exported and used by other NgModules.</li>\n\t<li>If you are required to use the router service in your application, then you can import the <strong>Router</strong> NgModule.</li>\n</ol>","a":[{"id":1126880,"option":"1 and 2","correct":false},{"id":1126881,"option":"2 and 3","correct":false},{"id":1126882,"option":"1 and 3","correct":false},{"id":1126883,"option":"All of these","correct":true}]},{"q":"<p>In Angular 8, which of the following directives are used to change the look and behavior of the DOM elements?</p>","a":[{"id":1126888,"option":"Component","correct":false},{"id":1126889,"option":"Structural","correct":false},{"id":1126890,"option":"Attribute","correct":true},{"id":1126891,"option":"Class","correct":false}]},{"q":"<p>In Angular 8, which of the following statements about the <strong>property binding</strong> technique is correct:</p>\n\n<ol>\n\t<li>You can bind a property of a DOM element to a field that is a defined property of a component <strong>TypeScript</strong> code.</li>\n\t<li>Angular 8 internally converts string interpolation into property binding.</li>\n</ol>","a":[{"id":1126896,"option":"1","correct":false},{"id":1126897,"option":"2","correct":false},{"id":1126898,"option":"Both of these","correct":true},{"id":1126899,"option":"None of these","correct":false}]},{"q":"<p>In Angular 8, which of the following statements about the <strong>string interpolation</strong> technique are correct:</p>\n\n<ol>\n\t<li>It is a one-way data-binding technique that is used to retrieve data from a TypeScript code to an HTML template.</li>\n\t<li>It is a two-way data-binding technique that is used to retrieve data from an HTML template to a TypeScript code.</li>\n\t<li>It uses the template expression in double curly braces to display the data from a component to a view.</li>\n\t<li>It uses the template expression in single curly braces to display the data from a component to a view.</li>\n</ol>","a":[{"id":1126900,"option":"1 and 2","correct":false},{"id":1126901,"option":"3 and 4","correct":false},{"id":1126902,"option":"1 and 3","correct":true},{"id":1126903,"option":"2 and 4","correct":false}]},{"q":"<p>In Angular 8, which of the following statements about the <strong>event binding</strong> technique is correct:</p>\n\n<ol>\n\t<li>It is used to handle events raised from DOM such as clicks of buttons.</li>\n\t<li>The occurrence of DOM events calls a specified method in a component.</li>\n</ol>","a":[{"id":1126908,"option":"1","correct":false},{"id":1126909,"option":"2","correct":false},{"id":1126910,"option":"Both of these","correct":true},{"id":1126911,"option":"None of these","correct":false}]},{"q":"<p>In Angular 8, if you are required to work with two-way data-binding techniques, then which of the following data binding techniques must be combined in this scenario:</p>\n\n<ol>\n\t<li>String interpolation</li>\n\t<li>Event binding</li>\n\t<li>Property binding</li>\n</ol>","a":[{"id":1126916,"option":"1 and 2","correct":false},{"id":1126917,"option":"2 and 3","correct":true},{"id":1126918,"option":"1 and 3","correct":false},{"id":1126919,"option":"All of these","correct":false}]},{"q":"<p>In Angular 8, which of the following statements about the two-way data-binding flow are correct:</p>\n\n<ol>\n\t<li>TypeScript code sends the output data to the HTML template.</li>\n\t<li>HTML template sends the output data to the TypeScript code.</li>\n\t<li>HTML template sends the user’s reaction to the TypeScript code.</li>\n\t<li>TypeScript code sends the user’s reaction to the HTML template.</li>\n</ol>","a":[{"id":1126924,"option":"1 and 2","correct":false},{"id":1126925,"option":"3 and 4","correct":false},{"id":1126926,"option":"1 and 3","correct":true},{"id":1126927,"option":"2 and 4","correct":false}]},{"q":"<p>In Angular 8, which of the following statements about the advantages of the Reactive forms are correct:</p>\n\n<ol>\n\t<li>Reactive forms are the least robust in nature.</li>\n\t<li>Reactive forms are more scalable, reusable, and testable.</li>\n\t<li>They are used when the forms are a key part of an application or it is already built using reactive patterns.</li>\n</ol>","a":[{"id":1126932,"option":"1 and 2","correct":false},{"id":1126933,"option":"2 and 3","correct":true},{"id":1126934,"option":"1 and 3","correct":false},{"id":1126935,"option":"All of these","correct":false}]},{"q":"<p>In Angular 8, which of the following statements about the advantages of <strong>template-driven</strong> forms are correct:</p>\n\n<ol>\n\t<li>They are used when you want to add a simple form to your application.</li>\n\t<li>They are easy to use in an application and are scalable as <strong>Reactive</strong> forms.</li>\n\t<li>They are used when your application requires a very basic form and logic.</li>\n</ol>","a":[{"id":1126936,"option":"1 and 2","correct":false},{"id":1126937,"option":"2 and 3","correct":false},{"id":1126938,"option":"1 and 3","correct":true},{"id":1126939,"option":"All of these","correct":false}]},{"q":"<p>In Angular 6, you are working on HTTP services. The <strong>map</strong> method is used to convert the data to the <strong>JSON </strong>format. Which of the following Angular syntaxes is used to import this method to the <strong>app.component.ts</strong> file?</p>","a":[{"id":1127028,"option":"import {map} from ‘@angular/http’;","correct":false},{"id":1127029,"option":"import {map} from ‘@angular/rxjs’;","correct":false},{"id":1127030,"option":"import {map} from ‘@angular/cli’;","correct":false},{"id":1127031,"option":"import {map} from ‘rxjs/operators’;","correct":true}]},{"q":"<p>In Angular 6, which of the following lifecycle hook methods responds after Angular initializes a component view and child view?</p>","a":[{"id":1127048,"option":"ngAfterViewInit()","correct":true},{"id":1127049,"option":"ngAfterViewCheck()","correct":false},{"id":1127050,"option":"ngAfterViewComponent()","correct":false},{"id":1127051,"option":"None of these","correct":false}]},{"q":"<p>Which of these modules is related to the following Angular 2 code:</p>\n\n<pre class=\"prettyprint\"><code>import { NgModule }      from '@angular/core'; \nimport { BrowserModule } from '@angular/platform-browser'; \nimport { AppComponent }  from './app.component';  \n\n@NgModule ({ \n   imports:      [ BrowserModule ], \n   declarations: [ AppComponent ], \n   bootstrap:    [ AppComponent ] \n}) \nexport class AppModule { } \n</code></pre>","a":[{"id":388086,"option":"Root ","correct":true},{"id":388087,"option":"Child","correct":false},{"id":388088,"option":"Class","correct":false},{"id":388089,"option":"Template","correct":false}]},{"q":"<p>In Angular 2, which of the following methods is utilized to cut out a string from a given string?</p>","a":[{"id":388408,"option":"String","correct":false},{"id":388409,"option":"Substring","correct":false},{"id":388410,"option":"Slice","correct":true},{"id":388411,"option":"Blank","correct":false}]},{"q":"<p>Which of these is not a property of the Angular 2 module?</p>","a":[{"id":387247,"option":"Bootstrap","correct":false},{"id":387248,"option":"Export","correct":false},{"id":387249,"option":"Import","correct":false},{"id":387250,"option":"Object","correct":true}]},{"q":"<p>In Angular 2, which of the following cases is used for built-in directives?</p>","a":[{"id":387255,"option":"Lower","correct":false},{"id":387256,"option":"Pascal","correct":false},{"id":387257,"option":"Camel","correct":true},{"id":387258,"option":"Upper","correct":false}]},{"q":"<p>In Angular 2, which of these is used to build forms?</p>","a":[{"id":387259,"option":"Modular","correct":false},{"id":387260,"option":"Directives","correct":false},{"id":387261,"option":"Interface","correct":false},{"id":387262,"option":"Template","correct":true}]},{"q":"<p>In Angular 2, how many angular root modules are available at least in each application?</p>","a":[{"id":388082,"option":"3","correct":false},{"id":388083,"option":"2","correct":false},{"id":388084,"option":"0","correct":false},{"id":388085,"option":"1","correct":true}]},{"q":"<p>In Angular 2, which of the following properties is used to create a module?</p>","a":[{"id":388078,"option":"Bootstrap array and directives","correct":false},{"id":388079,"option":"Bootstrap array and import wizard","correct":false},{"id":388080,"option":"Bootstrap array, import array, and export array","correct":true},{"id":388081,"option":"Bootstrap wizard","correct":false}]},{"q":"<p>In Angular 2, which of the following ways to use <em>‘orderBy’</em> is correct?</p>","a":[{"id":388614,"option":"{{x | orderBy:’key’}}","correct":true},{"id":388615,"option":"{{x | orderBy=’key’}}","correct":false},{"id":388616,"option":"{{x | orderBy,’key’}}","correct":false},{"id":388617,"option":"{{x | orderBy->’key’}}","correct":false}]},{"q":"<p>In Angular, which of the following directives will you use to loop over an array and repeat an HTML element?</p>","a":[{"id":616479,"option":"NgIf","correct":false},{"id":616480,"option":"NgFor","correct":true},{"id":616481,"option":"NgClass","correct":false},{"id":616482,"option":"NgSwitch","correct":false}]},{"q":"<p>In Angular, which of the following indicates the use of the <strong>$routeProvider</strong> service?</p>","a":[{"id":616111,"option":"It is used to handle URLs.","correct":true},{"id":616112,"option":"It is used to handle a controller.","correct":false},{"id":616113,"option":"It is used to handle requests from the server.","correct":false},{"id":616114,"option":"It is used to handle responses from the server.","correct":false}]},{"q":"<p>Which of the following commands will you use if you have to run an Angular 5 application locally during its development?</p>","a":[{"id":616095,"option":"ng init","correct":false},{"id":616096,"option":"ng new","correct":false},{"id":616097,"option":"ng serve","correct":true},{"id":616098,"option":"ng build","correct":false}]},{"q":"<p>In CLI, which of the following is the main property of the <strong>@NgModule</strong> annotation?</p>","a":[{"id":616475,"option":"Bootstrap","correct":false},{"id":616476,"option":"Imports","correct":false},{"id":616477,"option":"Declarations","correct":false},{"id":616478,"option":"All of these","correct":true}]},{"q":"<p>Which of the following types of NgModules allows you to organize your application code such that you can put your commonly used components, directives, and pipes into the one module and use whenever required?</p>","a":[{"id":616439,"option":"Service module","correct":false},{"id":616440,"option":"Routing module","correct":false},{"id":616441,"option":"Widget module","correct":false},{"id":616442,"option":"Shared module","correct":true}]},{"q":"<p>Which of the following built-in types of validators is used in Angular?</p>","a":[{"id":617757,"option":"Validators.required","correct":false},{"id":617758,"option":"Validators.maxLength","correct":false},{"id":617759,"option":"Validators.pattern","correct":false},{"id":617760,"option":"All of these","correct":true}]},{"q":"<p>Which of the following syntax represents the two-way data binding in Angular 4?</p>","a":[{"id":644100,"option":"<h3>{{vm.student.name}}</h3>","correct":false},{"id":644101,"option":"<h1 [innerText]=\"student.name\"></h1>\r\n","correct":false},{"id":644102,"option":"<input [(ngModel)]=\"student.name\"/>","correct":true},{"id":644103,"option":"<button (click)=\"sendForm()\">Send</h1>","correct":false}]},{"q":"<p>Which of the following Angular 4 interfaces forces the user to login into the application before navigating to the route to achieve route guards?</p>","a":[{"id":642847,"option":"CanActivate","correct":true},{"id":642848,"option":"CanDeactivate","correct":false},{"id":642849,"option":"CanActivateChild ","correct":false},{"id":642850,"option":"CanLoad","correct":false}]},{"q":"<p>In Angular 8, you are working with data binding techniques. If you are required to specify an order in which event handlers are called when one element is nested inside a second element, then which of the following techniques is used to perform this task?</p>","a":[{"id":1126912,"option":"Event bubbling","correct":true},{"id":1126913,"option":"Event distortion","correct":false},{"id":1126914,"option":"Event binding","correct":false},{"id":1126915,"option":"Event handling","correct":false}]},{"q":"<p>In Angular 8, which of the following statements about the two-way data binding technique are correct:</p>\n\n<ol>\n\t<li>The automatic synchronization of data occurs between Model and View.</li>\n\t<li>If you make changes in Model, then it is reflected in View.</li>\n\t<li>If you make changes in View, then it is reflected in Model.</li>\n</ol>","a":[{"id":1126920,"option":"1 and 2","correct":false},{"id":1126921,"option":"2 and 3","correct":false},{"id":1126922,"option":"1 and 3","correct":false},{"id":1126923,"option":"All of these","correct":true}]},{"q":"<p>In Angular 8, if you are required to implement and handle a user’s input through the forms, then which of the following approaches can be used to perform this task?</p>","a":[{"id":1126928,"option":"Reactive ","correct":true},{"id":1126929,"option":"Angular-driven ","correct":false},{"id":1126930,"option":"Data-driven","correct":false},{"id":1126931,"option":"None of these","correct":false}]},{"q":"<p>In Angular 8, you are working on forms. If you are required to use the <strong>Reactive forms</strong> approach to handle a user’s input, then which of the following classes must be used in this approach?</p>","a":[{"id":1126940,"option":"ReactControl","correct":false},{"id":1126941,"option":"TemplateControl","correct":false},{"id":1126942,"option":"FormControl","correct":true},{"id":1126943,"option":"None of these","correct":false}]},{"q":"<p>What is the property name in the following Angular 2 code:</p>\n\n<pre class=\"prettyprint\"><code>export class AppComponent {\n   appTitle: string = 'Sample';\n}\n</code></pre>","a":[{"id":388179,"option":"AppComponent","correct":false},{"id":388180,"option":"Sample","correct":false},{"id":388181,"option":"string","correct":false},{"id":388182,"option":"appTitle","correct":true}]},{"q":"<p>In Angular 2, which of the following ways to declare an array is correct?</p>","a":[{"id":388360,"option":"var companies: string[] = ['Bata', 'Reebok', 'Relaxo'];","correct":true},{"id":388361,"option":"var companies: string = ['Bata', 'Reebok', 'Relaxo'];","correct":false},{"id":388362,"option":"var companies: string[] = 'Bata', 'Reebok', 'Relaxo';","correct":false},{"id":388363,"option":"var companies: string = 'Bata', 'Reebok', 'Relaxo';","correct":false}]},{"q":"<p>Which of the following about the<strong> observables </strong>is incorrect<strong> </strong>in Angular 5?</p>","a":[{"id":616467,"option":"It supports map, filter, reduce, and similar operators","correct":false},{"id":616468,"option":"It uses Reactive Extensions (RxJS)","correct":false},{"id":616469,"option":"It works with multiple values over time","correct":false},{"id":616470,"option":"It returns a single value","correct":true}]},{"q":"<p>In Angular, how will you use a decimal pipe to display 39.22 with at least 5 integers and a maximum of 1 decimal place?</p>","a":[{"id":611955,"option":"{{ 39.22 | number : 5.1-1 }}","correct":true},{"id":611956,"option":"{{ number : 5.1-1| 39.22 }}","correct":false},{"id":611957,"option":"{{ 39.22 | 5.1-1 |number : }}","correct":false},{"id":611958,"option":"{{  5.1-1 |number : 39.22  }}","correct":false}]},{"q":"<p>In Angular, which of these decorators is appropriate for the following communication:</p>\n\n<ol>\n\t<li>To pass data from the child component to parent component.</li>\n\t<li>To pass data from the parent component to child component. </li>\n</ol>","a":[{"id":609249,"option":"1. @Input()         \r\n2. @Output()","correct":false},{"id":609250,"option":"1. @Output()\r\n2. @Input()","correct":true},{"id":609251,"option":"1. @Input()\r\n2. @Input()","correct":false},{"id":609252,"option":"1. @Output()\r\n2. @Output()","correct":false}]},{"q":"<p>In Angular 8, Structural directives are used to manipulate and change the structure of the DOM elements. Which of the following Structural directives is used to is repeat a portion of the HTML template once per each item from an iterable list?</p>","a":[{"id":1126884,"option":"*ngIf directive","correct":false},{"id":1126885,"option":"*ngSwitch directive","correct":false},{"id":1126886,"option":"*ngFor directive","correct":true},{"id":1126887,"option":"*ngElse directive","correct":false}]},{"q":"<p>The following Angular 8 code in the <strong>app.component.ts</strong> and <strong>app.component.html</strong> files is used to calculate and print the product of two numbers. Which of the following data binding techniques is represented in this scenario:</p>\n\n<p><strong>app.component.ts</strong></p>\n\n<pre class=\"prettyprint\"><code>import { Component } from '@angular/core';    \n@Component({    \n        selector: 'app-root',    \n        templateUrl: './app.component.html',    \n        styleUrls: ['./app.component.css']    \n})    \nexport class AppComponent {    \n        title = 'Hello HackerEarth';    \n        numberA: number = 10;    \n        numberB: number = 20;    \n        addTwoNumbers() {    \n                return this.numberA * this.numberB;    \n        }    \n}   </code></pre>\n\n<p><strong>app.component.html</strong></p>\n\n<pre class=\"prettyprint\"><code>{{ numberA * numberB }}</code></pre>\n\n<p> </p>","a":[{"id":1126904,"option":"String interpolation","correct":true},{"id":1126905,"option":"Property binding","correct":false},{"id":1126906,"option":"Event binding","correct":false},{"id":1126907,"option":"Two-way data binding","correct":false}]},{"q":"<p>What is the output of the following Angular code:</p>\n\n<pre class=\"prettyprint\"><code>@Component({\n  selector: 'ngif-example',\n  template: `\n&lt;ul *ngFor=\"let person of people\"&gt;\n  &lt;li *ngIf=\"person.age &lt; 30\"&gt; \n  {{ person.name }} ({{ person.age }})\n  &lt;/li&gt;\n&lt;/ul&gt;\n`\n})\nclass NgIfExampleComponent {\n\n  people: any[] = [\n    {\n      \"name\": \"Alice Smith\",\n      \"age\": 30\n    },\n    {\n      \"name\": \"Bob Jones\",\n      \"age\": 28\n    },\n    {\n      \"name\": \"Mike White\",\n      \"age\": 31\n    },\n    {\n      \"name\": \"Lisa Davis\",\n      \"age\": 44\n    },\n    {\n      \"name\": \"Paul Miller\",\n      \"age\": 42\n    }\n  ];\n}</code></pre>\n\n<p> </p>","a":[{"id":616447,"option":"Alice Smith (30)","correct":false},{"id":616448,"option":"Bob Jones (28)","correct":true},{"id":616449,"option":"Bob Jones","correct":false},{"id":616450,"option":"Alice Smith","correct":false}]}]