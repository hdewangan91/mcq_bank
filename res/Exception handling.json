[{"q":"<p>What will be the output of the following Javascript code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>(function () \n{\n    try \n    {\n        throw new Error(\"hackerearth\");\n    } \n    catch (h1) \n    {\n        var h1 = 31, h2 = 33;\n        console.log(h2);\n    }\n    console.log(h1);\n    console.log(h2);\n})();</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\nundefined\n33</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\n31\n33</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\nundefined\nundefined</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>The code gives a run-time error</code></pre>\n\t</li>\n</ol>","a":[{"id":1420437,"option":"1","correct":true},{"id":1420438,"option":"2","correct":false},{"id":1420439,"option":"3","correct":false},{"id":1420440,"option":"4","correct":false}]},{"q":"<p>What is the output of the given Ruby code if the file doesn't exist:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>begin\n   puts 10/0\n   File.open(\"somefile.txt\")\nrescue SystemCallError\n   puts \"File not found\"\nrescue StandardError\n   puts \"Exception\"\nrescue ZeroDivisionError\n   puts \"Divide by zero\"\nensure\n   print \"Ensure block\"\nend</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Divide by zero\nEnsure block</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Exception\nEnsure block</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>File not found\nException\nDivide by zero\nEnsure block</code></pre>\n\t</li>\n</ol>","a":[{"id":1770827,"option":"1","correct":false},{"id":1770828,"option":"2","correct":true},{"id":1770829,"option":"3","correct":false},{"id":1770830,"option":"Other error will be shown and \"Ensure block\" will be printed","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> begin\n    raise 'Block1'\n    puts 'Block2' \n    \n  rescue    \n    puts 'Block3'\n \nensure\n   puts 'Block4'\nend    </code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Block1\nBlock2\nBlock3\nBlock4</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Block3\nBlock4</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Block1\nBlock2</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Block1\nBlock3\nBlock4</code></pre>\n\t</li>\n</ol>","a":[{"id":1770815,"option":"1","correct":false},{"id":1770816,"option":"2","correct":true},{"id":1770817,"option":"3","correct":false},{"id":1770818,"option":"4","correct":false}]},{"q":"<p>What is the output of the given code snippet:</p>\n\n<p><strong>Code snippet</strong></p>\n\n<pre class=\"prettyprint\"><code>fun main(){\n  try{\n    val arr=IntArray(5)\n    arr[5]=20/0\n  }\n  catch(e:Exception){\n    println(\"Block1\")\n  }\n  catch(e:ArithmeticException){\n    println(\"Block2\")\n  }\n  catch(e:ArrayIndexOutOfBoundsException){\n    println(\"Block3\")\n  }\n  println(\"Remaining code\")\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1764917,"option":"Block2\r\nRemaining code","correct":false},{"id":1764918,"option":"Block1\r\nRemaining code","correct":true},{"id":1764919,"option":"Block1\r\nBlock2\r\nBlock3\r\nRemaining code","correct":false},{"id":1764920,"option":"Block3\r\nRemaning code","correct":false}]},{"q":"<p>What is the output of the given code snippet:</p>\n\n<p><strong>Code snippet</strong></p>\n\n<pre class=\"prettyprint\"><code>fun main(){\n  val str1=func(\"10\")\n  val str2=func(\"10.5\")\n  println(str1)\n  println(str2)\n}\nfun func(temp:String): Int{\n  return try{\n      Integer.parseInt(temp)\n  }  catch(e: NumberFormatException){\n         0\n  }\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1764913,"option":"Error","correct":false},{"id":1764914,"option":"10\r\n10.5","correct":false},{"id":1764915,"option":"0\r\n0","correct":false},{"id":1764916,"option":"10\r\n0","correct":true}]},{"q":"<p>What is the output of the given code snippet:</p>\n\n<p><strong>Code snippet</strong></p>\n\n<pre class=\"prettyprint\"><code>fun main(){\n   try{\n     val res=10/0\n   }\n   catch(e: NumberFormatException){\n     println(\"Error Message\")\n   }\n   println(\"Remaining code\")\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1764909,"option":"Exception will be thrown","correct":true},{"id":1764910,"option":"Error Message","correct":false},{"id":1764911,"option":"Error Message\r\nRemaining code","correct":false},{"id":1764912,"option":"Remaining code","correct":false}]},{"q":"<p>A servlet throws a ServletException during the service of a request. What could be a possible reason for this to occur and what should you do to avoid it?</p>","a":[{"id":1655757,"option":"The servlet is unable to handle requests temporarily, and the request should be resent","correct":false},{"id":1655758,"option":"The servlet is unable to handle requests permanently, and the request should be sent to another servlet container","correct":false},{"id":1655759,"option":"An error occurred during the processing of the request, and the container should clean up the request","correct":true},{"id":1655760,"option":"An error occurred during the processing of the request, and the container should drop the request","correct":false}]},{"q":"<p>A client wants to request a resource from your HTTP servlet. However, the resource will only be returned if it has been modified recently. Which of these methods of the HttpServlet interface can be used to implement such a conditional GET request?</p>","a":[{"id":1655749,"option":"getConditional","correct":false},{"id":1655750,"option":"doGet","correct":false},{"id":1655751,"option":"getLastModified","correct":true},{"id":1655752,"option":"doGetConditional","correct":false}]},{"q":"<p>You are using the HttpServlet abstract subclass to add additional methods to a basic servlet instance. In the given context, which of the following method responds with the HTTP methods that are supported by the servlet?</p>","a":[{"id":1655745,"option":"doOptions","correct":true},{"id":1655746,"option":"doMethods","correct":false},{"id":1655747,"option":"doTypes","correct":false},{"id":1655748,"option":"doTrace","correct":false}]},{"q":"<p>What will be the output of the C# code given below?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\nnamespace Delegates \n{ \n    public class hack\n    { \n        public static void hack1() \n        { \n            Console.WriteLine(\"Hi\"); \n            throw new Exception(\"Caught an error\"); \n        } \n        public static void hack2() \n        { \n            Console.WriteLine(\"Hello\"); \n        } \n        \n    } \n    class Hackerearth \n    { \n        delegate void hackOp(); \n        static void Main(string[] args) \n        {\n            hackOp h = hack.hack1; \n            h += hack.hack2; \n            Delegate[] hc = h.GetInvocationList(); \n            foreach (hackOp c in hc) \n            { \n                try \n                { \n                    c(); \n                    \n                } \n                catch (Exception) \n                { \n                    Console.WriteLine(\"Error\"); \n                    \n                } \n                \n            } \n        } \n        \n    } \n    \n}</code></pre>\n\n<p><br>\n<br>\n<strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Error\nHello\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\nError\nHello\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Error\nHi\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\nHello\nError\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1418927,"option":"1","correct":false},{"id":1418928,"option":"2","correct":true},{"id":1418929,"option":"3","correct":false},{"id":1418930,"option":"4","correct":false}]},{"q":"<p>Which of the following statements is correct about the C# code snippet given below?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\nnamespace ExceptionProgram\n{\n class MyProgram\n {\n     static void Main(string[] args)\n     {\n         int index = 11;\n         int value = 76;\n         int[] array = new int[10];\n         try\n         { \n             array[index] = value ; \n             \n         } \n         catch(IndexOutOfRangeException e)\n         { \n             Console.WriteLine(\"Index out of bounds \"); \n             \n         }\n         Console.WriteLine(\"Rest of the snippet\"); \n         \n     } \n     \n }\n    \n}</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<p>​ It will not generate any output. ​<br>\n\t </p>\n\t</li>\n\t<li>\n\t<p>It will output-</p>\n\n\t<pre class=\"prettyprint\"><code>Index out of bounds</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>​ Value 76 will get assigned to array[10]. ​<br>\n\t </p>\n\t</li>\n\t<li>\n\t<p>It will output-</p>\n\n\t<pre class=\"prettyprint\"><code>Index out of bounds \nRest of the snippet</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419197,"option":"1","correct":false},{"id":1419198,"option":"2","correct":false},{"id":1419199,"option":"3","correct":false},{"id":1419200,"option":"4","correct":true}]},{"q":"<p>In Android, which of the following responses is occured if an image is <strong>de-allocated</strong> when an activity is destroyed?</p>","a":[{"id":34108,"option":"The application will run smoothly.   ","correct":false},{"id":34109,"option":"Compilation error\r\n   ","correct":false},{"id":34110,"option":"java.lang.OutOfMemoryError   ","correct":true},{"id":34111,"option":"Runtime error\r\n   ","correct":false}]},{"q":"<p>Which of the following responses is occured if the ID of a widget in the <strong>gen files</strong> is changed?</p>","a":[{"id":33990,"option":"The application will run smoothly.\r\n ","correct":false},{"id":33991,"option":"Error\r\n ","correct":true},{"id":33992,"option":"The application will automatically update.","correct":false},{"id":33993,"option":"The ID cannot be changed.","correct":false}]},{"q":"<p>Which of the following exceptions is thrown if the surface of an application is not re-sized during teh development of the app?</p>","a":[{"id":31493,"option":"It will throw an InflateException\r\n ","correct":false},{"id":31494,"option":"It will throw a Surface.OutOfResourceException\r\n ","correct":true},{"id":31495,"option":"It will throw a WindowManager.BadTokenException\r\n ","correct":false},{"id":31496,"option":"None of these\r\n ","correct":false}]},{"q":"<p>In Android, which of the following methods is implemented to let an application define the detection of an error?</p>","a":[{"id":33830,"option":"CrossProcessCursor   ","correct":false},{"id":33831,"option":"Cursor   ","correct":false},{"id":33832,"option":"DatabaseErrorHandler\r\n   ","correct":true},{"id":33833,"option":"ProcessCursor\r\n   ","correct":false}]},{"q":"<p>Which of the following outcomes is expected when working with a developer's database that is corrupted in Android??</p>","a":[{"id":31397,"option":"It will throw an exception 'SQLiteFullException'  ","correct":false},{"id":31398,"option":"It will throw an exception 'SQLiteCantOpenDatabaseException'  ","correct":false},{"id":31399,"option":"It will throw an exception 'SQLiteBlobTooBigException'   ","correct":false},{"id":31400,"option":"It will not throw any exception  ","correct":true}]},{"q":"<p>In Android, which of these exceptions is thrown while constructing a new illegal argument exception that includes the current stack trace?</p>","a":[{"id":30822,"option":"IllegalArgumentException(String detailMessage)","correct":false},{"id":30823,"option":"IllegalArgumentException(String message, Throwable cause) ","correct":false},{"id":30824,"option":"IllegalArgumentException(Throwable cause) ","correct":false},{"id":30825,"option":"IllegalArgumentException() ","correct":true}]},{"q":"<p>What does the following Android code do:</p>\r\n\r\n<pre class=\"prettyprint\">\r\n<code>    var dataDir:File = File.applicationStorageDirectory.resolvePath(“Android”);\r\n    dataDir.createDirectory();\r\n</code></pre>","a":[{"id":35754,"option":"It will create a file named android.","correct":false},{"id":35755,"option":"It will create a directory named android.","correct":false},{"id":35756,"option":"It will produce an error.","correct":true},{"id":35757,"option":"None of these  ","correct":false}]},{"q":"<p>In Android, which of the following exceptions is thrown when constructing a new <strong>IllegalArgumentException</strong> with the current stack trace and the specified message details?</p>","a":[{"id":30826,"option":"IllegalArgumentException(String detailMessage)","correct":true},{"id":30827,"option":"IllegalArgumentException(String message, Throwable cause)","correct":false},{"id":30828,"option":"IllegalArgumentException(Throwable cause)","correct":false},{"id":30829,"option":"IllegalArgumentException()","correct":false}]},{"q":"<p>Which of the following is used to map exceptions in <em>Spring MVC</em>?</p>","a":[{"id":730696,"option":"Using @ExceptionHandler at the class level","correct":false},{"id":730697,"option":"Using @ControllerAdvice to catch global exceptions thrown by all controllers","correct":false},{"id":730698,"option":"Both of these","correct":true},{"id":730699,"option":"None of these","correct":false}]},{"q":"<p>In Android, which of the following exceptions is thrown when the database is full?</p>","a":[{"id":30878,"option":"SQLiteBlobTooBigException\r\n","correct":false},{"id":30879,"option":"SQLiteCantOpenDatabaseException\r\n","correct":false},{"id":30880,"option":"SQLiteConstraintException\r\n","correct":false},{"id":30881,"option":"SQLiteFullException\r\n       ","correct":true}]},{"q":"<p>In Android, which of the following exceptions is thrown to indicate that there was an error with SQL parsing or execution?</p>","a":[{"id":30870,"option":"SQLiteBlobTooBigException\r\n   ","correct":false},{"id":30871,"option":"SQLiteCantOpenDatabaseException\r\n   ","correct":false},{"id":30872,"option":"SQLiteConstraintException\r\n   ","correct":false},{"id":30873,"option":"SQLiteException\r\n   ","correct":true}]},{"q":"<p>What is the output of the following C# code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\nclass hack1\n\n{\n\tvirtual public void h()\n\t{\n\t\tConsole.WriteLine(\"hi\");\n\t}\n}\n\nclass hack2 : hack1\n{\n\t\n\t new public void h()\n\t{\n\t\tConsole.WriteLine(\"hello\");\n\t}\n}\n\nclass Hack {\n\t\n\tpublic static void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t    hack2 h1 = new hack2();\n\t\t    \n\t\t    hack1 h4=h1;\n\t\t    \n\t\t    hack2 h3=(hack2)h4;\n\t\t    \n\t\t    h3.h();\n\t\t    \n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t    Console.WriteLine(\"happy hacking\");\n\t\t}\n\t\t\n\t\tfinally \n\t\t{\n\t\t    hack1 h2 = new hack2();\n\t\t    h2.h();\n\t\t    \n\t\t}\n\t\t\n\t}\n}</code></pre>\n\n<p><br>\n </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>happy hacking\nhi\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhappy hacking\nhi\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhappy hacking\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419437,"option":"2","correct":false},{"id":1419438,"option":"4","correct":false},{"id":1419439,"option":"3","correct":false},{"id":1419440,"option":"1","correct":true}]},{"q":"<p>In Angular 2, which of the following operators is used to catch errors on an existing stream and pass the exception?</p>","a":[{"id":388392,"option":".catch operator","correct":true},{"id":388393,"option":".release operator","correct":false},{"id":388394,"option":"Both of these","correct":false},{"id":388395,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C# code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\nclass Hack\n{\n    static void Main(string[] args)\n    {\n        try\n        {\n            Console.WriteLine(\"Hi\");\n            \n        }\n        catch (IndexOutOfRangeException)\n        {\n            Console.WriteLine(\"hackerearth\");\n        } \n        catch (ArgumentNullException)\n        {\n            Console.WriteLine(\"hello\");\n        }\n        finally\n        {\n            Console.WriteLine(\"bye\");\n        }\n    }\n}\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\nbye\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\nhello\nbye\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\nhackerearth\nbye\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\nhackerearth\nhello\nbye\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419642,"option":"4","correct":false},{"id":1419643,"option":"2","correct":false},{"id":1419644,"option":"1","correct":true},{"id":1419645,"option":"3","correct":false}]},{"q":"<p>What is the output of the following Java code:<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth\n{\n  public static void main(String[] args) \n  {\n        HackerEarth obj = new HackerEarth();\n        obj.start();\n  }\n\n  private void start() \n  {\n        System.out.println(check(\"12345\"));\n        System.out.println(check(\"123456\"));\n        System.out.println(check(null));\n  }\n\n  private boolean check(String aString)\n  {\n    try\n    {\n        return aString.length() &gt; 5;\n    }\n    catch (NullPointerException e)\n    {\n        System.out.println(\"An Exception Occurred!\");\n        return false;\n    }\n  }\n}</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue\nAn Exception Occurred!</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue\nAn Exception Occurred!\nfalse</code></pre>\n\t</li>\n</ol>","a":[{"id":691966,"option":"1","correct":false},{"id":691967,"option":"2","correct":false},{"id":691968,"option":"3","correct":true},{"id":691969,"option":"None of these","correct":false}]},{"q":"<p>Which of the following defines <strong>throwing</strong> and <strong>handling</strong> exceptions in C++?</p>","a":[{"id":7781,"option":"Throw by a value and catch by a reference","correct":true},{"id":7782,"option":"Throw by a reference and catch by a reference","correct":false},{"id":7783,"option":"Throw by a value and catch by a value","correct":false},{"id":7784,"option":"Throw the pointer value and provide a catch for the pointer type","correct":false}]},{"q":"<p>Which of the following statements do not follow the correct syntax and cannot compile?</p>","a":[{"id":694249,"option":"private void HackerEarth(String name)\r\n{\r\n    if (name.equals(\"Java\"))\r\n    throw new IllegalArgumentException(name);\r\n}","correct":false},{"id":694250,"option":"private void HackerEarth(int age) {\r\nif (age > 30)\r\nthrow Exception();\r\n}","correct":true},{"id":694251,"option":"public double HackerEarth() throws Exception {\r\nreturn 0.7;\r\n}","correct":false},{"id":694252,"option":"All of these will compile successfully","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class hackerearth\n{\n\tstatic int hack_opr(int h1, int h2)\n\t{\n\t\treturn h1/h2;\n\t}\n\t\n\tstatic int hack_opr2(int h1, int h2) \n\t{\n\t    int hack = 0;\n\t\t\n\t\ttry\n\t\t{\n\t\t    hack = hack_opr(h1,h2);\n\t\t}\n\t\tcatch(ArithmeticException hackerearth)\n\t\t{\n\t\t    System.out.println(\"hello\");\n\t\t}\n\t\treturn hack;\n\t}\n\t\n\tpublic static void main(String args[])\n\t{\n\t\t\n\t\tint h1 = 40;\n\t\tint h2 = 0;\n\t\t\n\t\ttry\n\t\t{\n\t\t    int hack = hack_opr2(h1,h2);\n\t\t\n\t\t}\n\t\t\n\t\tcatch(ArithmeticException ex)\n\t\t{\n\t\t\tSystem.out.println(\"hi\");\n\t\t}\n\t}\n}</code></pre>\n\n<p><br>\n </p>\n\n<p><strong>Output:</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hi</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":661993,"option":"2","correct":false},{"id":661994,"option":"3","correct":false},{"id":661995,"option":"1","correct":true},{"id":661996,"option":"The code gives a compilation error","correct":false}]},{"q":"<p>In Java, which of the following exceptions is generated when you create an object of an abstract class or interface?</p>","a":[{"id":691112,"option":"InstantiateException","correct":false},{"id":691113,"option":"InstantiationException","correct":true},{"id":691114,"option":"IllegalAccessException","correct":false},{"id":691115,"option":"UnsupportedOperationException","correct":false}]},{"q":"<p>In Apache NiFi, a callback function is allowed to throw multiple numbers of exceptions. Which of the following types of exceptions allows the <strong>Exception</strong> function to propagate back to the <strong>onTrigger</strong> method:</p>\n\n<ol>\n\t<li>RuntimeException</li>\n\t<li>IOException</li>\n</ol>","a":[{"id":786795,"option":"1","correct":true},{"id":786796,"option":"2","correct":false},{"id":786797,"option":"Both of these","correct":false},{"id":786798,"option":"None of these","correct":false}]},{"q":"<p>What is the error in the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n{\n    static void proc1()    \n    {\n        System.out.println(\"Inside Proc1\");\n        throw new IllegalAccessException(\"Java\");\n    }\n\npublic static void main(String args[]) \n{\n        proc1();\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":691104,"option":"Declaring that proc1 throws IllegalAccessException","correct":false},{"id":691105,"option":"Not defining a try-catch statement in the main() method","correct":false},{"id":691106,"option":"Both of these","correct":true},{"id":691107,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about <strong>exceptions</strong> in Java are true:</p>\n\n<ol>\n\t<li>All exception types are subclasses of the built-in class<em>Throwable</em>.</li>\n\t<li>The<em> Throwable </em>class has 2 subclasses - <em>Exception </em>and<em> Error</em></li>\n\t<li>The <em>throws </em>statement is used to explicitly throw an exception.</li>\n\t<li>There are two ways to obtain a <em>Throwable </em>object - using a parameter in a catch clause or creating one with the <em>new</em> operator.</li>\n</ol>","a":[{"id":691098,"option":"1, 2, and 4","correct":true},{"id":691099,"option":"1, 2, and 3","correct":false},{"id":691100,"option":"1, 3, and 4","correct":false},{"id":691101,"option":"All of these","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\nclass HackerEarth \n{\n    int setValue() \n    {\n        int a = 10;\n        int b = 20;\n    try \n    {\n        ++a;\n        b++;\n    } \n\n    catch(java.io.FileNotFoundException e)\n    {\n        System.out.println(\"Error\");\n    }\n\n    finally \n    {\n        a++;\n        b--;\n    }\n    return a+b;\n\n}\n\npublic static void main(String args[]) \n{\n    System.out.println(new HackerEarth().setValue());\n}\n}\n</code></pre>\n\n<p> </p>","a":[{"id":694373,"option":"32","correct":false},{"id":694374,"option":"33","correct":false},{"id":694375,"option":"Compile-time Error","correct":true},{"id":694376,"option":"Run-time Error","correct":false}]},{"q":"<p>In Java, you are working on Multithreading. If you have executed the code given below that contains two threads <strong>h1</strong> and <strong>h2,</strong> then which of the following statements is correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class hack_thread extends Thread\n{  \n    public void run()\n    {  \n        for(int h=1;h&lt;=3;h++)\n        {  \n            try\n            {  \n                Thread.sleep(10);  \n                \n            }\n            catch(Exception hackerearth)\n            {\n                System.out.println(\"hello\");\n                \n            }  \n            System.out.print(h+\" \");  \n            \n        }  \n        \n    }  \n    public static void main(String args[])\n    {  \n        hack_thread h1=new hack_thread();  \n        hack_thread h2=new hack_thread();  \n        h1.start();  \n        try\n        {  \n            h1.join();  \n            \n        }\n        catch(Exception hackerearth)\n        {\n            System.out.println(\"hi\");\n            \n        }  \n        h2.start();  \n        \n    }  \n} </code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>Thread h1 and thread h2 execute simultaneously<br>\n\t </li>\n\t<li>The code gives the output-\n\t<pre class=\"prettyprint\"><code>1 1 2 2 3 3</code></pre>\n\t<br>\n\t </li>\n\t<li>Thread h2 starts executing after h1 has completed its task.<br>\n\t </li>\n\t<li>The code gives the output-\n\t<pre class=\"prettyprint\"><code>1 2 3 1 2 3</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":666735,"option":"3 and 4","correct":true},{"id":666736,"option":"1 and 2","correct":false},{"id":666737,"option":"only 3","correct":false},{"id":666738,"option":"only 1","correct":false}]},{"q":"<p>What will be the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Hackerearth \n{  \n    public static void main(String[] args) \n    {  \n        try\n        {    \n            Integer hack[]= new Integer[1];\n            hack[0]=null;\n            System.out.println(hack.length);  \n        }    \n        \n        catch(NullPointerException h1)  \n        {  \n            System.out.println(\"hello\");  \n            \n        }    \n        catch(Exception h2)  \n        {  \n            System.out.println(\"hi\");  \n        }             \n        System.out.println(\"hackerearth\");    \n    }  \n} </code></pre>\n\n<p><br>\n<br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhackerearth</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\nhackerearth</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi\nhackerearth</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":662102,"option":"3","correct":false},{"id":662103,"option":"1","correct":false},{"id":662104,"option":"2","correct":true},{"id":662105,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\npublic class HackerEarth \n{\n    void func()\n    {\n        try \n        {\n            String str = null;\n            System.out.println(\"1\");\n            try\n            {\n                System.out.println(str.length());\n            }\n            catch (NullPointerException e) \n            {\n                System.out.println(\"inner\");\n            }\n            System.out.println(\"2\");\n        }\n        catch (NullPointerException e) \n        {\n            System.out.println(\"outer\");\n        }\n    }\n    public static void main(String args[]) \n    {\n        HackerEarth obj = new HackerEarth();\n        obj.func();\n    }\n}</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>1\ninner\n2</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>1\ninner\n2\nouter</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>1\nouter</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>1\ninner</code></pre>\n\n<p> </p>","a":[{"id":693723,"option":"1","correct":true},{"id":693724,"option":"2","correct":false},{"id":693725,"option":"3","correct":false},{"id":693726,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class Main\n{\n    static void Java() \n    {\n        try \n        {\n            System.out.println(\"inside Java\");\n            throw new RuntimeException(\"demo\");\n        }\n        finally \n        {\n            System.out.println(\"Java's finally\");\n        }\n    }\n    static void Python() \n    {\n        try\n        {\n            System.out.println(\"inside Python\");\n            return;\n        }\n        finally \n        {\n            System.out.println(\"Python's finally\");\n        }\n    }\n\n    public static void main(String args[]) \n    {\n        try\n        {\n            Java();\n        }\n        catch (Exception e) \n        {\n            System.out.println(\"Exception caught\");\n        }\n    Python();\n    }\n}</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>inside Java\nJava's finally\ninside Python\nPython's finally\nException caught</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>inside Java\nJava's finally\nException caught\ninside Python\nPython's finally</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>inside Java\nJava's finally\ninside Python\nPython's finally</code></pre>","a":[{"id":691108,"option":"1","correct":false},{"id":691109,"option":"2","correct":true},{"id":691110,"option":"3","correct":false},{"id":691111,"option":"Run-time error","correct":false}]},{"q":"<p>In Express.js, which of these properties of an <em>options </em>parameters are of the boolean type:<br>\n<br>\n1) httpOnly<br>\n2) secure<br>\n3) path<br>\n4) expires</p>","a":[{"id":724861,"option":"Default behavior of the process will be changed","correct":true},{"id":724862,"option":"Process thread safety will be compromised","correct":false},{"id":724863,"option":"The security of the process variables will be compromised","correct":false},{"id":724864,"option":"The process will be susceptible to an infinite load problem","correct":false}]},{"q":"<p>In Java, you are working on Multithreading. Now, if you have executed the code given below then which of the following statements is correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Hackerearth\n{\n    public static void main(String args[])\n    {  \n        hack_thread h=new hack_thread();   \n        h.start(); \n        while(h.isAlive())\n        {\n            try\n            {\n                h.sleep(10);\n                \n            }\n            \n            catch(Exception e)\n            {\n                System.out.println(\"hello\");\n                \n            }\n            System.out.println(\"hackerearth\");\n            \n        }\n        \n    }  \n}\nclass hack_thread extends Thread\n{  \n    public void run()\n    {  \n        System.out.println(\"hi\");          \n    }    \n}    </code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The code does not give a runtime error<br>\n\t </li>\n\t<li>The code produces the output - \n\t<pre class=\"prettyprint\"><code>hello\nhackerearth</code></pre>\n\t<br>\n\t </li>\n\t<li>The code produces the output - \n\t<pre class=\"prettyprint\"><code>hi\nhackerearth</code></pre>\n\t<br>\n\t </li>\n</ol>","a":[{"id":661989,"option":"1 and 3","correct":true},{"id":661990,"option":"1 and 2","correct":false},{"id":661991,"option":"only 1","correct":false},{"id":661992,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class hack1\n{  \n    void hack_method()throws Exception\n    {\n        System.out.println(\"hackerearth\");\n        \n    }  \n}  \n  \nclass hack2 extends hack1\n{\n    void hack_method()throws Exception\n    {\n        System.out.println(\"hacker\");\n        \n    }  \n    \n    public static void main(String args[])\n    {  \n        hack2 h=new hack2();  \n        try\n        {  \n            h.hack_method();  \n            \n        }\n        catch(Exception e)\n        {\n            System.out.print(\"hello\");\n            \n        }  \n        finally \n        {\n            System.out.println(\"hi\");\n            \n        }\n        \n    }  \n}  </code></pre>\n\n<p><br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hackerearth\nhi</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hacker\nhi</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":662020,"option":"2","correct":false},{"id":662021,"option":"3","correct":true},{"id":662022,"option":"1","correct":false},{"id":662023,"option":"The code gives a compilation error","correct":false}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\npublic class Program\t\n{\npublic static void main(String[] args)\n{\n\tList&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);\n\tnumbers.stream().map(Program::divideByZero).forEach(System.out::println);\n}\n\npublic static int divideByZero(int n)\n{\n\treturn n / 0;\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":583868,"option":"0","correct":false},{"id":583869,"option":"Compilation error","correct":false},{"id":583870,"option":"Exception: java.lang.nullpointerexception","correct":false},{"id":583871,"option":"Exception: java.lang.ArithmeticException: / by zero","correct":true}]}]