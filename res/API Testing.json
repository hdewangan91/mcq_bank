[{"q":"<p>Which of the following code snippets checks that everything about a response is valid in Postman?</p>","a":[{"id":722300,"option":"pm.test(\"response is ok\", function () {\r\n    pm.response.to.have.status(200);\r\n});","correct":false},{"id":722301,"option":" pm.test(\"environment to be production\", function () { \r\n    pm.expect(pm.environment.get(\"env\")).to.equal(\"production\"); \r\n});","correct":false},{"id":722302,"option":"pm.test(\"response should be okay to process\", function () { \r\n    pm.response.to.not.be.error; \r\n    pm.response.to.have.jsonBody(\"\"); \r\n    pm.response.to.not.have.jsonBody(\"error\"); \r\n});","correct":true},{"id":722303,"option":"All of these","correct":false}]},{"q":"<p>Which of the following statements about the Postman API are true?</p>","a":[{"id":722304,"option":"You need a valid API key to send requests to the API endpoints. Postman users will get a key in the Integrations page.","correct":false},{"id":722305,"option":"This API is rate limited.","correct":false},{"id":722306,"option":"Using this API, you can add and update collections, environments, and users. You can also run monitors, create a mock server, etc.","correct":false},{"id":722307,"option":"All of these","correct":true}]},{"q":"<p>Consider the following JSON  code snippet which contains a book description:</p>\n\n<pre class=\"prettyprint\"><code>{\n\t\"id\": 0,\n\t\"book\": \"Postman\",\n\t\"no_of_pages\": 542,\n\t\"is_exist\": true\n}\n</code></pre>\n\n<p>Which of the following postman code snippets will give the output as  \"PASS\"?</p>","a":[{"id":722296,"option":"tests[\"Status code is 200\"] = responseCode.code === 200;","correct":true},{"id":722297,"option":"var jsonData = JSON(responseBody);\r\ntests[\"Checking no_of_pages parameter from JSON data\"] = jsonData.no_of_pages === 542;","correct":false},{"id":722298,"option":"var jsonData = JSON.parse(responseBody);\r\ntests[\"Checking book parameter from JSON data\"] = jsonData === \"Postman\";","correct":false},{"id":722299,"option":"var jsonData = JSON.parse(responseBody);\r\ntests[\"Example of failed test\"] = jsonData.cover_color === “Red”;","correct":false}]},{"q":"<p>In API testing, which of the following are valid HTTP request types?</p>","a":[{"id":532046,"option":"POST, GET, PUT, DELETE, OPTIONS, and HEAD","correct":true},{"id":532047,"option":"POST, GET, UPDATE, and DELETE\r\n","correct":false},{"id":532048,"option":"GET, PUT, DELETE, and EDIT\r\n","correct":false},{"id":532049,"option":"HEAD, BODY, POST, GET, and UPDATE","correct":false}]},{"q":"<p>In API testing, which of the following is not a valid Content-Type?</p>","a":[{"id":532034,"option":"Content-Type: text/html\r\n","correct":false},{"id":532035,"option":"Content-Type: multipart/form-data\r\n","correct":false},{"id":532036,"option":"Content-Type: application/json\r\n","correct":false},{"id":532037,"option":"Content-type: url/encoded-form-data","correct":true}]},{"q":"<p>In API testing, if you get a 5xx HTTP code while accessing a website, then which of the following statements is correct?</p>","a":[{"id":532050,"option":"There is an issue with the network connection","correct":false},{"id":532051,"option":"The connection is fine but something is wrong with Server\r\n","correct":true},{"id":532052,"option":"Page does not exist\r\n","correct":false},{"id":532053,"option":"The site has been moved permenantly","correct":false}]}]