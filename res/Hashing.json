[{"q":"<p>What is the output of the following pseudocode with the given input:</p>\n\n<p><strong>Input: </strong><em>array= {3, 6, 6, 7, 8}, n = 5</em></p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>long long int hackersum(int hack[], int m)\n int hacksum = 0\n unordered_map&lt;int, int&gt; mp\n for i=0 to m \n  int s = 0;\n  for j=i to m \n   s += hack[j]\n   mp[s]++\n for (auto x : mp)\n  if (x.second == 1)\n   hacksum += x.first\n return hacksum</code></pre>","a":[{"id":1659018,"option":"170","correct":false},{"id":1659019,"option":"171","correct":true},{"id":1659020,"option":"172","correct":false},{"id":1659021,"option":"173","correct":false}]},{"q":"<p>What is the output of the following pseudocode?</p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>For input array: hack[] = {2, 2, 2, 6, 6, 11, 2}\n                      n = 7\nfunc hackLen(int hack[], int n)\n  int m = 1; \n  for i=1 to n-1\n    Set S\n    insert(hack[i]) into S\n     mn = hack[i]\n     mx = hack[i]\n\t for j=i+1 to n\n\t   if (s.find(hack[j]) != s.end())\n\t\t  break;\n\t   insert(hack[j]) into S\n\t   mn = minimum of (mn, hack[j])\n\t   if (mx - mn == j - i)\n\t      m= maximum of(m, mx - mn + 1)\n   return m</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1671098,"option":"1","correct":true},{"id":1671099,"option":"2","correct":false},{"id":1671100,"option":"3","correct":false},{"id":1671101,"option":"Compile time error","correct":false}]},{"q":"<p>What is the output of the following pseudocode?</p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>FOR Input: hack1[] = {10, 5, 3, 4, 6}\n           hack2[] = {8, 7, 9, 3}\n           n1= 5\n           n2= 4\n\nfunc hack_check(int hack1[], int hack2[], int n1, int n2)\n SET s\n for i=0 to n1\n  insert(hack1[i])into s\n for i=0 to n2\n  if (hack2[i]is present in s)\n\t\treturn No\n return Yes</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1671064,"option":"Yes","correct":false},{"id":1671065,"option":"No","correct":true},{"id":1671066,"option":"Compilation Error","correct":false},{"id":1671067,"option":"Runtime Error","correct":false}]},{"q":"<p>What is the output of following C++ code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint hack_count(int hack[] , int n)\n{\n\tint res = 0;\n\tset&lt; int &gt; H;\n\tfor (int i = 0 ; i &lt; n; i++)\n\t\tH.insert(hack[i]);\n\tfor (int i = 0 ; i &lt; n; i++)\n\t{\n\t\tfor (int j = i + 1; j&lt;n ; j++)\n\t\t{\n\t\t\tint product = hack[i]*hack[j];\n\t\t\tif (H.find(product) != H.end())\n\t\t\t\tres++;\n\t\t}\n\t}\n\treturn res;\n}\nint main()\n{\n\tint a[] = {8 ,2 ,4 ,16 ,15 , 3, 5};\n\tint n = sizeof(a)/sizeof(a[0]);\n\tcout &lt;&lt; hack_count(a, n) ;\n\treturn 0;\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1665946,"option":"3","correct":true},{"id":1665947,"option":"4","correct":false},{"id":1665948,"option":"5","correct":false},{"id":1665949,"option":"6","correct":false}]},{"q":"<p>What is the output of the following C++ code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct hack_comp {\n\tbool operator()(pair&lt;int, int&gt; x, pair&lt;int, int&gt; y)\n\t{\n\t\tif (x.second == y.second)\n\t\t\treturn x.first &lt; y.first;\n\t\treturn x.second &lt; y.second;\n\t}\n};\nvoid hack_freq(int hack[], int n, int k)\n{\n\tunordered_map&lt;int, int&gt; um;\n\tfor (int i = 0; i &lt; n; i++)\n\t\tum[hack[i]]++;\n\tpriority_queue&lt;pair&lt;int, int&gt;, vector&lt;pair&lt;int, int&gt; &gt;,hack_comp&gt;\n\t\tpq(um.begin(), um.end());\n\tfor (int i = 1; i &lt;= k; i++) {\n\t\tcout &lt;&lt; pq.top().first &lt;&lt; \" \";\n\t\tpq.pop();\n\t}\n}\nint main()\n{\n\tint a[] = { 3, 3, 4, 4, 6, 2, 6, 1 };\n\tint n = sizeof(a) / sizeof(a[0]);\n\tint k = 2;\n\thack_freq(a, n, k);\n\treturn 0;\n}\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1665942,"option":"6 4 3","correct":false},{"id":1665943,"option":"6 4","correct":true},{"id":1665944,"option":"4 3","correct":false},{"id":1665945,"option":"None of these","correct":false}]},{"q":"<p>Alice was given&nbsp;an array containing only <em>0s</em> and <em>1s</em>.&nbsp;His task was to find the largest subarray which contains the equal number of <em>0s</em> and <em>1s</em>.&nbsp;</p>\n\n<p><strong>Example</strong></p>\n\n<pre><strong>Input:</strong> arr[] = {1, 0, 1, 1, 1, 0, 0}\n<strong>Output:</strong> 1 to 6 </pre>\n\n<p>Alice came up with the pseudocode but missed some of the statements in between:</p>\n\n<pre class=\"prettyprint\"><code>int hack_left[n]\nRun a loop from i=0 to n-1\n  if(arr[i]==0)\n  hacksum[i] = hacksum[i-1]+-1\n  else\n  hacksum[i] = hacksum[i-1]+-1\n        if (hacksum[i] &gt; max)\n            max = hacksum[i];\nRun a loop from i=0 to n-1\n if (hacksum[i] == 0)\n        {\n           hackmax = i+1;\n           startindex = 0;\n        }\n        if (hash[hacksum[i]-min] == -1)\n            hash[hacksum[i]-min] = i;\n        else\n        {\n            if ((i - hash[hacksum[i]-min]) &gt; maxsize)\n            {\n                //line 1\n                //line 2\n            }\n        }\nreturn hackmax</code></pre>\n\n<p>Can you help Alice in finding what will come in place of line <em>1</em> and line <em>2</em>?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>hackmax = i - hash[hacksum[i]-min];\nstartindex = hash[hacksum[i]-min] + 1;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>hackmax = i - hash[hacksum[i+1]-min];\nstartindex = hash[hacksum[i+1]-min] + 1;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>hackmax = i - hash[hacksum[i]+min];\nstartindex = hash[hacksum[i]+min] + 1;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>hackmax = i - hash[hacksum[i-1]-min];\nstartindex = hash[hacksum[i-1]-min] + 1;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1665938,"option":"1","correct":true},{"id":1665939,"option":"2","correct":false},{"id":1665940,"option":"3","correct":false},{"id":1665941,"option":"4","correct":false}]},{"q":"<p>Alice and Bob want to choose a place to do their training and they both have a list of favorite places&nbsp;represented by strings.<br>\nYou need to help them find out their common interest with the least index sum. If there is a choice tie between answers, print all of them with no order requirement. Assume there always exists an answer.</p>\n\n<p>Here is the code which they came up with. Can you help them find the complexity?</p>\n\n<pre class=\"prettyprint\"><code>void hack_find(vector&lt;string&gt; v1, vector&lt;string&gt; v2)\n   unordered_map&lt;string, int&gt; map\n\tfor i=0 to v1.size()\n\t\tmap[v1[i]] = i\n\tvector&lt;string&gt; res\n\tint minsum = INT_MAX\n\tfor j=0 to v2.size()\n\t  if (map.count(v2[j]))\n\t\tint sum = j + map[v2[j]]\n\t\t\tif (sum &lt; minsum)\n\t\t\t  minsum = sum\n\t\t\t  res.clear()\n\t\t\t  res.push_back(v2[j])\n\t\t\telse if (sum == minsum)\n\t\t\t\tres.push_back(v2[j])\n\tfor i=0 to res.size()\n\t\tprint(res[i])</code></pre>\n\n<p><em>(Note:&nbsp;M</em> and <em>N</em> are the lengths of the two vectors respectively)</p>","a":[{"id":1665934,"option":"O(M)","correct":false},{"id":1665935,"option":"O(N)","correct":false},{"id":1665936,"option":"O(M+N)","correct":true},{"id":1665937,"option":"O(M*N)","correct":false}]},{"q":"<p>What is the complexity of the given code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nbool hackeq(int hack1[], int hack2[], int n, int m){\n if (n != m)\n  return false;\n sort(hack1, hack1 + n);\n sort(hack2, hack2 + m);\n for (int i = 0; i &lt; n; i++)\n   if (hack1[i] != hack2[i])\n\treturn false;\n return true;\n}\nint main(){\n int a[] = {5,2,3};\n int b[] = {2,3,5};\n int n = sizeof(a) / sizeof(int);\n int m = sizeof(b) / sizeof(int);\n  if (hackeq(a, b, n, m))\n   cout &lt;&lt; \"Yes\";\n  else\n   cout &lt;&lt; \"No\";\n  return 0;\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1663220,"option":"O(n)","correct":false},{"id":1663221,"option":"O(n log n)","correct":true},{"id":1663222,"option":"O(log n)","correct":false},{"id":1663223,"option":"O(n^2)","correct":false}]},{"q":"<p>What is the output of following C++ code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>vector&lt;int&gt; hackDiv(int n){\n vector&lt;int&gt; vec;\n for (int i = 1; i &lt;= sqrt(n); i++) {\n if (n % i == 0) {\n if (n / i == i)\n vec.push_back(i);\n else {\n vec.push_back(i);\n vec.push_back(n / i);\n }\n }\n }\n return vec;\n}\nbool hackPairs(int hack[], int n, int k){\n unordered_map&lt;int, bool&gt; occ;\n for (int i = 0; i &lt; n; i++)\n   occ[hack[i]] = true;\n   bool hackFound = false;\n for (int i = 0; i &lt; n; i++) {\n    if (occ[k] &amp;&amp; k &lt; hack[i])\n    cout &lt;&lt; \"(\" &lt;&lt; k &lt;&lt; \", \" &lt;&lt; hack[i] &lt;&lt; \") \";\n hackFound = true;\n }\n if (hack[i] &gt;= k) {\n vector&lt;int&gt; v = hackDiv(hack[i] - k);\n for (int j = 0; j &lt; v.size(); j++) {\n if (hack[i] % v[j] == k &amp;&amp; hack[i] != v[j] &amp;&amp; occ[v[j]]) {\n cout &lt;&lt; \"(\" &lt;&lt; hack[i] &lt;&lt; \", \"&lt;&lt; v[j] &lt;&lt; \") \";\n hackFound = true;\n }\n }\n v.clear();\n }\n }\n return hackFound;\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>(2, 3) (2, 6) (2, 5) (5, 3) </code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>(2, 3) (2, 6) (2, 5) (3, 5)</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>(2, 3) (3, 6) (2, 5) (5, 6)</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>No such pair exists</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1663216,"option":"1","correct":true},{"id":1663217,"option":"2","correct":false},{"id":1663218,"option":"3","correct":false},{"id":1663219,"option":"4","correct":false}]},{"q":"<p>What is the output of the following C++ code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint hackfind(int hackarr[], int n){\n unordered_map&lt;int, int&gt; m;\n for (int i = 0; i &lt; n; i++)\n m[hackarr[i]]++;\n sort(hackarr, hackarr + n);\n for (int i = n - 1; i &gt; 1; i--) {\n  for (int j = 0; j &lt; i &amp;&amp; hackarr[j] &lt;= sqrt(hackarr[i]);j++) {\n   if (hackarr[i] % hackarr[j] == 0) {\n    int result = hackarr[i] / hackarr[j];\n     if (result != hackarr[j] &amp;&amp; result!=hackarr[i] &amp;&amp; m[result] &gt; 0)\n     return hackarr[i];\n     else if (result == hackarr[j] &amp;&amp; m[result] &gt; 1)\n     return hackarr[i];\n     }\n   }\n }\nreturn -1;\n}\nint main()\n{\n\tint a[] = { 17, 22, 1, 15, 34};\n\tint n = sizeof(a) / sizeof(a[0]);\n\tcout &lt;&lt; hackfind(a, n);\n\treturn 0;\n}\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1663200,"option":"-1","correct":true},{"id":1663201,"option":"17","correct":false},{"id":1663202,"option":"22","correct":false},{"id":1663203,"option":"15","correct":false}]},{"q":"<p>What is the output of the following C++ code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nbool ishack(int n){\n if (n &lt;= 1) return false;\n for (int i = 2; i &lt; n; i++)\n if (n % i == 0)\n return false;\n return true;\n}\nvoid hack_prime(int arr[], int k){\n unordered_map&lt;int, int&gt; map;\n for (int i = 0; i &lt; 12; i++)\n map[arr[i]]++;\n for (auto x : map){\n if (ishack(x.second) &amp;&amp; x.second &gt;= k)\n cout &lt;&lt; x.first &lt;&lt; endl;\n}\n}\nint main()\n{\n\tint a[] = {11, 11, 11, 37, 37, 51, 51, 51};\n\tint k = 3;\n\thack_prime(a, k);\n\treturn 0;\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1663212,"option":"11\r\n51","correct":true},{"id":1663213,"option":"37\r\n37","correct":false},{"id":1663214,"option":"37 \r\n51","correct":false},{"id":1663215,"option":"11 \r\n37","correct":false}]},{"q":"<p>Bob loves to solve new problems on data structures and algorithms. He always comes up with the best solution possible but for the first time, he was unsure about the complexity of the code he came up with.</p>\n\n<p>Can you help him find the complexity of the given code?</p>\n\n<pre class=\"prettyprint\"><code>int function_hack(int arr[],int n, int l)\n  unordered_map&lt;int, int&gt; um\n\tint a[n], max = 0\n\tint sum = 0\n\tfor (int i = 0; i &lt; n; i++)\n\t\tsum += arr[i]\n\t\ta[i] = ((sum % l) + l) % l\n\tfor (int i = 0; i &lt; n; i++)\n\t    if (a[i] == 0)\n\t\t\tmax = i + 1\n\t\telse if (um.find(a[i]) == um.end())\n\t\t\tum[a[i]] = i\n\t\telse\n\t\t\tif (max &lt; (i - um[a[i]]))\n\t\t\t\tmax = i - um[a[i]]\t\t\n\treturn max</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1661259,"option":"O(n)","correct":true},{"id":1661260,"option":"O(log n)","correct":false},{"id":1661261,"option":"O(n^2)","correct":false},{"id":1661262,"option":"O(n log n)","correct":false}]},{"q":"<p>What is the output of following code?</p>\n\n<p><em>int seq[] = { 3, 4, 5, 12, 40, 55};<br>\nint n = sizeof(a) / sizeof(a[0]);</em></p>\n\n<pre class=\"prettyprint\"><code>int hacksequence(int seq[], int n)\n unordered_map&lt;int, int&gt; m\n int arr[n]\n memset(arr, 0, sizeof(arr))\n int maxi = INT_MIN\n for (int i = 0; i &lt; n; i++) \n  if (m.find(seq[i] - 1) != m.end()) \n   int lastIndex = m[seq[i] - 1] - 1\n   arr[i] = 1 + arr[lastIndex]\n  else\n   arr[i] = 1\n m[seq[i]] = i + 1\n maxi = max(maxi, arr[i])\nprint maxi\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1661255,"option":"3","correct":true},{"id":1661256,"option":"4","correct":false},{"id":1661257,"option":"5","correct":false},{"id":1661258,"option":"6","correct":false}]},{"q":"<p>Alpha and Beta are best friends. They were both given a set of numbers and were asked to form the resultant array of equal size. The condition was such that the&nbsp;numbers which are maximum in their respective arrays should be present in the resultant array Gamma[ ].&nbsp;If there are common elements, then only one element should be present in Gamma[ ] and priority should be given to Alpha[ ].</p>\n\n<p><em>Example</em></p>\n\n<p><em>Input</em>:&nbsp; <em>Alpha[ ] = { 8, 7, 5, 4, 6 }</em>;<br>\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<em>Beta[ ] = { 1, 4, 9, 0, 2 };</em></p>\n\n<p><em>Output</em>: <em>Gamma[ ]= {8, 7, 5, 6, 9}</em></p>\n\n<pre class=\"prettyprint\"><code>void hackerearth(int Alpha[], int Beta[],int n){\n\tvector&lt;int&gt; dup1(Alpha, Alpha+n);\n\tvector&lt;int&gt; dup2(Beta, Beta+n);\n\tsort(dup1.begin(), dup1.end(), greater&lt;int&gt;());\n\tsort(dup2.begin(), dup2.end(), greater&lt;int&gt;());\n\tunordered_map&lt;int, int&gt; mp;\n\tint i = 0, j = 0;\n\twhile (mp.size() &lt; n){\n\t\tif (dup1[i] &gt;= dup2[j]){\n\t\t\tmp[dup1[i]]++;\n\t\t\ti++;\n\t\t}\n\t\telse{\n\t\t\tmp[dup2[j]]++;\n\t\t\tj++;\n\t\t}\n\t}\n\tvector&lt;int&gt; gamma;\n\tfor (int i = 0; i &lt; n; i++)\n\t\tif (mp.find(Alpha[i]) != mp.end())\n\t\tgamma.push_back(Alpha[i]);\n\tfor (int i = 0; i &lt; n; i++)\n\t\tif (mp.find(Beta[i]) != mp.end() &amp;&amp;\n\t\t\tmp[Beta[i]] == 1)\n\t\tgamma.push_back(Beta[i]);\n}</code></pre>\n\n<p>Can you help Alpha and Beta in finding the complexity of the given <em>find_gamma</em> function?</p>","a":[{"id":1659279,"option":"O(n)","correct":false},{"id":1659280,"option":"O(n log n)","correct":true},{"id":1659281,"option":"O(n^2)","correct":false},{"id":1659282,"option":"O(log n)","correct":false}]},{"q":"<p>Alice was given a set of numbers and was asked to find the largest number <em>S</em>&nbsp;such that<em> P+Q+R=S</em>. Given that <em>P, Q, R, S</em> all belong to the given set.</p>\n\n<p><em>Example</em>&nbsp;</p>\n\n<p><em>Input:</em> <em>Alice[] = {4, 3, 5, 7, 14}</em>&nbsp;<br>\n<em>Output</em>: <em>14</em></p>\n\n<pre class=\"prettyprint\"><code>int find_S(int alice[], int n)\n  unordered_map&lt;int, pair&lt;int, int&gt; &gt; m\n\tfor (int i = 0; i &lt; n - 1; i++)\n\t\tfor (int j = i + 1; j &lt; n; j++)\n\t\t\tm[alice[i] + alice[j]] = { i, j }\n\tint d = INT_MIN;\n\tfor (int i = 0; i &lt; n - 1; i++) \n\t\tfor (int j = i + 1; j &lt; n; j++) \n\t\t\tint abs_diff = abs(alice[i] - alice[j])\n\t\t\tif (m.find(abs_diff) != m.end())\n\t\t\t\tpair&lt;int, int&gt; p = m[abs_diff]\n\t\t\t\t//CODE\n\treturn d</code></pre>\n\n<p>Can you help Alice to replace <em>//CODE</em> from the given options?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>if (p.first != i &amp;&amp; p.first != j &amp;&amp; p.second != i &amp;&amp; p.second != j)\nd = max(d, max(alice[i], alice[j]));</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>if (p.first != i &amp;&amp; p.first != j &amp;&amp; p.second != i &amp;&amp; p.second != j)\nd = max(d, min(alice[i], alice[j]));</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>if (p.first != i &amp;&amp; p.first != j &amp;&amp; p.second != i &amp;&amp; p.second != j)\nd = min(d, max(alice[i], alice[j]));</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>if (p.first != i &amp;&amp; p.first != j &amp;&amp; p.second != i &amp;&amp; p.second != j)\nd = min(d, min(alice[i], alice[j]));</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1659185,"option":"1","correct":true},{"id":1659186,"option":"2","correct":false},{"id":1659187,"option":"3","correct":false},{"id":1659188,"option":"4","correct":false}]},{"q":"<p>Bob loves to play with numbers but his favorite one is <em>0</em>. He was given an array of numbers and was asked to print the number of subarrays possible which sum up to 0.</p>\n\n<p><em>Example</em></p>\n\n<pre><em>Input:</em><strong> </strong>arr = [6, 3, -1, -3, 4, -2, 2, 4, 6, -12, -7]\n<em>Output:</em><strong> </strong> 5</pre>\n\n<pre class=\"prettyprint\"><code>int hacker(int arr[], int n)\n    unordered_map&lt;int, list&lt;int&gt; &gt; map\n\tint res=0\n\tint s= 0\n\tfor (int i = 0; i &lt; n; i++){\n\t  s += arr[i]\n\t  if (s == 0)\n\t\tres++;\n\t\tif (map.find(s) != map.end())\n\t\t list&lt;int&gt; l= map[s]\n\t\t //Line 6\n\t   map[s].push_back(i)\n\treturn res</code></pre>\n\n<p>He came up with the code, but some code in between went missing. Can you help him replace <em>//Line 6</em>&nbsp;from the given options?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>for (auto it = l.begin(); it != l.end(); it++)\nres++;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>for (auto it = l.begin(); it != l.end()-1; it++)\nres++;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>for (auto it = l.begin(); it != l.end(); it++)\nres+=2;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>for (auto it = l.begin(); it != l.end(); it++)\nres--;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1659030,"option":"1","correct":true},{"id":1659031,"option":"2","correct":false},{"id":1659032,"option":"3","correct":false},{"id":1659033,"option":"4","correct":false}]},{"q":"<p>Bob and&nbsp;his friends received an invitation to the party, but in order to go to that party they had to follow some rules which are:</p>\n\n<ol>\n\t<li>They could only go in pair</li>\n\t<li>The ages of the people in pair should add up to the given value.</li>\n</ol>\n\n<p><em>Example</em></p>\n\n<pre>Input: arr[] = {1, 5, 7, -1}, \n          sum = 6\nOutput: 2\nExplanation\nPairs with sum 6 are (1, 5) and (7, -1)\n</pre>\n\n<pre class=\"prettyprint\"><code>function Count(int a[], int n, int k)\n  unordered_map&lt;int, int&gt; m\n\tint c = 0\n\tfor (int i = 0; i &lt; n; i++) \n       //Line 6\n\t\tm[a[i]]++\n   return c\n</code></pre>\n\n<p>Bob came up with a solution but is somewhere missing the logic. Can you help him replace <em>//Line 6</em><strong>&nbsp;</strong>in&nbsp;the given code?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code> if (m.find(k - a[i]) != m.end()) \n            c+= m[k - a[i]];</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>if (m.find(k - a[i+1]) != m.end())\n            c+= m[k - a[i+1]];</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>if (m.find(k - a[i])== m.end())\n            c+= m[k - a[i]];</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>if (m.find(k) != m.end())\n        c+= m[k - a[i]];</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n</ol>","a":[{"id":1656061,"option":"1","correct":true},{"id":1656062,"option":"2","correct":false},{"id":1656063,"option":"3","correct":false},{"id":1656064,"option":"4","correct":false}]},{"q":"<p>Alice and his friends decided to live together for their studies. As they&nbsp;are of the same age, their books were of similar numbers. Alice decided to arrange the books based on the decreasing frequency of the books. Considering if more than one&nbsp;books have the same frequency then print the one which came first.&nbsp;</p>\n\n<p><strong>Example</strong></p>\n\n<p>Input: <em>book[] = {2, 5, 2, 8, 5, 6, 8, 8}</em></p>\n\n<p>Output: <em>book[] = {8, 8, 8, 2, 2, 5, 5, 6}</em></p>\n\n<p>As the book with number 8 has come thrice then it will come first, then books with number 2 and 5 have same frequency but book number 2 came first so it will be printed first and then 5, then at last book with number 6 and least frequency is printed.</p>\n\n<pre class=\"prettyprint\"><code>bool sorting(const pair&lt;int, int&gt;&amp; p,\n\t\t\t\t\tconst pair&lt;int, int&gt;&amp; q)\n{\nif (p.second == q.second)\n\treturn p.first &lt; q.first;\nreturn p.second &gt; q.second;\n}\nvector&lt;int&gt;sortf(int arr[], int n)\n{\nvector&lt;int&gt;res;\nunordered_map&lt;int, int&gt; m;\nvector&lt;pair&lt;int, int&gt; &gt; v;\nfor (int i = 0; i &lt; n; ++i) {\n\tm[arr[i]]++;\t\n}\ncopy(m.begin(), m.end(), back_inserter(v));\nsort(v.begin(), v.end(), sorting);\nfor (int i = 0; i &lt; v.size(); ++i)\n\twhile(v[i].second--){\n\t   res.push_back(v[i].first);\n\t}\nreturn res;\n}\nint main()\n{\nint arr[];\nres = sortf(arr, n);\nreturn 0;  \n}\n</code></pre>\n\n<p>Alice came up with a solution but he is not sure about its complexity. Can you help him find the complexity in this scenario?</p>\n\n<p>(<em>Note</em>: N&nbsp;is the total number of elements and M is the total number of distinct elements)</p>","a":[{"id":1656053,"option":"O(N)","correct":false},{"id":1656054,"option":"O(N+MlogM)  ","correct":true},{"id":1656055,"option":"O(M)","correct":false},{"id":1656056,"option":"O(MlogN)","correct":false}]}]