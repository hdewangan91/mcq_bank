[{"q":"<p>Mark is working on VueJS directives. He wants to use the v-bind directive. Then which of the following is the v-bind directive can he use in his single page application?</p>","a":[{"id":1725789,"option":".camel","correct":false},{"id":1725790,"option":".prop","correct":false},{"id":1725791,"option":".attr","correct":false},{"id":1725792,"option":"All the above","correct":true}]},{"q":"<p>Lisa is working on VueJS directives. She wants to use a directive that can&nbsp;attach an event listener to the element. And this event type should be&nbsp;denoted by its argument. Then which of the directive she can use?</p>","a":[{"id":1725785,"option":"v-html","correct":false},{"id":1725786,"option":"v-for","correct":true},{"id":1725787,"option":"v-class","correct":false},{"id":1725788,"option":"v-show","correct":false}]},{"q":"<p>John is working on VueJS directives. He is building a dynamic menu list. For that, he has a requirement to conditionally render that element based on the truthy-ness of the expression value. Also, the element and its contained directives should be destroyed when toggled. When clicked on it should be re-constructed. Then what can John use for this requirement?</p>","a":[{"id":1725781,"option":"v-if and v-show","correct":false},{"id":1725782,"option":"v-if and v-else","correct":false},{"id":1725783,"option":"v-modal and v-show","correct":false},{"id":1725784,"option":"v-if","correct":true}]},{"q":"<p>Mark is working on VueJS directives, he is using v-show to toggles the element's&nbsp;<code>display</code>&nbsp;CSS property. What does this directive expect?</p>","a":[{"id":1724513,"option":"String","correct":false},{"id":1724514,"option":"Number","correct":false},{"id":1724515,"option":"null","correct":false},{"id":1724516,"option":"All the above","correct":true}]},{"q":"<p>John is working on VueJS Directives. He is building single-file components. He tried to use&nbsp;scoped styles but it wouldn't&nbsp;apply to any content inside the v-html directive he used.&nbsp;This is because HTML is not processed by Vue's template compiler. So John&nbsp;wants to target v-html content with scoped CSS, then what can John do to force it?&nbsp;&nbsp;</p>","a":[{"id":1724509,"option":"using CSS modules","correct":false},{"id":1724510,"option":"making global <style> element ","correct":false},{"id":1724511,"option":"Using manual scoping strategy","correct":false},{"id":1724512,"option":"All the above","correct":true}]},{"q":"<p>Mark is working on VueJS directives. He is currently updating the element's innerHTML using components. He wants to update content using directives. Which of the options can Mark use to modify the innerHTML of an element?&nbsp;</p>","a":[{"id":1724477,"option":"v-class:html","correct":false},{"id":1724478,"option":"v-html","correct":true},{"id":1724479,"option":"v-if and v-else","correct":false},{"id":1724480,"option":"v-model","correct":false}]},{"q":"<p>John is working on VueJS Directives. What&nbsp;contents when inserted will not be compiled as Vue templates?</p>","a":[{"id":1724304,"option":"Custom Components","correct":false},{"id":1724305,"option":"Vue HTML","correct":false},{"id":1724306,"option":"Plain HTML","correct":true},{"id":1724307,"option":"Both 1 and 2","correct":false}]},{"q":"<p>Mark is working on Directives using VueJS. He wants to use a directive that can toggle&nbsp;the selected&nbsp;element's display CSS property based on the truthy-ness of the expression value. Which directive can he use to trigger the transitions when its condition is applied?</p>","a":[{"id":1723925,"option":"v-on","correct":false},{"id":1723926,"option":"v-show","correct":true},{"id":1723927,"option":"v-if and v-else","correct":false},{"id":1723928,"option":"v-toggle","correct":false}]},{"q":"<p>John is working on Directives in VueJS. He wants to conditionally render a custom element he built based on the truthy-ness of given the expression value. Also, he&nbsp;wants his elements and their components to be destroyed and re-constructed as it toggles. Therefore the element is similar to&nbsp;a &lt;template&gt; element and&nbsp;its content can be extracted through&nbsp;the conditional block and the last requirement is that the directive should trigger&nbsp;transitions when its condition changes. Then which of the directives given can John choose according to the given requirements?</p>","a":[{"id":1723181,"option":"v-if","correct":true},{"id":1723182,"option":"v-model","correct":false},{"id":1723183,"option":"v-on","correct":false},{"id":1723184,"option":"v-class:classname","correct":false}]},{"q":"<p>If the following script is used in your AngularJS application, which is a correct directive that can be used to get the value of the key used?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script type=\"text/javascript\"&gt;\n var app = angular.module('app', []);\n app.controller('controller', function ($scope) {\n $scope.getkeys = function (event) {\n $scope.keyValue = event.keyCode;\n }\n });\n &lt;/script&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719407,"option":"ng-key","correct":false},{"id":1719408,"option":"ng-keyup","correct":false},{"id":1719409,"option":"ng-keydown","correct":false},{"id":1719410,"option":"ng-keypress","correct":true}]},{"q":"<p>If the following snippet has been added to the HTML file, when will the content in the paragraph tag be displayed?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;input type=\"checkbox\" ng-model=\"show\" /&gt;\n &lt;p ng-show=\"show\"&gt; Some content in paragraph tag &lt;/p&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719403,"option":"When the checkbox is checked but will be displayed at the start of the application","correct":false},{"id":1719404,"option":"When the checkbox is unchecked but will be displayed at the start of the application","correct":false},{"id":1719405,"option":"When the checkbox is checked but will not be displayed at the start of the application","correct":true},{"id":1719406,"option":"When the checkbox is unchecked but will not be displayed at the start of the application","correct":false}]},{"q":"<p>You are using the AngularJS framework in which you have a division with an ng-app directive and you want a text field corresponding to a name label. As soon as the user types in the text field, the same text needs to be reflected in a paragraph tag. If you have the following snippet, what is the correct way to achieve the goal?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n &lt;body&gt;\n \n &lt;div ng-app=\"\"&gt;\n \n &lt;/div&gt;\n \n &lt;/body&gt;\n &lt;/html&gt;</code></pre>\n\n<p>&nbsp;<strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Name: &lt;input type=\"text\" ng-model=\"name\"&gt;&lt;/p&gt;\n &lt;p ng-bind=\"name\"&gt;&lt;/p&gt;</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Name: &lt;input type=\"text\" ng-model=\"bind\"&gt;&lt;/p&gt;\n &lt;p ng-bind=\"text\"&gt;&lt;/p&gt;</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Name: &lt;input type=\"bind\" ng-bind=\"name\"&gt;&lt;/p&gt;\n &lt;p ng-bind=\"name\"&gt;&lt;/p&gt;</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Name: &lt;input type=\"bind\" ng-bind=\"name\"&gt;&lt;/p&gt;\n &lt;p ng-value=\"name\"&gt;&lt;/p&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719351,"option":"1","correct":true},{"id":1719352,"option":"2","correct":false},{"id":1719353,"option":"3","correct":false},{"id":1719354,"option":"4","correct":false}]},{"q":"<p>You are initializing numbers in Angular JS for processing it further with expression. You are given the code you are using to initialize and process.<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n &lt;body&gt;\n &lt;div &lt;MISSING CODE&gt;=\"roll_no=13;marks=52:total_marks=60;\"&gt;\n &lt;h5&gt;Percentage of marks: {{ marks * 100/ total_marks }}&lt;/h5&gt;\n &lt;/div&gt;\n &lt;/body&gt;\n &lt;/html&gt;</code></pre>\n\n<p>What directive will you use in the MISSING CODE to initialize the variables?</p>","a":[{"id":1719315,"option":"ng-init","correct":true},{"id":1719316,"option":"ng-app","correct":false},{"id":1719317,"option":"ng-bind","correct":false},{"id":1719318,"option":"ng-model","correct":false}]},{"q":"<p>We extend the HTML attributes and bind data with Directives and Expressions to them in Angular JS. How would you bind the application data to the HTML controlâ€™s values like input?</p>","a":[{"id":1719299,"option":"Using ng-app","correct":false},{"id":1719300,"option":"Using ng-model","correct":true},{"id":1719301,"option":"Using ng-bind","correct":false},{"id":1719302,"option":"Using ng-init","correct":false}]},{"q":"<p>You want to mark the DOM elements like attributes, elements, and CSS, etc to develop new custom tags to be used in HTML to allow users to add new widgets. How would you enable users to use those tags?</p>","a":[{"id":1719295,"option":"Filters","correct":false},{"id":1719296,"option":"Directives","correct":true},{"id":1719297,"option":"Templates","correct":false},{"id":1719298,"option":"Routing","correct":false}]},{"q":"<p>You are developing an app using Angular JS. You have written the code-snippet provided alongside. A directive, known as ng-disabled, has been used in the code snippet. What is the purpose of the directive ng-disabled here? What kind of function does it perform primarily?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!doctype html&gt; \n&lt;html ng-app&gt; \n &lt;head&gt; \n &lt;title&gt;My Angular App&lt;/title&gt; \n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js\"&gt;&lt;/script&gt; \n&lt;/head&gt; \n &lt;body&gt; \n &lt;div ng-app=\"\" ng-init=\"Switch=true\"&gt; \n &lt;p&gt; \n &lt;input type=\"checkbox\" ng-model=\"Switch\" /&gt; \n &lt;/p&gt; \n &lt;p&gt; \n &lt;button ng-disabled=\"Switch\"&gt;Submit&lt;/button&gt; \n &lt;/p&gt; \n &lt;/div&gt; \n&lt;/body&gt; \n &lt;/html&gt;</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>In the given code-snippet, we have a checkbox and a button. If the checkbox is selected, the button is disabled. But, if we uncheck the checkbox then the button is enabled.<br>\n\tng- disabled directive is used to enable or disable HTML elements.</li>\n\t<li>In the given code-snippet we have a checkbox and a button. If the checkbox is not selected the button is disabled, but if we check the checkbox then the button is enabled.<br>\n\tng- disabled directive is used to enable or disable HTML elements.</li>\n\t<li>The button is enabled alternatively.<br>\n\tng- disabled directive is used to enable or disable HTML elements.</li>\n\t<li>In the given code-snippet we have a checkbox and a button. If the checkbox is selected, the button is disabled. But, if we uncheck the checkbox then the button is enabled.<br>\n\tng- disabled directive is used to only disable the HTML elements.</li>\n</ol>","a":[{"id":1654017,"option":"1","correct":true},{"id":1654018,"option":"2","correct":false},{"id":1654019,"option":"3","correct":false},{"id":1654020,"option":"4","correct":false}]},{"q":"<p>You are building an application in angular. You have to use the ng-repeat directive in your code. You have written the code given alongside.<br>\nWhat does this code represent?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;table class=\"table table-bordered\"&gt; \n &lt;tr ng-repeat=\"empin empDetails\"&gt; \n &lt;td&gt;{{emp.name}}&lt;/td&gt; \n &lt;td&gt;{{emp.salary}}&lt;/td&gt; \n &lt;/tr&gt; \n&lt;/table&gt;</code></pre>\n\n<p>Â </p>","a":[{"id":1654013,"option":"The above code is the basic way to use ng-repeat.","correct":false},{"id":1654014,"option":"Its the way to use the directive ng-repeat. Here, it helps to use the expressions listed in <td> tag repeatedly.","correct":false},{"id":1654015,"option":"Its the way to use ng-repeat with expressions. Here, it helps to use the expressions listed in <td> tag repeatedly.","correct":true},{"id":1654016,"option":"This code will give an error.","correct":false}]},{"q":"<p>You are coding in Angular. You are required to work with the two directives: ng-click and ng-include. There are two code sections that you have coded using ng-include and ng-click.Â What are the functions performed by ng-include and ng-click?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>I. &lt;button ng-click=\"count = count ++\"&gt;Click&lt;/button&gt;\n\nII. &lt;div ng-app = \"\" ng-controller = \"interviewController\"&gt;\n &lt;div ng-include = \"'first.htm'\"&gt;&lt;/div&gt;\n &lt;div ng-include = \"'phases.htm'\"&gt;&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>Ng-click directives can be used in a scenario when you have to click on the button or want to perform any operation.<br>\n\tNg-include includes all the modules that are to be used.</li>\n\t<li>Ng-click directives can be used in a scenario when you have to click on the button or want to perform any operation.<br>\n\tNg-include in AngularJS helps you to embed HTML pages within a single HTML page.</li>\n\t<li>Ng-click directives can be used in a scenario when you have to click on a dropdown menu.<br>\n\tNg-include in AngularJS helps you to embed HTML pages within a single HTML.</li>\n\t<li>Ng-click directives can be used in a scenario when you have to click on a dropdown menu.<br>\n\tNg-include includes all the modules that are to be used.</li>\n</ol>","a":[{"id":1654009,"option":"1","correct":false},{"id":1654010,"option":"2","correct":true},{"id":1654011,"option":"3","correct":false},{"id":1654012,"option":"4","correct":false}]},{"q":"<p>Suppose you are building an Angular app and you need to use directives during the process. A directive is something that introduces new syntax. Which of the following options is NOT a directive?</p>","a":[{"id":1654005,"option":"ng-model","correct":false},{"id":1654006,"option":"ng-App","correct":false},{"id":1654007,"option":"ng-serve","correct":false},{"id":1654008,"option":"ng-rebound","correct":true}]},{"q":"<p>You are creating an app using Angular. You have declared a directive in the code given alongside (<em>1<sup>st</sup></em> code section). You have built another directive which is given just below the <em>1<sup>st</sup></em> code.<br>\nWhat kind of scope has been used in the first code section? What is the output of the second code section?</p>\n\n<p><strong>Code 1</strong></p>\n\n<pre class=\"prettyprint\"><code>directive('testDirective', function() {\n return {\n scope: {},\n link: function(myScopeVar, elem,attr) {\n console.log(scope)\n }}\n})\n})</code></pre>\n\n<p><strong>Code 2</strong></p>\n\n<pre class=\"prettyprint\"><code> app.controller(â€˜myControllerâ€™,function(newScope)\n{\n})</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>In the first code section, a directive with an isolated scope is declared. The second code section, when executed will give an error.</li>\n\t<li>In the first code section, a directive with a $scope is declared. In the second code section, something must be declared as a heading or text. Otherwise, the code will not display anything.</li>\n\t<li>In the first code section, a directive with an isolated scope is declared. The second code section will output new scope.</li>\n\t<li>In the first code section, a directive with an isolated scope is used. The second code section will not display anything.</li>\n</ol>","a":[{"id":1654001,"option":"1","correct":true},{"id":1654002,"option":"2","correct":false},{"id":1654003,"option":"3","correct":false},{"id":1654004,"option":"4","correct":false}]}]