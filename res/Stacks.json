[{"q":"<p>In data structures, what is the time complexity of the following code:</p>\n\n<pre class=\"prettyprint\"><code>function Hackerearth(String str)\n  int n = length of str\n  Stack S\n  for i=0 to n\n    char ch = ith character of str\n      if (ch == '(')\n        push i into S\n       else if (ch == ')')\n\t\tif(top element of S == null)\n\t\t  return false\n\t\tpop element of S\n   return true</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1692129,"option":"O(log n)","correct":false},{"id":1692130,"option":"O(n)","correct":true},{"id":1692131,"option":"O(1)","correct":false},{"id":1692132,"option":"O(n log n)","correct":false}]},{"q":"<p>You are given an incorrect code for a data structures algorithm that is supposed to determine whether a sequence of parentheses is balanced or not. Which of the following unbalanced sequences are balanced in the provided code?</p>\n\n<p><strong>Incorrect code</strong></p>\n\n<pre class=\"prettyprint\"><code>function hacker(string s)\n{\ndeclare a character stack; \nwhile (s is not empty){    \n    read a character;    \n    if (the character is a '(') {\n        push it on the stack;   \n    }\n    else if (the character is a ')' and the stack is not empty)  {\n        pop a character off the stack;    \n    }\n    else {\n        print \"unbalanced\" and exit;\n    }\n}\nprint \"balanced\";\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1688893,"option":"((())","correct":true},{"id":1688894,"option":"())(()","correct":false},{"id":1688895,"option":"(()()))","correct":false},{"id":1688896,"option":"(()))()","correct":false}]},{"q":"<p>Consider the following code that does not contain some logical statements.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>For the input string=\"100 * ( 2 + 12 ) / 14\"\n\nint hack_apply(int a, int b, char op){\n  switch(op){\n\tcase '+': return a + b;\n\tcase '-': return a - b;\n\tcase '*': return a * b;\n\tcase '/': return a / b;\n\t}\n}\nint hack_prec(char op){\n\tif(op == '+'||op == '-')\n\treturn 1;\n\tif(op == '*'||op == '/')\n\treturn 2;\n\treturn 0;\n}\nint hack_eval(string str){\n\tint i;\n\tstack &lt;int&gt; valu;\n\tstack &lt;char&gt; ops;\n\tfor(i = 0; i &lt; str.length(); i++){\n\t  if(str[i] == ' ')\n\t\tcontinue;\n\t  //CODE_1\n\t  else if(isdigit(str[i])){\n\t\tint val = 0;\n\t  while(i &lt; str.length() &amp;&amp; isdigit(str[i])){\n\t\tval = (val*10) + (str[i]-'0');\n\t\ti++;\n\t\t}\n\t\tvalu.push(val);\n\t\ti--;\n\t\t}\n\t\telse if(str[i] == ')')\n\t\t{\n\t\t  while(!ops.empty() &amp;&amp; ops.top() != '(')\n\t\t    {\n\t\t\tint val2 = valu.top();\n\t\t\tvalu.pop();\n\t\t\tint val1 = valu.top();\n\t\t\tvalu.pop();\n\t\t\tchar op = ops.top();\n\t\t\tops.pop();\n\t\t\tvalu.push(hack_apply(val1, val2, op));\n\t\t\t}\n\t\t\tif(!ops.empty())\n\t\t\tops.pop();\n\t\t}\n\t\telse\n\t\t{\n\t\t  while(!ops.empty() &amp;&amp; hack_prec(ops.top())&gt;= hack_prec(str[i])){\n\t\t\t int val2 = valu.top();\n\t\t\t valu.pop();\n\t\t\t int val1 = valu.top();\n\t\t\t valu.pop();\n\t\t\t char op = ops.top();\n\t\t\t ops.pop();\n\t\t\t valu.push(hack_apply(val1, val2, op));\n\t\t\t}\n\t\t\tops.push(str[i]);\n\t\t}\n\t}\t\n   while(!ops.empty()){\n\t\tint val2 = valu.top();\n\t\tvalu.pop();\n\t\tint val1 = valu.top();\n\t\tvalu.pop();\n\t\tchar op = ops.top();\n\t\tops.pop();\n\t\tvalu.push(hack_apply(val1, val2, op));\n\t}\n\treturn valu.top();\n}</code></pre>\n\n<p>Which of these code statements will you use to replace CODE_1:</p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>else if(str[i] == '('){\nops.push(str[i]);\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>else if(str[i] == '('){\nops.pop(str[i]);\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>else if(str[i] == '('){\nops.push(str[i]);\nops.push(str[i+1]);\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>else if(str[i] == '('){\nops.push(str[i]);\nops.peek(str[i+1]);\n}</code></pre>\n\t</li>\n</ol>","a":[{"id":1685645,"option":"1","correct":true},{"id":1685646,"option":"2","correct":false},{"id":1685647,"option":"3","correct":false},{"id":1685648,"option":"4","correct":false}]},{"q":"<p>What is the output of the following C++ code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nvoid hack_print(int hack[], int n)\n{\n\tfor (int k = 1; k &lt;= n; k++) {\n\t\tint cal= INT_MIN;\n\t\tfor (int i = 0; i &lt;= n - k; i++) {\n\t\t\tint min = hack[i];\n\t\t\tfor (int j = 1; j &lt; k; j++) {\n\t\t\t\tif (hack[i + j] &lt; min)\n\t\t\t\t\tmin = hack[i + j];\n\t\t\t}\n\t\t\tif (min &gt; cal)\n\t\t\t\tcal= min;\n\t\t}\n\t\tcout &lt;&lt; cal&lt;&lt; \" \";\n\t}\n}\nint main()\n{\n\tint hack[] = { 10, 20, 30, 50, 10, 70, 30 };\n\tint n = sizeof(hack) / sizeof(hack[0]);\n\thack_print(hack, n);\n\treturn 0;\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>70 30 20 10 10 10 10 </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>10 30 10 20 10 10 70</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>70 30 10 10 10 10 10 </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>10 10 10 10 70 30 20</code></pre>\n\t</li>\n</ol>","a":[{"id":1685641,"option":"1","correct":true},{"id":1685642,"option":"2","correct":false},{"id":1685643,"option":"3","correct":false},{"id":1685644,"option":"None of these","correct":false}]}]