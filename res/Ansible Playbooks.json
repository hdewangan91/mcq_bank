[{"q":"<p>In Ansible, you are working on the Continuous delivery and the rolling upgrades in the Ansible Playbooks. If you are iterate over each monitoring server and load balancer, and perform that operation on the monitoring or load balancing server, on behalf of the webserver, then which of the following combination of arguments should be implemented in this scenario?</p>","a":[{"id":1534424,"option":"pre_tasks and delegate_to","correct":false},{"id":1534425,"option":"pre_tasks and with_items","correct":false},{"id":1534426,"option":"delegate_to and with_items","correct":true},{"id":1534427,"option":"pre_tasks and loop","correct":false}]},{"q":"<p>Which of the following Action plug-ins would you use to check if the values in the playbook satisfies the given criteria?</p>","a":[{"id":1534496,"option":"assert","correct":true},{"id":1534497,"option":"debug","correct":false},{"id":1534498,"option":"normal","correct":false},{"id":1534499,"option":"test","correct":false}]},{"q":"<p><strong>Scenario: </strong></p>\n\n<p>You want to execute the role dependencies. There are two roles that list the third role as a dependency.</p>\n\n<p><strong>Problem Statement:</strong></p>\n\n<p>You want Ansible to run the role more than once for all the roles without any tag and without when clause. How would you achieve it?</p>","a":[{"id":1534440,"option":"Use allow_duplicates: true in the dependent (third) role","correct":true},{"id":1534441,"option":"Mention the role in the import tag","correct":false},{"id":1534442,"option":"Store the role in meta/main.yml file.","correct":false},{"id":1534443,"option":"Add a variable to an import_role statement","correct":false}]},{"q":"<p>Consider the given code.</p>\n\n<pre class=\"prettyprint\"><code>- hosts: webservers \n    tasks: \n        - name: 1st task \n        ansible.builtin.debug: \n        msg: \"Before role\" \n        - name: 2nd task \n        import_role: name: example \n        - name: 3rd task \n        ansible.builtin.debug: \n        msg: \"After role\" </code></pre>\n\n<p><strong>Problem Statement: </strong></p>\n\n<p>Which of the following options correctly depicts the use of the above code?</p>","a":[{"id":1534436,"option":"Changing the behaviour of the tasks","correct":false},{"id":1534437,"option":"Importing role for Changing role controls","correct":false},{"id":1534438,"option":"Importing roles for static reuse","correct":true},{"id":1534439,"option":"Exporting System files with tasks","correct":false}]},{"q":"<p>You want to pass parameters in the role with messages. Which of the following codes would you use?</p>","a":[{"id":1534432,"option":"roles{ Bar, message =”1stTest”; Foo, message =”2ndTest”; }","correct":false},{"id":1534433,"option":"roles: -bar, vars: { message: \"Test1\" } -foo, vars: { message: \"Test2\" }","correct":false},{"id":1534434,"option":"roles{ Bar: message =”1stTest”; Foo: message =”2ndTest”; }","correct":false},{"id":1534435,"option":"roles: - { role: bar, vars: { message: \"Test1\" } } - { role: foo, vars: { message: \"Test2\" } }","correct":true}]},{"q":"<p>You want that the roles can be used dynamically, anywhere in the tasks section of the play. What would you do to ensure this?</p>","a":[{"id":1534428,"option":"Mark the host as Webservers","correct":false},{"id":1534429,"option":"Set the task level as include_role","correct":true},{"id":1534430,"option":"Set the task level as import_role","correct":false},{"id":1534431,"option":"Make the roles common","correct":false}]},{"q":"<p>Which of the following functions would you use to trigger playbook runs using the ansible-playbook command line tool in Red Hat Ansible tower?</p>","a":[{"id":1534420,"option":"tower-cli","correct":true},{"id":1534421,"option":"cli_jenkins_t","correct":false},{"id":1534422,"option":"cli -t","correct":false},{"id":1534423,"option":"local_action -t","correct":false}]},{"q":"<p>Where are the variables stored which are applied to server groups to configure the behaviour and easily tweak the settings and parameters?</p>","a":[{"id":1534416,"option":"dbserver","correct":false},{"id":1534417,"option":"group_vars","correct":true},{"id":1534418,"option":"server_vars","correct":false},{"id":1534419,"option":"db_store","correct":false}]}]