[{"q":"<p>Alice is working on the Garbage Collector (GC) to&nbsp;manage the allocation and release of memory in her .NET Core application. Which of the following statements represent the advantages of implementing the Garbage Collection:</p>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>When objects are no longer used then this Garbage Collection&nbsp;will remove those objects automatically by clearing their memory and removing it for future allocations.</li>\n\t<li>Garbage Collection&nbsp;provides safety to the memory by confirming that the object cannot use the content of another object.</li>\n\t<li>Garbage Collection's object allocation on the heap is very effective.</li>\n</ol>","a":[{"id":1727860,"option":"1 and 2","correct":false},{"id":1727861,"option":"2 and 3","correct":true},{"id":1727862,"option":"1 and 3","correct":false},{"id":1727863,"option":"All of these","correct":false}]},{"q":"<p>In Java, you are working on the garbage collections. If you are required to execute the following code, then which of the following statements about this code are correct:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Main\n{\n    public static void main(String[] args) throws InterruptedException\n    {\n        Main hack1 = new Main();\n        Main hack2 = new Main();\n        hack1 = null;\n        System.gc();\n        hack2 = null;\n        Runtime.getRuntime().gc();\n    }\n      \n    @Override\n    protected void finalize() throws Throwable\n    {\n        System.out.println(\"Hello HackerEarth!\");\n    }\n}</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>System class contains a dynamic method gc() for requesting JVM to run Garbage Collector.</li>\n\t<li>Runtime class allows the application to interface with the JVM in which the application is running.</li>\n\t<li>System class contains a static method gc() for requesting JVM to run Garbage Collector\n\t<ol>\n\t</ol>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1574965,"option":"1 and 2","correct":false},{"id":1574966,"option":"2 and 3","correct":true},{"id":1574967,"option":"Only 2","correct":false},{"id":1574968,"option":"None of these","correct":false}]},{"q":"<p>In C++, which of the following describes the <strong>Garbage collection?</strong></p>","a":[{"id":133470,"option":"Manual memory management  ","correct":false},{"id":133471,"option":"Automatic memory management  ","correct":true},{"id":133472,"option":"Variable replacing technique","correct":false},{"id":133473,"option":"None of these","correct":false}]},{"q":"<p>In C#, you are working on Object-Oriented Programming. You have a class and one of its instances is being collected by the garbage collector. Now, in order to perform the necessary final clean-up when the class instance is being collected by the garbage collector, you have made a call to the finalizer as shown in the code snippet given below. Now which of the following code snippets represents the implicit translation of call to the finalizer when the&nbsp;finalizer implicitly calls Finalize on the base class of the object?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Destroyer\n{\n    public override string ToString() =&gt; GetType().Name;\n    ~Destroyer() =&gt; Console.WriteLine($\"The {ToString()} destructor is executing.\");\n}</code></pre>\n\n<p><strong>Code Snippets</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>protected override void Finalize() \n{ \n    try \n    {   \n    } \n    finally \n    { \n        base.Finalize(); \n    } \n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>class Destroyer\n{\n    ~Destroyer() \n    {  \n    }\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>~Destroyer()\n{ \n    try \n    {  \n    } \n    finally \n    { \n        base.Finalize(); \n    } \n}</code></pre>\n\t</li>\n</ol>","a":[{"id":1419547,"option":"1","correct":true},{"id":1419548,"option":"2","correct":false},{"id":1419549,"option":"3","correct":false},{"id":1419550,"option":"Both 2 and 3","correct":false}]},{"q":"<p>Which of these statements about the following Java code are valid:</p>\n\n<ol>\n\t<li>finalize() is guaranteed to be called.</li>\n\t<li>finalize() might or might not be called.</li>\n\t<li>Garbage collection might or might not run.</li>\n\t<li>Garbage collection is guaranteed to run.</li>\n</ol>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth \n{\n\tprotected void finalize() \n\t{\n\t\tSystem.out.println(\"Coding!\");\n\t}\n\npublic static void main(String[] args)\n{\n\tHackerEarth hacker = new HackerEarth();\n\thacker = null;\n\tSystem.gc();\n} \n}</code></pre>\n\n<p> </p>","a":[{"id":677523,"option":"1 and 3","correct":false},{"id":677524,"option":"2 and 3","correct":true},{"id":677525,"option":"1 and 4","correct":false},{"id":677526,"option":"2 and 4","correct":false}]}]