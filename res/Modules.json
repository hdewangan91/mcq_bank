[{"q":"<p>You are trying to follow through on a URL that redirects you to another page using the nodejs request module like:</p>\n\n<pre class=\"prettyprint\"><code>request( options, function(error, response, body) {\n                console.log( response );\n});</code></pre>\n\n<p>You need to retrieve the URL after the redirect. What should you do in order to retrieve the URL?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>var url = 'some_url';\nrequest({ url: url, followRedirect: false }, function (err, res, body) {\n  console.log(res.headers.location);\n});</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>var r = request(url, function (e, response) {\n  r.uri\n  response.uri\n})</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>var r = request(url, function (e, response) {\n  r.uri\n  response.request.uri\n})</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>var url = 'some_url';\nrequest({ url: url, followRedirect: true }, function (err, res, body) {\n  console.log(res.headers.location);\n});</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654269,"option":"1","correct":false},{"id":1654270,"option":"2","correct":false},{"id":1654271,"option":"3","correct":true},{"id":1654272,"option":"4","correct":false}]},{"q":"<p>You are trying to create a nodeJS module that contains multiple functions in it. You try doing that by doing the following:<br>\nmodule.exports = function(firstParam) { console.log(\"Some_Text\"); },<br>\nmodule.exports = function(secondParam) { console.log(\"Some_Text\")},<br>\nAs the firstParam is an object type and the secondParam is a URL string, it always complains that the type is wrong.<br>\nWhat could be the best possible way to declare multiple module.exports in this scenario?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>const foo = function(&lt;params&gt;) { ... }\nconst bar = function(&lt;params&gt;) { ... } \nmodule.exports = {\n    foo,\n    bar \n}\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>module.exports = {\n   function1,\n   function2,\n   function3\n}\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>You can do something like:\nmodule.exports = {\n    method: function() {},\n    otherMethod: function() {},\n};</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>module.exports = function ( firstArg, secondArg ) {\n    function firstFunction ( ) { ... }\n    function secondFunction ( ) { ... }\n    function thirdFunction ( ) { ... }\n}</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654265,"option":"1","correct":false},{"id":1654266,"option":"2","correct":false},{"id":1654267,"option":"3","correct":true},{"id":1654268,"option":"4","correct":false}]},{"q":"<p>You are working on a nodeJS module such that:<br>\nvar b = require('./b.js');<br>\n--- do something with b ---<br>\nNow, you need to clean up the cache from module b. You need to do it in such a way that when you remove or update the module, you need not restart the node server. What could be the best possible way to dynamically remove or update the module without restarting the server?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>You can use this to delete its entry in the cache: delete require.cache[require.resolve('./b.js')]</li>\n\t<li>You can use this to delete its entry in the cache: delete require.cache[require('./b.js')]</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>for (const path in require.cache) {\n if (path.endsWith('.js')) { \n    delete require.cache[path]\n    }\n}</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>You can loop for it like:\nfor (const path in require.cache) {\n if (path.endsWith('.js')) { \n    delete require.resolve.cache[path]\n    }\n}</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654261,"option":"1","correct":true},{"id":1654262,"option":"2","correct":false},{"id":1654263,"option":"3","correct":false},{"id":1654264,"option":"4","correct":false}]},{"q":"<p>While exploring nodeJS, you came across the underscore library. But when you try to use a function from Underscore, it overwrites the _ object with the result of your function call. What could be the possible reason for this?<br>\n </p>","a":[{"id":1654257,"option":"You may have overridden Node's \"_\" value just for the immediately following operation.","correct":false},{"id":1654258,"option":"You need to use _.isArray([]) to make it work for the next line.","correct":false},{"id":1654259,"option":"The following \"_\" only works for the next line of code. You can not use it further.","correct":false},{"id":1654260,"option":"The name \"_\" is used by the node.js to hold the previous input.","correct":true}]},{"q":"<p>While installing an npm module, you are getting a particular kind of error. You double-checked the commands and since it starts with sudo (admin), so, you do have access, but the error is showing otherwise. You tried restarting your system, but nothing improved.<br>\nWhat could be the possible reason for throwing such an error?</p>","a":[{"id":1654253,"option":"You need to remove permission in the node_modules directory and reclaim the ownership.","correct":false},{"id":1654254,"option":"You need to reclaim ownership of the .npm directory.","correct":true},{"id":1654255,"option":"You need to change the ownership of the directory to the root.","correct":false},{"id":1654256,"option":"You need to give full permission to the node modules folder.","correct":false}]},{"q":"<p>You have made a login application in Angular, for a user to log in. You want to add features to it and make the webpage look more appealing. Therefore, you use an animation module to do the same. In the code section, the steps are given to use the animation module. Reassemble the steps to form a correct sequence.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>I. Adding the animation metadata property :\n@Component({\n selector: 'app-root',\n templateUrl: 'app.component.html',\n styleUrls: ['app.component.css'],\n animations: [\n // animation triggers go here\n ]\n})\nII. Enabling the animations module :\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n imports: [\n BrowserModule,\n BrowserAnimationsModule\n ],\n declarations: [ ],\n bootstrap: [ ]\n})\nexport class AppModule { }\nIII. Importing animation functions into component files :\nimport {\n trigger,\n state,\n style,\n animate,\n transition,\n // ...\n} from '@angular/animations';</code></pre>\n\n<p> </p>","a":[{"id":1654025,"option":"I -> II -> III","correct":false},{"id":1654026,"option":"II -> III -> I","correct":true},{"id":1654027,"option":"III -> I -> II","correct":false},{"id":1654028,"option":"II -> I -> III","correct":false}]},{"q":"<p>The <strong>_ansible_syslog_facility </strong>is used to check the syslog facility ansible module logs to. You can change the syslog_facility value in ansible.cfg. Previously, we used to instantiate an AnsibleModule as:</p>\n\n<pre class=\"prettyprint\"><code>import syslog syslog.openlog(NAME, 0, syslog.LOG_USER)</code></pre>\n\n<p>However, in newer versions like 2.1, we write it as:</p>\n\n<pre class=\"prettyprint\"><code>import syslog facility_name = module._syslog_facility facility = getattr(syslog, facility_name, syslog.LOG_USER) syslog.openlog(NAME, 0, facility)</code></pre>\n\n<p>What could be the primary reason for this modification in the code?</p>","a":[{"id":1534512,"option":"The newer code is more efficient","correct":false},{"id":1534513,"option":"The old code was very hacky","correct":true},{"id":1534514,"option":"The old code consumes a lot of memory","correct":false},{"id":1534515,"option":"The newer code runs with lessor parameters","correct":false}]},{"q":"<p>What does Ansible use to check if the interpreter in the shebang line has a path which is specified to make modifications to all the available modules?</p>","a":[{"id":1534500,"option":"Module Replacer","correct":false},{"id":1534501,"option":"utils.MOD variable","correct":false},{"id":1534502,"option":"ansible_$X_interpreter inventory variable","correct":true},{"id":1534503,"option":"powercell_common","correct":false}]},{"q":"<p>You have made a GET request to retrieve a list of inventory sources as:</p>\n\n<pre class=\"prettyprint\"><code>GET /api/v1/inventory_sources/ HTTP 200 OK Content-Type: application/json Vary: Accept Allow: GET, HEAD, OPTIONS X-API-Time: 0.053s</code></pre>\n\n<p>What will the resulting data structure contain?</p>","a":[{"id":1534492,"option":"{\"count\": 100, \"next\": uri, \"previous\": null, \"results\": [] }","correct":false},{"id":1534493,"option":"{\"count\": 100, “source”:ec2 \"previous\": null, \"results\": [] }","correct":false},{"id":1534494,"option":"{\"count\": 99, \"next\": null, \"previous\": null, \"results\": [] }","correct":true},{"id":1534495,"option":"{\"count\": 99, “api”: GET, “next”: null, \"previous\": null, \"results\": [] }","correct":false}]},{"q":"<p>You want to check out the Ansible Tower REST API in your computer browser to access the resources by URI path. What would you visit?</p>","a":[{"id":1534476,"option":"http://<Tower server name>/resources/api/","correct":false},{"id":1534477,"option":"http://localhost/5000/resources/api/","correct":false},{"id":1534478,"option":"http://<Tower server name>/api/","correct":true},{"id":1534479,"option":"http://localhost/5000/<Tower server name>/api/","correct":false}]},{"q":"<p>Which of the following files would you use to configure your private key and certificate chain file that will be used for SSL client authentication?</p>","a":[{"id":1534472,"option":"client_key file","correct":false},{"id":1534473,"option":"client_cert file","correct":true},{"id":1534474,"option":"encode_key file","correct":false},{"id":1534475,"option":"client_path file","correct":false}]},{"q":"<p>The body parameter corresponds to the body of the http request/response for a webs service. What exact syntax would you use to convert a data structure into JSON?</p>","a":[{"id":1534468,"option":"body_format","correct":true},{"id":1534469,"option":"body_parameter","correct":false},{"id":1534470,"option":"attr","correct":false},{"id":1534471,"option":"json_convert","correct":false}]},{"q":"<p>What would you use to define a specific failure criteria for tasks?</p>","a":[{"id":1534464,"option":"try catch","correct":false},{"id":1534465,"option":"failed_when","correct":true},{"id":1534466,"option":"error try","correct":false},{"id":1534467,"option":"return try","correct":false}]},{"q":"<p> Assume that you have installed the Formidable module by using the following command. If you are required to upload a file to your computer, then which of the following statements about the following Node.js code are correct:</p>\n\n<p>Assume that you have executed this code by using the URL http://localhost:8080/</p>\n\n<p><strong>Command</strong></p>\n\n<pre class=\"prettyprint\"><code>npm install formidable</code></pre>\n\n<p><strong>Node.js code</strong> </p>\n\n<pre class=\"prettyprint\"><code>var hackvar1 = require('http');\nvar hackvar2 = require('formidable');\nhackvar1.createServer(function (req, res) {\n  if (req.url == '/fileupload') {\n    var hackvar3 = new hackvar2.IncomingForm();\n\thackvar3.parse(req, function (err, fields, files) {\n  \tres.write('File uploaded');\n  \tres.end();\n\t});\n  } else {\n    res.writeHead(200, {'Content-Type': 'text/html'});\n    res.write('&lt;form action=\"fileupload\" method=\"post\" enctype=\"multipart/form-data\"&gt;');\n    res.write('&lt;input type=\"file\" name=\"filetoupload\"&gt;&lt;br&gt;');\n    res.write('&lt;input type=\"submit\"&gt;');\n    res.write('&lt;/form&gt;');\n    return res.end();\n  }\n}).listen(8080);\n</code></pre>\n\n<p> </p>","a":[{"id":1302491,"option":"This code is used to create an upload form which is further used in parsing the uploadable file.","correct":true},{"id":1302492,"option":"This code is used to parse the uploadable file.","correct":false},{"id":1302493,"option":"Both of these","correct":false},{"id":1302494,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about loading an Angular module are correct?</p>\n\n<ol>\n\t<li>If modules are loaded on-demand, then it is called lazy loading.</li>\n\t<li>In lazy loading, modules are loaded asynchronously.</li>\n\t<li>In lazy loading, modules must be imported into the application module.</li>\n</ol>","a":[{"id":642892,"option":"1 and 2 only","correct":true},{"id":642893,"option":"1 and 3 only","correct":false},{"id":642894,"option":"2 and 3 only","correct":false},{"id":642895,"option":"All of these","correct":false}]},{"q":"<p>Which of these is not a property of the Angular 2 module?</p>","a":[{"id":387247,"option":"Bootstrap","correct":false},{"id":387248,"option":"Export","correct":false},{"id":387249,"option":"Import","correct":false},{"id":387250,"option":"Object","correct":true}]},{"q":"<p>In Angular 2, which of the following properties is used to create a module?</p>","a":[{"id":388078,"option":"Bootstrap array and directives","correct":false},{"id":388079,"option":"Bootstrap array and import wizard","correct":false},{"id":388080,"option":"Bootstrap array, import array, and export array","correct":true},{"id":388081,"option":"Bootstrap wizard","correct":false}]}]