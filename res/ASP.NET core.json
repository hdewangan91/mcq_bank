[{"q":"<p>John is workinh in ASP.NET framework. He is writing his own extension method for a logger. He is also required&nbsp;to call the appropriate Log method for the LogLevel&nbsp;that is provided. In the production environment, which of the following log levels must be disabled to restrict messages or calls to a method?</p>","a":[{"id":738193,"option":"0","correct":true},{"id":738194,"option":"1","correct":false},{"id":738195,"option":"2","correct":false},{"id":738196,"option":"3","correct":false}]},{"q":"<p>In ASP.NET Core, which of the following statements about implementing the&nbsp;ConfigureServices method:</p>\n\n<ol>\n\t<li>It is optional.</li>\n\t<li>It is called by the host before the Configure method to configure the application's services.</li>\n\t<li>It is called by the host after the Configure method to configure the application's services</li>\n\t<li>It is compulsory.</li>\n</ol>","a":[{"id":738309,"option":"1 and 2","correct":true},{"id":738310,"option":"1 and 3","correct":false},{"id":738311,"option":"2 and 3","correct":false},{"id":738312,"option":"2 and 4","correct":false}]},{"q":"<p>John is working with ASP.NET templates to configure pipelines. He wants to use the configure method to specify how an&nbsp;application responds to HTTP requests then which of these can be used for configuration in this scenario?</p>\n\n<ol>\n\t<li>Developer Exception Page</li>\n\t<li>Exception handler</li>\n\t<li>Static files</li>\n</ol>","a":[{"id":738157,"option":"Only 1 and 2","correct":false},{"id":738158,"option":"Only 1 and 3","correct":false},{"id":738159,"option":"Only 2 and 3","correct":false},{"id":738160,"option":"All of these","correct":true}]},{"q":"<p>John is working in ASP.NET Core framework and implementing services in the same. Then which&nbsp;of the following statements is/are true while implementing the services?</p>\n\n<ol>\n\t<li>Singleton services need to be thread safe.</li>\n\t<li>The factory method of single service&nbsp;does not need to be thread safe.</li>\n</ol>","a":[{"id":738173,"option":"1","correct":false},{"id":738174,"option":"2","correct":false},{"id":738175,"option":"Both 1 and 2","correct":true},{"id":738176,"option":"None of these","correct":false}]},{"q":"<p>In ASP.NET Core, the <strong>IHostedService</strong> interface provides hosted services. Which of the following&nbsp;is not a valid service that is provided by the interface:</p>\n\n<ol>\n\t<li>Background tasks that run on a timer</li>\n\t<li>Hosted services that activate&nbsp;scoped services where the scoped service can use dependency injection</li>\n\t<li>Queued background tasks that run non-sequentially<br>\n\t&nbsp;</li>\n</ol>","a":[{"id":738349,"option":"1","correct":false},{"id":738350,"option":"3","correct":true},{"id":738351,"option":"1 and 2","correct":false},{"id":738352,"option":"2 and 3","correct":false}]},{"q":"<p>In ASP.NET Core, which of the following is not a valid step to install the WebSocket protocol:</p>\n\n<ol>\n\t<li>Install the Microsoft.AspNetCore.WebSockets package</li>\n\t<li>Configure the middleware</li>\n\t<li>Accept WebSocket requests</li>\n\t<li>Send and receive messages</li>\n</ol>","a":[{"id":738345,"option":"1","correct":false},{"id":738346,"option":"2","correct":false},{"id":738347,"option":"All of these","correct":false},{"id":738348,"option":"None of these","correct":true}]},{"q":"<p>Which of the following external tools is used to check the&nbsp;performance of ASP.NET Core applications:</p>\n\n<ol>\n\t<li>MiniProfiler</li>\n\t<li>dotTrace</li>\n\t<li>dotMemory</li>\n\t<li>VTune from Intel</li>\n</ol>","a":[{"id":738337,"option":"1, 2, and 3","correct":false},{"id":738338,"option":"2, 3, and 4","correct":false},{"id":738339,"option":"1, 3, and 4","correct":false},{"id":738340,"option":"All of these","correct":true}]},{"q":"<p>You are required&nbsp;to automatically validate <strong>antiforgery</strong> tokens for unsafe HTTP methods only. Which of these <strong>antiforgery</strong> tokens are not generated for safe HTTP methods by ASP.NET Core applications:</p>\n\n<ol>\n\t<li>GET</li>\n\t<li>TRACE</li>\n\t<li>OPTIONS</li>\n\t<li>HEAD</li>\n</ol>","a":[{"id":738329,"option":"1, 2, and 3","correct":false},{"id":738330,"option":"2, 3, and 4","correct":false},{"id":738331,"option":"1, 2, and 4","correct":false},{"id":738332,"option":"All of these","correct":true}]},{"q":"<p>John is working in ASP.NET for his clients and dealing with handling of errors. He are required&nbsp;to handover the control to the error handling endpoint (which is provided in the URL template) when there is some HTTP error. Then, which of these extensions should he use to perform the mentioned task?</p>\n\n<p>&nbsp;</p>","a":[{"id":738201,"option":"UseStatusCodePagesWithRedirects","correct":true},{"id":738202,"option":"UseStatusCodePagesWithReExecute","correct":false},{"id":738203,"option":"UseStatusCodePagesWithReplaces","correct":false},{"id":738204,"option":"UseStatusCodePagesWithRemit","correct":false}]},{"q":"<p>John is working in ASP.NET and is wondering which of the following method(s) is/are used to configure exception filters:</p>\n\n<ol>\n\t<li>Globally in an MVC application</li>\n\t<li>A per-controller basis in an MVC application</li>\n\t<li>A per-action basis in an MVC application</li>\n</ol>","a":[{"id":738209,"option":"1 and 2","correct":false},{"id":738210,"option":"2 and 3","correct":false},{"id":738211,"option":"1 and 3","correct":false},{"id":738212,"option":"All of these","correct":true}]},{"q":"<p>Consider the following statements in respect to ASP.NET. Then, which of these observations about these statements is/are correct?</p>\n\n<ul>\n\t<li>Statement 1: Applications should choose a basic and descriptive routing scheme.</li>\n\t<li>Statement 2: A basic and descriptive routing scheme&nbsp;must be selected&nbsp;so that URLs are readable and meaningful.&nbsp;</li>\n</ul>","a":[{"id":738221,"option":"Both the statements are true","correct":false},{"id":738222,"option":"Both the statements are false","correct":false},{"id":738223,"option":"Statement 1 is true and statement 2 is the correct explanation for statement 1","correct":true},{"id":738224,"option":"Statement 1 is true and statement 2 is not the correct explanation for statement 1","correct":false}]},{"q":"<p>You are configuring a custom exception handling page in the ASP.NET Core framework. The application is not running in the development environment and so you add an exception handling middleware to the application. Which of the following&nbsp;functions are performed by&nbsp;the middleware handle:</p>\n\n<ol>\n\t<li>Catches exceptions</li>\n\t<li>Logs exceptions</li>\n\t<li>Reimplement&nbsp;the request in an alternate pipeline for the page or controller that has been indicated</li>\n</ol>","a":[{"id":738249,"option":"1 and 2","correct":false},{"id":738250,"option":"2 and 3","correct":false},{"id":738251,"option":"1 and 3","correct":false},{"id":738252,"option":"All of these","correct":true}]},{"q":"<p>You are required to use <strong>Kestrel</strong> that is a cross-platform web server for the ASP.NET Core framework. The implementation of this web server requires a set of features that must be supported by the server that you are selecting in your application. Which of the following features must be supported by the implementation of the Kestrel server:</p>\n\n<ol>\n\t<li>HTTPS</li>\n\t<li>Opaque upgrade that is&nbsp;used to enable the&nbsp;WebSocket protocol</li>\n\t<li>Unix sockets for high performance behind the Nginx server</li>\n\t<li>HTTP/2</li>\n</ol>","a":[{"id":738321,"option":"1 and 2","correct":false},{"id":738322,"option":"1, 2, and 3","correct":false},{"id":738323,"option":"2, 3, and 4","correct":false},{"id":738324,"option":"All of these","correct":true}]},{"q":"<p>You are building an Entity Framework Web App in ASP.NET MVC 5. You are creating a new page that updates the number of credits of all courses in the database. What can you use in place of XXX for calling a query that returns entities?</p>\n\n<pre class=\"prettyprint\"><code>public async Task&lt;ActionResult&gt; Details(int? id)\n{\n if (id == null)\n {\n return new HttpStatusCodeResult(HttpStatusCode.BadRequest);\n }\n XXX\n if (department == null)\n {\n return HttpNotFound();\n }\n return View(department);\n}</code></pre>\n\n<p>Â </p>","a":[{"id":1418912,"option":"string query = \"SELECT * FROM Department WHERE DepartmentID = @p0\";\r\nDepartment department = await db.Departments.SqlQuery(query, id);","correct":false},{"id":1418913,"option":"string query = \"SELECT * FROM Department WHERE DepartmentID = @p0\";\r\nDepartment department = Departments.SqlQuery(query, id).SingleOrDefaultAsync();","correct":false},{"id":1418914,"option":"string query = \"SELECT * FROM Department WHERE DepartmentID = @p0\";\r\nDepartment department = await db.SqlQuery(query, id);","correct":false},{"id":1418915,"option":"string query = \"SELECT * FROM Department WHERE DepartmentID = @p0\";\r\nDepartment department = await db.Departments.SqlQuery(query, id).SingleOrDefaultAsync();","correct":true}]},{"q":"<p>You are using generics in ASP.NET to Improve Application Maintainability of the application you have built. You want to move the data independent logic from the PdfContentExtractor and TextContentExtractor classes to data object PdfDocument and TextDocument classes, respectively. What can you use in place of XXX to successfully complete the action mentioned in the above context?</p>\n\n<pre class=\"prettyprint\"><code>public interface IDocument\n{\n string GetIdentifier();\n byte[] GetBinaryContent();\n StoredDocumentType GetTypeForStore();\n}\npublic class TextDocument : IDocument\n{\n public string Identifier { get; }\n public string Content { get; } \n public string GetIdentifier() =&gt; Identifier;\n public byte[] GetBinaryContent() =&gt; Encoding.UTF8.GetBytes(Content);\n public StoredDocumentType GetTypeForStore() =&gt; StoredDocumentType.PlainText;\n}\npublic class PdfDocument : IDocument\n{\n public string Identifier { get; }\n XXX\n public byte[] GetBinaryContent()\n {\n }</code></pre>\n\n<p>Â </p>","a":[{"id":1418907,"option":"public string GetIdentifier() = Identifier;","correct":false},{"id":1418908,"option":"public GetIdentifier() => Identifier;","correct":false},{"id":1418909,"option":"public string GetIdentifier() => Identifier;","correct":true},{"id":1418910,"option":"None of these","correct":false}]},{"q":"<p>You are building an Entity Framework MVC App using asynchronous code in ASP.NET. You prefer to use stored procedures for database access. What can you use in place of XXX to the OnModelCreating method to successfully complete the action in the above context?</p>\n\n<pre class=\"prettyprint\"><code>protected override void OnModelCreating(DbModelBuilder modelBuilder)\n{\n modelBuilder.Conventions.Remove&lt;PluralizingTableNameConvention&gt;();\n modelBuilder.Entity&lt;Course&gt;()\n .HasMany(c =&gt; c.Instructors).WithMany(i =&gt; i.Courses)\n .Map(t =&gt; t.MapLeftKey(\"CourseID\")\n .MapRightKey(\"InstructorID\")\n .ToTable(\"CourseInstructor\"));\n XXX\n}</code></pre>\n\n<p>Â </p>","a":[{"id":1418902,"option":"modelBuilder.Entity<>().MapToStoredProcedures();","correct":false},{"id":1418903,"option":"modelBuilder<Department>().MapToStoredProcedures();","correct":false},{"id":1418904,"option":"modelBuilder.Entity<Department>().StoredProcedures();","correct":false},{"id":1418905,"option":"modelBuilder.Entity<Department>().MapToStoredProcedures();","correct":true}]},{"q":"<p>You want to enable connection resiliency and command interception with Entity Framework in an ASP.NET MVC application.<br>\nIn the given scenario, you should create a class in your assembly that is derived from which of these classes?</p>","a":[{"id":1418897,"option":"DbConfiguration","correct":true},{"id":1418898,"option":"Connection","correct":false},{"id":1418899,"option":"Schema","correct":false},{"id":1418900,"option":"DbResiliency","correct":false}]},{"q":"<p>You are required to modify request URLs based on one or more predefined rules andÂ create an abstraction between resource locations and their addresses. Which of the following scenarios demands you to perform URL rewriting while performing this operation in the ASP.NET Core framework:</p>\n\n<ol>\n\t<li>Move or replace server resources temporarily or permanently and maintain stable locators for these resources</li>\n\t<li>Split the process of request processing across different applicationsÂ or across various areas of one application</li>\n\t<li>Remove, add, or transform URL segments on incoming requests</li>\n\t<li>Optimize public URLs for Search Engine Optimization (SEO)</li>\n</ol>","a":[{"id":738341,"option":"1, 2, and 3","correct":false},{"id":738342,"option":"2, 3, and 4","correct":false},{"id":738343,"option":"1, 3, and 4","correct":false},{"id":738344,"option":"All of these","correct":true}]},{"q":"<p>In ASP.NET Core, you have placed a QR code in the <strong>qrCode</strong> element. Which of these statements about the formatted URL of the QR code is correct:</p>\n\n<ol>\n\t<li>The correctly formatted URL for the QR Code is available in the <strong>AuthenticatorUri</strong> property of the model.</li>\n\t<li>The correctly formatted URL for the QR Code is available in the <strong>data-url</strong> property that is available in the <strong>qrCodeData</strong> element.</li>\n</ol>","a":[{"id":738289,"option":"1","correct":false},{"id":738290,"option":"2","correct":false},{"id":738291,"option":"Both of these","correct":true},{"id":738292,"option":"None of these","correct":false}]},{"q":"<p>In ASP.NET Core, which of the following interfaces is used to determine whether a URL parameter contains a valid value for a provided endpoint constraint?</p>","a":[{"id":738237,"option":"IRoute10","correct":false},{"id":738238,"option":"IRouteConstraint","correct":true},{"id":738239,"option":"IRouteCatcher","correct":false},{"id":738240,"option":"IRouteLimit","correct":false}]},{"q":"<p>In ASP.NET Core, you have selectedÂ the conventional route <strong>{controller=Home}/{action=Index}/{id?}</strong>. Which of these features are supported by such a configuration:</p>\n\n<ol>\n\t<li>Supports a basic and descriptive routing scheme</li>\n\t<li>Useful starting point for UI-based apps</li>\n</ol>","a":[{"id":738225,"option":"Only 1","correct":false},{"id":738226,"option":"Only 2","correct":false},{"id":738227,"option":"1 and 2","correct":true},{"id":738228,"option":"None of these","correct":false}]},{"q":"<p>You want to integrate the IHttpClientFactory interface with an external libraryÂ such that you can implement resilience and transient fault-handling techniques by using this external library. Which of the following libraries will you use to perform the integration?</p>","a":[{"id":738217,"option":"Polly","correct":true},{"id":738218,"option":"X-Com","correct":false},{"id":738219,"option":"VCL","correct":false},{"id":738220,"option":"CLX","correct":false}]},{"q":"<p>John is working on services in ASP.NET. He is&nbsp;required to select the dependency lifetime of a registered service. If he is implementing a lightweight, stateless service then which of the following types of dependency lifetimes should he use?</p>","a":[{"id":738161,"option":"Singleton","correct":false},{"id":738162,"option":"Transient","correct":true},{"id":738163,"option":"Scoped","correct":false},{"id":738164,"option":"Lateral","correct":false}]},{"q":"<p>John is working in ASP.NET. He is asked by his clients to&nbsp;add additional functionality in his request processing pipeline using a built-in middleware. Then which of the following is/are built-in middleware?</p>\n\n<ol>\n\t<li>Response caching</li>\n\t<li>Response compression</li>\n\t<li>Static files</li>\n</ol>","a":[{"id":738177,"option":"1","correct":false},{"id":738178,"option":"2","correct":false},{"id":738179,"option":"3","correct":false},{"id":738180,"option":"All of these","correct":true}]},{"q":"<p>Which of these observations is correct about the following statements that are related to the authentication policy in the ASP.NET Core framework:</p>\n\n<ul>\n\t<li>Statement 1: Authentication policy schemes make it easy to forward any authentication actions to another scheme.</li>\n\t<li>Statement 2: Authentication policy schemes make it easy to forward any authentication actionsÂ dynamically based on the request.</li>\n</ul>","a":[{"id":738269,"option":"Both statements are true","correct":true},{"id":738270,"option":"Both statements are false","correct":false},{"id":738271,"option":"Statement 1 is true and statement 2 is the correct explanation for statement 1","correct":false},{"id":738272,"option":"Statement 1 is true and statement 2 is not the correct explanation for statement 1","correct":false}]},{"q":"<p>You want to use the <strong>Redirect </strong>method and reimplementÂ extension methods to configure appropriate status code responses. If you are required to return the original status code to the client, then whichÂ of the following extensions willÂ you use?</p>","a":[{"id":738197,"option":"UseStatusCodePagesWithRedirects","correct":false},{"id":738198,"option":"UseStatusCodePagesWithReExecute","correct":true},{"id":738199,"option":"UseStatusCodePagesWithReplaces","correct":false},{"id":738200,"option":"UseStatusCodePagesWithRemit","correct":false}]},{"q":"<p>You have just updated large number of entities and also validated the corresponding data when using .Net MVC 5 with the entity framework.<br>\nIn the given context, which of the following property should you modify if you would like to save time when using the SaveChanges method?</p>","a":[{"id":1418722,"option":"ValidateOnSaveEnabled","correct":true},{"id":1418723,"option":"ValidateOnSaveChanges","correct":false},{"id":1418724,"option":"AutoValidateEntity","correct":false},{"id":1418725,"option":"AutoValidateOnSave","correct":false}]},{"q":"<p>In ASP.NET Core, which of the following properties is used to retrieve or set the token provider that is used to generate tokens that have been used in account confirmation emails?</p>","a":[{"id":738297,"option":"ProviderMap","correct":false},{"id":738298,"option":"PasswordResetTokenProvider","correct":false},{"id":738299,"option":"EmailConfirmationTokenProvider","correct":true},{"id":738300,"option":"ChangeEmailTokenProvider","correct":false}]},{"q":"<p>In ASP.NET Core, if you are observing OSS authentication providers, then which of the following projects is used to retrieve a server that handles user signup, login, profiles, management, and social logins?</p>","a":[{"id":738305,"option":"Cierge","correct":true},{"id":738306,"option":"Gluu server","correct":false},{"id":738307,"option":"IdentityServer","correct":false},{"id":738308,"option":"OpenIddict","correct":false}]},{"q":"<p>John is writing a code in ASP.NET Core that replaces built-in containers with the Autofac container. Which of the following container packages must he use in his code?</p>\n\n<ol>\n\t<li>Autofac</li>\n\t<li>Autofac.Extensions</li>\n\t<li>Autofac.Extensions.DependencyInjection</li>\n</ol>","a":[{"id":738169,"option":"1 and 2","correct":false},{"id":738170,"option":"2 and 3","correct":false},{"id":738171,"option":"1 and 3","correct":true},{"id":738172,"option":"All of these","correct":false}]},{"q":"<p>In ASP.NET Core, if a user is creating relationships between entity types, then which of the following statements about these relations are correct:</p>\n\n<ol>\n\t<li>Each user can have multiple&nbsp;UserClaims.</li>\n\t<li>Each user can have multiple&nbsp;UserLogins.</li>\n\t<li>Each user can have multiple&nbsp;UserTokens.</li>\n\t<li>Each role can have only one associated RoleClaim.</li>\n</ol>","a":[{"id":738261,"option":"1 and 2","correct":false},{"id":738262,"option":"1, 2, and 3","correct":true},{"id":738263,"option":"2, 3, and 4","correct":false},{"id":738264,"option":"All of these","correct":false}]},{"q":"<p>John is working on the authentication dialog box in the ASP .NET Core CLI toolchain by using&nbsp;the <strong>-au</strong> option. If projects are created without authentication, then he wants to know that how many of the following statements are correct:&nbsp;</p>\n\n<ol>\n\t<li>Projects do not contain a UI design&nbsp;to sign in and sign out.</li>\n\t<li>Projects have web pages to sign in and sign out.</li>\n\t<li>Projects do not contain an authentication code.</li>\n</ol>","a":[{"id":738273,"option":"1","correct":false},{"id":738274,"option":"2","correct":false},{"id":738275,"option":"3","correct":true},{"id":738276,"option":"None of these","correct":false}]},{"q":"<p>In ASP.NET Core, you are required&nbsp;to analyze the CPU usage, memory and GC behavior, performance events, and wall clock time. Your task is also to collect traces from applications running in the Linux environment. Which of the following tools will you use to perform the mentioned tasks?</p>","a":[{"id":738333,"option":"PerfView","correct":true},{"id":738334,"option":"PerfCollect","correct":false},{"id":738335,"option":"PerfCorrect","correct":false},{"id":738336,"option":"Windows Performance Toolkit","correct":false}]},{"q":"<p>In ASP.NET Core, there are several ways in which the&nbsp;IHttpClientFactory interface can be implemented in an application. Which of the following is not a valid technique to implement the interface?</p>","a":[{"id":738213,"option":"Using generated clients","correct":false},{"id":738214,"option":"Using named clients","correct":false},{"id":738215,"option":"Using typed clients","correct":false},{"id":738216,"option":"Using created clients","correct":true}]},{"q":"<p>Based on the following ASP.NET Core method, which of these requests is used to retrieve the response '<strong>HIG</strong>':</p>\n\n<pre class=\"prettyprint\"><code>public class Startup\n{\n    private static void HandleMapTest1(IApplicationBuilder app)\n    {\n        app.Run(async context =&gt;\n        {\n            await context.Response.WriteAsync(\"\"XYZ\"\");\n        });\n    }\n\n    private static void HandleMapTest2(IApplicationBuilder app)\n    {\n        app.Run(async context =&gt;\n        {\n            await context.Response.WriteAsync(\"\"ABC\"\");\n        });\n    }\n\n    public void Configure(IApplicationBuilder app)\n    {\n        app.Map(\"\"/map1\"\", HandleMapTest1);\n\n        app.Map(\"\"/map2\"\", HandleMapTest2);\n\n        app.Run(async context =&gt;\n        {\n            await context.Response.WriteAsync(\"\"HIG &lt;p&gt;\"\");\n        });\n    }\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":738313,"option":"localhost:1234/map0","correct":false},{"id":738314,"option":"localhost:1234/map1","correct":false},{"id":738315,"option":"localhost:1234/map2","correct":false},{"id":738316,"option":"localhost:1234/map3","correct":true}]},{"q":"<p>John is trying to configure a sample to use Azure AD tenant.and configure the TodoListClient C# project. Then which of these app keys should he update while doing his mentioned task?</p>\n\n<ol>\n\t<li>ida:Tenant</li>\n\t<li>ida:ClientId</li>\n\t<li>ida:RedirectUri</li>\n\t<li>todo:TodoListResourceId</li>\n</ol>","a":[{"id":738281,"option":"Only 1, 2, and 3","correct":false},{"id":738282,"option":"Only 2, 3, and 4","correct":false},{"id":738283,"option":"Only 1, 3, and 4","correct":false},{"id":738284,"option":"All of these","correct":true}]},{"q":"<p>John is working on services in ASP.NET. Then which of the following techniques can he use to resolve services and will allow him to create objects without registration of services in the dependency injection container?</p>\n\n<ol>\n\t<li>IServiceProvider</li>\n\t<li>ActivatorUtilities</li>\n\t<li>IResolve</li>\n</ol>","a":[{"id":738165,"option":"1","correct":false},{"id":738166,"option":"2","correct":true},{"id":738167,"option":"Both 1 and 2","correct":false},{"id":738168,"option":"Both 2 and 3","correct":false}]},{"q":"<p>In ASP.NET Core, which of the following events will be restricted once the response headers are sent:</p>\n\n<ol>\n\t<li>Applications cannot change the status code of the response.</li>\n\t<li>Any exception pages or handlers cannot run.</li>\n</ol>","a":[{"id":738205,"option":"1","correct":false},{"id":738206,"option":"2","correct":false},{"id":738207,"option":"1 and 2","correct":true},{"id":738208,"option":"None of these","correct":false}]},{"q":"<p>In ASP.NET Core, you are using call stacks to view the function or procedure calls that are currently available in the stack and you can also set breakpoints. Which of the following procedures is used to perform the mentioned operation?</p>","a":[{"id":738353,"option":"You can set a breakpoint in the Call Stack window","correct":false},{"id":738354,"option":"You can set a breakpoint in the Disassembly window","correct":false},{"id":738355,"option":"You can either set a breakpoint in the Call Stack or Disassembly window","correct":true},{"id":738356,"option":"It is not possible to set breakpoints","correct":false}]}]