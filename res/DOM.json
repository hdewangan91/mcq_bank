[{"q":"<p>John is working on DOM in Vanilla.JS. While exploring the DOM, he noticed&nbsp; that the&nbsp;<code>&lt;body&gt;</code>&nbsp;node is the sibling&nbsp;of the&nbsp;<code>&lt;head&gt;</code>&nbsp;node because they share the same immediate parent of which element?</p>","a":[{"id":1718101,"option":"<body>","correct":false},{"id":1718102,"option":"<html>","correct":true},{"id":1718103,"option":"<head>","correct":false},{"id":1718104,"option":"<div>","correct":false}]},{"q":"<p>John is working on DOM in Vanilla.JS. While exploring the DOM, he noticed&nbsp; that&nbsp;<code>&lt;body&gt;</code>&nbsp;is a child node&nbsp;of the&nbsp;<code>&lt;html&gt;</code>&nbsp;node then&nbsp;<code>&lt;html&gt;</code>&nbsp;is the parent of which node?</p>","a":[{"id":1718097,"option":"<body>","correct":true},{"id":1718098,"option":"<html>","correct":false},{"id":1718099,"option":"<head>","correct":false},{"id":1718100,"option":"<div>","correct":false}]},{"q":"<p>Mark is working on DOM in Vanilla.JS. To get the next sibling of an element, he&nbsp;used&nbsp;the&nbsp;<code>nextElementSibling</code>&nbsp;attribute and he found that&nbsp;for a&nbsp;specified element is the first one in the list it returned a value. What did the&nbsp;<code>nextElementSibling&nbsp;</code>return?</p>","a":[{"id":1718089,"option":"null","correct":true},{"id":1718090,"option":"value of first element","correct":false},{"id":1718091,"option":"true","correct":false},{"id":1718092,"option":"false","correct":false}]},{"q":"<p>John&nbsp;is working on DOM using Vanilla.JS. Using&nbsp;<code>parentNode</code>&nbsp;property, he found that&nbsp;<code>DocumentFragment</code>&nbsp;nodes do not have a parent.&nbsp;Then for that specified node which of the statements are True?&nbsp;</p>\n\n<p><strong>Statements</strong></p>\n\n<ul>\n\t<li>The&nbsp;<code>node.parentNode</code>&nbsp;returns&nbsp;parent node of a specified node.</li>\n\t<li>The&nbsp;<code>node.parentNode</code>&nbsp;returns&nbsp;<code>null</code>&nbsp;if node&nbsp;does not exist.</li>\n\t<li>The&nbsp;<code>parentNode</code>&nbsp;is read-only.</li>\n\t<li><code>DocumentFragment</code>&nbsp;node&nbsp;has a parent node.</li>\n\t<li><code>childNode</code>&nbsp;is a method&nbsp;of the&nbsp;<code>Node</code>&nbsp;object.</li>\n</ul>","a":[{"id":1718085,"option":"1, 2, and 3","correct":true},{"id":1718086,"option":"1, 3, 4 and 5","correct":false},{"id":1718087,"option":"2, 3, 4 and 5","correct":false},{"id":1718088,"option":"All the above","correct":false}]},{"q":"<p>Ben is working on DOM using Vanilla.JS. He is using&nbsp;<code>parentNode</code>&nbsp;property to get the parent node of a specified node in the DOM tree. While exploring various nodes, he found that the&nbsp;<code>parentNode</code>&nbsp;is&nbsp;<code>null</code>. Then for that specified node,&nbsp;from the given&nbsp;nodes which will&nbsp;not have a parent?</p>","a":[{"id":1718081,"option":"DocumentNode","correct":false},{"id":1718082,"option":"DocumentFragment ","correct":true},{"id":1718083,"option":"node.parentNode","correct":false},{"id":1718084,"option":"All the above","correct":false}]},{"q":"<p>Mark is working on DOM in Vanilla.JS. He is exploring different node&nbsp;elements using the nodetype property. He wants to use the highest value of node type&nbsp;constants.&nbsp;Then&nbsp;which of the given options has the highest node type constant value?&nbsp;</p>","a":[{"id":1715347,"option":"Node.DOCUMENT_TYPE_NODE\t","correct":false},{"id":1715348,"option":"Node.ELEMENT_NODE\t","correct":false},{"id":1715349,"option":"Node.PROCESSING_INSTRUCTION_NODE\t","correct":false},{"id":1715350,"option":"Node.DOCUMENT_FRAGMENT_NODE\t","correct":true}]},{"q":"<p>Ben is working on DOM in Vanilla.JS. He found that each node in the DOM tree is identified by a node type. He found that an element which is a node with a specific node type equal to 1. Then the value of elements can be found using which constants in the given options?&nbsp;</p>","a":[{"id":1715339,"option":"Node.DOCUMENT_TYPE_NODE","correct":false},{"id":1715340,"option":"Node.ELEMENT_NODE","correct":true},{"id":1715341,"option":"Node.DOCUMENT_NODE","correct":false},{"id":1715342,"option":"Node.TEXT_NODE","correct":false}]},{"q":"<p>John is working on DOM in Vanilla.JS. He explores the properties of an element node using nodetype property.&nbsp;Then for that element node will have the&nbsp;<code>nodeValue</code>&nbsp;will be always equal to which of the given options?&nbsp;</p>","a":[{"id":1715335,"option":"null","correct":true},{"id":1715336,"option":"true","correct":false},{"id":1715337,"option":"false","correct":false},{"id":1715338,"option":"undefined","correct":false}]},{"q":"<p>Lisa is working on DOM in Vanilla.JS. She is exploring some random elements using the nodetype property. If there is an element node, then the value of&nbsp;<code>nodeName</code>&nbsp;is always the same as which of the given options?&nbsp;</p>","a":[{"id":1715331,"option":"same as element’s tag","correct":true},{"id":1715332,"option":"same as parent element's tag","correct":false},{"id":1715333,"option":"same as child element's tag","correct":false},{"id":1715334,"option":"is null","correct":false}]},{"q":"<p>Ben is working on DOM in Vanilla.JS. Currently, he is using the&nbsp;<code>nodeType</code>&nbsp;property to determine the node type in the DOM. Now, to identify a specific node which of the&nbsp;following properties should he choose?</p>","a":[{"id":1715327,"option":"Node.ELEMENT_NODE","correct":false},{"id":1715328,"option":"Node.nodeName","correct":true},{"id":1715329,"option":"Node.TEXT_NODE","correct":false},{"id":1715330,"option":"node.nodeType","correct":false}]},{"q":"<p>You have developed an Angular app. You have created a button such that the number of times you will click on the button, \"Click Here!\" will get displayed corresponding to the total number of clicks. Which of the following code-snippets corresponds to the above situation.</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-click=\"\"&gt;\n&lt;p&gt;Total number of Clicks: {{ Counts }}&lt;/p&gt;\n&lt;button ng-click = \"Counts = Counts+ 1\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-app=\"\"&gt;\n&lt;p&gt;Total number of Clicks: {{ Counts }}&lt;/p&gt;\n&lt;button ng-show = \"Counts = Counts+ 1\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-app=\"\"&gt;\n&lt;p&gt;Total number of Clicks: {{ Counts }}&lt;/p&gt;\n&lt;button ng-click = \"Counts = Counts+ 1\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-app=\"\"&gt;\n&lt;p&gt;Total number of Clicks: {{ Counts }}&lt;/p&gt;\n&lt;button ng-disabled = \"Counts = Counts+ 1\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654077,"option":"1","correct":false},{"id":1654078,"option":"2","correct":false},{"id":1654079,"option":"3","correct":true},{"id":1654080,"option":"4","correct":false}]},{"q":"<p>You are creating an app using Angular. You want to implement DomSanitizer in your app. You have written the code given alongside.<br>\nWhat is the use of sanitize() method, here?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>abstract class DomSanitizer implements Sanitizer {\n\n abstract sanitize(context: SecurityContext, value: string | SafeValue): string | null\n abstract bypassSecurityTrustHtml(value: string): SafeHtml\n abstract bypassSecurityTrustStyle(value: string): SafeStyle\n abstract bypassSecurityTrustScript(value: string): SafeScript\n abstract bypassSecurityTrustUrl(value: string): SafeUrl\n abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl\n\n}</code></pre>\n\n<p> </p>","a":[{"id":1654053,"option":"Sanitizes a value for use in the given SecurityContext. If value is not trusted for the context, this method will unwrap the contained safe value and use it directly.","correct":false},{"id":1654054,"option":"Sanitizes a value for use in the given SecurityContext. If value is trusted for the context, this method will unwrap the contained safe value and use it directly.","correct":true},{"id":1654055,"option":"Sanitizes the parameters of sanitize() function for use in the given SecurityContext. If value is trusted for the context, this method will unwrap the contained safe value and use it directly.","correct":false},{"id":1654056,"option":"Sanitizes a value for use in the arbitrary SecurityContext. If value is trusted for the context, this method will unwrap the contained safe value and use it directly.","correct":false}]},{"q":"<p>You are creating an app in Angular JS. You have written the code given alongside. What will happen when the checkbox is checked?</p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-app=\"\"&gt;\n&lt;input type = \"checkbox\" ng-model = \"hidebutton\"&gt;Hide Button\n&lt;button ng-hide = \"hidebutton\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p> </p>","a":[{"id":1654073,"option":"The button 'Click here!' will get hidden.","correct":true},{"id":1654074,"option":"The button 'Click here!' will appear.","correct":false},{"id":1654075,"option":"The button 'Click here!' will be disabled.","correct":false},{"id":1654076,"option":"The code will give an error.","correct":false}]},{"q":"<p>In ReactJS, you are working on the components and props. If you have implemented the following code, then which of the following statements about this code are correct:</p>\n\n<pre class=\"prettyprint\"><code>function Welcome(props) {\n  return &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;\n}\n\nconst element = &lt;Welcome name=\"HackerEarth\" /&gt;;\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);</code></pre>\n\n<ol>\n\t<li><code>The method ReactDOM.render()</code> is called with the <code>&lt;Welcome name=\"HackerEarth\" /&gt;</code> element.</li>\n\t<li>React calls the <code>Welcome</code> component with <code>{name: 'HackerEarth'}</code> as the stateless components.</li>\n\t<li><code>The Welcome</code> component returns a <code>&lt;h1&gt;Hello, HackerEarth&lt;/h1&gt;</code> element as the result.</li>\n</ol>","a":[{"id":388049,"option":"1 and 2","correct":false},{"id":388050,"option":"2 and 3","correct":false},{"id":388051,"option":"1 and 3","correct":true},{"id":396562,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is the API used for accessing <strong>XML</strong> documents?</p>","a":[{"id":58786,"option":"SOAP","correct":false},{"id":58787,"option":"DTD","correct":false},{"id":58788,"option":"DOM","correct":true},{"id":58789,"option":"XPATH","correct":false}]}]