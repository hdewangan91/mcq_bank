[{"q":"<p>While working on a Django project, you learned about the concept of class-based view. It&nbsp;allows you to respond to different HTTP request methods with different class instance methods. Which of the following code can handle HTTP GET in a view function:</p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>from django.http import HttpResponse\nfrom django.views import View\nclass CBV(View):\ndef neth(self, request):\n# &lt;view logic&gt;\nreturn HttpResponse('ans')</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>from django.http import HttpResponse\nfrom django.views import View\nclass CBV():\ndef neth(self, request):\n# &lt;view logic&gt;\nreturn ans</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>from django.http import HttpResponse\nfrom django.views import View\ndef neth(self, request):\n# &lt;view logic&gt;\nreturn HttpResponse('ans')</code></pre>\n\t</li>\n</ol>","a":[{"id":1670872,"option":"1","correct":true},{"id":1670873,"option":"2","correct":false},{"id":1670874,"option":"3","correct":false},{"id":1670875,"option":"None of these","correct":false}]},{"q":"<p>In Snowflake, you are working on various views. Which of the following clauses and functions cannot be included in a Materialized view:</p>\n\n<ol>\n\t<li>Where Clause.</li>\n\t<li>Window functions.</li>\n\t<li>HAVING clauses.</li>\n\t<li>ORDER BY clause.</li>\n</ol>","a":[{"id":1544817,"option":"1, 3, and 4","correct":false},{"id":1544818,"option":"2, 3, and 4","correct":true},{"id":1544819,"option":"1, 2, and 4","correct":false},{"id":1544820,"option":"1, 2, and 3","correct":false}]},{"q":"<p>In Snowflake, you are working on various views. You require your Snowflake query optimizer to use some internal optimizations to process views and queries together. Also, you are required to ensure that the views are enabled to be evaluated in a faster efficient manner as compared to the seperate evaluations. Which of the following types of views can be implemented to perform these actions in this scenario?</p>","a":[{"id":1544821,"option":"Materialized View","correct":false},{"id":1544822,"option":"Conditional View","correct":false},{"id":1544823,"option":"Non-materialized view","correct":true},{"id":1544824,"option":"Non-Conditional View","correct":false}]},{"q":"<p>Which of the following cases for React NativeÂ View is valid?</p>","a":[{"id":736423,"option":"View supports synthetic touch events, which can be useful for different purposes.","correct":false},{"id":736424,"option":"View can be used as a container element when you need to wrap your elements inside a container.","correct":false},{"id":736425,"option":"Both of these","correct":true},{"id":736426,"option":"None of these","correct":false}]}]