[{"q":"<p>What is the output of the following Ruby code:</p>\n\n<p><strong>Code</strong>:</p>\n\n<pre class=\"prettyprint\"><code>puts 'MICROBIOLOGY' [-1]</code></pre>","a":[{"id":83196,"option":"M ","correct":false},{"id":83197,"option":"Y ","correct":true},{"id":83198,"option":"6 ","correct":false},{"id":83199,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following code snippet?</p>\n\n<p><strong>Code snippet:</strong></p>\n\n<pre class=\"prettyprint\"><code>string sentence = \"Good Morning World\";\nstring[] words = sentence.Split(' ');\n\nforeach (var word in words)\n{\n  System.Console.WriteLine(System.Console.WriteLine(\"&lt;\"+word+\"&gt;\");\n}\n</code></pre>\n\n<p><br>\n[Note: There are three extra spaces between \"Good\" and \"Morning\".]</p>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>&lt;Good&gt;\n&lt;&gt;\n&lt;&gt;\n&lt;&gt;\n&lt;Morning&gt;\n&lt;World&gt;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>&lt;Good&gt;\n&lt;Morning&gt;\n&lt;World&gt;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>&lt;Good&gt;\n&lt;&gt;\n&lt;Morning&gt;\n&lt;World&gt;</code></pre>","a":[{"id":1673075,"option":"1","correct":false},{"id":1673076,"option":"2","correct":false},{"id":1673077,"option":"3","correct":false},{"id":1673078,"option":"Compilation Error","correct":true}]},{"q":"<p>What is the output of the following pseudocode:</p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>input string = \"HACKEREARTH\"\n\nfunction hacker(String S)\n mlen = 1\n beg= 0\n len = length of S\n  low, high\nfor i=1 to len \n  low = i - 1;\n  high = i;\n  while (low &gt;= 0 &amp;&amp; high &lt; len&amp;&amp; str[low] == str[high]) \n    --low\n\t++high\n//end of while\n  ++low; --high;\n  if (str[low] == str[high] &amp;&amp; high - low + 1 &gt; maxLength) \n\tbeg= low;\n\tmlen= high - low + 1;\n  //end of if\n  low = i - 1;\n  high = i + 1;\n  while (low &gt;= 0 &amp;&amp; high &lt; len &amp;&amp; str[low] == str[high]) \n\t--low;\n\t++high;\n  //end of while\n  ++low\n  --high\n  if (str[low] == str[high] &amp;&amp; high - low + 1 &gt; maxLength) \n\tbeg= low\n\tmlen= high - low + 1\n  //end of if\n//end of for\n\tans=mlen\n\twhile(ans--)\n\tprint(str[beg++])\n\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1709999,"option":"HACK","correct":false},{"id":1710000,"option":"ERE","correct":true},{"id":1710001,"option":"EARTH","correct":false},{"id":1710002,"option":"RTH","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def func1(str)\n  n=4\n  temp=Array.new(5) { Array.new(3) { 0 } }\n  i=0\n  j=0\n  while i&lt;n+1\n    while j&lt;3\n      temp[i][j]=-1\n      j+=1\n    end\n    i+=1\n  end\n  res=0\n  i=0\n  while i&lt;n\n    if str[i]=='0'\n      res+=1\n    else\n      res+=func2(i,0,str,temp)\n    end\n    i+=1\n  end\n  return res\nend  \n\ndef func2(i,m,str,temp)\n  if i==str.length\n    return 0\n  end\n  if temp[i][m]!=-1\n    return temp[i][m]\n  end\n  x=str[i].to_i\n  if ((x+m)%3==0) and x%2==0\n    res=1+func2(i+1,(m+x)%3,str,temp)\n  else\n    res=func2(i+1,(m+x)%3,str,temp)\n  end\n  temp[i][m]=res\n  return temp[i][m]\nend\n\nstr=\"4806\"\nres=func1(str)\nputs res</code></pre>","a":[{"id":1770895,"option":"3","correct":false},{"id":1770896,"option":"Infinity loop","correct":false},{"id":1770897,"option":"1","correct":true},{"id":1770898,"option":"Error","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def func1(str,n)\n  i=0\n  while i&lt;n and str[i]=='0'\n    i+=1\n  end\n  while i&lt;n\n    if str[i]=='0'\n      return true\n    end\n    i+=1\n  end\n  return false\nend\n\nstr1=\"2223\"\nstr2=\"63\"\nres1=func1(str1,4)\nres2=func1(str1,2)\nputs res1\nputs res2</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>true\nfalse</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\nfalse</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>true\ntrue</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue</code></pre>\n\t</li>\n</ol>","a":[{"id":1770891,"option":"1","correct":false},{"id":1770892,"option":"2","correct":true},{"id":1770893,"option":"3","correct":false},{"id":1770894,"option":"4","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def func1(str1,str2,m,n)\n  temp=Array.new(7){Array.new(8){0}}\n  i=0\n  while i&lt;=m\n    j=0\n    while j&lt;=n\n      if i==0||j==0\n        temp[i][j]=0\n      elsif str1[i-1]==str2[j-1]\n        temp[i][j]=temp[i-1][j-1]+1\n      else\n        if temp[i-1][j]&gt;temp[i][j-1]\n          temp[i][j]=temp[i-1][j]\n        else\n          temp[i][j]=temp[i][j-1]\n        end\n      end\n      j+=1\n    end\n    i+=1\n  end\n  return temp[m][n]\nend\n\nstr1=\"BMNBDNA\"\nstr2=\"AMBNCAR\"\nm=6\nn=7\nres=func1(str1,str2,m,n)\nputs res</code></pre>","a":[{"id":1770887,"option":"2","correct":false},{"id":1770888,"option":"5","correct":false},{"id":1770889,"option":"4","correct":false},{"id":1770890,"option":"3","correct":true}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def func1(str)\n  n=5\n  i=0\n  while i&lt;n\n    if str[i]!=str[0]\n      return false\n    end\n    i+=1\n  end\n  return true\nend\n\nstr1=\"aaaaa\"\nstr2=\"aaabb\"\nres1=func1(str1)\nres2=func1(str2)\nputs res1\nputs res2</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>true\nfalse</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>true\ntrue</code></pre>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\nfalse</code></pre>\n\t</li>\n</ol>","a":[{"id":1770883,"option":"1","correct":true},{"id":1770884,"option":"2","correct":false},{"id":1770885,"option":"3","correct":false},{"id":1770886,"option":"4","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>begin\nstr = \"36\"\nputs str*3\nend</code></pre>","a":[{"id":1770879,"option":"363","correct":false},{"id":1770880,"option":"108","correct":false},{"id":1770881,"option":"363636","correct":true},{"id":1770882,"option":"Error","correct":false}]},{"q":"<p>Bob was given a string consisting of only 0, 1, A, O, X where<br>\nA=AND<br>\nO=OR<br>\nX=XOR</p>\n\n<p>What is the output of the following pseudocode:</p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>input string s=\"1X1O1O0A01A0A1X1A1\"\n\nfunction hacker_eval(string s)\n n = length of s\n for i=0 to n \n  if (s[i + 1] == 'A') \n\tif (s[i + 2] == '0'|| s[i] == '0')\n\t s[i + 2] = '0'\n\telse\n\t s[i + 2] = '1'\n   else if (s[i + 1] == 'O') {\n\t if (s[i + 2] == '1'|| s[i] == '1')\n\t  s[i + 2] = '1'\n\t else\n\t  s[i + 2] = '0'\n   else \n\t if (s[i + 2] == s[i])\n\t  s[i + 2] = '0'\n\t else\n\t  s[i + 2] = '1'\n  return s[n - 1] -'0'\n</code></pre>","a":[{"id":1709492,"option":"0","correct":false},{"id":1709493,"option":"1","correct":true},{"id":1709494,"option":"-1","correct":false},{"id":1709495,"option":"None of the above","correct":false}]},{"q":"<p>What is the output to the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#import &lt;Foundation/Foundation.h&gt;\n\nint main () {\n   NSString *string1 = @\"Objective\";\n   NSString *string2 = @\"C\";\n   NSString *string3;\n   int  len ;\n\n   NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];\n\n   len = [string1 length];\n   NSLog(@\"Length of String3 :  %d\\n\", len );\n\n   string3 = [[NSString alloc] initWithFormat:@\"%@ %@\",string1,string2];        \n   NSLog(@\" %@\\n\", string3 );\n   [pool drain];\n\n   return 0;\n}</code></pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>","a":[{"id":1769391,"option":"Length of String3 :  9\r\n Objective ","correct":false},{"id":1769392,"option":"Syntax error","correct":false},{"id":1769393,"option":"Length of String3 :  9\r\n Objective C","correct":true},{"id":1769394,"option":"Length of String3 :  NULL\r\n Objective C","correct":false}]},{"q":"<p>What is the output to the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#import &lt;Foundation/Foundation.h&gt;\nint main(void){\n    NSAutoreleasePool* pool = [[NSAutoreleasePool alloc] init];\n    // Your code here!\n    \n  \n   NSString *i = @\"objectivec\";\n    NSString *j = @\"hello\";\n\n   NSLog(@\" %@ %@ \\n\", i,j);\n\n  \n    [pool release];\n    return 0;\n}</code></pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>","a":[{"id":1769395,"option":"objectivec hello","correct":true},{"id":1769396,"option":"hello objectivec","correct":false},{"id":1769397,"option":"hello","correct":false},{"id":1769398,"option":"objectivec","correct":false}]},{"q":"<p>What is the output to the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#import &lt;Foundation/Foundation.h&gt;\n\nint main () {\n   NSString *str1 = @\"ObjectiveC\";\n   \n  int len = [str1 length];\n   NSLog(@\"Length of Str3 :  %@\\n\", len );\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1769375,"option":"10","correct":false},{"id":1769376,"option":"Compilation error","correct":true},{"id":1769377,"option":"6","correct":false},{"id":1769378,"option":"5","correct":false}]},{"q":"<p>What is the output to the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#import &lt;Foundation/Foundation.h&gt;\nint main(void){\n    NSAutoreleasePool* pool = [[NSAutoreleasePool alloc] init];\n    \n  \n   NSString *s = @\"Hello\";\n    NSString *g = @\"Hep\";\n\n   NSLog(@\" %@ \\n\", g,s);\n\n  \n    [pool release];\n    return 0;\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1769367,"option":"Hello Hep","correct":false},{"id":1769368,"option":"Hep Hello","correct":false},{"id":1769369,"option":"Hep","correct":true},{"id":1769370,"option":"Hello  ","correct":false}]},{"q":"<p>What is the output to the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#import &lt;Foundation/Foundation.h&gt;\n\nint main () {\n   NSString *s1 = @\"objective\";\n   NSString *s2 = @\"C\";\n   NSString *string3;\n  \n\n   NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];\n\n   string3 = [s2 uppercaseString];\n   NSLog(@\"uppercase string :  %@\\n\", string3 );\n\n   string3 = [s1 stringByAppendingFormat:@\"C\"];\n   NSLog(@\"concatenated string:   %@\\n\", string3 );\n\n \n   [pool drain];\n\n   return 0;\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1769359,"option":"uppercase string : c \r\nconcatenated string: objectivec","correct":false},{"id":1769360,"option":"Compilation error","correct":false},{"id":1769361,"option":"uppercase string : C\r\n concatenated string: objectiveC","correct":true},{"id":1769362,"option":"uppercase string :OBJECTIVE C \r\nconcatenated string: objectiveC","correct":false}]},{"q":"<p>What is the time complexity of given pseudocode:</p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>function Hacker_findchar(string str1, string str2)\n\tn1=length of str1\n\tn2=length of str2\n\tunordered_map&lt;char, int&gt; mp;\n\tfor i=0 to n2\n\t\tmp[str2[i]]++;\n\tfor i=0 to n1\n\t\tmp[strA[i]]--;\n\tfor h1 = beg of mp to end of mp \n\t\tif (h1-&gt;second == 1)\n\t\t\treturn h1-&gt;first\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1709440,"option":"O(n)","correct":true},{"id":1709441,"option":"O(n*n)","correct":false},{"id":1709442,"option":"O(n log n)","correct":false},{"id":1709443,"option":"O(log n)","correct":false}]},{"q":"<p>Alice and Bob were given two numbers as strings. The reason for the numbers to be taken as strings was that they were very large which may not fit in a long long int. Their task was&nbsp;to find the sum of these two numbers in the most optimized way possible. Though Alice came up with the pseudocode but Bob was unsure about its time complexity. Can you help them to find the time complexity of the given pseudocode?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function hacker_sum(string str1, string str2)\n\tn1 = length of str1\n\tn2 = length of str2\n\tif (n1 &gt; n2)\n\t  swap(str1, str2)\n\tstr = \"\"\n\tdiff = n2 - n1\n\tcarry = 0\n\tfor i=n-1 to 0\n\t  sum = ((ith char of str1-'0') +((i+diff)thchar of str2-'0') +carry)\n\t  push(sum%10 + '0') into str\n\t  carry = sum/10\n\tfor i=n2-n1-1 to 0\n\t   sum = ((ith char of str2-'0')+carry)\n\t   push(sum%10 + '0') into str\n\t   carry = sum/10\n\tif (carry)\n\t  push(carry+'0') into str\n\treverse(str.begin(), str.end())\n\treturn str</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1709436,"option":"O(n1)","correct":false},{"id":1709437,"option":"O(n2)","correct":false},{"id":1709438,"option":"O(n1+n2)","correct":true},{"id":1709439,"option":"O(n1*n2)","correct":false}]},{"q":"<p>What is the output of the following pseudocode:</p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>input string s1=\"Hackerearth\", s2=\"Earth\", k=4\n\nfunction hack(string str1, string str2, int k)\n  int flag = 0;\n  if (str1.length() != str2.length())\n\t\treturn false;\n  int n = str1.length();\n  char arr1[n];\n\tchar arr2[n];\n\tstrcpy(arr1, str1.c_str());\n\tstrcpy(arr2, str2.c_str());\n\tsort(arr1, arr1 + n);\n\tsort(arr2, arr2 + n);\n\tvector&lt;char&gt; list;\n\tfor (int i = 0; i &lt; str1.length(); i++) {\n\t\tif (arr1[i] != arr2[i]) {\n\t\t\tlist.push_back(arr2[i]);\n\t\t}\n\t}\n\tif (list.size() &lt;= k)\n\t\tflag = 1;\n\n\tif (flag == 1)\n\t\treturn true;\n\telse\n\t\treturn false;\n}\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1710487,"option":"True","correct":false},{"id":1710488,"option":"False","correct":true},{"id":1710489,"option":"Null","correct":false},{"id":1710490,"option":"Error","correct":false}]},{"q":"<p>What is the output of the following pseudocode:</p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>input string str=\"hackerearth\"\n\nfunction hacker_check(string str)\n  l = 0\n  h = length of string - 1;\n   while (h &gt; l)\n    if (str[l++] != str[h--])\n     f=1\n     break;\n\n  if(f==1)\n   return false\n  else \n   return true</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1709518,"option":"true","correct":false},{"id":1709519,"option":"false","correct":true},{"id":1709520,"option":"error","correct":false},{"id":1709521,"option":"null","correct":false}]},{"q":"<p>What is the output of the following pseudocode:</p>\n\n<p><strong>Pseudocode</strong></p>\n\n<pre class=\"prettyprint\"><code>Integer a\nString str1\nSet str1 = “hackerearth”\na = stringLength(str1)\nPrint (a ^ 1)</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1709444,"option":"0","correct":false},{"id":1709445,"option":"10","correct":true},{"id":1709446,"option":"11","correct":false},{"id":1709447,"option":"-1","correct":false}]},{"q":"<p>To increase the responsiveness of your application, you are using Redis&nbsp;as a cache to store frequently accessed data in memory.&nbsp;You have executed the following commands in redis-cli.</p>\n\n<pre class=\"prettyprint\"><code>SET mykey \"Object1\"\nSET mykey \"Object2\" EX 10\nSET mykey \"Object3\" nx</code></pre>\n\n<p>What is the output of&nbsp;<strong>\"GET mykey\"&nbsp;</strong>after 1 minute of running the last command?</p>","a":[{"id":1711221,"option":"Object1","correct":false},{"id":1711222,"option":"Object2","correct":false},{"id":1711223,"option":"Object3","correct":true},{"id":1711224,"option":"(nil)","correct":false}]},{"q":"<p>To increase the responsiveness of your application, you are using Redis&nbsp;as a cache to store frequently accessed data in memory.&nbsp;You have executed the following commands in redis-cli.</p>\n\n<pre class=\"prettyprint\"><code>SET mykey \"Object1\"\nSET mykey \"Object2\" EX 50</code></pre>\n\n<p>What is the output of&nbsp;<strong>\"GET mykey\"&nbsp;</strong>after 1 minute of running the last command?</p>","a":[{"id":1711217,"option":"Object1","correct":false},{"id":1711218,"option":"Object2","correct":false},{"id":1711219,"option":"ERR","correct":false},{"id":1711220,"option":"(nil)","correct":true}]},{"q":"<p>To increase the responsiveness of your application you are using Redis&nbsp;as a cache to store frequently accessed data in memory.&nbsp;You have executed the following commands in <strong>redis-cli</strong>.</p>\n\n<pre class=\"prettyprint\"><code>&gt; MSET key1 \"Object1\" key2 \"Object2\" key3 \"49\"\n&gt; SET key4 \"Object4\" nx\n&gt; SET key2 \"68\" xx\n&gt; incrby key2 2\n&gt; SET key1 \"Object3\" nx\n&gt; incrby key3 1</code></pre>\n\n<p>What is the output of the following command:</p>\n\n<pre class=\"prettyprint\"><code>&gt; MGET key1 key2 key3 key4</code></pre>\n\n<p>Options:</p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>1) \"Object3\"\n2) \"70\"\n3) \"50\"\n4) (nil)</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>1) \"Object1\"\n2) \"Object2\"\n3) \"49\"\n4) (nil)</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>1) \"Object1\"\n2) \"70\"\n3) \"50\"\n4) \"Object4\"</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>1) \"Object3\"\n2) \"70\"\n3) \"49\"\n4) \"Object4\"</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1711663,"option":"1","correct":false},{"id":1711664,"option":"2","correct":false},{"id":1711665,"option":"3","correct":true},{"id":1711666,"option":"4","correct":false}]},{"q":"<p>To increase the responsiveness of your application, you are using Redis&nbsp;as a cache to store frequently accessed data in memory.&nbsp;You have executed the following commands in <strong>redis-cli</strong>.</p>\n\n<pre class=\"prettyprint\"><code>&gt; MSET key1 \"Object1\" key2 \"Object2\" key3 \"Object3\"\n&gt; MSETNX key2 \"Value1\" key3 \"Value3\"\n&gt; MSETNX key2 \"Value2 key3 \"Value4\" key4 \"Object4\"\n</code></pre>\n\n<p>What is the output of the following command?</p>\n\n<pre class=\"prettyprint\"><code>&gt; MGET key1 key2 key3 key4</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p>1.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>​1) \"Object1\"\n2) \"Value2\"\n3) \"Value4\"\n4) \"Object4\"</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>1) \"Object1\"\n2) \"Value2\"\n3) \"Value3\"\n4) \"Object4\"</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>1) \"Object1\"\n2) \"Value1\"\n3) \"Value3\"\n4) (nil)</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>1) \"Object1\"\n2) \"Object2\"\n3) \"Object3\"\n4) (nil)</code></pre>","a":[{"id":1711659,"option":"1","correct":false},{"id":1711660,"option":"2","correct":false},{"id":1711661,"option":"3","correct":false},{"id":1711662,"option":"4","correct":true}]},{"q":"<p>Caching is an important step in increasing the performance of many applications. It can be difficult to determine which caching solution is the best for your use case. Two likely contenders that will often make an appearance in your search for the answer are <em>Redis</em> vs <em>Memcached</em>. Which of the following data types is the only data type used by Memcached?</p>","a":[{"id":1710785,"option":"Hash","correct":false},{"id":1710786,"option":"List","correct":false},{"id":1710787,"option":"Strings","correct":true},{"id":1710788,"option":"Set","correct":false}]},{"q":"<p>What is the output for the following code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var str = \"Myexcelsheet\"\nlet start = str.index(str.startIndex, offsetBy: 5)\nlet end = str.index(str.endIndex, offsetBy: 0)\nlet range = start..    \nlet subStr = str[range]   \nprint( subStr )</code></pre>\n\n<p> </p>","a":[{"id":1656689,"option":"celsheet","correct":false},{"id":1656690,"option":"elsheet","correct":true},{"id":1656691,"option":"Elshet","correct":false},{"id":1656692,"option":"lsheet","correct":false}]},{"q":"<p>What is the output of the following Swift code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import Foundation\nfunc function( strarray: [String]) -&gt; String {\n    if strarray.count == 0 {\n    return \"\"\n    }\n    var s = strarray[0]\n    \n    for str in strarray {\n    while !str.hasPrefix(s) &amp;&amp; !s.isEmpty{\n    s = String(s.dropLast())\n    }\n    }\n    return s\n}\nvar strs=[\"Swift arrays\",\"Swift strings\",\"Swift functions\"]\nprint(function(strarray:strs))</code></pre>\n\n<p> </p>","a":[{"id":1656657,"option":"Swift","correct":true},{"id":1656658,"option":"Swift strings","correct":false},{"id":1656659,"option":"Swift arrays Swift strings Swift functions","correct":false},{"id":1656660,"option":"Error: no such module 'Foundation'","correct":false}]},{"q":"<p>What type of variable newDelhi is in this code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>​​​​​​​import Foundation\ntypealias Place = [String:Any]\nvar newDelhi:Place</code></pre>\n\n<p><br>\n<br>\n </p>","a":[{"id":1656629,"option":"Any","correct":false},{"id":1656630,"option":"Dictionary<String, Any>","correct":true},{"id":1656631,"option":"String","correct":false},{"id":1656632,"option":"Place","correct":false}]},{"q":"<p>Which options correctly denotes the output of the following code?</p>\n\n<p><strong>Code</strong>:</p>\n\n<pre class=\"prettyprint\"><code>import Foundation\nextension String{\n    func replace(_ dictionary: [String: String]) -&gt; String{\n    var result = String()\n    var i = -1\n    for (of , with): (String, String)in dictionary{\n    i += 1\n    if i&lt;1{\n    result = self.replacingOccurrences(of: of, with: with)\n    }else{\n    result = result.replacingOccurrences(of: of, with: with)\n    }\n    }\n    return result\n    }\n    }\nlet mobile = \"+1 (800) 444-9999\"\nlet dictionary = [\"+\": \"00\", \" \": \"\", \"(\": \"\", \")\": \"\", \"-\": \"\"]\nlet mobileResult = mobile.replace(dictionary)\nprint(mobileResult)</code></pre>\n\n<p> </p>","a":[{"id":1656577,"option":"\"+1 (800) 4449999\"","correct":false},{"id":1656578,"option":"\"001800444999\"","correct":true},{"id":1656579,"option":"\"+1 800444999\"","correct":false},{"id":1656580,"option":"\"1800444999\"","correct":false}]},{"q":"<p>You come across the code snippet given alongside while implementing a StringBuilder. What will happen when you execute this code snippet?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>StringBuilder s1= new StringBuilder(\"1\");\nStringBuilder s2= new StringBuilder(1);\nString s3=s2.substring(0);\nchar s4=s1.charAt(0);\nString s5=s4+\"\".intern();\nString s6=s5.concat(s3.concat(s4+\"\").replace(\"1\", \"2\"));\nSystem.out.println(s6);</code></pre>\n\n<p> </p>","a":[{"id":1656017,"option":"It will output 11","correct":false},{"id":1656018,"option":"It will output 22","correct":false},{"id":1656019,"option":"It will output 12","correct":true},{"id":1656020,"option":"It will output 21","correct":false}]},{"q":"<p>You have written the code snippet given alongside to handle strings in your Java application. What will be the result of the executing the code snippet?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>String str1 = \"Z\";\nString str2 = \"z\";\nString str3 = \"y\";\nstr1.toLowerCase();\nstr3.replace('y', 'z');\nSystem.out.print((str1.equals(str2)) + \",\" + (str2.equals(str3)));</code></pre>\n\n<p> </p>","a":[{"id":1656013,"option":"true\r\nfalse","correct":false},{"id":1656014,"option":"true\r\ntrue","correct":false},{"id":1656015,"option":"false\r\nfalse","correct":true},{"id":1656016,"option":"false\r\ntrue","correct":false}]},{"q":"<p>You run the code snippet shown alongside and find a Type mismatch error. Which of these values need to be assigned in place of X in order to successfully execute the code?</p>\n\n<p><strong>code:</strong></p>\n\n<pre class=\"prettyprint\"><code>X futures = executorService.invokeAll(callableTasks);</code></pre>\n\n<p> </p>","a":[{"id":1655869,"option":"String","correct":false},{"id":1655870,"option":"List<Future<String>>","correct":true},{"id":1655871,"option":"Future<String>","correct":false},{"id":1655872,"option":"Array<Future<String>>","correct":false}]},{"q":"<p>You are collecting a list of employee names from an employee database using the StringBuilder class in Java 8. If you pass a null argument to a method in this class while doing the above operation, which of these exceptions are you likely to encounter?</p>","a":[{"id":1655841,"option":"IllegalArgumentException","correct":false},{"id":1655842,"option":"IllegalReferenceException","correct":false},{"id":1655843,"option":"NullPointerException","correct":true},{"id":1655844,"option":"IndexOutOfBounds Exception","correct":false}]},{"q":"<p>What is the output of the C# code snippet given below?<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Hack\n{\n\tpublic static void Main()\n\t{\n\t\tstring hi = \"hi\";\n        string hack = \"hi hackerearth\";\n        string hack2 = \"hi hackerearth\";\n        string hack3 = hi + \" hackerearth\";\n\n        Console.WriteLine(object.Equals(hack2, hack3));\n        Console.WriteLine(object.ReferenceEquals(hack2 , hack3));\n        Console.WriteLine(hack == hack2);\n        Console.WriteLine(object.ReferenceEquals(hack , hack2));\n\n\t}\n}\n</code></pre>\n\n<p> </p>\n\n<p><br>\n<strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nTrue\nTrue\nFalse\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nTrue\nTrue\nTrue\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nFalse\nTrue\nTrue\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>False\nFalse\nTrue\nFalse\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419602,"option":"1","correct":false},{"id":1419603,"option":"2","correct":false},{"id":1419604,"option":"3","correct":true},{"id":1419605,"option":"4","correct":false}]},{"q":"<p>What is the output of the C# code snippet given below?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Hack\n{\n    static void Main(string[] args)\n    {\n        String string1= \"Hello\";\n        String string2= \"WORLDS\";\n        string2= string.Concat(string1,' ',string2);\n        String string3= string2.TrimStart('H', 'e', 'l', 'R');\n        Console.WriteLine(string3);\n        \n    }\n}\n</code></pre>\n\n<p> </p>","a":[{"id":1419167,"option":"lo WORLDS","correct":false},{"id":1419168,"option":"o WORLDS","correct":true},{"id":1419169,"option":"ello WORLDS","correct":false},{"id":1419170,"option":"Hello WORLDS","correct":false}]},{"q":"<p>If you have executed the following C# code snippet, then which of the following statements is correct?<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System; \nusing System.Text.RegularExpressions; \n \nclass RegExpr\n{ \n    static void Main() \n    { \n        Regex regex = new Regex(@\"[^x-z]\"); \n        Match match = regex.Match(\"xmas\"); \n        if (match.Success) \n        { \n            Console.WriteLine(\"The matching value will be: \" + match.Value); \n            \n        } \n        \n    } \n}</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li> The code produces the following output-<br>\n\t   The matching value will be: xm<br>\n\t </li>\n\t<li>The code produces the following output-<br>\n\t   The matching value will be: ma<br>\n\t </li>\n\t<li>The code produces the following output-<br>\n\t   The matching value will be: m<br>\n\t </li>\n\t<li> The code gives a Compile-Time Error</li>\n</ol>","a":[{"id":1419232,"option":"1","correct":false},{"id":1419233,"option":"2","correct":false},{"id":1419234,"option":"3","correct":true},{"id":1419235,"option":"4","correct":false}]},{"q":"<p>If you have executed the following C# code snippet, then which of the following statements is correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System; \nusing System.Text.RegularExpressions; \n \nclass RegExpr\n{ \n    static void Main() \n    {\n        Regex regex = new Regex(@\"c...r\"); \n        Match match = regex.Match(\"There was a chair lying in his house which was 10 acres wide.\"); \n        if (match.Success) \n        { \n            Console.WriteLine(\"The value which matches is: \" + match.Value); \n            \n        } \n        \n    } \n}</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The code produces the following output -<br>\n\tThe value which matches is: chair<br>\n\t </li>\n\t<li> Code gives Compile-Time Error<br>\n\t </li>\n\t<li>The code produces the following output-<br>\n\tThe value which matches is: acres<br>\n\t </li>\n\t<li> The code does not print anything</li>\n</ol>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1419227,"option":"1","correct":true},{"id":1419228,"option":"2","correct":false},{"id":1419229,"option":"3","correct":false},{"id":1419230,"option":"4","correct":false}]},{"q":"<p>If you have executed the C# code snippet given below, then which of the following statements is correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Test\n{\n\tpublic static void Main()\n\t{\n\t    string s = \"Csharp Programming\";\n\t    \n\t    for (int i = 0; i &lt; s.Length; i++)\n\t    {\n\t        System.Console.Write(s[s.Length - i - 1]);\n\t        \n\t    }\n\t}\n}\n</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The code gives a run time error.<br>\n\t </li>\n\t<li>The code gives a compile-time error.<br>\n\t </li>\n\t<li>The code produces the following output- \n\t<pre class=\"prettyprint\"><code>gnimmargorP prahsC</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419487,"option":"1","correct":false},{"id":1419488,"option":"2","correct":false},{"id":1419489,"option":"3","correct":true},{"id":1419490,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements is a valid use case of the '<strong>@</strong>' symbol used in the C# code snippet given below?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System; \npublic class Examples_Basic\n{ \n    static public void Main() \n    { \n        string[] @for = {\"Apple\", \"Mango\", \"Grape\", \"Banana\"}; \n        foreach (string @as in @for) \n        { \n            Console.WriteLine(\"Element of Array: {0}\", @as);\n            \n        } \n        \n    }\n}</code></pre>\n\n<p> </p>\n\n<p><strong>Statement-</strong></p>\n\n<ol>\n\t<li>Uses line breaks in string literal without making use of any escape sequence<br>\n\t </li>\n\t<li>Prints escape sequences in string literals.</li>\n</ol>","a":[{"id":1419477,"option":"1 and 2","correct":true},{"id":1419478,"option":" Only 1","correct":false},{"id":1419479,"option":" Only 2","correct":false},{"id":1419480,"option":"None of these","correct":false}]},{"q":"<p>You need the scripts to arrange so that the argument strings could be placed within them. What would you do?</p>","a":[{"id":1534504,"option":"Use json_aruguments JSON library in Ansible","correct":false},{"id":1534505,"option":"Set the json_arguments = \"\"\"<<INCLUDE_ANSIBLE_MODULE_JSON_ARGS>>\"\"\"","correct":true},{"id":1534506,"option":"Set the json_arguments = \"\"\"<<ARGS_ARRANGE>>\"\"\"","correct":false},{"id":1534507,"option":"Set the parameter property as arrange","correct":false}]},{"q":"<p>You are given the following Python 3 code. Determine the output corresponding to the provided input:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>dp = [0] * 3\nfor i in input():\n        if i == 'a':\n                dp[2] = max(dp) + 1\n                dp[0] += 1\n        else:\n                dp[1] = max(dp[0],dp[1]) + 1\nprint(max(dp))</code></pre>\n\n<p><strong>Input</strong></p>\n\n<pre class=\"prettyprint\"><code>abba</code></pre>\n\n<p> </p>","a":[{"id":730512,"option":"2","correct":false},{"id":730513,"option":"4","correct":true},{"id":730514,"option":"3","correct":false},{"id":730515,"option":"5","correct":false}]},{"q":"<p>In Python 3, which of the following statements represents the <strong>rstrip()</strong> function correctly?</p>\n\n<ol>\n\t<li>It removes spaces from the right side of the string.</li>\n\t<li>It removes any leading spaces in the string.</li>\n\t<li>It does not accept any arguments.</li>\n</ol>","a":[{"id":1121761,"option":"1 and 2","correct":false},{"id":1121762,"option":"2 and 3","correct":false},{"id":1121763,"option":"1 and 3","correct":true},{"id":1121764,"option":"None of these","correct":false}]},{"q":"In Go, which of the following libraries is used to manipulate strings?","a":[{"id":599918,"option":"unicode","correct":false},{"id":599919,"option":"regexp","correct":false},{"id":599920,"option":"strings","correct":false},{"id":599921,"option":"All of these","correct":true}]},{"q":"<p>Is variable name <strong>iCount </strong>same as <strong>icount</strong><strong> </strong>in <strong>'go' </strong>programming?</p>\n\n<p style=\"margin-left: 40px;\">I:  Yes, since both<strong> iCount </strong>and <strong>icount</strong> are same as go is not a case-sensitive programming language.</p>\n\n<p style=\"margin-left: 40px;\">II: No, since both <strong>iCount </strong>and<strong> </strong><strong>icount</strong><strong> </strong>are different as go is case-sensitive programming language.</p>","a":[{"id":579493,"option":"Statement I is correct","correct":false},{"id":579494,"option":"Statement II is correct","correct":true},{"id":579495,"option":"Both I and II are correct.","correct":false},{"id":579496,"option":"None of these are correct.","correct":false}]},{"q":"<p>Which of the following statements about string literals is correct:</p>\n\n<ol>\n\t<li><strong>Raw string literals</strong>: The value of a string literal is the string that is composed of an uninterrupted character sequence within backquotes.</li>\n\t<li><strong>Interpreted string literals</strong>: The value of a string literal is the text which does not have newlines and which is enclosed within the double quotes.</li>\n</ol>","a":[{"id":579403,"option":"1","correct":false},{"id":579404,"option":"2","correct":false},{"id":579405,"option":"Both of these","correct":true},{"id":579406,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    #include &lt;string.h&gt;\n    int main(void)\n    {\n        char *str1 = \"Hacker\", *str2 = \"ac\", *ptr;\n        ptr = strstr(str1, str2);\n        printf(\"%s\\n\", ptr);\n    }\n</code></pre>","a":[{"id":125576,"option":"ac","correct":false},{"id":125577,"option":"acker","correct":true},{"id":125578,"option":"ker","correct":false},{"id":125579,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        char *str = \"hello, world\";\n        char *str1 = \"hello, world\";\n        if (strcmp(str, str1)==0)\n            printf(\"equal\");\n        else\n            printf(\"unequal\");\n    }\n</code></pre>","a":[{"id":123576,"option":"unequal","correct":false},{"id":123577,"option":"equal","correct":true},{"id":123578,"option":"0","correct":false},{"id":123579,"option":"1","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;string.h&gt;\n\nint main()\n{\n    char str1[] = \"garden\";\n\n    if (strcmp(str1, \"garden\") == 0)\n        printf(\"strlen(str1)\\n\");\n    else\n        printf(\"Not equal\\n\");\n}\n</code></pre>","a":[{"id":123596,"option":"6","correct":false},{"id":123597,"option":"Not equal","correct":false},{"id":123598,"option":"Compilation error","correct":false},{"id":123599,"option":"strlen(str1)","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        printf(\"%d\\n\", strlen(\"1010101000/n\"));\n    }\n</code></pre>","a":[{"id":125596,"option":"10","correct":false},{"id":125597,"option":"11","correct":false},{"id":125598,"option":"12","correct":true},{"id":125599,"option":"13","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n    char str[] = \"hack\";\n    int i;\n    printf(\"\\n%c%c%c%c\", str[i], *(str+i), *(i+str), i[str]);\n    }\n</code></pre>","a":[{"id":126220,"option":"h h h Garbage value","correct":false},{"id":126221,"option":"hhhh","correct":true},{"id":126222,"option":"Compilation error","correct":false},{"id":126223,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    char str[11] = \"hacker\";\n    char *str1 = \"world\";\n    strcat(str, str1);\n    printf(\"%s %d\", str, str[1]);\n}\n</code></pre>","a":[{"id":123600,"option":"hackerworld  a","correct":false},{"id":123601,"option":"hackerworld 97","correct":true},{"id":123602,"option":"Compilation error","correct":false},{"id":123603,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        char *str = \"hack,world\";\n        char *str1 = \"hack,world\";\n        if (strcmp(str, str1))\n            printf(\"equal\");\n        else\n            printf(\"unequal\");\n    }\n</code></pre>","a":[{"id":125924,"option":"equal","correct":false},{"id":125925,"option":"unequal","correct":true},{"id":125926,"option":"Compilation error","correct":false},{"id":125927,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following Ruby code?</p>\n\n<p><strong>Code</strong>:</p>\n\n<pre class=\"prettyprint\"><code>puts [\"Too\", \"live\", \"To\", \"Love,\", \"Too\", \"hard\", \"To\", \"Die\"].join(\" \")\n</code></pre>","a":[{"id":83332,"option":"\"Too live, To  Love, Too  hard, To Die\"","correct":false},{"id":83333,"option":"\"Too live To, Love Too hard To Di \"","correct":false},{"id":83334,"option":"Too live To Love, Too hard To Die","correct":true},{"id":83335,"option":"Error","correct":false}]},{"q":"<p>In Python 3, which of the following are important points while you convert a list to a string:</p>\n\n<ol>\n\t<li>Using the .join method</li>\n\t<li>You are required to convert integer elements of the list into strings before starting the conversion</li>\n\t<li>Using the str() function on the elements of the list</li>\n\t<li>It is not possible to convert lists into strings</li>\n</ol>","a":[{"id":1121749,"option":"1 and 2","correct":false},{"id":1121750,"option":"2 and 3","correct":false},{"id":1121751,"option":"1, 2, and 3","correct":true},{"id":1121752,"option":"All of these","correct":false}]},{"q":"<p>In Python, consider the following list. If you perform the <strong>Join</strong> method on this list, what is the output:</p>\n\n<p><strong>List</strong></p>\n\n<pre class=\"prettyprint\"><code>L = ['A', 'B', 'C']\n</code></pre>\n\n<p><strong>Method</strong></p>\n\n<pre class=\"prettyprint\"><code>print('***'.join(L))</code></pre>\n\n<p> </p>","a":[{"id":1121713,"option":"'ABC***'","correct":false},{"id":1121714,"option":"'***ABC'","correct":false},{"id":1121715,"option":"'A***B***C'","correct":true},{"id":1121716,"option":"'A*B*C '","correct":false}]},{"q":"<p>Which of the following statements about line 2 in this Python code is correct:</p>\n\n<pre class=\"prettyprint\"><code>a = ‘HackerEarth’    #line1\nb = a[::-1]    #line2</code></pre>\n\n<p> </p>","a":[{"id":1121709,"option":"Slices HackerEarth into Earth Hacker","correct":false},{"id":1121710,"option":"Reverses the string into htraErekcaH","correct":true},{"id":1121711,"option":"Rearranges the characters of the string into rekcaH htraE","correct":false},{"id":1121712,"option":"None of these","correct":false}]},{"q":"<p>In C++, which of the following prefix is used to declare a <strong>wide</strong> character in a string literal?</p>","a":[{"id":133979,"option":"L prefix ","correct":true},{"id":133980,"option":"l prefix ","correct":false},{"id":133981,"option":"W prefix ","correct":false},{"id":133982,"option":"None of these ","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    char *getString()\n    {\n        char *str = \"Nice Coding\";\n        return str;\n    }\n    int main()\n    {\n        printf(\"%s\", getString());\n    }\n</code></pre>","a":[{"id":126152,"option":"Run-time error","correct":false},{"id":126153,"option":"Compilation error","correct":false},{"id":126154,"option":"Nice Coding","correct":true},{"id":126155,"option":"Garbage value","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;string.h&gt;\n    #include &lt;stdio.h&gt;\n\n    int main(void)\n    {\n        char text[] = \"I learn through Hackerearth.com\";\n        char *p, c = ' ';\n        p= strrchr(text, c);\n        if (p)\n            printf(\"%d\\n\",p-text);\n        else\n            printf(\"Not found \");\n    }\n</code></pre>","a":[{"id":125568,"option":"14","correct":false},{"id":125569,"option":"15","correct":true},{"id":125570,"option":"8","correct":false},{"id":125571,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n    void main()\n    {\n        char *s= \"hacker\";\n        char *p = s;\n        printf(\"%c\\t%c\", *(p + 3),  s[1]);\n    }\n</code></pre>","a":[{"id":123848,"option":"e    a","correct":false},{"id":123849,"option":"k\ta","correct":true},{"id":123850,"option":"Compilation fails","correct":false},{"id":123851,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        char str[] = \"HackerCode\";\n        printf(\"%s \",&amp;str[2]);\n        printf(\"%s \",str);\n        printf(\"%s \",&amp;str);\n    }\n</code></pre>","a":[{"id":125884,"option":"kerCode HackerCode HackerCode ","correct":false},{"id":125885,"option":"ckerCode    HackerCode    HackerCode ","correct":true},{"id":125886,"option":"Compilation error","correct":false},{"id":125887,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    void main()\n    {\n        char str[10];\n        int i;\n        for(i=0;i&lt;5;i++)\n        i[str] = 'A';\n        i[str]='\\0';\n        printf(\"%s\",str);\n    }\n</code></pre>","a":[{"id":125880,"option":"Garbage value","correct":false},{"id":125881,"option":"Compilation error","correct":false},{"id":125882,"option":"AAAAA","correct":true},{"id":125883,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        char dest[] = {97, 97, 0};\n        char src[] = \"aaa\";\n        int i;\n        if((i = memcmp(dest, src, 2))==0)\n        printf(\"Hacking\");\n        else\n            printf(\"Missed\");\n    }\n</code></pre>","a":[{"id":125072,"option":"Missed","correct":false},{"id":125073,"option":"Hacking","correct":true},{"id":125074,"option":"Compilation error","correct":false},{"id":125075,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following PHP code:</p>\n\n<pre class=\"prettyprint\"><code>&lt;?php\n    for ($z = 1; $z &lt; 10;++$z)\n    {\n        print \"*\\t\";\n    }\n?&gt;\n</code></pre>","a":[{"id":61550,"option":"*\\t*\\t*\\t*\\t*\\t*\\t*\\t*\\t*\\t*\\t","correct":false},{"id":61551,"option":"**********","correct":false},{"id":61552,"option":"**********  **********","correct":false},{"id":61553,"option":"*  *  *  *  *  *  *  *  *  ","correct":true}]},{"q":"<p>Which of the following statements is correct if the C# code given below is executed?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\npublic class Hackerearth\n{    \n    public static string hack;\n    \n    public static void Main(string[] args)\n    {\n        Hackerearth h = new Hackerearth();\n        h.hackOpr();\n    }\n        \n\n    public Hackerearth()\n    {\n        if (hack == null)\n        {\n            hack = \"hackerearth\";\n        }\n    }\n        \n    static  Hackerearth()\n    {\n        if (hack == null)\n        {\n            hack = \"hello hackerearth\";\n        }\n            \n    }\n\n    public void hackOpr()\n    {\n        if (String.Equals(hack, \"hackerearth\"))\n        {\n            hack = \"hi hackerearth\";                \n        }\n        Console.WriteLine(hack);\n\n    } \n    \n}</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<p>The code prints-</p>\n\n\t<pre class=\"prettyprint\"><code>hello hackerearth\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>The code prints-</p>\n\n\t<pre class=\"prettyprint\"><code>hackerearth\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>The code prints-</p>\n\n\t<pre class=\"prettyprint\"><code>hi hackerearth\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>​ The code does not print anything ​</p>\n\t</li>\n</ol>","a":[{"id":1419617,"option":"2","correct":false},{"id":1419618,"option":"3","correct":false},{"id":1419619,"option":"1","correct":true},{"id":1419620,"option":"4","correct":false}]},{"q":"<p>Which of the following syntaxes can be used in place of XXX in the JavaScript code snippet given below to produce the output as follows?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function* CharacterRange(a, b)\n{\n    for (let i = a; i &lt;= b; i += 1)\n    {\n        yield i;        \n    }    \n}\n\nfunction GenerateRange(a, b)\n{\n    if(typeof a === 'string')\n    {\n        let res = XXX\n        console.log(res);        \n    }\n    else \n    {\n        let res = [...CharacterRange(a, b)];\n        console.log(res);        \n    }    \n}\nGenerateRange(1, 5);\nGenerateRange('A', 'G');</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>[ 1, 2, 3, 4, 5 ]\n[\n  'A', 'B', 'C',\n  'D', 'E', 'F',\n  'G'\n]</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[...GenerateRange(b.charCodeAt(), a.charCodeAt())].map(n =&gt; String.fromCharCode(n));</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[...CharacterRange(b.charCodeAt(), a.charCodeAt())].map(n =&gt; String.fromCharCode(n));</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[...GenerateRange(a.charCodeAt(i), b.charCodeAt(i))].map(n =&gt; String.fromCharCode(n));</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[...CharacterRange(a.charCodeAt(), b.charCodeAt())].map(n =&gt; String.fromCharCode(n));</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420412,"option":"1","correct":false},{"id":1420413,"option":"2","correct":false},{"id":1420414,"option":"3","correct":false},{"id":1420415,"option":"4","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>s = 'HackerEarth-testing'\nL = \"-\"\nindex = None\nfor i in range(len(s)): \n    if L == s[i]: \n        index = i \nres = s[:index] \nprint(res)  \n</code></pre>\n\n<p> </p>","a":[{"id":1121805,"option":"Hacker-testing","correct":false},{"id":1121806,"option":"HackerEarth-test","correct":false},{"id":1121807,"option":"HackerEarth","correct":true},{"id":1121808,"option":"Error","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>a = ['a','e','i','o','u','A','E','I','O','U',' ']\nb = \"HackerEarth Tests\"\nfor i in a:\n  if i not in b:\n    a = a[:a.index(i)]+a[a.index(i)+1:]\nprint(a)\n</code></pre>\n\n<p> </p>","a":[{"id":1121801,"option":"['e', 'i', 'A', 'E ']  ","correct":false},{"id":1121802,"option":"['a', 'e', 'E', '  ']  ","correct":true},{"id":1121803,"option":"['a', 'i', 'E', 'O'] ","correct":false},{"id":1121804,"option":"['a', 'e', 'E', 'I']","correct":false}]},{"q":"<p>What is the output of the following C++ code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\n    char *ptr;\n    ptr = \"hello\";\n    cout&lt;&lt;*ptr;\n}</code></pre>","a":[{"id":157963,"option":"h","correct":true},{"id":157964,"option":"hello","correct":false},{"id":157965,"option":"Error","correct":false},{"id":157966,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following PHP code:</p>\n\n<pre class=\"prettyprint\"><code>&lt;?php\n    $val = \"Hackathons\";\n    echo \"Challenges\".$val;\n?&gt;\n</code></pre>","a":[{"id":61582,"option":"HackathonsChallenges","correct":false},{"id":61583,"option":"ChallengesHackathons","correct":true},{"id":61584,"option":"Error ","correct":false},{"id":61585,"option":"Challenges$val","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nvoid main()\n{\nchar str[40],one,two;\nstrcpy(str,\"This is a character string.\");\none = str[0];\ntwo = *str;\nprintf(\"%c %c\\n\",one,two);\none = str[8];\ntwo = *(str+8);\nprintf(\"%c %c\",one,two);\n}</code></pre>\n\n<p> </p>","a":[{"id":598953,"option":"T T\r\nc c","correct":false},{"id":598954,"option":"T T\r\na a","correct":true},{"id":598955,"option":"null null\r\na a","correct":false},{"id":598956,"option":"T null\r\na null","correct":false}]},{"q":"<p>What is the output of the following Ruby code:</p>\n\n<pre class=\"prettyprint\"><code>puts [\"roof\", \"top\"].include?(\"bar\")\n</code></pre>","a":[{"id":83324,"option":"Bar ","correct":false},{"id":83325,"option":"True ","correct":false},{"id":83326,"option":"False ","correct":true},{"id":83327,"option":"Error ","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    char *str = \"Hacker\";\n    char *str1 = \"Earth\";\n    printf(\"%d %d\", sizeof(str), sizeof(str1));\n}\n\n</code></pre>","a":[{"id":122284,"option":"4 8","correct":false},{"id":122285,"option":"8 8","correct":true},{"id":122286,"option":"8 4","correct":false},{"id":122287,"option":"4 4","correct":false}]},{"q":"<p>In the C# code snippet given below, which of the following syntaxes can be used in place of XXX to produce output as follows?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Hack\n{\n\tpublic static void Main()\n\t{\n\t    System.Text.StringBuilder s = new System.Text.StringBuilder(\"Rats: they like fish\");\n\t    XXX\n        System.Console.WriteLine(s.ToString());\n\t    \n\t}\n}\n</code></pre>\n\n<p><br>\n<br>\n<strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>Cats: they like fish</code></pre>\n\n<p><br>\n<br>\n<br>\n<strong>Syntaxes:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>s[0] = 'C';</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>s[0].replace = 'C';</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>s.Replace(s[0]) = 'C';</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419492,"option":"1","correct":true},{"id":1419493,"option":"2","correct":false},{"id":1419494,"option":"3","correct":false},{"id":1419495,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>s = 'HackerEarth Python Testing' \nnVowels = 0 \nnCons = 0 \nfor char in s:   \n    if char == 'a' or char == 'e' or char == 'i' or char == 'o'  or char == 'u': \n        nVowels += 1 \n    elif char == 'o' or char == 'M': \n        print(char) \n    else: \n        nCons -= 1 \nprint(nVowels) \n</code></pre>\n\n<p> </p>","a":[{"id":1121781,"option":"10","correct":false},{"id":1121782,"option":"6","correct":true},{"id":1121783,"option":"3","correct":false},{"id":1121784,"option":"14","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth \n{\n\n\tpublic static void main(String[] args)\n\n\t{\n\t    String string = \"Python\";\n\t    System.out.println(string.substring(3, 2));\n\n\t}\n\n}</code></pre>\n\n<p> </p>","a":[{"id":678010,"option":"on","correct":false},{"id":678011,"option":"ho","correct":false},{"id":678012,"option":"Compilation error","correct":false},{"id":678013,"option":"Run-time error","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>greeting = 'Hacker Earth!'\ncount = 0\nfor letter in greeting:\n    count += 1\n    if count % 2 == 0:\n        print(letter, end= ' ')\n    print(letter, end= ' ')\n</code></pre>\n\n<p> </p>","a":[{"id":1121769,"option":"H a a c k k e r r   E E a r r t h h ! ","correct":true},{"id":1121770,"option":"H a a c k k e r  E E a r r t h h ! ","correct":false},{"id":1121771,"option":"H a c k e r  E a r t h ! ","correct":false},{"id":1121772,"option":"H a a c k k e r r   E E a r r t h h ! !","correct":false}]},{"q":"<p>What is the output of the following C++ code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;iostream&gt; \nusing namespace std; \n\nclass Program { \n\tint value; \npublic: \n\tProgram(int v = 0) {value = v;} \n\tint getValue() const {return value;} \n}; \nint main() { \n\tProgram t(20); \n\tcout&lt;&lt;t.getValue(); \n\treturn 0; \n} </code></pre>\n\n<p> </p>","a":[{"id":147430,"option":"20","correct":true},{"id":147431,"option":"0","correct":false},{"id":147432,"option":"Compiation error","correct":false},{"id":147433,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nchar *names[] = {\"Alice\", \"Smith\", \"Jones\", \"Mike\"};\nchar **new_name[] = {names+3, names+2, names+1, names};\nchar ***final_str = new_name;\n\nint main()\n{\n    printf(\"%s \", **++final_str);\n    printf(\"%s \", *--*++final_str+3);\n    return 0;\n}\n</code></pre>","a":[{"id":600298,"option":"Jones ce","correct":true},{"id":600299,"option":"Smith ce","correct":false},{"id":600300,"option":"Jones Mike","correct":false},{"id":600301,"option":"Mike Jones","correct":false}]},{"q":"<p>In PHP, which of the following functions is used to remove white spaces from the beginning and the end of a string?</p>","a":[{"id":61630,"option":"trim_str","correct":false},{"id":61631,"option":"strip_str","correct":false},{"id":61632,"option":"strip()","correct":false},{"id":61633,"option":"trim()","correct":true}]},{"q":"<p>What is the output of the following C++ code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\nint main()\n{\n    string s = \" Welcome to Hacker Erath\";\n    s.erase(remove(s.begin(), s.end(), ' '), s.end());\n    cout &lt;&lt; s &lt;&lt; endl;\n}\n</code></pre>","a":[{"id":143482,"option":"Compilation error","correct":false},{"id":143483,"option":"HackerEarth","correct":false},{"id":143484,"option":"Welcometo","correct":false},{"id":143485,"option":"WelcometoHackerEarth","correct":true}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\nclass HackerEarth {\n\n    public static void main(String args[])\n\n    {\n\n        StringBuilder b = \"hacker\";\n        b.append(4).deleteCharAt(3).delete(3, b.length() - 1);\n        System.out.println(b);\n\n    }\n\n}\n</code></pre>\n\n<p> </p>","a":[{"id":691082,"option":"hacker","correct":false},{"id":691083,"option":"hac","correct":false},{"id":691084,"option":"Compile time error","correct":true},{"id":691085,"option":"hac4","correct":false}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>import java.util.Collections;\nimport java.util.*;\n\npublic class MyString \n{\n\tpublic MyString(String val) \n\t{\n\tthis.val = val;\n\t}\nprivate String val;\n\npublic static void main(String args[]) \n{\n\tMap&lt;String, Integer&gt; map1 = new HashMap&lt;String, Integer&gt;();\n\tString str1 = new String(\"Java OOPs!\");\n\tString str2 = new String(\"Java OOPs\");\n\tmap1.put(str1, new Integer(10));\n\tmap1.put(str2, new Integer(20));\n\tMap&lt;MyString, Integer&gt; map2 = new HashMap&lt;MyString, Integer&gt;();\n\tMyString str3 = new MyString(str1);\n\tMyString str4 = new MyString(str2);\n\tmap2.put(str3, new Integer(10));\n\tmap2.put(str4, new Integer(20));\n\tSystem.out.println(map1.get(str1));\n\tSystem.out.println(map2.get(str3));\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":579269,"option":"10\r\n20","correct":false},{"id":579270,"option":"20\r\n10","correct":false},{"id":579271,"option":"10\r\n10 ","correct":true},{"id":579272,"option":"20\r\n20","correct":false}]},{"q":"<p>What is the output of the following Java 8 code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Hackerearth\n{\n  public static void main (String[] args) \n  {\n    String Fruits = new String(\"Mango,Banana,Apple\");\n    Fruits = Fruits.replaceAll(\",\", \":\");\n    System.out.println(Fruits);\n  }  \n}</code></pre>","a":[{"id":552696,"option":"Mango : Banana : Apple","correct":false},{"id":552697,"option":"Mango:Banana:Apple","correct":true},{"id":552698,"option":"Runtime Error","correct":false},{"id":552699,"option":"Syntax Error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth \n{\n\tpublic static void main(String[] args)\n\t{\n\t\tSystem.out.println(\"abc\".equals(\"ABC\"));\t\n\n\t}\n\n}</code></pre>\n\n<p> </p>","a":[{"id":678014,"option":"true","correct":false},{"id":678015,"option":"false","correct":true},{"id":678016,"option":"Compilation error","correct":false},{"id":678017,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following Java 8 code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\ninterface StrFunc\n{\n  String disp(String n);\n}\nclass Main\n{\n    public static void main(String args[])\n    {\n        StrFunc output = (str) -&gt; {\n        String result = \"\";\n        int a;\n        for(a = str.length()-1; a &gt;= 0; a--)\n            result += str.charAt(a);\n        return result;\n        };\n    System.out.println(output.disp(\"HACKEREARTH\"));\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":552892,"option":"HTRAEREKCAH","correct":true},{"id":552893,"option":"HACKEREARTH","correct":false},{"id":552894,"option":"HCERAT","correct":false},{"id":552895,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>\n class HackerEarth\n{\n\tstatic String strVal;\n\tpublic static void main(String[] args) \n\t{\n\t\tHackerEarth h1 = new HackerEarth();\n\t\tstrVal = h1.getString(\"Program\");\n\t\tSystem.out.print(\" \"+strVal);\n\t}\n\npublic static String getString(String str){\n\n   StringBuffer strBuf = new StringBuffer(str.length());\n\n   for(int i=str.length() -1 ; i&gt;0;i--)\n   {\n     strBuf.append(str.charAt(i));\n   } \n   return strBuf.toString();\n}\t\n}</code></pre>\n\n<p> </p>","a":[{"id":579330,"option":"margor","correct":true},{"id":579331,"option":"margorP","correct":false},{"id":579332,"option":"margo","correct":false},{"id":579333,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class Main \n{\n\tpublic static void main(String[] args)\n\t{\n\t\tStringBuilder sb = new StringBuilder();\n\t\tsb.append(\"aaa\").insert(1, \"bb\").insert(4, \"ccc\");\n\t\tSystem.out.println(sb); \n\t}\n}</code></pre>\n\n<p> </p>","a":[{"id":678172,"option":"bbaaaccc","correct":false},{"id":678173,"option":"bbcccaaa","correct":false},{"id":678174,"option":"abbaaccc","correct":false},{"id":678175,"option":"abbaccca","correct":true}]},{"q":"<p>What is the output of the following C code snippet:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nint main()\n{\n     static char a[]=\"hacker\";\n     printf(\"%d\",strlen(a));\n     printf(\"%c\",*(a+strlen(a)-1));\n}</code></pre>","a":[{"id":122232,"option":"7r","correct":false},{"id":122233,"option":"6h","correct":false},{"id":122234,"option":"7h","correct":false},{"id":122235,"option":"6r","correct":true}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n{\n\tprivate boolean[] arr = new boolean[2]; // An instance variable\n\tpublic HackerEarth() \n\t{\n\t\tfor (int i = 0; i &lt; arr.length; i++) \n\t\t{\n\t\t\tSystem.out.println(\" \"+arr[i]);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) \n\t{\n\t\tnew HackerEarth();\n\t\tString[] str = new String[2]; \n\t\tfor (int i = 0; i &lt; str.length; i++) \n\t\t{\n\t\t\tSystem.out.println(\" \" + str[i]);\n\t\t}\n\t}\n}</code></pre>\n\n<p> </p>","a":[{"id":582794,"option":"false\r\nfalse\r\nnull\r\nnull","correct":true},{"id":582795,"option":"true\r\ntrue\r\nnull\r\nnull","correct":false},{"id":582796,"option":"0\r\n0\r\nnull\r\nnull","correct":false},{"id":582797,"option":"null\r\nnull\r\n0\r\n0","correct":false}]}]