[{"q":"<p>Suppose you have a Linear Layout that has two buttons with vertical orientation. The XML code is given here. Now, you should make navigation focus to cycle from top to bottom or vice versa. The code is not doing it automatically.</p>\n\n<pre class=\"prettyprint\"><code>&lt;LinearLayout android:orientation=\"vertical\"&gt;\n&lt;Button android:id=\"@+id/top\" … /&gt; \n&lt;Button android:id=\"@+id/bottom\" … /&gt;\n&lt;/LinearLayout&gt;</code></pre>\n\n<p>Find the correct code snippet for achieving the desired result.&nbsp;</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>&lt;LinearLayout\n android:orientation=\"vertical\"&gt;\n &lt;Button android:id=\"@+id/top\"\n android:cycleNext=\"@+id/bottom\"\n … /&gt;\n &lt;Button android:id=\"@+id/bottom\"\n android:cycleNext=\"@+id/top\"\n … /&gt;\n&lt;/LinearLayout&gt;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>&lt;LinearLayout\n android:orientation=\"vertical\"&gt;\n &lt;Button android:id=\"@+id/top\"\n android:nextFocus=\"@+id/bottom\"\n … /&gt;\n &lt;Button android:id=\"@+id/bottom\"\n android:nextFocus=\"@+id/top\"\n … /&gt;\n&lt;/LinearLayout&gt;</code></pre>\n\n<p>&nbsp;3.</p>\n\n<pre class=\"prettyprint\"><code>&lt;LinearLayout\n android:orientation=\"vertical\"&gt;\n &lt;Button android:id=\"@+id/top\"\n android:nextFocusTop=\"@+id/bottom\"\n … /&gt;\n &lt;Button android:id=\"@+id/bottom\"\n android:nextFocusBottom=\"@+id/top\"\n … /&gt;\n&lt;/LinearLayout&gt;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>&lt;LinearLayout\n android:orientation=\"vertical\"&gt;\n &lt;Button android:id=\"@+id/top\"\n android:nextFocusUp=\"@+id/bottom\"\n … /&gt;\n &lt;Button android:id=\"@+id/bottom\"\n android:nextFocusDown=\"@+id/top\"\n … /&gt;\n&lt;/LinearLayout&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1770532,"option":"1","correct":false},{"id":1770533,"option":"2","correct":false},{"id":1770534,"option":"3","correct":false},{"id":1770535,"option":"4","correct":true}]},{"q":"<p>You are using an event handler in your android application. The provided handler is called when a key up the event occurs but it should be called when a new key event occurs.</p>\n\n<pre class=\"prettyprint\"><code>public boolean onKeyUp(int keyCode, KeyEvent event){}</code></pre>\n\n<p>Which of the following method will give the desired functionality?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>public boolean onKeyLongPress(int keyCode, KeyEvent event){}</li>\n\t<li>public boolean onKeyDown(int keyCode, KeyEvent event){}</li>\n\t<li>public boolean onKeyMultiple(int keyCode, KeyEvent event){}</li>\n\t<li>public boolean onKeyPreIme(int keyCode, KeyEvent event){}</li>\n</ol>","a":[{"id":1770484,"option":"1","correct":false},{"id":1770485,"option":"2","correct":true},{"id":1770486,"option":"3","correct":false},{"id":1770487,"option":"4","correct":false}]},{"q":"<p>You want to implement an event listener in an android application which will be triggered upon the user touching or clicking on a button widget. The code given is wrong for the above functionality.&nbsp;Assume button as b1.</p>\n\n<pre class=\"prettyprint\"><code>b1.setOnFocusChangeListener(new View.OnFocusChangeListener() {\n public void onFocusChange(View v){}}</code></pre>\n\n<p>Find the correct code snippet for achieving the desired result.</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>b1.setOnClickListener(new View.OnClickListener() {\n    public void onClick(View v){}}</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>b1.setOnFocusChangeListener(new View.OnFocusChangeListener() {\n public void onKey(View v){}}</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>b1.setOnTouchListener(new View.OnTouchListener() {\n public void onTouch(View v){}}</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>b1.setOnButtonListener(new View.OnButtonListener() {\n  public void onButton(View v){}}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1770480,"option":"1","correct":true},{"id":1770481,"option":"2","correct":false},{"id":1770482,"option":"3","correct":false},{"id":1770483,"option":"4","correct":false}]},{"q":"<p>You wrote a giant function with a lot of nested callbacks in your app. You have been asked to make it cleaner and crisp by using custom event listeners. He/She explained further that when a function is done in the callback, instead of putting a chunk of code, it just emits an event, and then the listener will run. The problem occurs in implementing custom event listeners. How should one accomplish this?</p>","a":[{"id":1654213,"option":"You can use app extend for EventEmitter in connect framework to implement custom events.","correct":false},{"id":1654214,"option":"You can create an EventEmitter object and call emit() on it.","correct":true},{"id":1654215,"option":"You can set events by using a callback to implement custom events.","correct":false},{"id":1654216,"option":"You can use function.emit() in your app to implement custom events.","correct":false}]},{"q":"<p>You are learning event handling in nodejs through playing around with listeners. You gave reference to the current emitter object to the other code and now it is all messed up.<br>\nTo make your project run smoothly, you need to get rid of the event listeners. How will you remove all the event listeners in your project?</p>","a":[{"id":1654209,"option":"You can do it using the public API like this:\r\nemitter.removeAllListeners(eventName);","correct":false},{"id":1654210,"option":"You can do it using the public API like this:\r\nevent.removeAllListeners();","correct":false},{"id":1654211,"option":"You can do it using the public API like this:\r\nemitter.removeAllListeners();","correct":true},{"id":1654212,"option":"Just replace the eventEmitter object with a new one that would have no listeners registered on it.","correct":false}]},{"q":"<p>You are new at javascript and its implications for programming. You created two modules \"person\" and \"group\", with \"group\" depending on \"person\" and have the main program main.js as a separate module. When you execute \"node ./main.js\", the message tells that the event is generated, but the event is not caught. How should you set up the modules so that they can generate events in one module and catch them in another?</p>","a":[{"id":1654217,"option":"You could set the listener in the group module and bound it to the \"personEvents\" variable created in the person module in the main.js.","correct":false},{"id":1654218,"option":"You could get around this by passing the Group object to Person when you create it in main.js.","correct":false},{"id":1654219,"option":"You could get around this by passing the Person object to Group when you create it in main.js.","correct":true},{"id":1654220,"option":"You could set the listener in the person module and bound it to the \"groupEvents\" variable created in the group module in the main.js.","correct":false}]},{"q":"<p>In AngularJS, if you are working on various event handlers, then which of these statements about the following directive are correct:</p>\n\n<p><strong>Directive</strong></p>\n\n<pre class=\"prettyprint\"><code>ngOn</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The ngOn directive adds an event listener to a DOM element through <strong>angular.element().on()</strong> and evaluates an expression when an event is fired.</li>\n\t<li>This directive attaches a controller class to the view. </li>\n\t<li>\n\t<p>This directive allows adding listeners for arbitrary events by including the event name in the attribute.</p>\n\t</li>\n</ol>","a":[{"id":1582642,"option":"1 and 2","correct":false},{"id":1582643,"option":"2 and 3","correct":false},{"id":1582644,"option":"1 and 3","correct":true},{"id":1582645,"option":"None of these","correct":false}]},{"q":"<p>In AngularJS, you are working on event handling. You have implemented the below code that can show the password entered by the user in the text field on clicking the button named <strong>Show password </strong>as an alert box. If you are required to implement the below code, then which of the following statements about the directives in this code are correct:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-app=\"myHackApp\" &gt;\n&lt;h1&gt;Event handling at HackerEarth: &lt;/h1&gt;\n    &lt;div ng-controller=\"myHackController\"&gt;\n        Enter Password: &lt;input type=\"password\" ng-model=\"password\"/&gt;&lt;br /&gt;\n        &lt;button ng-click=\"MyHackMessage(password)\"&gt;Show password&lt;/button\n    &lt;/div&gt;\n    &lt;script&gt;\n        var myHackApp = angular.module('myHackApp', []);\n        myHackApp.controller(\"myHackController\", function ($scope, $window) {\n            $scope.MyHackMessage = function (myhackvalue) {\n\t\t\t\talert(myhackvalue)\n            }\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The ng-model directive is used to call a <strong>MyHackMessage()</strong> function with the 'password' parameter when a user clicks a button.</li>\n\t<li>The <strong>MyHackMessage()</strong> function is attached to a $scope object in <strong>myHackController</strong>, so it will be accessible from button click as button comes under <strong>myHackController</strong>.</li>\n\t<li>A 'password' is a model property defined using the ng-model directive in the input box.</li>\n</ol>","a":[{"id":1582638,"option":"1 and 2","correct":false},{"id":1582639,"option":"2 and 3","correct":true},{"id":1582640,"option":"1 and 3","correct":false},{"id":1582641,"option":"All of these","correct":false}]},{"q":"<p>Ben was developing a game where the player should tap the bubbles and then the bubbles will explode. So he developed the game using the Event Listeners in Android. Which of the following statements about the Event Listeners methods is true?</p>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The <strong>onLongClick() </strong>method returns a boolean value.<br>\n\t </li>\n\t<li>The <strong>onClick()</strong> method does not return any value.<br>\n\t </li>\n\t<li>The <strong>onFocusChanged()</strong> method returns a boolean value.<br>\n\t </li>\n\t<li>The <strong>onFocusChanged()</strong> method is marked by a protected access specifier.</li>\n</ol>","a":[{"id":1565643,"option":"1, 2 and 4","correct":true},{"id":1565644,"option":"1, 2 and 3","correct":false},{"id":1565645,"option":"2, 3 and 4","correct":false},{"id":1565646,"option":"All of these","correct":false}]},{"q":"<p>In Android, which of these is associated with a <strong>Trigger</strong> sensor?</p>","a":[{"id":34260,"option":"TriggerSensormanager\r\n   ","correct":false},{"id":34261,"option":"TriggerManager\r\n   ","correct":false},{"id":34262,"option":"TriggerEventManager\r\n   ","correct":false},{"id":34263,"option":"TriggerEvent   ","correct":true}]},{"q":"<p>In Android, what is the result of the application for the following conditions:</p>\n\n<pre class=\"prettyprint\"><code>Condition 1 : Progress dialog is active in the background thread\nCondition 2 :  The orientation is changed\n</code></pre>","a":[{"id":34188,"option":"An ANR is produced\r\n    ","correct":true},{"id":34189,"option":"The progress bar will stop functioning.\r\n    ","correct":false},{"id":34190,"option":"The orientation will not change.    ","correct":false},{"id":34191,"option":"None of these","correct":false}]},{"q":"<p>In Android, which of the following helps determine whether a movement is strong enough to be called a shake?</p>","a":[{"id":35642,"option":"accelerometer   ","correct":false},{"id":35643,"option":"acceleration   ","correct":false},{"id":35644,"option":"threshold   ","correct":true},{"id":35645,"option":"move    ","correct":false}]},{"q":"<p>In Android, which of these defines callback methods that will receive sensor event notifications?</p>","a":[{"id":36400,"option":"Sensor  ","correct":false},{"id":36401,"option":"SensorManager  ","correct":false},{"id":36402,"option":"SensorEvent  ","correct":false},{"id":36403,"option":"SensorEventListner  ","correct":true}]},{"q":"<p>In Android, which of the following methods is used to receive notifications from a transition?</p>","a":[{"id":36655,"option":"Transition.TransitionListener  ","correct":true},{"id":36656,"option":"AutoTransition  ","correct":false},{"id":36657,"option":"ChangeClipBounds  ","correct":false},{"id":36658,"option":"CircularPropagation  ","correct":false}]},{"q":"<p>What does the function <code>Multitouch.inputMode=MultitouchInputMode.TOUCH_POINT</code> do in Android?</p>","a":[{"id":35606,"option":"It only listens to mouse events and not for touches and gestures.","correct":false},{"id":35607,"option":"It listens to single touches.","correct":true},{"id":35608,"option":"It listens to gestures.","correct":false},{"id":35609,"option":"It listens to multiple touches. ","correct":false}]},{"q":"<p>What does the function <code>Multitouch.inputMode=MultitouchInputMode.NONE</code> do in Android?</p>","a":[{"id":35602,"option":"It only listens for mouse events.","correct":true},{"id":35603,"option":"It listens for single touches.","correct":false},{"id":35604,"option":"It listens for gestures.","correct":false},{"id":35605,"option":"It listens for multiple touches.","correct":false}]},{"q":"<p>What does the function <code>offsetX == 1</code> do in the following Android code:</p>\n\n<pre class=\"prettyprint\"><code>    private function swipeHandler(case: GestureEvent):Void\n    {\n    if (event.offsetX == -1 )\n    {\n    if (currentFrame &gt; 1)\n    {\n    gotoAndStop(currentFrame-1);\n    }\n</code></pre>","a":[{"id":35618,"option":"It helps in swiping right.  ","correct":false},{"id":35619,"option":"It helps in swiping left.","correct":true},{"id":35620,"option":"It helps in swiping bottom.","correct":false},{"id":35621,"option":"It helps in swiping top.","correct":false}]},{"q":"<p>In Android, which of the following has the properties of the multi-finger, <strong>press-and-hold</strong> move?</p>","a":[{"id":35598,"option":"TransformGestureEvent.GESTURE_PAN  ","correct":true},{"id":35599,"option":"TransformGestureEvent.GESTURE_PRESS\r\n  ","correct":false},{"id":35600,"option":"TransformGestureEvent.GESTURE_HOLD  ","correct":false},{"id":35601,"option":"TransformGestureEvent.GESTURE_MULTI","correct":false}]},{"q":"<p>What does the function <code>Multitouch.inputMode=MultitouchInputMode.GESTURE</code> do in Android?</p>","a":[{"id":35610,"option":"It only listens for mouse events and not for touches and gestures.","correct":false},{"id":35611,"option":"It listens for single touches.","correct":false},{"id":35612,"option":"It listens for gestures.","correct":true},{"id":35613,"option":"It listens for multiple touches.","correct":false}]},{"q":"<p>In Android, which of the following helps monitor when the location sensor is updating an app?</p>","a":[{"id":35658,"option":"StatusEvent.Update  ","correct":false},{"id":35659,"option":"GeolocationEvent.Update\r\n  ","correct":true},{"id":35660,"option":"Geolocation.Status\r\n  ","correct":false},{"id":35661,"option":"GeolocationEvent.Status\r\n  ","correct":false}]},{"q":"<p>Which of the following <em>events </em>are provided by the <em>Spring Framework</em>?</p>\n\n<p>i. ContextRefreshedEvent</p>\n\n<p>ii. ContextStartedEvent</p>\n\n<p>iii. RequestHandledEvent</p>\n\n<p>iv. RequestClosedEvent</p>","a":[{"id":729510,"option":"i, ii, and iii","correct":true},{"id":729511,"option":"i, ii, and iv","correct":false},{"id":729512,"option":"i, iii, and iv","correct":false},{"id":729513,"option":"i, ii, iii, and iv","correct":false}]},{"q":"<p>In Android, which of these is used to enter <strong>times</strong> in a text field?</p>","a":[{"id":33958,"option":" KeyTimeListener\r\n ","correct":false},{"id":33959,"option":" KeyMultiTimeListener\r\n ","correct":false},{"id":33960,"option":" getKeyTime()\r\n ","correct":false},{"id":33961,"option":" TimeKeyListener ","correct":true}]},{"q":"<p>In Android, which method is called if an alphanumeric input has to be taken from a qwerty keyboard?</p>","a":[{"id":33974,"option":"KeyQwertyListener\r\n  ","correct":false},{"id":33975,"option":"QwertyListener  ","correct":false},{"id":33976,"option":"keyPadListener\r\n  ","correct":false},{"id":33977,"option":"QwertyKeyListener\r\n  ","correct":true}]},{"q":"<p>In Android, which of the following is used to free event handlers that are no longer required?</p>","a":[{"id":35562,"option":"removeEventListener()","correct":true},{"id":35563,"option":"EventListener()","correct":false},{"id":35564,"option":"removeHandlerListener()","correct":false},{"id":35565,"option":"removeListener()  ","correct":false}]},{"q":"<p>In Android, which of these helps in handling notifications when new buffers are available?</p>","a":[{"id":34074,"option":"Allocation.OnBufferAvailableListener   ","correct":true},{"id":34075,"option":"Notification.OnBufferAvailableListener\r\n   ","correct":false},{"id":34076,"option":"Notification.AvailableListener\r\n   ","correct":false},{"id":34077,"option":"NotificationAvailableListener   ","correct":false}]},{"q":"<p>Which of these is used to handle interruption scenarios in Android?</p>","a":[{"id":36224,"option":"TelephonyManager   ","correct":false},{"id":36225,"option":"ContentProvider          ","correct":false},{"id":36226,"option":"PhoneStateListener   ","correct":false},{"id":36227,"option":"TelephonyManager and PhoneStateListener","correct":true}]},{"q":"<p>In ReactJS, you are using a class method as an event handler. When you use a JSX callback using this.functionname, you find that <em>this </em>is undefined. How will you solve this issue?</p>","a":[{"id":738153,"option":"Pass a prop that contains this","correct":false},{"id":738154,"option":"Use private class field syntax","correct":false},{"id":738155,"option":"Bind this.function name","correct":true},{"id":738156,"option":"You cannot use class methods as event handlers","correct":false}]}]