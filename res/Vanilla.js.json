[{"q":"<p>Lisa is using Arrays in VanillaJS. She has initialized an Array with company names. She wants to create a new iterator object carrying values for each index of that previous array. Then which of the methods can she use for such desired output?</p>","a":[{"id":1733706,"option":"shift()","correct":false},{"id":1733707,"option":"values()","correct":true},{"id":1733708,"option":"slice()","correct":false},{"id":1733709,"option":"entries()","correct":false}]},{"q":"<p>Mark is using Arrays in VanillaJS. He has an Array with employee names. He wants to copy a part of the previous array with its elements and using a method return a modified array. Then which of the methods can he use for such output?</p>","a":[{"id":1733702,"option":"copywithin()","correct":true},{"id":1733703,"option":"filter()","correct":false},{"id":1733704,"option":"duplicate()","correct":false},{"id":1733705,"option":"concat()","correct":false}]},{"q":"<p>John is using Arrays in VanillaJS. He has an array with some elements and he wants to apply a function against an accumulator. Also, for each value of the array from left to right has to be reduced to a single value. Then which of the inbuilt methods can he use for such output?</p>","a":[{"id":1733698,"option":"Array.prototype.reduce()","correct":true},{"id":1733699,"option":"Array.prototype.push()","correct":false},{"id":1733700,"option":"Array.prototype.reduceRight()","correct":false},{"id":1733701,"option":"Array.prototype.reduceLeft()","correct":false}]},{"q":"<p>Bob is using Arrays in VanillaJS. He has filled an Array with winners names of competition and now he wants to create a new array with the last index of an element within the array equal to an input element. Then which of the inbuilt methods can he use?</p>","a":[{"id":1733630,"option":"Array.prototype.filter()","correct":false},{"id":1733631,"option":"Array.prototype.map()","correct":false},{"id":1733633,"option":"Array.prototype.last()","correct":false},{"id":1733635,"option":"Array.prototype.lastIndexOf()","correct":true}]},{"q":"<p>Bob is using Arrays in VanillaJS. He has an Array with some elements and he wants to create a new array using an array method which forms by applying a given callback function to each element of the array. Also, the new array list should be flattening the result by one level. Then for this requirement what can be used?</p>","a":[{"id":1733573,"option":"Array.prototype.flat()","correct":false},{"id":1733574,"option":"Array.prototype.flatMap()","correct":true},{"id":1733575,"option":"Array.prototype.filter()","correct":false},{"id":1733576,"option":"Array.prototype.map()","correct":false}]},{"q":"<p>Mark is using Arrays in VanillaJS. He has initialized arrays and added some data. Now he wants to inject the data from the Array to HTML.</p>\n\n<p><strong>Code</strong>:</p>\n\n<pre class=\"prettyprint\"><code>const data = [\"John\", \"Mark\", \"Ben\", \"Lisa\"];\n\ndata.splice(2, 0, \"Anita\", \"Bob\");\ndocument.getElementById(\"others\").innerHTML = data;\n\ndata.splice(1, 1, \"Mary\");\n\ndocument.getElementById(\"members\").innerHTML = data;\n\n\n</code></pre>\n\n<p>Then what will be the difference&nbsp;in the output?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>John,Mark,Anita,Bob,Ben,Lisa\nJohn,Mary,Mark,Anita,Bob,Ben,Lisa</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>John,Mark,Ben,Lisa\nJohn,Mark,Anita,Bob,Ben,Lisa</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>John,Mary,Anita,Bob,Ben,Lisa\nJohn,Mark,Anita,Bob,Ben,Lisa</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>John,Mark,Anita,Bob,Ben,Lisa\nJohn,Mary,Anita,Bob,Ben,Lisa</code></pre>","a":[{"id":1729685,"option":"1","correct":false},{"id":1729686,"option":"2","correct":false},{"id":1729687,"option":"3","correct":false},{"id":1729688,"option":"4","correct":true}]},{"q":"<p>Mark is using Arrays in VanillaJS. He has initialized arrays and added some data. Now, he wants to inject the data from the array to HTML.</p>\n\n<p><strong>Code</strong>:</p>\n\n<pre class=\"prettyprint\"><code>const data = [\"John\", \"Mark\", \"Ben\", \"Lisa\"];\n\ndocument.getElementById(\"winners\").innerHTML = data.toString();\n\ndocument.getElementById(\"members\").innerHTML = data;</code></pre>\n\n<p>Then what will be the difference&nbsp;in the output?</p>\n\n<p><strong>Options</strong>:</p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>John,Mark,Ben,Lisa\n\"John\",\"Mark\",\"Ben\",\"Lisa\"</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>JohnMarkBenLisa\n\"John\"\"Mark\"\"Ben\"\"Lisa\"</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>\"John\",\"Mark\",\"Ben\",\"Lisa\"\nJohn,Mark,Ben,Lisa</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>John,Mark,Ben,Lisa\nJohn,Mark,Ben,Lisa</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1729677,"option":"1","correct":false},{"id":1729678,"option":"2","correct":false},{"id":1729679,"option":"3","correct":false},{"id":1729680,"option":"4","correct":true}]},{"q":"<p>Alice is using arrays in VanillaJS. Now, she has an array and wants to convert those elements into a string. Which of these options can she use?</p>","a":[{"id":1729665,"option":"toString()","correct":false},{"id":1729666,"option":"join()","correct":false},{"id":1729667,"option":"Both 1 and 2","correct":true},{"id":1729668,"option":"None of these","correct":false}]},{"q":"<p>Alice is using arrays in VanillaJS. Now, she has an array and wants to remove elements. Which of these options can she use?</p>","a":[{"id":1729661,"option":"pop()","correct":false},{"id":1729662,"option":"shift()","correct":false},{"id":1729663,"option":"splice()","correct":false},{"id":1729664,"option":"All the above","correct":true}]},{"q":"<p>Mark is working on Events using VanilaJS. He is using the Node.js event model listeners to listen for events and emitters to emit events periodically. Which function he can use&nbsp;to register an event listener that unregisters after it has run once?</p>","a":[{"id":1723921,"option":"one()","correct":false},{"id":1723922,"option":"once()","correct":true},{"id":1723923,"option":"on()","correct":false},{"id":1723924,"option":"if(1)","correct":false}]},{"q":"<p>Mark is working on Events using VanillaJS. He wants to create an&nbsp;event that occurs when the playing position has changed. So this event should occur when the user fasts forwards to a different point in a selected&nbsp;media. Then which option can he choose?</p>","a":[{"id":1723197,"option":"timeupdate","correct":true},{"id":1723198,"option":"toggle","correct":false},{"id":1723199,"option":"onchange","correct":false},{"id":1723200,"option":"load","correct":false}]},{"q":"<p>Mark has built a game using VanilaJS. Now, he wants to optimize that web-based game&nbsp;for a touch-based device. So currently he wants to write a function where the&nbsp;event should occur when a finger is placed on a touch screen&nbsp;Then which event handlers should he choose?</p>","a":[{"id":1723193,"option":"touchstart","correct":true},{"id":1723194,"option":"onclick","correct":false},{"id":1723195,"option":"touchmove","correct":false},{"id":1723196,"option":"touchclick","correct":false}]},{"q":"<p>John has&nbsp;built a&nbsp;media library website using VanillaJS. He wants to implement an event that occurs when the media has paused but is expected to resume&nbsp;and stay in memory. Then which of the given event handlers he can use to implement this feature?</p>","a":[{"id":1723189,"option":"waiting","correct":true},{"id":1723190,"option":"load","correct":false},{"id":1723191,"option":"playing","correct":false},{"id":1723192,"option":"play","correct":false}]},{"q":"<p>Mark is building a&nbsp;media library website that will contain different types of media like photos and videos using VanillaJS. He wants to implement autoplay and autostop on the hover feature. He knows that this can be achieved through the event handlers of javascript. Then which of the given event handlers he can use to implement both the features?</p>","a":[{"id":1723185,"option":"play and playing","correct":true},{"id":1723186,"option":"load and play","correct":false},{"id":1723187,"option":"autoplay and progress","correct":false},{"id":1723188,"option":"load and unload","correct":false}]},{"q":"<p>Ben is working on Events in VanilaJS. He has created a Youtube clone video service. Now, he is working on adding a download service as an option and wants a special event to trigger when the browser can track&nbsp;the process of getting the media download. Which of the options can he choose?</p>","a":[{"id":1722985,"option":"progress","correct":true},{"id":1722986,"option":"loadeddata","correct":false},{"id":1722987,"option":"loadedmetadata","correct":false},{"id":1722988,"option":"load","correct":false}]},{"q":"<p>John is working on Events in VanillaJS. Which of the given options can John choose to&nbsp;an event occurs when there have been changes to the anchor part of a URL?</p>","a":[{"id":1722981,"option":"hashchange","correct":true},{"id":1722982,"option":"urldata","correct":false},{"id":1722983,"option":"load","correct":false},{"id":1722984,"option":"onchange","correct":false}]},{"q":"<p>Mark is working on events using VanillaJS. When this event occurs, where&nbsp;a connection with the event source is opened?</p>","a":[{"id":1722239,"option":"online","correct":false},{"id":1722240,"option":"open","correct":true},{"id":1722241,"option":"loadeddata","correct":false},{"id":1722242,"option":"loadstart","correct":false}]},{"q":"<p>Mark is working on Events using VanillaJS. He wants to use event handlers to perform an action once it hits a condition.&nbsp;Then which of the event scenarios&nbsp;can he use an event handler?</p>\n\n<p><strong>Events</strong></p>\n\n<ol>\n\t<li>Show user count every time a page loads</li>\n\t<li>Save and update the changes done when the user&nbsp;closes the tab.</li>\n\t<li>Action that should be performed in the background when a user browses a page.</li>\n\t<li>Email ID format is been verified when a user inputs data.</li>\n\t<li>Action that should be performed when a user brings a phone closer to PC.</li>\n\t<li>Perform an action when the user clicks the back button.</li>\n</ol>","a":[{"id":1722235,"option":"1, 2, 3 and 4","correct":true},{"id":1722236,"option":"1, 3, 4 and 6","correct":false},{"id":1722237,"option":" 1, 2, 4 and 6","correct":false},{"id":1722238,"option":"3, 4, 5 and 6","correct":false}]},{"q":"<p>John is working on VanillaJS to build a project which monitors user actions using Events. Then which of the events can John use according to his project?</p>\n\n<p><strong>HTML Events</strong></p>\n\n<ol>\n\t<li>onchange&nbsp;&nbsp;</li>\n\t<li>onclick&nbsp;</li>\n\t<li>onmouseover&nbsp;</li>\n\t<li>onmouseout</li>\n\t<li>onkeydown</li>\n\t<li>onload</li>\n</ol>","a":[{"id":1722231,"option":"1, 2,  3 and 4","correct":false},{"id":1722232,"option":"1, 2, 5 and 6","correct":false},{"id":1722233,"option":"2, 3, 4 and 5","correct":true},{"id":1722234,"option":"All the above","correct":false}]},{"q":"<p>Ben is working on Closures using VanillaJS. He is using the closure&nbsp;function to capture&nbsp;variables from its lexical scope.&nbsp;Then which of the options allows to capture the variables using closure?</p>","a":[{"id":1721391,"option":"event handling","correct":false},{"id":1721392,"option":"callbacks","correct":false},{"id":1721393,"option":"DOM object","correct":false},{"id":1721394,"option":"Both 1 and 2","correct":true}]},{"q":"<p>Mark is working on Closures using VanillaJS. He has a requirement to access the defined variables statically of the outer scopes.&nbsp;Then which of the options can he choose?</p>","a":[{"id":1721387,"option":"lexical scope","correct":true},{"id":1721388,"option":"local scope","correct":false},{"id":1721389,"option":"method scope","correct":false},{"id":1721390,"option":"None of the these","correct":false}]},{"q":"<p>Anita is working on Closures using VanillaJS. She has currently initialized a few variables in a few nested methods. Then&nbsp;the accessibility of those variables is determined by the position of whom?</p>","a":[{"id":1721383,"option":"variables inside the nested scopes","correct":true},{"id":1721384,"option":"sibling variables","correct":false},{"id":1721385,"option":"global scope variables","correct":false},{"id":1721386,"option":"parent method scope","correct":false}]},{"q":"<p>What is the output of the following Javascript code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function entrance() {\n  let status = 'I at entrance!';\n  function desk() {\n    console.log(status); \n    let status = 'I at desk station!';\n  }\n  desk();\n}\nentrance();</code></pre>","a":[{"id":1721379,"option":"I at entrance!","correct":false},{"id":1721380,"option":"I at desk station!","correct":false},{"id":1721381,"option":"status","correct":false},{"id":1721382,"option":"Error","correct":true}]},{"q":"<p>What is the output of the following Javascript code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function hack1() {\n  let i = 0;\n  console.log(i++); \n}\nfunction hack2() {\n  let i = 1;\n  console.log(i++); \n}\nhack1();\nhack2();</code></pre>","a":[{"id":1720654,"option":"0 and 1","correct":true},{"id":1720655,"option":"1 and 2","correct":false},{"id":1720656,"option":"Error","correct":false},{"id":1720657,"option":"1 and Error","correct":false}]},{"q":"<p>What is the output of the following Javascript code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function hacker() {\n  let count = 0;\n  if(count === 1 ){\n     console.log(count++);\n  } \n  else {\n     count--;\n  }\n}\nhacker();\nhacker();\nhacker();\n\nconsole.log(count);</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1720650,"option":"No output","correct":false},{"id":1720651,"option":"1 and 3","correct":false},{"id":1720652,"option":"0 and 3","correct":false},{"id":1720653,"option":"Error","correct":true}]},{"q":"<p>Ben is working on Closures using VanillaJS. He defined a variable and want that variable to exist within some boundaries. This accessibility of variables is managed by whom?</p>","a":[{"id":1720642,"option":"scope","correct":true},{"id":1720643,"option":"document object","correct":false},{"id":1720644,"option":"constructor","correct":false},{"id":1720645,"option":"window object","correct":false}]},{"q":"<p>What is the output of the following Javascript snippet:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>let score = 0;\n\nfunction fouls() {\n  let score = 20;\n  score -= 1;\n}\n\nfouls();\nfouls();\nfouls();\nconsole.log(score);</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1720029,"option":"17","correct":false},{"id":1720030,"option":"20","correct":false},{"id":1720031,"option":"0","correct":true},{"id":1720032,"option":"undefined","correct":false}]},{"q":"<p>What is the output of the following Javascript snippet:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>let errors = 0;\n\nfunction check(output) {\nif(!output)\n  errors += 1;\n}\n\ncheck(true);\ncheck(1);\ncheck(0);\n\nconsole.log(errors);</code></pre>","a":[{"id":1720033,"option":"1","correct":true},{"id":1720034,"option":"2","correct":false},{"id":1720035,"option":"undefined","correct":false},{"id":1720036,"option":"0","correct":false}]},{"q":"<p>John is working on DOM in Vanilla.JS. While exploring the DOM, he noticed&nbsp; that the&nbsp;<code>&lt;body&gt;</code>&nbsp;node is the sibling&nbsp;of the&nbsp;<code>&lt;head&gt;</code>&nbsp;node because they share the same immediate parent of which element?</p>","a":[{"id":1718101,"option":"<body>","correct":false},{"id":1718102,"option":"<html>","correct":true},{"id":1718103,"option":"<head>","correct":false},{"id":1718104,"option":"<div>","correct":false}]},{"q":"<p>John is working on DOM in Vanilla.JS. While exploring the DOM, he noticed&nbsp; that&nbsp;<code>&lt;body&gt;</code>&nbsp;is a child node&nbsp;of the&nbsp;<code>&lt;html&gt;</code>&nbsp;node then&nbsp;<code>&lt;html&gt;</code>&nbsp;is the parent of which node?</p>","a":[{"id":1718097,"option":"<body>","correct":true},{"id":1718098,"option":"<html>","correct":false},{"id":1718099,"option":"<head>","correct":false},{"id":1718100,"option":"<div>","correct":false}]},{"q":"<p>Mark is working on DOM in Vanilla.JS. To get the next sibling of an element, he&nbsp;used&nbsp;the&nbsp;<code>nextElementSibling</code>&nbsp;attribute and he found that&nbsp;for a&nbsp;specified element is the first one in the list it returned a value. What did the&nbsp;<code>nextElementSibling&nbsp;</code>return?</p>","a":[{"id":1718089,"option":"null","correct":true},{"id":1718090,"option":"value of first element","correct":false},{"id":1718091,"option":"true","correct":false},{"id":1718092,"option":"false","correct":false}]},{"q":"<p>John&nbsp;is working on DOM using Vanilla.JS. Using&nbsp;<code>parentNode</code>&nbsp;property, he found that&nbsp;<code>DocumentFragment</code>&nbsp;nodes do not have a parent.&nbsp;Then for that specified node which of the statements are True?&nbsp;</p>\n\n<p><strong>Statements</strong></p>\n\n<ul>\n\t<li>The&nbsp;<code>node.parentNode</code>&nbsp;returns&nbsp;parent node of a specified node.</li>\n\t<li>The&nbsp;<code>node.parentNode</code>&nbsp;returns&nbsp;<code>null</code>&nbsp;if node&nbsp;does not exist.</li>\n\t<li>The&nbsp;<code>parentNode</code>&nbsp;is read-only.</li>\n\t<li><code>DocumentFragment</code>&nbsp;node&nbsp;has a parent node.</li>\n\t<li><code>childNode</code>&nbsp;is a method&nbsp;of the&nbsp;<code>Node</code>&nbsp;object.</li>\n</ul>","a":[{"id":1718085,"option":"1, 2, and 3","correct":true},{"id":1718086,"option":"1, 3, 4 and 5","correct":false},{"id":1718087,"option":"2, 3, 4 and 5","correct":false},{"id":1718088,"option":"All the above","correct":false}]},{"q":"<p>Ben is working on DOM using Vanilla.JS. He is using&nbsp;<code>parentNode</code>&nbsp;property to get the parent node of a specified node in the DOM tree. While exploring various nodes, he found that the&nbsp;<code>parentNode</code>&nbsp;is&nbsp;<code>null</code>. Then for that specified node,&nbsp;from the given&nbsp;nodes which will&nbsp;not have a parent?</p>","a":[{"id":1718081,"option":"DocumentNode","correct":false},{"id":1718082,"option":"DocumentFragment ","correct":true},{"id":1718083,"option":"node.parentNode","correct":false},{"id":1718084,"option":"All the above","correct":false}]},{"q":"<p>Mark is working on DOM in Vanilla.JS. He is exploring different node&nbsp;elements using the nodetype property. He wants to use the highest value of node type&nbsp;constants.&nbsp;Then&nbsp;which of the given options has the highest node type constant value?&nbsp;</p>","a":[{"id":1715347,"option":"Node.DOCUMENT_TYPE_NODE\t","correct":false},{"id":1715348,"option":"Node.ELEMENT_NODE\t","correct":false},{"id":1715349,"option":"Node.PROCESSING_INSTRUCTION_NODE\t","correct":false},{"id":1715350,"option":"Node.DOCUMENT_FRAGMENT_NODE\t","correct":true}]},{"q":"<p>Ben is working on DOM in Vanilla.JS. He found that each node in the DOM tree is identified by a node type. He found that an element which is a node with a specific node type equal to 1. Then the value of elements can be found using which constants in the given options?&nbsp;</p>","a":[{"id":1715339,"option":"Node.DOCUMENT_TYPE_NODE","correct":false},{"id":1715340,"option":"Node.ELEMENT_NODE","correct":true},{"id":1715341,"option":"Node.DOCUMENT_NODE","correct":false},{"id":1715342,"option":"Node.TEXT_NODE","correct":false}]},{"q":"<p>John is working on DOM in Vanilla.JS. He explores the properties of an element node using nodetype property.&nbsp;Then for that element node will have the&nbsp;<code>nodeValue</code>&nbsp;will be always equal to which of the given options?&nbsp;</p>","a":[{"id":1715335,"option":"null","correct":true},{"id":1715336,"option":"true","correct":false},{"id":1715337,"option":"false","correct":false},{"id":1715338,"option":"undefined","correct":false}]},{"q":"<p>Lisa is working on DOM in Vanilla.JS. She is exploring some random elements using the nodetype property. If there is an element node, then the value of&nbsp;<code>nodeName</code>&nbsp;is always the same as which of the given options?&nbsp;</p>","a":[{"id":1715331,"option":"same as element’s tag","correct":true},{"id":1715332,"option":"same as parent element's tag","correct":false},{"id":1715333,"option":"same as child element's tag","correct":false},{"id":1715334,"option":"is null","correct":false}]},{"q":"<p>Ben is working on DOM in Vanilla.JS. Currently, he is using the&nbsp;<code>nodeType</code>&nbsp;property to determine the node type in the DOM. Now, to identify a specific node which of the&nbsp;following properties should he choose?</p>","a":[{"id":1715327,"option":"Node.ELEMENT_NODE","correct":false},{"id":1715328,"option":"Node.nodeName","correct":true},{"id":1715329,"option":"Node.TEXT_NODE","correct":false},{"id":1715330,"option":"node.nodeType","correct":false}]},{"q":"<p>John is working on Regular Expressions using Vanilla.JS. He has written the following&nbsp;code snippet which returns the last index of matched string using the exec() method. What should he replace in the comment, such that the regular expression should return the last index as 8 for the input <em>hackhbbdearth</em>?</p>\n\n<p><strong>Code</strong>:</p>\n\n<pre class=\"prettyprint\"><code>let Re = //Comment\nlet Result = Re.exec('hackhbbdearth');\nconsole.log('The value of lastIndex is ' + Re.lastIndex);</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1713149,"option":"/hack(h+)d/g","correct":false},{"id":1713150,"option":"/h(t+)rth/g","correct":false},{"id":1713151,"option":"/h(c+)bd/g","correct":false},{"id":1713152,"option":"/h(b+)d/g","correct":true}]},{"q":"<p>Ben is working on Regular Expressions using Vanilla.JS. He has written a code snippet using a regular expression where he is making use of match() method with regular expression \"<strong>/d(b+)d/g</strong>\" as an input. What should Ben replace in the comment to get an output <em>dbbd</em>?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>let A = //Code\nlet res = A.match(/d(b+)d/g);\nconsole.log(res);</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1713145,"option":"cdbbdbsbz","correct":true},{"id":1713146,"option":"dbbwdbsbz","correct":false},{"id":1713147,"option":"cdbdbbsbz","correct":false},{"id":1713148,"option":"dbdbdbsbz","correct":false}]},{"q":"<p>Anita is working on regualar expression using Vanilla.JS. She is using a regular expression method to successfully match. This&nbsp;method also returns an array and it also updates the properties of the associated regular expression object&nbsp;<code>RegExp</code>. If the match is failed the&nbsp;method will return&nbsp;a&nbsp;<code>null value.T</code>hen which of the following methods or combination of methods can she use to get such a result?</p>","a":[{"id":1713141,"option":"exec()","correct":true},{"id":1713142,"option":"test()","correct":false},{"id":1713143,"option":"search()","correct":false},{"id":1713144,"option":"exec() and match()","correct":false}]},{"q":"<p>Ben is currently working on Regular Expressions using Vanilla.JS. He wants to use a regular expression to test&nbsp;for a match in a string. And he wrote a function that accepts the index of the match, or&nbsp;<code>-1</code>&nbsp;if the search fails.&nbsp;Then which of the following options can be used?</p>","a":[{"id":1713137,"option":"exec()","correct":false},{"id":1713138,"option":"match()","correct":false},{"id":1713139,"option":"search()","correct":true},{"id":1713140,"option":"test()","correct":false}]},{"q":"<p>Mike is currently working on Regular Expressions using Vanilla.JS. He wants to use a regular expression to test&nbsp;for a match in a string and he wrote a function that takes boolean as input depending on the match.&nbsp;Then which of the following options can be used?</p>","a":[{"id":1713133,"option":"exec()","correct":false},{"id":1713134,"option":"match()","correct":false},{"id":1713135,"option":"matchAll()","correct":false},{"id":1713136,"option":"test()","correct":true}]},{"q":"<p>Mark is currently working on Regular Expressions using Vanilla.JS. He wants to use a regular expression to return&nbsp;an array containing all of the matches and capturing groups. And also return&nbsp;<code>null</code>&nbsp;if no match is found.&nbsp;Then which of the following options can be used?</p>","a":[{"id":1713129,"option":"search()","correct":false},{"id":1713130,"option":"match()","correct":true},{"id":1713131,"option":"matchAll()","correct":false},{"id":1713132,"option":"exec()","correct":false}]},{"q":"<p>Lisa is currently using Regular Expressions in Vanilla.JS. She wants to write a code where&nbsp;it returns a function that can create the RegExp object's prototype. Which of the following options can she use?</p>","a":[{"id":1711400,"option":"source","correct":false},{"id":1711401,"option":"constructor","correct":true},{"id":1711402,"option":"compile()","correct":false},{"id":1711403,"option":"exec()","correct":false}]},{"q":"<p>John is working on Regular Expressions in Vanilla.JS. He wants to&nbsp;global flag&nbsp;RegExp&nbsp;object to match the input string. He has written the following code. What is the output of the code?</p>\n\n<pre class=\"prettyprint\"><code>let message = 'Welcome to Hackerearth';\nlet exp = /hack/gi;\n\nlet m1 = [];\nlet match;\ndo {\n    match = exp.exec(message);\n    if(match) {\n      m1.push(match);\n    }\n} while(match != null)\n\nconsole.dir(m1);</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1711396,"option":"SyntaxError: Invalid regular expression flags","correct":false},{"id":1711397,"option":"Output: Hackerearth","correct":false},{"id":1711398,"option":"Returns: Array(1)","correct":true},{"id":1711399,"option":"Output: Hack","correct":false}]},{"q":"<p>Mark is currently working on Regular Expressions using Vanilla.JS. He wrote a function that takes input from the user. This input function is returning a string input. Using regular expression he wants to break this input into an array of substrings. Then which of the following functions can be used?</p>","a":[{"id":1711297,"option":"Array.substring()","correct":false},{"id":1711298,"option":"trim()","correct":false},{"id":1711299,"option":"exec()","correct":false},{"id":1711300,"option":"split()","correct":true}]},{"q":"<p>Ben is currently working on Regular Expressions using Vanilla.JS. He is currently using the&nbsp;<code>RegExp</code>&nbsp;constructor with a string literal.&nbsp;He wants to use backslash as an escape in his regular expression. Then which of the following given codes can be used in this scenario?</p>\n\n<p><strong>Codes</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&amp;');</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>string.replace(/[.*+?^${}()|/g, '$&amp;');</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>new RegExp('/[.*+?^${}()|[\\]\\\\]/g');</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1711293,"option":"1","correct":true},{"id":1711294,"option":"2","correct":false},{"id":1711295,"option":"3","correct":false},{"id":1711296,"option":"Both 1 and 3","correct":false}]}]