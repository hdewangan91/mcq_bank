[{"q":"<p>In Machine Learning, you are working on a project using natural language processing. You want to break down your corpus into smaller chunks. What is the output of the following code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>text = \"Alice and Bob are friends\"\nprint(text.split())</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1722381,"option":"['Alice'], ['and'], ['Bob'], ['are'], ['friends']\r\n","correct":false},{"id":1722382,"option":"['Alice', 'and'], ['Bob', 'are', 'friends']\r\n","correct":false},{"id":1722383,"option":"['Alice', 'and', 'Bob', 'are', 'friends']\r\n","correct":true},{"id":1722384,"option":"[Alice, and, Bob, are, friends]\r\n","correct":false}]},{"q":"<p>In Machine Learning, you are working on a project using natural language processing. You have to perform the task of text analytics for your model preparation. You want to get the count of tokens, given below is the code to get the tokens. What will be the output of the following code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>text = \"Alice is friend of Bob, Bob is friend of Mike\"\nimport collections as cl\nwords = text.split()\nwc = cl.Counter(words)\nprint(wc)</code></pre>","a":[{"id":1722488,"option":"Counter({'is': 2, 'friend': 2, 'of': 2, 'Alice': 1, 'Bob': 2, 'Mike': 1})","correct":false},{"id":1722489,"option":"Counter({'is': 2, 'friend': 2, 'of': 1, 'Alice': 1, 'Bob': 2, 'Mike': 1})","correct":false},{"id":1722490,"option":"Counter({'is': 2, 'friend': 2, 'of': 2, 'Alice': 1, 'Bob,': 1, 'Bob': 1, 'Mike': 1})","correct":true},{"id":1722491,"option":"Counter({'is': 2, 'friend': 2, 'of': 1, 'Alice': 1, 'Bob,': 1, 'Bob': 1, 'Mike': 1})","correct":false}]},{"q":"<p>In Machine Learning, you are working on a project using natural language processing. You have to perform the task of text analytics for your model preparation. The following code is&nbsp;to get the tokens. Which of the following options will you use to perform the count of tokens?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>text = \"Alice is friend of Bob, Bob is friend of Mike\"\nwords = text.split()\n</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>import collections as cl\nword_count = cl.counter(words)\nprint(word_count)</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>import collections as cl\nword_count = cl.Counter(words)\nprint(word_count)</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>import collections as cl\nword_count = cl.counters(words)\nprint(word_count)</code></pre>\n\t</li>\n</ol>","a":[{"id":1722395,"option":"1","correct":false},{"id":1722396,"option":"2","correct":true},{"id":1722397,"option":"3","correct":false},{"id":1722398,"option":"None of these","correct":false}]},{"q":"<p>In Machine Learning, you are working on a data processing technique. You are provided with the dataset that contains three independent variables (Name, Age, and Salary) and one dependent variable (Purchased).</p>\n\n<p><strong>Dataset</strong></p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>Name</td>\n\t\t\t<td>Age&nbsp;</td>\n\t\t\t<td>Salary</td>\n\t\t\t<td>Purchased</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>56</td>\n\t\t\t<td>150000</td>\n\t\t\t<td>No</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Determine the code to extract the independent variable.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>","a":[{"id":1713327,"option":"dataset.iloc[:,:-1].values  ","correct":true},{"id":1713328,"option":"dataset.iloc[:,:1].values  ","correct":false},{"id":1713329,"option":"dataset.iloc[1:,:].values  ","correct":false},{"id":1713330,"option":"dataset.iloc[-1:,:].values  ","correct":false}]},{"q":"<p>In Machine Learning, you are working on a data processing technique. If you are given the dataset, then find the correct option that represents the output of the provided code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import pandas as pd\n\ndataset['color_category'] = dataset.Color\ndataset_onehotencoding = pd.get_dummies(dataset,columns=[\"color_category\"],prefix=[\"Color\"])\n\ndataset_onehotencoding\n\n</code></pre>\n\n<p><strong>Dataset</strong></p>\n\n<table border=\"1\">\n\t<caption>Dataset</caption>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Gender</strong></td>\n\t\t\t<td><strong>Color</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Blue</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Yellow</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Red</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Red</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Yellow</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Gender</strong></td>\n\t\t\t<td><strong>Color</strong></td>\n\t\t\t<td><strong>Color_Blue</strong></td>\n\t\t\t<td><strong>Color_Red</strong></td>\n\t\t\t<td><strong>Color_Yellow</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Blue</td>\n\t\t\t<td>0</td>\n\t\t\t<td>0</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Yellow</td>\n\t\t\t<td>1</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Red</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Red</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Yellow</td>\n\t\t\t<td>1</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Gender</strong></td>\n\t\t\t<td><strong>Color</strong></td>\n\t\t\t<td><strong>Color_Blue</strong></td>\n\t\t\t<td><strong>Color_Red</strong></td>\n\t\t\t<td><strong>Color_Yellow</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Blue</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Yellow</td>\n\t\t\t<td>0</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Red</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Red</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Yellow</td>\n\t\t\t<td>0</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Gender</strong></td>\n\t\t\t<td><strong>Color</strong></td>\n\t\t\t<td><strong>Color_Blue</strong></td>\n\t\t\t<td><strong>Color_Red</strong></td>\n\t\t\t<td><strong>Color_Yellow</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Blue</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Yellow</td>\n\t\t\t<td>1</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Red</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Red</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Yellow</td>\n\t\t\t<td>1</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>4.</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Gender</strong></td>\n\t\t\t<td><strong>Color</strong></td>\n\t\t\t<td><strong>Color_Blue</strong></td>\n\t\t\t<td><strong>Color_Red</strong></td>\n\t\t\t<td><strong>Color_Yellow</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>0</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Blue</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Yellow</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Red</td>\n\t\t\t<td>0</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Male</td>\n\t\t\t<td>Red</td>\n\t\t\t<td>0</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>Female</td>\n\t\t\t<td>Yellow</td>\n\t\t\t<td>0</td>\n\t\t\t<td>1</td>\n\t\t\t<td>0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>&nbsp;</p>","a":[{"id":1713323,"option":"1","correct":false},{"id":1713324,"option":"2","correct":true},{"id":1713325,"option":"3","correct":false},{"id":1713326,"option":"4","correct":false}]},{"q":"<p>What is the output of the below Python code?</p>\n\n<p><strong>Python Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth:\n    def __init__(self,HackNew = 1):\n        self.HackNew = HackNew\n    \n    def set(self,HackNew):\n        self.HackNew = HackNew\n        return HackNew\n\n\nHack = HackerEarth()\nprint(Hack.set(Hack.HackNew + 1))</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1590432,"option":"0","correct":false},{"id":1590433,"option":"1","correct":false},{"id":1590434,"option":"2","correct":true},{"id":1590435,"option":"3","correct":false}]},{"q":"<p>What is the output of the below Python code?</p>\n\n<p><strong>Python Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth:\n    def __init__(self):\n        pass\n\nHack = HackerEarth(1)\nprint(hasattr(Hack,'HackerEarth'))</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1590344,"option":"1","correct":false},{"id":1590345,"option":"True","correct":false},{"id":1590346,"option":"False","correct":false},{"id":1590347,"option":"It will raise an error","correct":true}]},{"q":"<p>What is the output of the below Python code?</p>\n\n<p><strong>Python Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth:\n    def __init__(self,HackNew):\n        self.__Hack = HackNew + 1\n\nHackObject = HackerEarth(0)\nprint(HackObject.__Hack)</code></pre>\n\n<p> </p>","a":[{"id":1590340,"option":"0","correct":false},{"id":1590341,"option":"1","correct":false},{"id":1590342,"option":"2","correct":false},{"id":1590343,"option":"it will raise an AttributeError exception","correct":true}]},{"q":"<p>What is the output of the below Python code?</p>\n\n<p><strong>Python Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth1:\n    def __str__(self):\n        return 'Hack1'\n\nclass HackerEarth2(HackerEarth1):\n    def __str__(self):\n        return 'Hack2'\n\nclass HackerEarth3(HackerEarth2):\n    pass\n\n\nHack = HackerEarth3()\nprint(Hack)</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1590468,"option":"Hack1","correct":false},{"id":1590469,"option":"Hack2","correct":true},{"id":1590470,"option":"Hack3","correct":false},{"id":1590471,"option":"It will raise an exception","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2, 4, 1, 3]\n\nnew = lst\nlst[0] = 9\nprint(new)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1574973,"option":"[2, 4, 1, 3]","correct":false},{"id":1574974,"option":"[9, 4, 1, 3]","correct":true},{"id":1574975,"option":"None","correct":false},{"id":1574976,"option":"This program will give an Error","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. </p>\n\n<p>Which of the following syntaxes in <strong>python</strong> will return the following output:</p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>[3, 2, 1]</code></pre>\n\n<p> </p>\n\n<p><strong>Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>print([1, 2, 3][2::-1])</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>print([1, 2, 3][::-1])</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1574418,"option":"only 1","correct":false},{"id":1574419,"option":"only 2","correct":false},{"id":1574420,"option":"Both 1 and 2","correct":true},{"id":1574421,"option":"None of these","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2, 4, 1, 3]\n\nsorted(lst)\nprint(lst)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1574426,"option":"[2, 4, 1, 3]","correct":true},{"id":1574427,"option":"[1, 2, 3, 4]","correct":false},{"id":1574428,"option":"None","correct":false},{"id":1574429,"option":"This program will give an Error","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2, 4, 1, 3]\nnew = lst.sort()\nprint(new)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1574434,"option":"[2, 4, 1, 3]","correct":false},{"id":1574435,"option":"[1, 2, 3, 4]","correct":false},{"id":1574436,"option":"None","correct":true},{"id":1574437,"option":"This program will give an Error","correct":false}]},{"q":"<p>What is the output of the below Python code?</p>\n\n<p><strong>Python Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth:\n    Hacker1 = 0\n    def __init__(self,HackNew = 0):\n        self.Hacker2 = HackNew\n        HackerEarth.Hacker1 += HackNew\n\nHack1 = HackerEarth()\nHack2 = HackerEarth(1)\nHack3 = HackerEarth(2)\nprint(Hack3.Hacker1)</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1590456,"option":"0","correct":false},{"id":1590457,"option":"1","correct":false},{"id":1590458,"option":"2","correct":false},{"id":1590459,"option":"3","correct":true}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2, 4, 1, 3]\n\nnew = lst\nprint(new is lst)\n\nnew = list(lst)\nprint(new is lst)\n\nnew = lst[:]\nprint(new is lst)\n\nnew = lst.copy()\nprint(new is lst)</code></pre>\n\n<p> </p>\n\n<p>Which of the following is the correct output of the above code?</p>\n\n<p> </p>\n\n<p><strong>Outputs</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nFalse\nFalse\nFalse</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nTrue\nFalse\nFalse</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nTrue\nTrue\nFalse</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nTrue\nTrue\nTrue</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1574981,"option":"1","correct":true},{"id":1574982,"option":"2","correct":false},{"id":1574983,"option":"3","correct":false},{"id":1574984,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Python Code:</p>\n\n<p><strong>Python Code</strong></p>\n\n<pre class=\"prettyprint\"><code>d1 = {}\nexr, gqn, czh = 164, 936, 728\nd1[exr, gqn, czh] = exr + gqn - czh;\nprint(d1)\n\nd2={}\nkdq, hya, wcl = 482, 925, 859\nd2[kdq, hya, wcl] = hya , wcl, kdq;\nprint(d2)</code></pre>\n\n<p><strong>Outputs</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>{(164, 936, 728): 372}\n{(482, 925, 859): (925, 859, 482)}</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>{(164, 936, 728): 372}\n{482:925, 925:859, 859:482}</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>{164:372, 936:372, 728:372}\n{(482, 925, 859): (925, 859, 482)}</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>{164:372, 936:372, 728:372}\n{482:925, 925:859, 859:482}</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1586174,"option":"1","correct":true},{"id":1586175,"option":"2","correct":false},{"id":1586176,"option":"3","correct":false},{"id":1586177,"option":"4","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def modify(lst):\n    lst.append(9)\n\nlst = [2, 4, 1, 3]\nmodify(lst)\nprint(lst)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1576210,"option":"[ 2, 4, 1, 3 ]","correct":false},{"id":1576211,"option":"[ 2, 4, 1, 3, 9 ]","correct":true},{"id":1576212,"option":"[ 9 ]","correct":false},{"id":1576213,"option":"This program will give an Error","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def modify(lst):\n    lst = [8, 9]\n\nlst = [2, 4, 1, 3]\nmodify(lst)\nprint(lst)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1576214,"option":"[ 2, 4, 1, 3 ]","correct":false},{"id":1576215,"option":"[ 8, 9 ]","correct":true},{"id":1576216,"option":"[ ]","correct":false},{"id":1576217,"option":"This program will give an Error","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2,]*3\n\nprint(lst)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1575602,"option":"[ 6 ]","correct":false},{"id":1575603,"option":"[ 2 ] [ 2 ] [ 2 ]","correct":false},{"id":1575604,"option":"[ 2, 2, 2 ]","correct":true},{"id":1575605,"option":"This program will give an Error","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst_1 = [2, 4, 1, 3]\nlst_2 = [3, 1, 2]\n\nprint(max(lst_1, lst_2))</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1575278,"option":"[2, 4, 1, 3]","correct":false},{"id":1575279,"option":"[3, 1, 2]","correct":true},{"id":1575280,"option":"4","correct":false},{"id":1575281,"option":"4, 3","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2, 4, 1, 3]\n\nprint(lst*2)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1575133,"option":"[2, 4, 1, 3] [2, 4, 1, 3]","correct":false},{"id":1575134,"option":"[2, 4, 1, 3, 2, 4, 1, 3]","correct":true},{"id":1575135,"option":"[4, 8, 2, 6]","correct":false},{"id":1575136,"option":"This program will give an Error","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class Calculate(object):\n    def __init__(self, var1):\n        self.var1 = var1\n    def Calget(self):\n        return self.var1 ** 2\n    def Calset(self, var2):\n        return self.var2 ** self.var1\n    def Caldel(self):\n        return 0\n    area = property(Calget, Calset, Caldel)\na = Calculate(10)\nprint(a.Calget(), end='')\nprint(a.Caldel())\n</code></pre>\n\n<p> </p>","a":[{"id":1122041,"option":"0 100","correct":false},{"id":1122042,"option":"1000","correct":true},{"id":1122043,"option":"100 0","correct":false},{"id":1122044,"option":"RuntimeError ","correct":false}]},{"q":"<p>What is the error in the following Python code:</p>\n\n<pre class=\"prettyprint\"><code>def sample (args):\n  args.insert (args.index (args [-1]), 2)\n  args.pop (0)\n\nnumbers = replica = [3,4,5,6]\nsample (replica)\nprint replica\n</code></pre>","a":[{"id":150827,"option":"There is a discrepancy in the function definition.","correct":false},{"id":150828,"option":"The args argument must be empty.","correct":false},{"id":150829,"option":"The index value is out of range.","correct":false},{"id":150830,"option":"There is no error. The output obtained is [4, 5, 2, 6].","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class operations:\n    def __init__(self):\n        self.name = [\" \", \"Bob\", \"Rebecca\", \"Clint\", \"11231\", \"32i73\"]\n        \n    def data(self, names):\n        self.names = list(filter(lambda el:el[0].isupper() and el[1:].islower(),names))\n        return self.name\n    \n    def display(self, result):\n        length = len(''.join(self.names))\n        n = sorted([int(x) for x in result if x.isdigit()])\n        for i in ((filter(lambda x:x&gt;length,n))):\n            return i\n\no = operations()\nnames = ['Alice', 'mark Thomas', 'rebecca', 'Bob1231', '08732', 'Clint', \"11231\", \"32i73\"]\nresult = o.data(names)\ndis = o.display(result)\nprint(dis)</code></pre>\n\n<p> </p>","a":[{"id":1207839,"option":"32i73","correct":false},{"id":1207840,"option":"11231","correct":true},{"id":1207841,"option":"08732","correct":false},{"id":1207842,"option":"Bob1231","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class MainProgram: \n    def __init__(self, val): \n        self.val = val \n        self.var = [ ] \n    def __call__(self, *args, **kwargs): \n        try: \n            result = self.val(*args, **kwargs) \n        except Exception as e: \n            self.var.append((args, kwargs, e)) \n            raise e \n        else: \n            self.var.append((args, kwargs, result)) \n            return result \n    @classmethod\n    def SubProgram(cls, f): \n        return cls(f) \n@MainProgram.SubProgram \ndef func(x, y): \n    return x / y \nprint(func(y = 6, x = 0))\n</code></pre>\n\n<p> </p>","a":[{"id":1122057,"option":"0","correct":false},{"id":1122058,"option":"1.5","correct":false},{"id":1122059,"option":"0.0","correct":true},{"id":1122060,"option":"ZeroDivisionError","correct":false}]},{"q":"<p>In Python 3, which of the following statements about the terms decorator and decorator pattern are correct:</p>\n\n<ol>\n\t<li>Decorator pattern allows behavior to be added to an existing object dynamically whereas the term decorator defines an object with which you can extend its functionality.</li>\n\t<li>A decorator allows you to place an object inside special wrapper objects dynamically whereas decorator pattern is independent of other instances of the same class.</li>\n\t<li>Python decorators are an implementation of the decorator pattern.</li>\n</ol>","a":[{"id":1121981,"option":"1 and 2","correct":true},{"id":1121982,"option":"2 and 3","correct":false},{"id":1121983,"option":"1 and 3","correct":false},{"id":1121984,"option":"All of these","correct":false}]},{"q":"<p>You are given the following Python code that has the <strong>Calculator</strong> class and <strong>Talker</strong> class. Each of these classes has a method called <strong>talk</strong>. You create another <strong>TalkingCalculator</strong> class. You want to inherit the mentioned classes in the new class. Which of these statements about this scenario is correct if you inherit the classes in the new class in the following ways:</p>\n\n<ol>\n</ol>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class Calculator:\n    def talk(self, expression):\n        self.value = eval(expression)\nclass Talker:\n    def talk(self):\n        print 'Hi, my value is', self.value</code></pre>\n\n<p><strong>Ways to inherit</strong></p>\n\n<p>1. class TalkingCalculator(Talker, Calculator):<br>\n2. class TalkingCalculator(Calculator, Talker):</p>\n\n<p> </p>","a":[{"id":730488,"option":"1. It will override the talk method of the Talker.\r\n2. It will override the talk method of the Calculator.","correct":true},{"id":730489,"option":"1. It will override the talk method of the Calculator.\r\n2. It will override the talk method of the Talker.","correct":false},{"id":730490,"option":"1. It will override the talk method of the Talker.\r\n2. It will override the talk method of the Talker.","correct":false},{"id":730491,"option":"1. It will override the talk method of the Calculator.\r\n2. It will override the talk method of the Calculator.","correct":false}]},{"q":"<p>If the output of the following Python 3 code must match the output that is provided here, determine the value of X.</p>\n\n<p><strong>Code</strong> </p>\n\n<pre class=\"prettyprint\"><code>class test:\n    def __init__(self, a):\n        self.a = a\n        \n    def operation(self, a, b):\n        X\n        return a\n\na = ['a','e','i','o','u','A','E','I','O','U',' ']\nobj = test(a)\nb = \"HackerEarth Tests\"\nc = obj.operation(a,b)\nprint(c)</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>['a', 'e', 'E', ' ']</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>for i in a:\n            if i not in b:\n                a = a[:a.index(i+1)]+a[a.index(i):]</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>for i in a:\n            if i not in b:\n                a = a[:a.index(i)]+a[a.index(i)+1:]</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>for i in b:\n            if i not in a:\n                a = a[:a.index(i)]+a[a.index(i)+1:]</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>for i in b:\n            if i not in a:\n                a = a[:a.index(i+1)]+a[a.index(i)+1:]</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1207691,"option":"1","correct":false},{"id":1207692,"option":"2","correct":true},{"id":1207693,"option":"3","correct":false},{"id":1207694,"option":"4","correct":false}]},{"q":"<p>In Python 3, you are given the following Code 1 and Code 2. Which of these will display a runtime error?</p>\n\n<p><strong>Code 1</strong></p>\n\n<pre class=\"prettyprint\"><code>class demo:\n    def reset(self):\n        self.x = 0\n        self.y = 0\np = demo()\ndemo.reset(p)\nprint(p.x, p.y)\n</code></pre>\n\n<p><strong>Code 2</strong> </p>\n\n<pre class=\"prettyprint\"><code>class demo:\n        def reset(self):\n                self.x = 0\n                self.y = 0\np = demo()\np.reset()\nprint(p.x, p.y)</code></pre>\n\n<p> </p>","a":[{"id":730484,"option":"Code 1","correct":false},{"id":730485,"option":"Code 2","correct":false},{"id":730486,"option":"Both of these","correct":false},{"id":730487,"option":"None of these","correct":true}]},{"q":"<p>What is the output of the following Python code:</p>\n\n<pre class=\"prettyprint\"><code>class sample:\n    def __init__(self):\n        return 'HackerEarth'\n    def display(self):\n        print 'HackeEarth'\na = sample()\nprint a\n</code></pre>","a":[{"id":149197,"option":"AttributeError","correct":false},{"id":149198,"option":"NameError","correct":false},{"id":149199,"option":"TypeError","correct":true},{"id":149200,"option":"SyntaxError","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class Python: \n        \"ss\"  #line 2  \n        1222    # line 3\n        \"ss\"    \n        \"Welcome\" \n        a = 5\n        def display(self):\n                print('Python')\nprint(Python.a, Python.__doc__)  # line 9</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>5 ss 1222 ss Welcome</code></pre>\n\t<strong>  </strong></li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>5 ss</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":730672,"option":"1","correct":false},{"id":730673,"option":"2","correct":true},{"id":730674,"option":"Compilation error at line 2 ","correct":false},{"id":730675,"option":"Compilation error at line 9","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class Python:\n    def __init__(self,a,b=1):\n        self.a = a\n        self.b = b\n    def display(self):\n        print(\"Hi\".capitalize(format(self.a,self.b)))   \nobj1 = Python(5,10)\nobj2 = Python(1)\nobj1.c = 2         \nobj1.display()  </code></pre>\n\n<p> </p>","a":[{"id":730668,"option":"HI 5 10","correct":false},{"id":730669,"option":"HI 1","correct":false},{"id":730670,"option":"TypeError","correct":true},{"id":730671,"option":"AttributeError","correct":false}]},{"q":"<p>You are given the following Python 3 code. Which of these options is the equivalent code of the mentioned code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class A(object):\n    def f(x):\n        print(10*x)\nA.f(5)</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>  \n\t<pre class=\"prettyprint\"><code>class A(object):\n    @staticmethod\n    def f(x):\n        print(10*x)\nA.f(5)</code></pre>\n\t</li>\n\t<li>  \n\t<pre class=\"prettyprint\"><code>class A(object):\n    def f(self,x):\n        print(10*x)\na=A()\na.f(5)</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>  \n\t<pre class=\"prettyprint\"><code>class A():\n    def f(self,x):\n        print(10*x)\na=A()\na.f(5)</code></pre>\n\n\t<p>  </p>\n\t</li>\n</ol>","a":[{"id":730480,"option":"1","correct":false},{"id":730481,"option":"2","correct":false},{"id":730482,"option":"3","correct":false},{"id":730483,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class world:\n \n    def __init__(wow):\n        wow.__newtime()\n \n    def dow(wow):\n        print ('HackerEarth ')\n \n    def __newtime(wow):\n        print ('Python test')\n \nx = world()\nx.dow()</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>HackerEarth \nPython test</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Python test\nHackerEarth </code></pre>\n\t \n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>HackerEarth</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":730524,"option":"1","correct":false},{"id":730525,"option":"2","correct":true},{"id":730526,"option":"3","correct":false},{"id":730527,"option":"TypeError","correct":false}]},{"q":"<p>In Python 3, consider the provided code. Which of these outputs will be obtained if you perform the following function for the fourth time?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>iter_obj=iter([3,4,5])\nnext(iter_obj)   # first time</code></pre>\n\n<p><strong>Function</strong></p>\n\n<pre class=\"prettyprint\"><code>next(iter_obj)</code></pre>\n\n<p> </p>","a":[{"id":1121837,"option":"3","correct":false},{"id":1121838,"option":"5","correct":false},{"id":1121839,"option":"4","correct":false},{"id":1121840,"option":"StopIteration","correct":true}]},{"q":"<p>What is the output of the following Python code:</p>\n\n<pre class=\"prettyprint\"><code>n, k = 2,0\np = [x for x in range(2, n + 1) if all(x % y for y in range(2, x))]\nprint ['YES', 'NO'][sum(p[i - 1] + p[i] + 1 in p for i in range(1, len(p))) &lt; k]</code></pre>\n\n<p> </p>","a":[{"id":730500,"option":"YES","correct":true},{"id":730501,"option":"NO","correct":false},{"id":730502,"option":"YES NO","correct":false},{"id":730503,"option":"NO YES","correct":false}]},{"q":"<p>You are given the following Python 3 code. Which of these statements about this code is correct:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class Base():\n        a=1\nclass Der(Base):\n        pass\nclass Dert(Der):\n        pass\nprint(Base.a,Der.a,Dert.a)</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The output of the code is 1 1 1.</li>\n\t<li>Both the Der and Dert classes have inherited the properties of the Base class.</li>\n</ol>","a":[{"id":730528,"option":"1","correct":false},{"id":730529,"option":"2","correct":false},{"id":730530,"option":"Both of these","correct":true},{"id":730531,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python code:</p>\n\n<pre class=\"prettyprint\"><code>from copy import copy\nclass sample:\n  pass\n\na = sample()\na.lst = [1, 2, 3]\na.str = 'hacker'\nb = copy(a)\na.lst.append('earth')\na.str = 'Python'\nprint b.str</code></pre>","a":[{"id":150651,"option":"[1,2,3]","correct":false},{"id":150652,"option":"hacker","correct":true},{"id":150653,"option":"earth","correct":false},{"id":150654,"option":"hacker earth","correct":false}]},{"q":"<p>Which of the following are in-built iterables in Python 3:</p>\n\n<ol>\n\t<li>Lists</li>\n\t<li>Dictionaries</li>\n\t<li>Tuples</li>\n</ol>","a":[{"id":1121821,"option":"1 and 2","correct":false},{"id":1121822,"option":"2 and 3","correct":false},{"id":1121823,"option":"1 and 3","correct":false},{"id":1121824,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>t = [(2, 1), (1, 1), (2, 4), (2, 6), (7, 5), (6, 4)] \nresult = {} \nfor i, j in t: \n     result.setdefault(j, []).append(i) \nprint(result) \n</code></pre>\n\n<p> </p>","a":[{"id":1121813,"option":"{1: [1, 1], 4: [6, 6], 6: [2], 5: [7]} ","correct":false},{"id":1121814,"option":"{1: [2, 1], 4: [2, 6], 6: [2], 5: [7]}  ","correct":true},{"id":1121815,"option":"{1: (2, 1), 4: (2, 6), 6: (2), 5: (7)} ","correct":false},{"id":1121816,"option":"{2: [1, 4, 6], 1: [1], 7: [5], 6: [4]}","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def MainCount(f):\n    def progFirst(*args, **kwargs):\n        progFirst.calls += 1\n        return f(*args, **kwargs)\n    progFirst.calls = 0\n    return progFirst\n@MainCount\ndef progSecond(i):\n    return i + 1\n@MainCount\ndef Count(i= 0, j = 1):\n    return i*j + 1\nprint(progSecond.calls)\nfor n in range(5):\n    progSecond(n)\nCount(j = 0, i = 1)\nprint(Count.calls)\n</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\n0</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0\n1</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\n1</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0\n0</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1122025,"option":"1","correct":false},{"id":1122026,"option":"2","correct":true},{"id":1122027,"option":"3","correct":false},{"id":1122028,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Python code:</p>\n\n<pre class=\"prettyprint\"><code>class Rectangle(object):\n    def __init__(self, w, h):\n        self.width = w\n        self.height = h\n    def area(self):\n        return self.width * self.height\n    def __str__(self):\n        return '(Rectangle: %s, %s)' %(self.width, self.height)\n\nr1 = Rectangle(12,24)\nprint r1\n</code></pre>","a":[{"id":150575,"option":"(Rectangle: 12,  24)","correct":true},{"id":150576,"option":"288","correct":false},{"id":150577,"option":"(Rectangle: 24, 12)","correct":false},{"id":150578,"option":"144","correct":false}]}]