[{"q":"<p>In Verilog, you are given the following code statement. Which of the following can be used in place of X in the code to represent the provided logic design correctly:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>'timescale 1ns/100ps\n'default_nettype none\nmodule circuit(A, B, C, D, E);\n       output D, E;\n       input A, B, C;\n       wire d1;\n       X\nendmodule</code></pre>\n\n<p><strong>Logic design</strong></p>\n\n<p><strong><img alt=\"\" height=\"271\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/e9b37085-9ad8-4386-b69e-c4ec110a2b32.png\" width=\"809\"></strong></p>\n\n<p> </p>","a":[{"id":1210898,"option":"and #(50) G1 (d1, A, B);\r\nnot #(20) G2 (E, B);\r\nor #(30) G3 (D, d1, E);","correct":false},{"id":1210899,"option":"and #(50) G1 (d1, A, B);\r\nnot #(20) G2 (d1, C);\r\nor #(30) G3 (D, d1, E);","correct":false},{"id":1210900,"option":"and #(50) G1 (d1, A, B);\r\nnot #(20) G2 (E, C);\r\nor #(30) G3 (D, d1, E);","correct":true},{"id":1210901,"option":"or #(50) G1 (d1, A, B);\r\nnot #(20) G3 (E, C);\r\nand #(30) G2 (D, d1, E);","correct":false}]},{"q":"<p>In Verilog, which of these diagrams are represented in the following code:</p>\n\n<pre class=\"prettyprint\"><code>module design(out, a, b);\noutput out;\ninput a,b;\nwire c;\nsupply1 pwr;\nsupply0 gnd;\npmos(c, pwr, b);\npmos(out, c, a);\nnmos (out, gnd, a);\nnmos(out, gnd, b);\nendmodule\n</code></pre>\n\n<p><strong>Diagrams</strong></p>\n\n<ol>\n\t<li><strong><img alt=\"\" height=\"585\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a95f82c8-17ab-4007-8f86-b04e2618ec76.png\" width=\"557\"></strong></li>\n\t<li><strong><img alt=\"\" height=\"585\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/3942ba3b-ba40-4f8c-9958-32fe1fd516f3.png\" width=\"573\"></strong></li>\n\t<li><strong><img alt=\"\" height=\"593\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/9fbf46c0-84bc-40e7-be9d-2036f96f8335.png\" width=\"541\"></strong></li>\n</ol>","a":[{"id":1212701,"option":"1","correct":true},{"id":1212702,"option":"2","correct":false},{"id":1212703,"option":"3","correct":false},{"id":1212704,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements represent the advantages of SystemVerilog:</p>\n\n<ol>\n\t<li>It contains built-in support for searching and sorting operations.</li>\n\t<li>It supports abstract data structures.</li>\n\t<li>It has better performance and less memory utilization. <br>\n\t </li>\n</ol>","a":[{"id":1218415,"option":"1 and 2","correct":false},{"id":1218416,"option":"2 and 3","correct":false},{"id":1218417,"option":"1 and 3","correct":false},{"id":1218418,"option":"All of these","correct":true}]},{"q":"<p>In HDL, which of the following statements about <strong>Verilog</strong> are correct:</p>\n\n<ol>\n\t<li>It uses a four-value logic—0, 1, True, x. Here, x represents the output that is computed but cannot be displayed because of its large value.</li>\n\t<li>It uses a four-value logic—0, 1, z, None. Here, z represents a high-impedance value.</li>\n\t<li>It uses a four-value logic—0, 1, x, y. Here, x represents the output that Verilog is unable to compute and z represents a high-impedance value. </li>\n\t<li>x AND 1=x but x AND 0=0</li>\n</ol>","a":[{"id":1210894,"option":"1 and 2","correct":false},{"id":1210895,"option":"2 and 3","correct":false},{"id":1210896,"option":"3 and 4","correct":true},{"id":1210897,"option":"1 and 4","correct":false}]},{"q":"<p>What do the following numbers represent in Verilog:</p>\n\n<ol>\n\t<li>'h08FF </li>\n\t<li>3'b10x </li>\n\t<li>-4'b11 </li>\n</ol>","a":[{"id":1210890,"option":"1. 8-bit hexadecimal number\r\n2. 3-bit decimal number \r\n3. 4-bit two's complement negation of binary number 14 (1110)","correct":false},{"id":1210891,"option":"1. 16-bit hexadecimal number\r\n2. 3-bit binary number with least significant bit unknown or don't care\r\n3. 4-bit two's complement negation of binary number 11 (1101)","correct":true},{"id":1210892,"option":"1. 8-bit hexadecimal number\r\n2. 3-bit binary number with least significant bit unknown or don't care\r\n3. 8-bit two's complement negation of binary number 11 (1101)","correct":false},{"id":1210893,"option":"1. 16-bit hexadecimal number\r\n2. 3-bit binary number with least significant bit unknown or don't care\r\n3. 4-bit two's complement negation of binary number 12 (1100)","correct":false}]}]