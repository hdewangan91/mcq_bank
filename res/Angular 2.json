[{"q":"<p>In Angular 2, which of the following changes the appearance of a component or segment?</p>","a":[{"id":388742,"option":"Components","correct":false},{"id":388743,"option":"Structural","correct":false},{"id":388744,"option":"Attribute","correct":true},{"id":388745,"option":"Pipes","correct":false}]},{"q":"<p>In Angular 2, which of the following changes the DOM design by including and evacuating the DOM components?</p>","a":[{"id":388738,"option":"Components","correct":false},{"id":388739,"option":"Structural","correct":true},{"id":388740,"option":"Attribute","correct":false},{"id":388741,"option":"Pipes","correct":false}]},{"q":"<p>In Angular 2, which of the following directives is used with a layout?</p>","a":[{"id":388734,"option":"Components","correct":true},{"id":388735,"option":"Structural","correct":false},{"id":388736,"option":"Attribute","correct":false},{"id":388737,"option":"None of these","correct":false}]},{"q":"<p>In Angular 2, which of the following defines organizing the information through observables?</p>","a":[{"id":388384,"option":"Reactive programming","correct":true},{"id":388385,"option":"preventEventPropagation","correct":false},{"id":388386,"option":"RxJS","correct":false},{"id":388387,"option":"Flux","correct":false}]},{"q":"<p>In Angular 2, what is $parse used for?</p>","a":[{"id":388718,"option":"Converts an AngularJS expression into a function","correct":true},{"id":388719,"option":"Calls $compile ","correct":false},{"id":388720,"option":"Converts AngularJS scope values to VanillaJS values","correct":false},{"id":388721,"option":"Converts AngularJS code to VanillaJS","correct":false}]},{"q":"<p>In Angular 2, which of the following pipes formats the date value according to the locale rules?</p>","a":[{"id":388806,"option":"DataPipe","correct":false},{"id":388807,"option":"DatePipe","correct":true},{"id":388808,"option":"DatePipe.format()","correct":false},{"id":388809,"option":"None of these","correct":false}]},{"q":"<p>In Angular 2, which of the following commands is used to execute an Architect target with an optional custom builder configuration defined in your project?</p>","a":[{"id":388468,"option":"ng server","correct":false},{"id":388469,"option":"ng init","correct":false},{"id":388470,"option":"ng run","correct":true},{"id":388471,"option":"ng exec","correct":false}]},{"q":"<p>In Angular 2, which typing is used in the following code:</p>\n\n<pre class=\"prettyprint\"><code>public subtractNumbers(number1, number2){\n    return number1 - number2;\n}\n</code></pre>","a":[{"id":388488,"option":"Static","correct":false},{"id":388489,"option":"Dynamic","correct":true},{"id":388490,"option":"Import","correct":false},{"id":388491,"option":"Export","correct":false}]},{"q":"<p>In Angular 2, which of the following filters is used to convert an input string to the percentage format?</p>","a":[{"id":388500,"option":"percentage","correct":false},{"id":388501,"option":"percent","correct":true},{"id":388502,"option":"%","correct":false},{"id":388503,"option":"%%","correct":false}]},{"q":"<p>In Angular 2, which of these options have the following properties:</p>\n\n<ol>\n\t<li>It changes the appearance or behavior of a DOM element.</li>\n\t<li>These directives look like regular HTML attributes in templates.</li>\n</ol>","a":[{"id":388638,"option":"Attribute","correct":true},{"id":388639,"option":"Structural","correct":false},{"id":388640,"option":"Components","correct":false},{"id":388641,"option":"Typescript","correct":false}]},{"q":"<p>You are working on the Angular workspace configuration. Which of the following properties customizes the <code>ng generate</code> sub-command option defaults for your project?</p>","a":[{"id":388702,"option":"projectType","correct":false},{"id":388703,"option":"sourceRoot","correct":false},{"id":388704,"option":"prefix","correct":false},{"id":388705,"option":"schematics","correct":true}]},{"q":"<p>In Angular 2, you are passing information from one component to another component in your application. If you are required to use a route to pass this information to your application components, then which of the following interfaces is used to perform this action?</p>","a":[{"id":388710,"option":"ActivateRouteLink","correct":false},{"id":388711,"option":"Route","correct":false},{"id":388712,"option":"ActivateRoute","correct":true},{"id":388713,"option":"RouteLink","correct":false}]},{"q":"<p>In Angular 2, which of the following functions returns the HTML template?</p>","a":[{"id":388726,"option":"styleUrls","correct":false},{"id":388727,"option":"templateUrl","correct":true},{"id":388728,"option":"styles","correct":false},{"id":388729,"option":"template","correct":false}]},{"q":"<p>In Angular 2, what is the number of main building blocks that are identified by the architecture diagram?</p>","a":[{"id":388798,"option":"2","correct":false},{"id":388799,"option":"4","correct":false},{"id":388800,"option":"6","correct":false},{"id":388801,"option":"8","correct":true}]},{"q":"<p>In Angular, which of the following statements about the dependency injection(DI) are correct:</p>\n\n<ol>\n\t<li>Dependencies are services or objects that a class needs to perform its function.</li>\n\t<li>DI is a coding pattern that requires dependencies from external sources rather than creating them itself.</li>\n\t<li>DI framework also provides declared dependencies to a class even when that class is not instantiated.</li>\n</ol>\n\n<p> </p>","a":[{"id":536950,"option":"1 and 2","correct":true},{"id":536951,"option":"2 and 3","correct":false},{"id":536952,"option":"1 and 3","correct":false},{"id":536953,"option":"All of these","correct":false}]},{"q":"<p>Which of the following statements about Angular is false?</p>","a":[{"id":536938,"option":"A change-detection graph is a directed tree.","correct":false},{"id":536939,"option":"Change detection is not predicatable.","correct":true},{"id":536940,"option":"Change detection becomes stable after a single pass.","correct":false},{"id":536941,"option":"Change detection generates VM-friendly code for better performance.","correct":false}]},{"q":"<p>In Angular, Inversion of Control (IoC) does not serve the design purpose of ____________________.</p>","a":[{"id":536958,"option":"Decoupling the execution of a task from implementation","correct":false},{"id":536959,"option":"Focusing a module on the task it is designed for","correct":false},{"id":536960,"option":"Freeing modules from assumptions about how other systems do what they do and instead rely on contracts","correct":false},{"id":536961,"option":"Preventing side effects while replacing a factory","correct":true}]},{"q":"<p>Which of the following is a custom matcher in Angular?</p>","a":[{"id":536966,"option":"toHaveBeenCalledBefore","correct":false},{"id":536967,"option":"toBeGoofy","correct":true},{"id":536968,"option":"toBeFalsy","correct":false},{"id":536969,"option":"toThrowError","correct":false}]},{"q":"<p>In Angular 2, which of the following ways to create a structural directive is correct?</p>","a":[{"id":388746,"option":"@Directive({\r\n      selector: '[appDelay]'\r\n    })\r\n    export class DelayDirective {\r\n      constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n      ) { }\r\n\r\n      @Input()\r\n      set appDelay(time: number): void { }\r\n    }","correct":true},{"id":388747,"option":"export class DelayDirective {\r\n      constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n      ) { }\r\n\r\n      @Input()\r\n      set appDelay(time: number): void { }\r\n    }","correct":false},{"id":388748,"option":"export class DelayDirective {\r\n      constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n      ) { }","correct":false},{"id":388749,"option":"@Directive({\r\n      selector: '[appDelay]'\r\n    })\r\n    import class DelayDirective {\r\n      constructor(\r\n        private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef\r\n      ) { }\r\n\r\n      @Input()\r\n      set appDelay(time: number): void { }\r\n    }","correct":false}]},{"q":"<p>In Angular 2, which of the following syntaxes for adding multiple router-outlets within the same template is correct?</p>","a":[{"id":388706,"option":" <div class=\"row\">\r\n   <div class=\"user\">\r\n     <router-outlet name=\"userList\"></router-outlet>\r\n   </div>\r\n   <div class=\"userInfo\">\r\n     <router-outlet name=\"userInfo\"></router-outlet>\r\n   </div>\r\n </div>","correct":true},{"id":388707,"option":"<div class=\"user\">\r\n      <router-outlet name=\"userList\"></router-outlet>\r\n    </div>\r\n    <div class=\"userInfo\">\r\n      <router-outlet name=\"userInfo\"></router-outlet>\r\n    </div>","correct":false},{"id":388708,"option":"<router-outlet name=\"userList\"></router-outlet>\r\n      <router-outlet name=\"userInfo\"></router-outlet>","correct":false},{"id":388709,"option":"<router-outlet name=\"userInfo, userList\"></router-outlet>","correct":false}]},{"q":"<p>In Angular 2, which of these strategies are used for dirty checking?</p>","a":[{"id":388682,"option":"By inference, by collection contents, and by value","correct":false},{"id":388683,"option":"By reference, by collection contents, and by value","correct":true},{"id":388684,"option":"By constructor, by collection contents, and by value","correct":false},{"id":388685,"option":"By inference, by collection contents, and by value","correct":false}]},{"q":"<p>In Angular 2, which of the following statements about <strong>typings</strong> is correct?</p>","a":[{"id":388484,"option":"Typings does not allow the TypeScript compiler to use existing classes and properties.","correct":false},{"id":388485,"option":"We cannot install typings from a repository using the typings command.","correct":false},{"id":388486,"option":"Both of these","correct":false},{"id":388487,"option":"None of these","correct":true}]},{"q":"<p>In Angular 2, which of the following statements is true?</p>","a":[{"id":388171,"option":"On change of scope value, $digest is called.","correct":false},{"id":388172,"option":"On change of scope value, $apply is called which in turn calls $digest.","correct":true},{"id":388173,"option":"On change of scope value, $watch is called.","correct":false},{"id":388174,"option":"On change of scope value, $inject is called.","correct":false}]},{"q":"<p>In Angular 2, how are all the numbers represented in <strong>TypeScript</strong>?</p>","a":[{"id":388191,"option":"Integer","correct":false},{"id":388192,"option":"Decimal","correct":false},{"id":388193,"option":"Floating","correct":true},{"id":388194,"option":"String","correct":false}]},{"q":"<p>Which of the following represent the components of Angular 2?</p>","a":[{"id":388372,"option":"Decorator,Template, and View","correct":false},{"id":388373,"option":"Template, Class, and Metadata","correct":true},{"id":388374,"option":"Delegates and Class","correct":false},{"id":388375,"option":"Decorator, Metadata, and Functions","correct":false}]},{"q":"<p>In Angular 2, which of the following ways for calling service in the component class is correct:</p>\n\n<ol>\n\t<li>Create or import the service to the component class.</li>\n\t<li>Add it as a component provider.</li>\n\t<li>Include it through dependency injection.</li>\n\t<li>Use the service function in the component.</li>\n</ol>","a":[{"id":388778,"option":"All of these","correct":true},{"id":388779,"option":"2, 3, and 4","correct":false},{"id":388780,"option":"3 and 4","correct":false},{"id":388781,"option":"4 only","correct":false}]},{"q":"<p>In Angular 2, in which of these folders the <strong>CLI</strong> stores the Angular-specific code?</p>","a":[{"id":388766,"option":"src folder","correct":false},{"id":388767,"option":"src/app folder","correct":true},{"id":388768,"option":"app folder","correct":false},{"id":388769,"option":"images folder","correct":false}]},{"q":"<p>In Angular2, what are the various types of pipes?</p>","a":[{"id":388416,"option":"Built-in","correct":false},{"id":388417,"option":"User-defined","correct":false},{"id":388418,"option":"Both of these","correct":false},{"id":388419,"option":"Pure and impure","correct":true}]},{"q":"<p>In Angular 2, which of the following statements about <em>$compile</em> is true?</p>","a":[{"id":388690,"option":"This service converts a HTML string to a fully functional DOM element.","correct":true},{"id":388691,"option":"This service compiles AngularJS to PlainJS.","correct":false},{"id":388692,"option":"This service connects the scope and root-scope.","correct":false},{"id":388693,"option":"This service calls the method app.rum.","correct":false}]},{"q":"<p>In Angular 2, which of the following interfaces is implemented by the pipe class?</p>","a":[{"id":388424,"option":"PipeTransform","correct":true},{"id":388425,"option":"Pipe","correct":false},{"id":388426,"option":"Transform","correct":false},{"id":388427,"option":"PipeTransformed","correct":false}]},{"q":"<p>Which of the following documents contains metadata for an Angular 2 project?</p>","a":[{"id":388448,"option":"tsconfig.json","correct":false},{"id":388449,"option":"package.json","correct":true},{"id":388450,"option":"systemjs.config.json","correct":false},{"id":388451,"option":"config.json","correct":false}]},{"q":"<p>In Angular 2, in how many ways binding can be used by the designed forms?</p>","a":[{"id":388472,"option":"1","correct":false},{"id":388473,"option":"2","correct":true},{"id":388474,"option":"3","correct":false},{"id":388475,"option":"4","correct":false}]},{"q":"<p>In Angular 2, which of the following is used to handle the form submissions?</p>","a":[{"id":388642,"option":"ngSubmit","correct":true},{"id":388643,"option":"Submit","correct":false},{"id":388644,"option":"ngReset","correct":false},{"id":388645,"option":"Reset","correct":false}]},{"q":"<p>In Angular2, the promise service in ES6 is a placeholder for future values. If you are required to create an instance of this service, then which of the following syntaxes in this scenario is correct?</p>","a":[{"id":388762,"option":"var promise = new Promise((resolve, reject) => {});","correct":true},{"id":388763,"option":"let promise => new Promise((resolve, reject) = {});","correct":false},{"id":388764,"option":"let promise = new Promise((resolve, reject) => ());","correct":false},{"id":388765,"option":"var promise = >new Promise((resolve, reject) = {});","correct":false}]},{"q":"<p>Which of the following statements related to $http and $resource in Angular is false?</p>","a":[{"id":536978,"option":"$http is meant to make ajax calls that can fetch any data xml, json, images etc.","correct":false},{"id":536979,"option":"$resource is meant for REST based calls (RESTFUL)","correct":false},{"id":536980,"option":"$http internally uses $resource","correct":true},{"id":536981,"option":"$resource internally uses $http","correct":false}]},{"q":"<p>In Angular, which zone notifies subscribers immediately after the final (onTurnDone()) callback before ending a VM event?</p>","a":[{"id":536946,"option":"onEventDone()","correct":true},{"id":536947,"option":"onTurnDone()","correct":false},{"id":536948,"option":"onTurnStart()","correct":false},{"id":536949,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about the Reactive form approach in Angular is not true:</p>\n\n<ol>\n\t<li> Gives us more control thus resulting in a better testable form by leveraging decoupling</li>\n\t<li> Binds directives and behavior by one/two-way binding to our templates</li>\n\t<li> Improves the user experience with features like reactive transformations, correlated validations etc.</li>\n\t<li> Handles complex scenarios as runtime validation rules</li>\n</ol>","a":[{"id":536962,"option":"1","correct":false},{"id":536963,"option":"2","correct":true},{"id":536964,"option":"3","correct":false},{"id":536965,"option":"4","correct":false}]},{"q":"<p>Which of the following statements about AoT compilation in Angular is not true:</p>\n\n<ol>\n\t<li>It accelerates rendering. The executable JavaScript code format allows the browser to render the application immediately without having to compile it first.</li>\n\t<li>It makes runtime faster. The compilation context is performed during runtime to the application.</li>\n\t<li>It helps to detect errors in advance. The Angular compiler is able to detect errors during the build process and these can be fixed before the user accesses the application in the browser.</li>\n\t<li>It allows for better security. AOT compiles HTML templates and components into JavaScript files long before they are served to the client.</li>\n</ol>","a":[{"id":536974,"option":"1","correct":false},{"id":536975,"option":"2","correct":true},{"id":536976,"option":"3","correct":false},{"id":536977,"option":"4","correct":false}]},{"q":"<p>In Angular 2, which of the following basic steps of the <strong>dependency injection </strong>are correct:</p>\n\n<pre class=\"prettyprint\"><code>1. A class with @Injectable () should send the data that it is to be injected in “UserService”.\n2. A class with @Injectable () should send the data that it is to be injected in “User_Service”.\n3. A class with a constructor that accepts a type to be injected.\n4. A class with a destructor that accepts a type to be injected.\n</code></pre>","a":[{"id":388686,"option":"1 and 2","correct":false},{"id":388687,"option":"1, 2, 3, and 4","correct":false},{"id":388688,"option":"1 and 3","correct":true},{"id":388689,"option":"2 and 4","correct":false}]},{"q":"<p>In Angular 2, which of the following is used to concatenate strings?</p>","a":[{"id":388368,"option":"String interpolation","correct":true},{"id":388369,"option":"String compatibility","correct":false},{"id":388370,"option":"Variable interpolation","correct":false},{"id":388371,"option":"Variable compatibility","correct":false}]},{"q":"<p>In Angular 2, which of the following commands is used for installing the <em>ng2-pagination</em> third party control?</p>","a":[{"id":388440,"option":"npm install ng2-pagination","correct":false},{"id":388441,"option":"np install ng2-pagination --save","correct":false},{"id":388442,"option":"npm ng2-pagination --save","correct":false},{"id":388443,"option":"npm install ng2-pagination --save","correct":true}]},{"q":"<p>In Angular 2, which of the following classes encapsulates the <strong>GET, POST, or PUT</strong> methods and provides its result as a service across your application?</p>","a":[{"id":388758,"option":"Service","correct":true},{"id":388759,"option":"Pipes","correct":false},{"id":388760,"option":"Typescript","correct":false},{"id":388761,"option":"Class","correct":false}]},{"q":"<p>In Angular 2, which of the following is the visual part of a component?</p>","a":[{"id":388376,"option":"Decorator","correct":false},{"id":388377,"option":"Controller","correct":false},{"id":388378,"option":"View","correct":true},{"id":388379,"option":"User Interface","correct":false}]},{"q":"<p>In Angular 2, which of the following language structures will clone and infuse bits of templates of HTML in the markup expelling it from the DOM when the condition assesses to false?</p>\n\n<p> </p>","a":[{"id":388404,"option":"*ngIf=”conditional”","correct":true},{"id":388405,"option":"*ngIf='conditional'","correct":false},{"id":388406,"option":"ngIf=”conditional”","correct":false},{"id":388407,"option":"ngIf='conditional'","correct":false}]},{"q":"<p>In Angular 2, which of the following is used to create instances of dependencies?</p>","a":[{"id":388674,"option":"Injector","correct":true},{"id":388675,"option":"Provider","correct":false},{"id":388676,"option":"Dependency","correct":false},{"id":388677,"option":"Pipes","correct":false}]},{"q":"<p>In Angular 2, what is the correct sequence for creating custom pipes:</p>\n\n<pre class=\"prettyprint\"><code>1. Define a typescript class. \n2. Finish the class utilizing @Pipe. \n3. Execute PipeTransform interface. \n4. Abrogate change() strategy. \n5. Design the class in the application module with @NgModule. \n6. Ready to use custom pipe anywhere in the application.\n</code></pre>","a":[{"id":388420,"option":"2, 4, 6, 1, 3, 5","correct":false},{"id":388421,"option":"1, 2, 3, 4, 5, 6","correct":true},{"id":388422,"option":"1, 3, 4, 5, 2, 6","correct":false},{"id":388423,"option":"2, 5, 6, 1, 3, 4","correct":false}]},{"q":"<p>In Angular 2, which of the following files are generated on the execution of <strong><code>ng g component [name]</code></strong> command?</p>","a":[{"id":388754,"option":"Test specification","correct":false},{"id":388755,"option":"HTML","correct":false},{"id":388756,"option":"CSS","correct":false},{"id":388757,"option":"All of these","correct":true}]},{"q":"<p>In Angular 2, which of the following domain rules is not correct?</p>","a":[{"id":387251,"option":"@-moz-document domain(example.com)\r\n","correct":false},{"id":387252,"option":"@-moz-document domain(www.example.com)\r\n","correct":false},{"id":387253,"option":"@-moz-document domain(example.com/*)\r\n","correct":true},{"id":387254,"option":"@-moz-document domain(http://example.com)\r\n","correct":false}]},{"q":"<p>In Angular 2, which of the following is related to <strong>ECMAScript5</strong>?</p>","a":[{"id":388187,"option":"JQuery","correct":false},{"id":388188,"option":"JavaScript","correct":true},{"id":388189,"option":"ASP","correct":false},{"id":388190,"option":"Client","correct":false}]},{"q":"<p>In Angular 2, which of the following events is fired after initializing component's views and child views?</p>","a":[{"id":388810,"option":"ngAfterViewInit","correct":true},{"id":388811,"option":"ngAfterViewChecked","correct":false},{"id":388812,"option":"ngAfterContentChecked","correct":false},{"id":388813,"option":"ngAfterContentInit","correct":false}]},{"q":"<p>In Angular 2, which of the following events is fired before a directive or a component is destroyed?</p>","a":[{"id":388802,"option":"ngAfterViewChecked","correct":false},{"id":388803,"option":"ngOnDestroy","correct":true},{"id":388804,"option":"ngOnEnd","correct":false},{"id":388805,"option":"ngOnExit","correct":false}]},{"q":"<p>In Angular 2, which of the following are two approaches to create a form:</p>\n\n<ol>\n\t<li>Interface-driven</li>\n\t<li>Model-driven</li>\n\t<li>Template-driven</li>\n\t<li>Modular-driven<br>\n\t </li>\n</ol>","a":[{"id":388782,"option":"1 and 2","correct":false},{"id":388783,"option":"2 and 3","correct":true},{"id":388784,"option":"3 and 4","correct":false},{"id":388785,"option":"1 and 3","correct":false}]},{"q":"<p>In Angular 2, which of the following operators is used to catch errors on an existing stream and pass the exception?</p>","a":[{"id":388392,"option":".catch operator","correct":true},{"id":388393,"option":".release operator","correct":false},{"id":388394,"option":"Both of these","correct":false},{"id":388395,"option":"None of these","correct":false}]},{"q":"<p>What is the function of the following Angular 2 code:</p>\n\n<pre class=\"prettyprint\"><code>angular.injector(['main']).get('base64');</code></pre>\n\n<p> </p>","a":[{"id":387267,"option":"Creates a new instance of an injector","correct":true},{"id":387268,"option":"Reuses the already created injector","correct":false},{"id":387269,"option":"Creates a new angular app whose injector method is called","correct":false},{"id":387270,"option":"None of these","correct":false}]},{"q":"<p>In Angular2, you are working on the templates, which of these directives in the following JavaScript code is used to iterate over the lists:</p>\n\n<pre class=\"prettyprint\"><code>&lt;h2&gt;Items List&lt;/h2&gt;\n\n&lt;p&gt;&lt;i&gt;Pick an item from the list&lt;/i&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li *ngFor=\"let item of items\" (click)=\"selectItem(item)\"&gt;\n    {{item.name}}\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;app-item-detail *ngIf=\"selectedItem\" [item]=\"selectedItem\"&gt;&lt;/app-item-detail&gt;</code></pre>\n\n<p> </p>","a":[{"id":388183,"option":"*ngIF","correct":false},{"id":388184,"option":"*ngFor","correct":true},{"id":388185,"option":"<app-item-detail>","correct":false},{"id":388186,"option":"None of these","correct":false}]},{"q":"<p>In Angular 2, what is the function of the ng directives ngShow, and ngHide?</p>","a":[{"id":388770,"option":"Show and hide the directives","correct":false},{"id":388771,"option":"Show and hide the elements ","correct":true},{"id":388772,"option":"Returns the elements","correct":false},{"id":388773,"option":"Returns the services","correct":false}]},{"q":"<p>In Angular 2, which of the following defines the syntax of <strong>$routeParams?</strong></p>","a":[{"id":388400,"option":"params : {[key: string]}","correct":false},{"id":388401,"option":"params : [key: string]: string","correct":false},{"id":388402,"option":"params : {[key: string]: string}","correct":true},{"id":388403,"option":"params : {string}","correct":false}]},{"q":"<p>In Angular 2, which of the following commands is used to create a project?</p>","a":[{"id":388464,"option":"ng Project_name","correct":false},{"id":388465,"option":"ng new","correct":false},{"id":388466,"option":"ng new Project_name","correct":true},{"id":388467,"option":"ng server Project_name","correct":false}]},{"q":"<p>Which of the following statements about Angular 2 is true?</p>","a":[{"id":388480,"option":"$pristine will be TRUE, if the user has not interacted with the form yet.","correct":true},{"id":388481,"option":"$dirty will be false, if the user has already interacted with the form.","correct":false},{"id":388482,"option":"$invalid will be TRUE, if all containing form and controls are invalid.","correct":false},{"id":388483,"option":"$valid will be TRUE, if at least one containing form and control is valid.","correct":false}]},{"q":"<p>In Angular 2, which of the following ways to apply a <strong>filter</strong> is correct?</p>","a":[{"id":388496,"option":"Property-value || filter","correct":false},{"id":388497,"option":"Property-value && filter","correct":false},{"id":388498,"option":"Property-value | filter","correct":true},{"id":388499,"option":"Property-value ** filter","correct":false}]},{"q":"<p>In Angular 2, which of these directives combines property and event binding in a single notation?</p>","a":[{"id":388622,"option":"ngOnInit","correct":false},{"id":388623,"option":"ngModel","correct":true},{"id":388624,"option":"ngInit","correct":false},{"id":388625,"option":"ndString","correct":false}]},{"q":"<p>In Angular 2, which of these decorators is used to attach a class to a directive class containing metadata?</p>","a":[{"id":388630,"option":"@Typescript","correct":false},{"id":388631,"option":"@Pipe","correct":false},{"id":388632,"option":"@Directive","correct":true},{"id":388633,"option":"@User","correct":false}]},{"q":"<p>Which of these types of functions is related to the following Angular 2 code:</p>\n\n<pre class=\"prettyprint\"><code>let additionFunc = function (number1, number2)\n {\n    return number1 + number2;\n};\n</code></pre>","a":[{"id":388658,"option":"Normal","correct":false},{"id":388659,"option":"Anonymous","correct":true},{"id":388660,"option":"Named","correct":false},{"id":388661,"option":"Lambda","correct":false}]},{"q":"<p>In Angular 2, which of the following ways of identifying a position in ng-repeat is correct?</p>","a":[{"id":388650,"option":"track by $index","correct":true},{"id":388651,"option":"track by index","correct":false},{"id":388652,"option":"track by $i","correct":false},{"id":388653,"option":"track by i","correct":false}]},{"q":"<p>In Angular 2, which of the following processes is used to implement multiple pipes in a single expression?</p>","a":[{"id":388750,"option":"Join","correct":false},{"id":388751,"option":"Chain","correct":true},{"id":388752,"option":"Concatenate","correct":false},{"id":388753,"option":"Sync","correct":false}]},{"q":"<p>In Angular, what does the guards function return?</p>","a":[{"id":536990,"option":"Boolean value","correct":false},{"id":536991,"option":"Observable","correct":false},{"id":536992,"option":"Promise","correct":false},{"id":536993,"option":"All of these","correct":true}]},{"q":"<p>In Angular, which of the following cause change detection?</p>","a":[{"id":536934,"option":"Events: Click, submit","correct":false},{"id":536935,"option":"XHR: Fetching date from remote server","correct":false},{"id":536936,"option":"Timers: setTimeout(), setInterval()","correct":false},{"id":536937,"option":"All of these","correct":true}]},{"q":"<p>In Angular, the service provided on the component level is available _______________________.</p>","a":[{"id":536986,"option":"Only to its child components","correct":false},{"id":536987,"option":"Throughout all the components and their child components","correct":false},{"id":536988,"option":"Within the component injector or in any of its child component","correct":true},{"id":536989,"option":"Only to the root component","correct":false}]},{"q":"<p>In Angular, resolver is a code that is executed ________.</p>","a":[{"id":536994,"option":"After the component has loaded","correct":false},{"id":536995,"option":"When the link is clicked but before the component has loaded","correct":true},{"id":536996,"option":"When the link is clicked but it has not loaded yet","correct":false},{"id":536997,"option":"None of these","correct":false}]},{"q":"<p>Which of these modules is related to the following Angular 2 code:</p>\n\n<pre class=\"prettyprint\"><code>import { NgModule }      from '@angular/core'; \nimport { BrowserModule } from '@angular/platform-browser'; \nimport { AppComponent }  from './app.component';  \n\n@NgModule ({ \n   imports:      [ BrowserModule ], \n   declarations: [ AppComponent ], \n   bootstrap:    [ AppComponent ] \n}) \nexport class AppModule { } \n</code></pre>","a":[{"id":388086,"option":"Root ","correct":true},{"id":388087,"option":"Child","correct":false},{"id":388088,"option":"Class","correct":false},{"id":388089,"option":"Template","correct":false}]},{"q":"<p>In Angular 2, which of the following methods is utilized to cut out a string from a given string?</p>","a":[{"id":388408,"option":"String","correct":false},{"id":388409,"option":"Substring","correct":false},{"id":388410,"option":"Slice","correct":true},{"id":388411,"option":"Blank","correct":false}]},{"q":"<p>Which of these is not a property of the Angular 2 module?</p>","a":[{"id":387247,"option":"Bootstrap","correct":false},{"id":387248,"option":"Export","correct":false},{"id":387249,"option":"Import","correct":false},{"id":387250,"option":"Object","correct":true}]},{"q":"<p>In Angular 2, which of the following cases is used for built-in directives?</p>","a":[{"id":387255,"option":"Lower","correct":false},{"id":387256,"option":"Pascal","correct":false},{"id":387257,"option":"Camel","correct":true},{"id":387258,"option":"Upper","correct":false}]},{"q":"<p>In Angular 2, which of these is used to build forms?</p>","a":[{"id":387259,"option":"Modular","correct":false},{"id":387260,"option":"Directives","correct":false},{"id":387261,"option":"Interface","correct":false},{"id":387262,"option":"Template","correct":true}]},{"q":"<p>In Angular 2, how many angular root modules are available at least in each application?</p>","a":[{"id":388082,"option":"3","correct":false},{"id":388083,"option":"2","correct":false},{"id":388084,"option":"0","correct":false},{"id":388085,"option":"1","correct":true}]},{"q":"<p>In Angular 2, which of the following properties is used to create a module?</p>","a":[{"id":388078,"option":"Bootstrap array and directives","correct":false},{"id":388079,"option":"Bootstrap array and import wizard","correct":false},{"id":388080,"option":"Bootstrap array, import array, and export array","correct":true},{"id":388081,"option":"Bootstrap wizard","correct":false}]},{"q":"<p>In Angular 2, which of the following ways to use <em>‘orderBy’</em> is correct?</p>","a":[{"id":388614,"option":"{{x | orderBy:’key’}}","correct":true},{"id":388615,"option":"{{x | orderBy=’key’}}","correct":false},{"id":388616,"option":"{{x | orderBy,’key’}}","correct":false},{"id":388617,"option":"{{x | orderBy->’key’}}","correct":false}]},{"q":"<p>What is the property name in the following Angular 2 code:</p>\n\n<pre class=\"prettyprint\"><code>export class AppComponent {\n   appTitle: string = 'Sample';\n}\n</code></pre>","a":[{"id":388179,"option":"AppComponent","correct":false},{"id":388180,"option":"Sample","correct":false},{"id":388181,"option":"string","correct":false},{"id":388182,"option":"appTitle","correct":true}]},{"q":"<p>In Angular 2, which of the following ways to declare an array is correct?</p>","a":[{"id":388360,"option":"var companies: string[] = ['Bata', 'Reebok', 'Relaxo'];","correct":true},{"id":388361,"option":"var companies: string = ['Bata', 'Reebok', 'Relaxo'];","correct":false},{"id":388362,"option":"var companies: string[] = 'Bata', 'Reebok', 'Relaxo';","correct":false},{"id":388363,"option":"var companies: string = 'Bata', 'Reebok', 'Relaxo';","correct":false}]}]