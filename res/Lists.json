[{"q":"<p>To increase the responsiveness of your application, you are using Redis&nbsp;as a cache to store frequently accessed data in memory.&nbsp;You have executed the following commands in <strong>redis-cli</strong>.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>&gt; RPUSH list1 \"Alice\"\n&gt; RPUSH list1 \"Ben\"\n&gt; RPUSH list1 \"Bob\"\n&gt; RPUSH list1 \"Mike\"\n&gt; LMOVE list1 list2 RIGHT LEFT\n&gt; LMOVE list1 list2 LEFT RIGHT\n&gt; LMOVE list1 list2 LEFT LEFT</code></pre>\n\n<p>What is the output of the following commands <em>//command1</em> and<strong> </strong><em>//command2</em>?</p>\n\n<pre class=\"prettyprint\"><code>&gt; LRANGE list1 0 -1 //command1\n&gt; LRANGE list2 0 -1 //command2\n</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>//command1 \n1) \"Alice\"\n2) \"Bob\"\n3) \"Ben\"\n//command2\n1) \"Mike\"</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>//command1 \n1) \"Alice\"\n2) \"Ben\"\n//command2\n1) \"Bob\"\n2) \"Mike\"</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>//command1 \n1) \"Ben\"\n//command2\n1) \"Bob\"\n2) \"Alice\"\n3) \"Mike\"</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>//command1 \n1) \"Bob\"\n//command2\n1) \"Ben\"\n2) \"Mike\"\n3) \"Alice\"</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1718341,"option":"1","correct":false},{"id":1718342,"option":"2","correct":false},{"id":1718343,"option":"3","correct":false},{"id":1718344,"option":"4","correct":true}]},{"q":"<p>Redis Lists serve as a building block for inter-process communication systems: blocking operations. The usual producer/consumer setup, and can be implemented in the following simple way:</p>\n\n<ul>\n\t<li>To push items into the list, producers call LPUSH</li>\n\t<li>To extract/process items from the list, consumers call RPOP</li>\n</ul>\n\n<p>It is possible that sometimes the list is empty and there is nothing to process, then the consumer is forced to wait some time and retry again. This is called Polling. Which of the following&nbsp;are some of the drawbacks of Polling?</p>\n\n<ol>\n\t<li>All the requests when the list is empty will get no actual work done, they'll just return NULL.</li>\n\t<li>Clients are served in an ordered way and hence sometimes high priority processes are not served first</li>\n\t<li>Adds a delay to the processing of items, since after a worker receives a NULL, it waits some time.</li>\n</ol>","a":[{"id":1718337,"option":"1 and 2","correct":false},{"id":1718338,"option":"2 and 3","correct":false},{"id":1718339,"option":"1 and 3","correct":true},{"id":1718340,"option":"1, 2 and 3","correct":false}]},{"q":"<p>When using social media network, you want to speed up access and see&nbsp;the latest photos posted by the user then which of the following data type is best suited for such a scenario?</p>\n\n<p>&nbsp;</p>","a":[{"id":1718333,"option":"Redis Hashes","correct":false},{"id":1718334,"option":"Redis Sets","correct":false},{"id":1718335,"option":"Redis Lists","correct":true},{"id":1718336,"option":"Redis Maps","correct":false}]},{"q":"<p>To increase the responsiveness of your application, you are using Redis&nbsp;as a cache to store frequently accessed data in memory.&nbsp;You have executed the following commands in <strong>redis-cli</strong>.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>rpush mylist 1 2 \"three\" 4 5 \"six\" \"seven\"</code></pre>\n\n<p>What is the output of the following command in redis-cli:</p>\n\n<pre class=\"prettyprint\"><code>LRANGE mylist 5 -1</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1718077,"option":"ERR","correct":false},{"id":1718078,"option":"\"six\" \"seven\"","correct":true},{"id":1718079,"option":"5 \"six\" \"seven\"","correct":false},{"id":1718080,"option":"\"seven\"","correct":false}]},{"q":"<p>To increase the responsiveness of your application, you are using Redis&nbsp;as a cache to store frequently accessed data in memory. Which of the following data structure can you use to implement <em>Redis Lists</em>?&nbsp;</p>","a":[{"id":1718019,"option":"Hash Table","correct":false},{"id":1718021,"option":"Arrays","correct":false},{"id":1718022,"option":"Linked List","correct":true},{"id":1718024,"option":"Stack","correct":false}]},{"q":"<p>You have the following Java method definition.</p>\n\n<pre class=\"prettyprint\"><code>Public static List process( List args) {\n//do something\n}</code></pre>\n\n<p>What is the correct way to invoke this method?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(); List&lt;Number&gt; numbers = process(list);</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>ArrayList&lt;Number&gt; list = new ArrayList&lt;&gt;(); List&lt;? extends Number&gt; numbers = process(list);</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>ArrayList&lt;Number&gt; list = new ArrayList&lt;&gt;(); List&lt;Object&gt; numbers = process(list);</code></pre>\n\n<p> </p>","a":[{"id":1656037,"option":"1","correct":false},{"id":1656038,"option":"2","correct":true},{"id":1656039,"option":"3","correct":false},{"id":1656040,"option":"Both 2 and 3","correct":false}]},{"q":"<p>You come across the exception shown alongside while using the following function to randomly permute a list.<br>\nvoid shuffle(List&lt;?&gt; list, Random rnd). Which of the following is the most appropriate explanation for the same?</p>","a":[{"id":1655845,"option":"The specified list does not support the set operation","correct":true},{"id":1655846,"option":"The specified source of randomness does not support the set operation","correct":false},{"id":1655847,"option":"The specified source of randomness cannot be found","correct":false},{"id":1655848,"option":"The specified list does not support the get operation","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2, 4, 1, 3]\n\nnew = lst\nprint(new is lst)\n\nnew = list(lst)\nprint(new is lst)\n\nnew = lst[:]\nprint(new is lst)\n\nnew = lst.copy()\nprint(new is lst)</code></pre>\n\n<p> </p>\n\n<p>Which of the following is the correct output of the above code?</p>\n\n<p> </p>\n\n<p><strong>Outputs</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nFalse\nFalse\nFalse</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nTrue\nFalse\nFalse</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nTrue\nTrue\nFalse</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>True\nTrue\nTrue\nTrue</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1574981,"option":"1","correct":true},{"id":1574982,"option":"2","correct":false},{"id":1574983,"option":"3","correct":false},{"id":1574984,"option":"4","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def modify(lst):\n    lst.append(9)\n\nlst = [2, 4, 1, 3]\nmodify(lst)\nprint(lst)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1576210,"option":"[ 2, 4, 1, 3 ]","correct":false},{"id":1576211,"option":"[ 2, 4, 1, 3, 9 ]","correct":true},{"id":1576212,"option":"[ 9 ]","correct":false},{"id":1576213,"option":"This program will give an Error","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def modify(lst):\n    lst = [8, 9]\n\nlst = [2, 4, 1, 3]\nmodify(lst)\nprint(lst)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1576214,"option":"[ 2, 4, 1, 3 ]","correct":false},{"id":1576215,"option":"[ 8, 9 ]","correct":true},{"id":1576216,"option":"[ ]","correct":false},{"id":1576217,"option":"This program will give an Error","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2,]*3\n\nprint(lst)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1575602,"option":"[ 6 ]","correct":false},{"id":1575603,"option":"[ 2 ] [ 2 ] [ 2 ]","correct":false},{"id":1575604,"option":"[ 2, 2, 2 ]","correct":true},{"id":1575605,"option":"This program will give an Error","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst_1 = [2, 4, 1, 3]\nlst_2 = [3, 1, 2]\n\nprint(max(lst_1, lst_2))</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1575278,"option":"[2, 4, 1, 3]","correct":false},{"id":1575279,"option":"[3, 1, 2]","correct":true},{"id":1575280,"option":"4","correct":false},{"id":1575281,"option":"4, 3","correct":false}]},{"q":"<p>Consider you are working on <strong>Python</strong>. You have implemented the following code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>lst = [2, 4, 1, 3]\n\nprint(lst*2)</code></pre>\n\n<p> </p>\n\n<p>What will be the output of the above code?</p>","a":[{"id":1575133,"option":"[2, 4, 1, 3] [2, 4, 1, 3]","correct":false},{"id":1575134,"option":"[2, 4, 1, 3, 2, 4, 1, 3]","correct":true},{"id":1575135,"option":"[4, 8, 2, 6]","correct":false},{"id":1575136,"option":"This program will give an Error","correct":false}]},{"q":"<p>What can be used in place of XXX to complete the C# code snippet given below?</p>\n\n<pre class=\"prettyprint\"><code>using System;\nusing System.Collections.Generic;\nclass Program\n{\n    private static void Main()\n    {\n        List&lt;double&gt; list = new List&lt;double&gt; { 1, 2, 3, 4, 5, 6};\n        double mean = 0;\n        double variance = 0;\n        double standard_deviation = 0;\n        double sum = 0;\n        double temp = 0;\n        int i= 0;\n        for (i = 0; i &lt; list.Count; i++)\n        { \n            sum += list[i]; \n            \n        }\n        mean = sum / (list.Count - 0);\n        for (i = 0; i &lt; list.Count; i++)\n        { \n            XXX \n            \n        }\n        variance=temp / (list.Count - 0);\n        standard_deviation = Math.Sqrt(variance);\n        Console.WriteLine(\"Mean: \" + mean );\n        Console.WriteLine(\"Variance : \" + variance );\n        Console.WriteLine(\"Standard deviation: \" + standard_deviation);\n        \n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":1419272,"option":"temp += Math.Pow((list[i] + mean), 2);","correct":false},{"id":1419273,"option":"temp += Math.Pow((list[i] - mean), 2);","correct":true},{"id":1419274,"option":"sum += Math.Pow((list[i] - mean), 2);","correct":false},{"id":1419275,"option":"None of these","correct":false}]},{"q":"<p>You are given the following Python 3 code. Determine the output corresponding to the provided input:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>dp = [0] * 3\nfor i in input():\n        if i == 'a':\n                dp[2] = max(dp) + 1\n                dp[0] += 1\n        else:\n                dp[1] = max(dp[0],dp[1]) + 1\nprint(max(dp))</code></pre>\n\n<p><strong>Input</strong></p>\n\n<pre class=\"prettyprint\"><code>abba</code></pre>\n\n<p> </p>","a":[{"id":730512,"option":"2","correct":false},{"id":730513,"option":"4","correct":true},{"id":730514,"option":"3","correct":false},{"id":730515,"option":"5","correct":false}]},{"q":"<p>In Python 3, which of the following statements about the generator expression and list comprehension are correct:</p>\n\n<ol>\n\t<li>The generator expression yields one item only when required. </li>\n\t<li>List comprehension reserves the memory for the entire list.</li>\n</ol>","a":[{"id":1121893,"option":"1","correct":false},{"id":1121894,"option":"2","correct":false},{"id":1121895,"option":"Both of these","correct":true},{"id":1121896,"option":"None of these","correct":false}]},{"q":"<p>You are given the following Python 3 code. Determine X if you must obtain the provided output:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import re\npat1 = re.compile('Hacker')\npat2 = X('Earth', 'Python')\nprint(pat2)</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>Python</code></pre>\n\n<p> </p>","a":[{"id":730576,"option":"pa1.replace","correct":false},{"id":730577,"option":"pat1.sub","correct":true},{"id":730578,"option":"pat1.insert","correct":false},{"id":730579,"option":"pat1.sup","correct":false}]},{"q":"<p>In Python 3, which of the following statements about map and list comprehension is correct:</p>\n\n<ol>\n\t<li>List comprehension is used when a list of results is required whereas map comprehension can only return a map object and cannot return a list.</li>\n\t<li>List comprehension is slower than map comprehension when you want to evaluate expressions that are long or complicated to express.</li>\n</ol>","a":[{"id":1121817,"option":"1","correct":true},{"id":1121818,"option":"2","correct":false},{"id":1121819,"option":"1 and 2","correct":false},{"id":1121820,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>t = {}\nt[(11, 2, 49)] = 18\nt[(49, 10, 21)] = 7\nt[(15, 19)] = 20\ns = 0\nfor i in t: \n    s += t[i] \nprint(s**len(t))\n</code></pre>\n\n<p> </p>","a":[{"id":1121789,"option":"1085","correct":false},{"id":1121790,"option":"135","correct":false},{"id":1121791,"option":"18225","correct":false},{"id":1121792,"option":"91125","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>from itertools import zip_longest\nn = [2, 6, 10, 13, 15]\nm = ['words', 'Hacker', 'Earth', 'Hi']\nl = range(3)\nresult = zip_longest(n, m, l, fillvalue = '0')\nprint(list(result))</code></pre>\n\n<p> </p>","a":[{"id":1121757,"option":"[(2, 'words', 0), (6, 'Hacker', 0), (10, 'Earth', 0), (13, 'Hi', '0'), (15, '0', '0')]","correct":false},{"id":1121758,"option":"[(2, 'words', 0), (6, 'Hacker', 1), (10, 'Earth', 2), ('0', 'Hi', '0')]","correct":false},{"id":1121759,"option":"[(2, 'words', 0), (6, 'Hacker', 1), (10, 'Earth', 2), (13, 'Hi', '0'), (15, '0', '0')]","correct":true},{"id":1121760,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def element(x): \n    return x[0] \ndef sort_list(t):  \n  return sorted(t, key = element)  \nprint(sort_list([(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]))  \n</code></pre>\n\n<p> </p>","a":[{"id":1121745,"option":"[(1, 2), (2, 1), (2, 3), (2, 5), (4, 4)] ","correct":false},{"id":1121746,"option":"[(1, 2), (2, 3), (2, 1), (2, 5), (4, 4)]","correct":false},{"id":1121747,"option":"[(1, 2), (2, 5), (2, 3), (2, 1), (4, 4)]","correct":true},{"id":1121748,"option":"[(1, 2), (2, 5), (2, 1), (2, 3), (4, 4)]","correct":false}]},{"q":"<p>You are given the following Python 3 code. Determine X to obtain the provided output:<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>L1=[1, 2]\nL2=[4, 6]\nfor (x,y) in X:\n    print(x*y, end=' ')</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>4 12</code></pre>\n\n<p> </p>","a":[{"id":730648,"option":"(L1,L2)","correct":false},{"id":730649,"option":"(L2,L1)","correct":false},{"id":730650,"option":"zip(L1,L2)","correct":true},{"id":730651,"option":"zip([1,2],L1)","correct":false}]},{"q":"<p>What is the output of the following Python code:</p>\n\n<pre class=\"prettyprint\"><code>L1 = [32, 3, 54, 8, 100]\nL2 = [2]\nL3 = []\nfor (x,y) in zip(L1,L2):\n    if(x&gt;10 and y&lt;5):\n        L3=L3+[x+y]\nprint(L3)</code></pre>\n\n<p> </p>","a":[{"id":730632,"option":"[34]","correct":true},{"id":730633,"option":"[34, 56, 102]","correct":false},{"id":730634,"option":"[34, 54, 100]","correct":false},{"id":730635,"option":"[]","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>tuple1 = [('flex', '2.256'), ('alen', '55.51'), ('james', '54.22'),  \n    ('adam', '21.20'), ('graun', '1.25')] \ntuple1.sort(key = lambda x: float(x[1]), reverse = True) \nprint(tuple1.reverse()) </code></pre>\n\n<p> </p>","a":[{"id":730624,"option":"[('alen', '55.51'), ('james', '54.22'), ('adam', '21.20'), ('flex', '2.256'), ('graun', '1.25')]","correct":false},{"id":730625,"option":"[('graun', '1.25'), ('flex', '2.256), ('adam', 21.20'), (james', '54.22'), ('alen', '55.51')]","correct":false},{"id":730626,"option":"[('adam', 21.20'), ('alen', '55.51'),  ('flex', '2.256), ('graun', '1.25'), (james', '54.22')]","correct":false},{"id":730627,"option":"None","correct":true}]},{"q":"<p>What will you replace line A with to complete the following Android code: </p>\n\n<pre class=\"prettyprint\"><code>\npublic class ListMarutiModels extends ListActivity\n   {\n      MarutiSuzuki mz=new MarutiSuzuki();\n\t    public void onCreate(Bundle bun) {\n          super.onCreate(bun);\n        \n       String mod=getIntent().getExtras().getString(\"sub_mod\");\n        if(mod.equals(\"Ciaz\")){\n          ArrayAdapter&lt;String&gt; adapter;\n         adapter = new ArrayAdapter&lt;String&gt;(this,                                \n             android.R.layout.simple_list_item_1, mz.Ciaz);\n              \n           /**line A**/\n\n       }\n</code></pre>","a":[{"id":606757,"option":"new ListActivity().setQueueAdapter(adapter);","correct":false},{"id":606758,"option":"new StringActivity().setArrayAdapter(adapter);","correct":false},{"id":606759,"option":"new ListActivity().setListAdapter(adapter);","correct":true},{"id":606760,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>l=[1,2,3,4,5,6,7,8,9]\nl=l[::-4]\nl=l[-5-5:3]\nl=l[0:-1+2]\nprint(l[-2::])</code></pre>\n\n<p> </p>","a":[{"id":730692,"option":"[9]","correct":true},{"id":730693,"option":"[7]","correct":false},{"id":730694,"option":"[2,5]","correct":false},{"id":730695,"option":"[2, 3, 4, 5]","correct":false}]},{"q":"<p>In Python 3, which of the following statements represents a <strong>tuple</strong>:</p>\n\n<ol>\n\t<li>It is mutable.</li>\n\t<li>The implementation of iterations on a tuple is more time-consuming compared to a list.</li>\n\t<li>It consumes less memory compared to a list.</li>\n\t<li>It does not allow operations such as insertion and deletion.</li>\n</ol>\n\n<p> </p>","a":[{"id":730452,"option":"1 and 2","correct":false},{"id":730453,"option":"2 and 3","correct":false},{"id":730454,"option":"3 and 4","correct":true},{"id":730455,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>from collections import Counter \ndef chars(s1,s2): \t\n\td1 = Counter(s1) \n\td2 = Counter(s2) \n\td = d1 &amp; d2 \n\tif len(d) == 0: \n\t\treturn 0\n\tchars = list(d.elements()) \n\tchars = sorted(chars) \n\treturn ''.join(chars) \ns1 = 'Python'\ns2 = 'HackerEarth'\nprint(chars(s1, s2))\n</code></pre>\n\n<p> </p>","a":[{"id":1121809,"option":"PH","correct":false},{"id":1121810,"option":"ht","correct":true},{"id":1121811,"option":"th","correct":false},{"id":1121812,"option":"oe ","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>total = 0\ncount = 0\ns = [2, 40, 65, 81]\nflag = True\nwhile flag:\n    for i in s:\n        if i % 2 == 0:\n            count += 1 \n        total = total + count\n        if total &gt; 10:\n            flag = False\nprint('The sum is ' + str(total))\n</code></pre>\n\n<p> </p>","a":[{"id":1121797,"option":"The sum is 14","correct":false},{"id":1121798,"option":"The sum is 22","correct":true},{"id":1121799,"option":"The sum is 7","correct":false},{"id":1121800,"option":"None","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>a = ['Hacker','Earth','1','2', 'Python','Language', '10']\na_to_dictionary = dict(zip(a[0::2], a[1::2]))\nprint(a_to_dictionary)</code></pre>\n\n<p> </p>","a":[{"id":1121753,"option":"{'Hacker': 'Earth', '1': 'Language', 'Python': '10'}","correct":false},{"id":1121754,"option":"{'Hacker': 'Earth', '1': '2', 'Python': 'Language'}","correct":true},{"id":1121755,"option":"{'Hacker': '1', 'Earth': '2', 'Python': 'Language'}","correct":false},{"id":1121756,"option":"{'Hacker': 'Earth', '1': '2', 'Python': 'Language’, '10' : '0'}","correct":false}]},{"q":"<p>In Python 3, which of the following are important points while you convert a list to a string:</p>\n\n<ol>\n\t<li>Using the .join method</li>\n\t<li>You are required to convert integer elements of the list into strings before starting the conversion</li>\n\t<li>Using the str() function on the elements of the list</li>\n\t<li>It is not possible to convert lists into strings</li>\n</ol>","a":[{"id":1121749,"option":"1 and 2","correct":false},{"id":1121750,"option":"2 and 3","correct":false},{"id":1121751,"option":"1, 2, and 3","correct":true},{"id":1121752,"option":"All of these","correct":false}]},{"q":"<p>In Python, consider the following list. If you perform the <strong>Join</strong> method on this list, what is the output:</p>\n\n<p><strong>List</strong></p>\n\n<pre class=\"prettyprint\"><code>L = ['A', 'B', 'C']\n</code></pre>\n\n<p><strong>Method</strong></p>\n\n<pre class=\"prettyprint\"><code>print('***'.join(L))</code></pre>\n\n<p> </p>","a":[{"id":1121713,"option":"'ABC***'","correct":false},{"id":1121714,"option":"'***ABC'","correct":false},{"id":1121715,"option":"'A***B***C'","correct":true},{"id":1121716,"option":"'A*B*C '","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>l = [28.04, 51.98, 77.21, 80.8, 31.10, 10.1]\nl = [int(i) for i in l]\nl.sort()\nprint(list(l))</code></pre>\n\n<p> </p>","a":[{"id":1121705,"option":"[10.1, 28.04, 31.10, 51.98, 77.21, 80.3]","correct":false},{"id":1121706,"option":"[10, 28, 31, 51, 77, 80]","correct":true},{"id":1121707,"option":"[80.3, 77.21, 51.98, 31.10, 28.04, 10.1]","correct":false},{"id":1121708,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>L1 = [2, 's', 4]\nL2 = ['m', '1', 10]\nprint(L1+L2*2**2)</code></pre>\n\n<p> </p>","a":[{"id":1121733,"option":"[2, 's', 4, 'm', '1', 10, 2, 's', 4, 'm', '1', 10, 2, 's', 4, 'm', '1', 10, 2, 's', 4, 'm', '1', 10]","correct":false},{"id":1121734,"option":"[2, 's', 4, 'm', '1', 10, 'm', '1', 10, 'm', '1', 10, 'm', '1', 10]","correct":true},{"id":1121735,"option":"[2, ‘s’, 4, 2, ‘s’, 4, 'm', '1', 10, 'm', '1', 10]","correct":false},{"id":1121736,"option":"None of these","correct":false}]},{"q":"<p>Which of these lines has an error in the following Android code:</p>\n\n<pre class=\"prettyprint\"><code>....\n....\npublic class MyListActivity extends ListActivity {\n    public void onCreate(Bundle icicle) {\n        super.onCreate(icicle);\n   private String[] values = { \"Omni\",\"Alto_800\",\"Alto K10\",\"Eeco\",\"Celerio\",\"Wagon R\",\n    \t\t\"Ritz\",\"Ignis\",\"Swift\",\"Baleno\",\"Swift Dzire\",\"Gypsy\",\"Ertiga\",\"Vitara Brezza\"\n    \t\t,\"Ciaz\",\"S-Cross\"}; \n\n        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this,\n         android.R.layout.simple_list_item_1, values); /*Line A*/\n\n        setListAdapter(adapter); /*Line B*/\n    }\n\n    @Override\n    protected void onListItemClick(ListView l, View v, int position, long id) \n{\n\n  String item = (String) ListAdapter().getItem(position); /*Line C*/\n       Toast.makeText(this, item + \" selected\", Toast.LENGTH_LONG).show();\n    }\n}\n</code></pre>\n\n<p> </p>","a":[{"id":614849,"option":"No error","correct":false},{"id":614850,"option":"Line A","correct":false},{"id":614851,"option":"Line B","correct":false},{"id":614852,"option":"Line C","correct":true}]},{"q":"<p>Which of these options describes the line A in the following Android code:</p>\n\n<pre class=\"prettyprint\"><code>  public class MainActivity extends Activity {\n\n    .....\n    ListView simpleList;\n    String animalList[] = {\"Lion\",\"Tiger\",\"Monkey\",\"Elephant\",\n\"Dog\",\"Cat\",\"Camel\"};\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(....);\n        simpleList = (ListView) findViewById(.....);\n\n        ArrayAdapter&lt;String&gt;arrayAdapter = new ArrayAdapter&lt;String&gt;(this, R.layout.activity_list_view,\n R.id.textView, animalList);\n\n       /**Line A**/\n\n    }\n       .....\n\n    }\n\n</code></pre>\n\n<p> </p>","a":[{"id":617389,"option":"simpleList.setActivated(arrayAdapter)","correct":false},{"id":617390,"option":"simpleList.setEnabled(arrayAdapter)","correct":false},{"id":617391,"option":"simpleList.setAdapter(arrayAdapter)","correct":true},{"id":617392,"option":"simpleList.setListAdapter(arrayAdapter)","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class Book:\n    def __init__(self, name_of_book  = \"Lost Symbol\"):\n        self.name_of_book = name_of_book\n    def setPrice(self, price = 505):\n        self.price = price\n    def setAuthor(self, author):\n        self.author = author\n    def Display(self):\n        print(\"The name of the book is:\", self.name_of_book)\n        print(\"Author is:\", self.author)\n        print(\"Price is:\", self.price,'Rs')\nobj = Book(\"Angels\")\nobj.setPrice(350.95)\nobj.setAuthor('Dan Brown')\nobj.Display()</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>The name of the book is: Lost Symbol\nAuthor is: Dan Brown\nPrice is: 350.95 Rs</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>The name of the book is: Angels\nAuthor is: Dan Brown\nPrice is: 350.95 Rs</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>The name of the book is: Angels\nAuthor is: Dan Brown\nPrice is: 505 Rs</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":730508,"option":"1","correct":false},{"id":730509,"option":"2","correct":true},{"id":730510,"option":"3","correct":false},{"id":730511,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>l = ['12', '34', '5']\nprint(len(list(list(list(map(list, l))))))</code></pre>\n\n<p> </p>","a":[{"id":730660,"option":"3","correct":true},{"id":730661,"option":"5","correct":false},{"id":730662,"option":"12, 34, 5","correct":false},{"id":730663,"option":"AttributeError","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>a = ['a','e','i','o','u','A','E','I','O','U',' ']\nb = \"HackerEarth Tests\"\nfor i in a:\n  if i not in b:\n    a = a[:a.index(i)]+a[a.index(i)+1:]\nprint(a)\n</code></pre>\n\n<p> </p>","a":[{"id":1121801,"option":"['e', 'i', 'A', 'E ']  ","correct":false},{"id":1121802,"option":"['a', 'e', 'E', '  ']  ","correct":true},{"id":1121803,"option":"['a', 'i', 'E', 'O'] ","correct":false},{"id":1121804,"option":"['a', 'e', 'E', 'I']","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>List = [] \nList.append(2) \nList.append(0) \nList.append(6) \nfor i in range(1, 4): \n    List.append((5)) \nfor i in range(1, 5):\n    List.insert(3, 'Python')\nprint(List) \n</code></pre>\n\n<p> </p>","a":[{"id":1121785,"option":"[2, 0, 6, 5, 5, 5]","correct":false},{"id":1121786,"option":"[2, 0, 6, 'Python', 'Python', 'Python', 'Python']","correct":false},{"id":1121787,"option":"[2, 0, 6, 'Python', 'Python', 'Python', 'Python', 5, 5, 5]","correct":true},{"id":1121788,"option":"TypeError","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def compare(a, b):\n    if a == b:\n        return True\n    else:\n        return False\ndef remove_extra(a):\n    for i in a:\n        if i not in b:\n            b.append(i)\n            a.remove(i)\n    print(b)\na = [1, 1, 2, 2, 3, 4, 4, 3, 0 ,0]\nb = []\nremove_extra(a)\nprint(compare(a, b))\n</code></pre>\n\n<p> </p>","a":[{"id":1121773,"option":"[1, 2, 4, 3, 0]\r\nTrue  ","correct":false},{"id":1121774,"option":"[4, 3, 2, 1, 0]\r\nFalse ","correct":false},{"id":1121775,"option":"[1, 2, 3, 4, 0] \r\nFalse  ","correct":true},{"id":1121776,"option":"[1, 2, 3, 4, 0]\r\nTrue  ","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>l = [[1,2],[3,4],[5,6]]\nm = [(y,x) for x, y in l]\nprint(m)</code></pre>\n\n<p> </p>","a":[{"id":1121737,"option":"[(1,2), (3, 4), (5, 6)]","correct":false},{"id":1121738,"option":"[(4,3), (2, 1), (6, 5)]","correct":false},{"id":1121739,"option":"[(1, 2), (5, 6), (3, 4)]","correct":false},{"id":1121740,"option":"[(2, 1), (4, 3), (6, 5)]","correct":true}]},{"q":"<p>In Python 3, you are given the following values of x and y. Which of these code statements allows you to obtain the provided output:</p>\n\n<p><strong>Values</strong></p>\n\n<pre class=\"prettyprint\"><code>x = [1,2,3,4,5]\ny = [11,12,13,14,15]</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>5</code></pre>\n\n<p> </p>","a":[{"id":730472,"option":"print(len([m+n for m, n in zip(x,y)]))","correct":true},{"id":730473,"option":"print(len([m+n for m, n in (x,y)]))","correct":false},{"id":730474,"option":"print([m+n for m, n in zip(x,y)])","correct":false},{"id":730475,"option":"print(len([m+n for zip(m, n) in x,y]))","correct":false}]},{"q":"<p>In ReactJS, if you want the following code to display a list of numbers, then which of these will you replace the placeholder X with?</p>\n\n<pre class=\"prettyprint\"><code>const numb = [1, 2, 3, 4, 5];\nconst display = X\n\n\nReactDOM.render(\n  &lt;ul&gt;{l}&lt;/ul&gt;,\n  document.getElementById('root')\n)display</code></pre>\n\n<p> </p>","a":[{"id":738149,"option":"numb.map((num) =>\r\n  <li>{num}</li>\r\n);","correct":true},{"id":738150,"option":"\"numb.map({num} =>\r\n  <li>num</li>\r\n);\r\n\"","correct":false},{"id":738151,"option":"numb.map((num) =>\r\n  <ul>{num}</ul>\r\n);","correct":false},{"id":738152,"option":"\"numb.map({num} =>\r\n  <ul>num</ul>\r\n);\r\n\"","correct":false}]},{"q":"<p>If you give the provided input to the following Python 3 code. Determine the output.</p>\n\n<p><strong>Input</strong></p>\n\n<pre class=\"prettyprint\"><code>0 0 2 0 0 1</code></pre>\n\n<p><strong>Code</strong> </p>\n\n<pre class=\"prettyprint\"><code>l = list(map(int,input().split()))\ndef ds(a,b): return (l[a]-l[b])**2 + (l[a+1]-l[b+1])**2\ndef ch():\n    a=ds(0,2)\n    b=ds(2,4)\n    c=ds(4,0)\n    if a*b*c==0: return 0\n    return a+b==c or b+c==a or c+a==b\ns=ch()\nfor i in range(6):\n    for j in [1,-1]:\n        l[i]+=j\n        if s==0: s = 2*ch()\n        l[i]-=j\nprint([\"YOU\",\"ME\",\"SS\"][s])</code></pre>\n\n<p> </p>","a":[{"id":730492,"option":"YOU","correct":false},{"id":730493,"option":"ME","correct":true},{"id":730494,"option":"SS","correct":false},{"id":730495,"option":"TypeError","correct":false}]},{"q":"<p>What is the output of the following Python code:</p>\n\n<pre class=\"prettyprint\"><code>n, k = 2,0\np = [x for x in range(2, n + 1) if all(x % y for y in range(2, x))]\nprint ['YES', 'NO'][sum(p[i - 1] + p[i] + 1 in p for i in range(1, len(p))) &lt; k]</code></pre>\n\n<p> </p>","a":[{"id":730500,"option":"YES","correct":true},{"id":730501,"option":"NO","correct":false},{"id":730502,"option":"YES NO","correct":false},{"id":730503,"option":"NO YES","correct":false}]},{"q":"<p>Which of the following are in-built iterables in Python 3:</p>\n\n<ol>\n\t<li>Lists</li>\n\t<li>Dictionaries</li>\n\t<li>Tuples</li>\n</ol>","a":[{"id":1121821,"option":"1 and 2","correct":false},{"id":1121822,"option":"2 and 3","correct":false},{"id":1121823,"option":"1 and 3","correct":false},{"id":1121824,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\npublic class Program\t\n{\npublic static void main(String[] args)\n{\n\tList&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);\n\tnumbers.stream().map(Program::divideByZero).forEach(System.out::println);\n}\n\npublic static int divideByZero(int n)\n{\n\treturn n / 0;\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":583868,"option":"0","correct":false},{"id":583869,"option":"Compilation error","correct":false},{"id":583870,"option":"Exception: java.lang.nullpointerexception","correct":false},{"id":583871,"option":"Exception: java.lang.ArithmeticException: / by zero","correct":true}]}]