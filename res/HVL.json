[{"q":"<p>In SystemVerilog, you are given the following block diagram that uses the <strong>fork-join</strong> construct. Which of these options about the sequence of execution of the statements and processes in the diagram are correct:</p>\n\n<p><strong>Diagram</strong></p>\n\n<p><strong><img alt=\"\" height=\"283\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ea53d91d-8357-4f37-8a3a-5df1c939cf6d.png\" width=\"167\"></strong></p>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>Statement 1 and Statement 2 are executed parallelly.<br>\n\tProcess 1, Process 2, and Process 3 are executed sequentially.<br>\n\tStatement 3 and Statement 4 are executed parallelly after the processes in the fork-join block are executed.</li>\n\t<li>Statement 1 and Statement 2 are executed sequentially.<br>\n\tProcess 1, Process 2, and Process 3 are executed parallelly.<br>\n\tStatement 3 and Statement 4 are executed sequentially after the processes in the fork-join block have finished execution.</li>\n\t<li>Statement 1 and Statement 2 are executed sequentially.<br>\n\tStatement 3 and Statement 4 are executed sequentially before the processes in the fork-join block are executed.<br>\n\tProcess 1, Process 2, and Process 3 are executed parallelly after Statement 3 and Statement 4 have finished execution.</li>\n\t<li>Statement 1 and Statement 2 are executed parallelly.<br>\n\tStatement 3 and Statement 4 are executed parallelly before the processes in the fork-join block are executed.<br>\n\tProcess 1, Process 2, and Process 3 are executed sequentially after Statement 3 and Statement 4 have finished execution.</li>\n</ol>","a":[{"id":1221002,"option":"1","correct":false},{"id":1221003,"option":"2","correct":true},{"id":1221004,"option":"3","correct":false},{"id":1221005,"option":"4","correct":false}]},{"q":"<p>What is the output of the following SystemVerilog code:</p>\n\n<pre class=\"prettyprint\"><code>class sample;\n  byte p_id;\n  static byte no_of_p_created;\n  function new();\n    no_of_p_created++;\n    p_id = no_of_p_created;\n  endfunction\n  function void display();\n    $display(\"\\t packet_id  = %0d\",p_id);\n  endfunction\nendclass\n \nmodule sample_properties;\n  sample pkt[3];\n  initial begin\n    foreach(pkt[i]) begin\n      pkt[i] = new();\n      pkt[i].display();\n    end\n  end \nendmodule</code></pre>\n\n<p><strong>Outputs</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>packet_id  = 1\npacket_id  = 2\npacket_id  = 3</code></pre>\n\t</li>\n\t<li> \n\t<pre class=\"prettyprint\"><code>packet_id  = 3\npacket_id  = 2\npacket_id  = 1</code></pre>\n\t</li>\n\t<li> \n\t<pre class=\"prettyprint\"><code>packet_id  = 1\npacket_id  = 2</code></pre>\n\t</li>\n\t<li> \n\t<pre class=\"prettyprint\"><code>packet_id  = 2\npacket_id  = 3</code></pre>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1221179,"option":"1","correct":true},{"id":1221180,"option":"2","correct":false},{"id":1221181,"option":"3","correct":false},{"id":1221182,"option":"4","correct":false}]},{"q":"<p>In SystemVerilog, you are given the following code that represents a top-level algorithm with two shifts at the abstraction level. Determine at which of these statements from the code will the two shifts occur.<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>task main_process_loop(uint32 n_transfers, IO_BFM io_unit);\n  for (uint32 x=0; x &lt; n_transfers; ++x) begin\n     BFM_command command = new (\"a_command\");\n     assert (command.randomize());\n     io_unit.top.driver.process_command (command);\n     for (uint32 y=0; y &lt; 300; ++y) begin\n       @ (posedge (iface_.clk));\n     end\n  end\nendtask\n</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>First shift—io_unit.top.driver<br>\n\tSecond shift—@(posedge(iface_.clk))</li>\n\t<li>First shift—for (uint32 x=0; x &lt; n_transfers; ++x)<br>\n\tSecond shift—io_unit.top.driver</li>\n\t<li>First shift—io_unit.top.driver<br>\n\tSecond shift—for (uint32 x=0; x &lt; n_transfers; ++x)</li>\n\t<li>First shift—begin<br>\n\tSecond shift—for (uint32 y=0; y &lt; 300; ++y)</li>\n</ol>","a":[{"id":1220544,"option":"1","correct":true},{"id":1220545,"option":"2","correct":false},{"id":1220546,"option":"3","correct":false},{"id":1220547,"option":"4","correct":false}]},{"q":"<p>In SystemVerilog, which of the following statements about <strong>dynamic</strong> and <strong>associative</strong> arrays are correct:</p>\n\n<ol>\n\t<li>Dynamic arrays are one-dimensional arrays. In these, the size of the array cannot be changed dynamically. </li>\n\t<li>The object-oriented class method allows you to set and change the size of the dynamic arrays during the compile time.</li>\n\t<li>In associative arrays, the storage for each element in the array is allocated before the run time. </li>\n\t<li>The firsts() and previous() methods can be used to work with the associative arrays.</li>\n</ol>\n\n<p> </p>","a":[{"id":1220217,"option":"1, 2, and 3","correct":false},{"id":1220218,"option":"2, 3, and 4","correct":false},{"id":1220219,"option":"All of these","correct":false},{"id":1220220,"option":"None of these","correct":true}]},{"q":"<p>In SystemVerilog, you are given the following array. What do the provided code statements perform:</p>\n\n<p><strong>Array</strong></p>\n\n<pre class=\"prettyprint\"><code> bit [31:0] src[5] = ’{10,12,20,3,14},\n dst[5] = ’{55,44,32,21,1};</code></pre>\n\n<p><strong>Code statements</strong> </p>\n\n<p><em>Code statement 1</em></p>\n\n<pre class=\"prettyprint\"><code>if (src==dst)\n $display(\"src == dst\");\nelse\n $display(\"src != dst\");</code></pre>\n\n<p><em>Code statement 2</em></p>\n\n<pre class=\"prettyprint\"><code>src[0] = 5;</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1218720,"option":"1. Compares the two arrays\r\n2. Changes two elements in the array","correct":false},{"id":1218721,"option":"1. Compares the two arrays\r\n2. Changes one element ","correct":true},{"id":1218722,"option":"1. Checks if the element is equal to the index value\r\n2. Compares first two values of the two arrays","correct":false},{"id":1218723,"option":"1. Compares the two arrays\r\n2. Checks if the element is equal","correct":false}]},{"q":"<p>In SystemVerilog, you are given the following code statement. Which of these statements about this scenario are correct:</p>\n\n<p><strong>Code statement</strong></p>\n\n<pre class=\"prettyprint\"><code>int V_arr[0:15]; </code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The code statement represents the declaration of a fixed-sized, two-dimensional array.</li>\n\t<li>The code statement represents the declaration of a fixed-sized, one-dimensional array.</li>\n\t<li>The code statement represents an unpacked array.</li>\n\t<li>The code statement represents a packed array.</li>\n</ol>","a":[{"id":1218524,"option":"1 and 3","correct":false},{"id":1218525,"option":"1 and 4","correct":false},{"id":1218526,"option":"2 and 3","correct":true},{"id":1218527,"option":"2 and 4","correct":false}]},{"q":"<p>Which of the following statements represent the advantages of SystemVerilog:</p>\n\n<ol>\n\t<li>It contains built-in support for searching and sorting operations.</li>\n\t<li>It supports abstract data structures.</li>\n\t<li>It has better performance and less memory utilization. <br>\n\t </li>\n</ol>","a":[{"id":1218415,"option":"1 and 2","correct":false},{"id":1218416,"option":"2 and 3","correct":false},{"id":1218417,"option":"1 and 3","correct":false},{"id":1218418,"option":"All of these","correct":true}]},{"q":"<p>You are given the following SystemVerilog code. The simulator displays a run time warning. Which of these reasons represent the cause of this warning:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>module priority_if;\n  int x,y,z;\n   \n  initial begin\n     x=50;\n     y=20;\n     z=40;\n   \n     priority if ( x &lt; y ) $display(\"\\t x is less than y\");\n     else     if ( x &lt; z ) $display(\"\\t x is less than z\");\n  end\n endmodule</code></pre>\n\n<p><strong>Reasons</strong></p>\n\n<ol>\n\t<li>No condition matches in the 'else if' statement.</li>\n\t<li>No condition matches in the 'priority if' statement.</li>\n\t<li>The priority if statement cannot be used with else if statement.</li>\n\t<li>The simulator does not display any warning.</li>\n</ol>","a":[{"id":1221427,"option":"1","correct":false},{"id":1221428,"option":"2","correct":true},{"id":1221429,"option":"3","correct":false},{"id":1221430,"option":"4","correct":false}]},{"q":"<p>In SystemVerilog, which of the following options represents an unsigned data type:</p>\n\n<ol>\n\t<li>shortint</li>\n\t<li>int</li>\n\t<li>bit</li>\n\t<li>longint</li>\n</ol>","a":[{"id":1218427,"option":"1","correct":false},{"id":1218428,"option":"2","correct":false},{"id":1218429,"option":"3","correct":true},{"id":1218430,"option":"4","correct":false}]},{"q":"<p>In SystemVerilog, you are given the following diagram that represents the clock pulses. Which of the following statements about <strong>input skew</strong> are correct in this scenario:</p>\n\n<p><strong>Diagram</strong></p>\n\n<p><strong><img alt=\"\" height=\"263\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/50229d83-4ad4-46bd-b3b3-2935631e19fa.png\" width=\"562\"></strong></p>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>From the diagram, A represents the input skew. It is the amount of time when the signal is sampled at skew time units before the clock event. </li>\n\t<li>From the diagram, B represents the input skew. It is the amount of time when the signal is sampled at skew time units after the clock event. </li>\n\t<li>From the diagram, B represents the input skew. It is the amount of time when the signal is sampled at skew time units before the clock event. </li>\n\t<li>From the diagram, A represents the input skew. It is the amount of time when the signal is sampled at skew time units after the clock event. </li>\n</ol>","a":[{"id":1220946,"option":"1","correct":false},{"id":1220947,"option":"2","correct":false},{"id":1220948,"option":"3","correct":true},{"id":1220949,"option":"4","correct":false}]}]