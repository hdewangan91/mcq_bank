[{"q":"<p>Which of the following methods accepts three integers as method arguments and returns their sum as a floating-point number?</p>","a":[{"id":693608,"option":"public void addVals(byte val1, int val2, int val3) \r\n{\r\n    double sum = val1 + val2 + val3;\r\n}","correct":false},{"id":693609,"option":"public double addVals(byte val1, int val2, int val3) \r\n{\r\ndouble sum = val1 + val2 + val3;\r\nreturn sum;\r\n}","correct":true},{"id":693610,"option":"public double addVals(long val1, byte val2, double val3) \r\n{\r\nreturn val1 + val2 + val3;\r\n}","correct":false},{"id":693611,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C++ code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\nint operate(int a, int b)\n{\n    return (a * b);\n}\nfloat operate(float a, float b)\n{\n    return (a / b);\n}\nint main()\n{\n    int x = 5, y = 2;\n    float n = 5.0, m = 2.0;\n    cout &lt;&lt; operate(x, y) &lt;&lt; ' ';\n    cout &lt;&lt; operate(n, m);\n    return 0;\n}\n</code></pre>","a":[{"id":154092,"option":"10.0 5.0","correct":false},{"id":154093,"option":"5.0 2.5","correct":false},{"id":154094,"option":"10.0 5","correct":false},{"id":154095,"option":"10 2.5","correct":true}]},{"q":"<p>In Java, which of the following statements about <strong>method overloading </strong>are valid<strong>:</strong></p>\n\n<ol>\n\t<li>Any method (static or non-static) can be overloaded.</li>\n\t<li>Overloading has nothing to do with Inheritance.</li>\n\t<li>Return types of overloaded methods do not play any roles in overloading.</li>\n\t<li>Overloaded methods must differ in the number of parameters, their types or orders.</li>\n</ol>","a":[{"id":671838,"option":"1, 2, and 3","correct":false},{"id":671839,"option":"1, 3, and 4","correct":false},{"id":671840,"option":"2, 3, and 4","correct":false},{"id":671841,"option":"1, 2, 3, and 4","correct":true}]},{"q":"<p>In OOP, which of these helps the compiler process objects differently based on their data type or class?</p>\n\n<p>In Object-Oriented Programming, which of the following is used by the compiler process objects based on the data type or class?</p>","a":[{"id":51092,"option":"Inheritance","correct":false},{"id":51093,"option":"Polymorphism","correct":true},{"id":51094,"option":"Abstraction\t","correct":false},{"id":51095,"option":"Encapsulation","correct":false}]}]