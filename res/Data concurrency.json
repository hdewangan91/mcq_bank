[{"q":"<p>In an operating system, which of the following statements about a <strong>Semaphore</strong> in Java are true:</p>\n\n<ol>\n\t<li>A semaphore is viewed as a protected integer variable.</li>\n\t<li>The signal operation decrements the semaphore value, indicating that a resource is available.</li>\n\t<li>A queue is used to hold processes waiting on the semaphore.</li>\n\t<li>It is guaranteed that once a semaphore operation is started, no other process can access the semaphore until the operation is completed.</li>\n</ol>","a":[{"id":721053,"option":"1, 2, and 4","correct":false},{"id":721054,"option":"1, 3, and 4","correct":true},{"id":721055,"option":"2, 3, and 4","correct":false},{"id":721056,"option":"All of these","correct":false}]},{"q":"<p>In an operating system, which of the following statements about a <em><strong>Counting Semaphore </strong></em>are true:   </p>\n\n<ol>\n\t<li>It can take on integer values ranging from 1 to 10.</li>\n\t<li>Whenever the counting semaphore is greater than zero, then a process can enter a critical section and use the available resources.</li>\n\t<li>When the semaphore count becomes zero, it indicates that no more resources are present.</li>\n\t<li>Semaphores can be used asynchronously without acquiring a mutex lock.</li>\n</ol>","a":[{"id":722529,"option":"1, 2, and 4","correct":false},{"id":722530,"option":"2, 3, and 4","correct":true},{"id":722531,"option":"1, 3, and 4","correct":false},{"id":722532,"option":"All of these","correct":false}]},{"q":"<p>Execute below SQL Statements:</p>\n<p>SQL&gt;delete from employee;</p>\n<p>There are no other uncommitted transactions on the SALES table. Which of the following is true about the DELETE statement?</p>","a":[{"id":410014,"option":"It removes all the rows in the table and deleted rows cannot be rolled back","correct":false},{"id":410015,"option":"It removes all the rows as well as the structure of the table","correct":false},{"id":410016,"option":"It removes all the rows in the table and deleted rows can be rolled back","correct":true},{"id":410017,"option":"It would not remove the rows if the table has a primary key","correct":false}]},{"q":"<p>John is executing UPDATE statement on the EMPLOYEE table as follows: </p>\n<p>SQL&gt;UPDATE hr.employee set salary = salary + 10 where employee_id = 1;</p>\n<p>John is not issuing a commit statement and after 3 minutes, Bob is executing the UPDATE statement on the EMPLOYEE table as follows:</p>\n<p>SQL&gt;UPDATE hr.employee set salary = salary + 20 where employee_id = 1;</p>\n<p>Which of the following statements is true about the given scenario?</p>","a":[{"id":407602,"option":"John's UPDATE statement is executed successfully and the salary which is updated for the employee_id 1 is saved successfully in database","correct":false},{"id":407603,"option":"Bob's UPDATE Statement gives you an ORA-error","correct":false},{"id":407604,"option":"Bob's UPDATE statement is in waiting and will execute once the commit command is issued by John","correct":true},{"id":407605,"option":"Bob's UPDATE statement is executed successfully and the salary which is updated for the employee_id 1 is saved successfully in database","correct":false}]},{"q":"<p>In Oracle, which one of the following used to provide statement-level read consistency?</p>","a":[{"id":418105,"option":"Data in rollback segments","correct":true},{"id":418106,"option":"Redo log files","correct":false},{"id":418107,"option":"Data dictionary tables","correct":false},{"id":418108,"option":"Archived redo log files","correct":false}]},{"q":"<p>In an operating system, If a process is executing in its critical section, then no other process must be executing in their critical sections. Which of these terms is used for this concept?</p>","a":[{"id":720297,"option":"Mutual Exclusion","correct":true},{"id":720298,"option":"Semaphore","correct":false},{"id":720299,"option":"Data consistency","correct":false},{"id":720300,"option":"None of these","correct":false}]},{"q":"<p>In an operating system, consider three processes, P1, P2, and P3 competing for a non-sharable resource R. P1 is first granted access to R. Then when P1 exits its critical section, R is allocated to P3 and P1 requires access to R again. If the operating system alternately allocates R to P1 and P3, then P2 has to wait indefinitely. Which of the following terms best describes this problem?</p>","a":[{"id":720301,"option":"Deadlock","correct":false},{"id":720302,"option":"Starvation","correct":true},{"id":720303,"option":"Mutual exclusion","correct":false},{"id":720304,"option":"None of these","correct":false}]}]