[{"q":"<p>Bob while working on an operating system was using the concept of process synchronization. On which level can process synchronization&nbsp;be done?</p>","a":[{"id":1721719,"option":"hardware level","correct":false},{"id":1721720,"option":"software level","correct":false},{"id":1721721,"option":"both a and b","correct":true},{"id":1721722,"option":"none of the above","correct":false}]},{"q":"<p>In the Operating System, which one of the following is a synchronization tool?</p>","a":[{"id":1721715,"option":"thread","correct":false},{"id":1721716,"option":"pipe","correct":false},{"id":1721717,"option":"semaphore","correct":true},{"id":1721718,"option":"socket","correct":false}]},{"q":"<p>Bob is working on a high-priority task that is indirectly preempted by a medium priority task effectively inverting the relative priority of the two tasks. This is a certain scenario, what is it called?</p>\n\n<ol>\n\t<li>Priority inversion</li>\n\t<li>Priority removal</li>\n\t<li>Priority exchange</li>\n\t<li>Priority modification</li>\n</ol>","a":[{"id":1721499,"option":"1","correct":true},{"id":1721500,"option":"2","correct":false},{"id":1721501,"option":"3","correct":false},{"id":1721502,"option":"4","correct":false}]},{"q":"<p>You are working on a project that involves operating system using process synchronization. While working on OS some processes get affected by another process in the system. What is the name of such a process?</p>","a":[{"id":1711273,"option":"Cooperating process","correct":true},{"id":1711274,"option":"Child process","correct":false},{"id":1711275,"option":"Patent process","correct":false},{"id":1711276,"option":"Init process","correct":false}]},{"q":"<p>In an operating system, which of the following problems is associated with <em>Synchronization</em>?</p>","a":[{"id":725034,"option":"The producer-consumer problem","correct":false},{"id":725035,"option":"Dining philosopher problem","correct":false},{"id":725036,"option":"Both of these","correct":true},{"id":725037,"option":"None of these","correct":false}]},{"q":"<p>In an operating system, in which of the following scenarios does the duration of the priority inversion depends on the time required to handle shared resources and the unpredictable actions of other unrelated tasks?</p>\n\n<p><br>\n<br>\n </p>","a":[{"id":715969,"option":"Bounded priority inversion","correct":false},{"id":715970,"option":"Unbounded priority inversion","correct":true},{"id":715971,"option":"Priority ceiling","correct":false},{"id":715972,"option":"Priority inheritance","correct":false}]},{"q":"<p>If there are two processes ‘A’ and ‘B’ and variables ‘mutex_a’ and ‘mutex_b’ initialized to 1, then what will you replace Statement_1, Statement_2, Statement_3, and Statement_4 with to avoid a deadlock:</p>\n\n<table align=\"center\" border=\"0\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>A:</strong></td>\n\t\t\t<td><strong>B:</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>while(true)<br>\n\t\t\t{<br>\n\t\t\tStatement_1;<br>\n\t\t\tStatement_2;<br>\n\t\t\t/*Critical section*/<br>\n\t\t\tsignal(mutex_a);<br>\n\t\t\tsignal(mutex_b);<br>\n\t\t\t}</td>\n\t\t\t<td>while(true)<br>\n\t\t\t{<br>\n\t\t\twait(mutex_a);<br>\n\t\t\twait(mutex_b);<br>\n\t\t\t/*Critical section*/<br>\n\t\t\tStatement_3;<br>\n\t\t\tStatement_4;<br>\n\t\t\t}</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n </p>","a":[{"id":716053,"option":"wait(mutex_a), wait(mutex_b), signal(mutex_b), signal(mutex_a)","correct":true},{"id":716054,"option":"wait(mutex_b), wait(mutex_a), signal(mutex_b), signal(mutex_a)","correct":false},{"id":716055,"option":"wait(mutex_a), wait(mutex_b), signal(mutex_a), signal(mutex_b)","correct":false},{"id":716056,"option":"wait(mutex_b), wait(mutex_a), signal(mutex_b), signal(mutex_a)","correct":false}]},{"q":"<p>There are two processes- P1 and P2. Both of these processes are executed simultaneously. They also have a shared resource that they want to execute in the Critical section.</p>\n\n<p>The processes use the following code in the Entry section to enter the Critical section. Assume that P1 has executed this code and entered the critical section and the semaphore value is initialized to 1. P2 tries to enter the Critical section before P1 exits it. However, P2 is denied entry. </p>\n\n<p>Which of these statements justifies the denial of entry to P2?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>struct Semaphore\n { \n\tenum value(0, 1); \n\tQueue q; \n} \nP(Semaphore s) \n{ \n\tif (s.value == 1)\n           { \n\t\ts.value = 0; \n\t} \n\telse\n           { \n\t\tq.push(P);\n\t            sleep(); \n\t} \n} \nV(Semaphore s) \n{ \n\tif (s.q is empty)\n            { \n\t\ts.value = 1; \n\t} \n\telse\n           { \n\t\tq.pop(); \n\t\twakeup(); \n\t} \n} \n</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The semaphore value in this binary semaphore technique has changed to <strong>0 </strong>because P1 has entered the Entry section with an initialized semaphore value <strong>1</strong>.</li>\n\t<li>The semaphore value in this counting semaphore technique has changed to <strong>0 </strong>because P1 has entered the Entry section with an initialized semaphore value <strong>1</strong>.</li>\n\t<li>If the semaphore value is <strong>0</strong>, then the queued processes will be blocked by using the <strong>sleep()</strong> operation.</li>\n\t<li>P2 can enter the Entry section only if P1 is in the Critical section to maintain the mutual exclusion condition.</li>\n</ol>","a":[{"id":1248961,"option":"1 and 3","correct":true},{"id":1248962,"option":"2 and 3","correct":false},{"id":1248963,"option":"3 and 4","correct":false},{"id":1248964,"option":"All of these","correct":false}]},{"q":"<p>In an operating system, If a process is executing in its critical section, then no other process must be executing in their critical sections. Which of these terms is used for this concept?</p>","a":[{"id":720297,"option":"Mutual Exclusion","correct":true},{"id":720298,"option":"Semaphore","correct":false},{"id":720299,"option":"Data consistency","correct":false},{"id":720300,"option":"None of these","correct":false}]},{"q":"<p>If there are two processes ‘P’ and ‘Q’ and a variable ‘mutex’ is initialized to 1, then what is the regular expression generated by the following processes:</p>\n\n<table align=\"center\" border=\"0\" style=\"height: 162px; width: 335px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>P:</strong></td>\n\t\t\t<td><strong>Q:</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>while(true)<br>\n\t\t\t{<br>\n\t\t\twait(mutex);<br>\n\t\t\tprint(“a”)<br>\n\t\t\tsignal(mutex);<br>\n\t\t\t}</td>\n\t\t\t<td>while(true)<br>\n\t\t\t{<br>\n\t\t\twait(mutex);<br>\n\t\t\tprint(“b”);<br>\n\t\t\tsignal(mutex);<br>\n\t\t\t}</td>\n\t\t</tr>\n\t</tbody>\n</table>","a":[{"id":716049,"option":"(ab)*a","correct":false},{"id":716050,"option":"(ab)*","correct":false},{"id":716051,"option":"(aba)*","correct":false},{"id":716052,"option":"(a+b)*","correct":true}]},{"q":"<p>In context switching process, which of the following is not necessary to save?</p>","a":[{"id":715965,"option":"General purpose register","correct":false},{"id":715966,"option":"TLB","correct":true},{"id":715967,"option":"Program counter","correct":false},{"id":715968,"option":"Memory address register","correct":false}]}]