[{"q":"<p>Determine the output of the given code snippet:</p>\n\n<p><strong>Code snippet</strong></p>\n\n<pre class=\"prettyprint\"><code>abstract class School {\npublic School() {\nSystem.out.println(\"School\");\nmyMethod();\n}\nabstract void myMethod();\n}\nclass Teacher extends School {\npublic Teacher() {\nSystem.out.println(\"Teacher\");\nnew School();\n}\n@Override\nvoid myMethod() {\nSystem.out.println(\"Abstract\");\n}\n}\npublic class Main {\npublic static void main(String[] args) {\nSchool sch = new Teacher();\nsch.myMethod();\n}\n}</code></pre>","a":[{"id":1655817,"option":"Teacher School Abstract","correct":false},{"id":1655818,"option":"School Teacher School Abstract","correct":false},{"id":1655819,"option":"Teacher School Abstract Abstract","correct":false},{"id":1655820,"option":"Compilation Error","correct":true}]},{"q":"<p>A Java program has the following three classes:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>private class A{\n.....\n}\nprivate class B{\nstatic class C{\n...}\n}\npublic class D{\n....\n}</code></pre>\n\n<p>What is the name of this Java file?</p>","a":[{"id":1655797,"option":"B.java","correct":false},{"id":1655798,"option":"C.java","correct":false},{"id":1655799,"option":"D.java","correct":true},{"id":1655800,"option":"A.java","correct":false}]},{"q":"<p>Which of the below given methods will be called when you execute the following line of code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>add(1,2);</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>void add(float a, double b)\n{\ndouble sum = a+b;\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>void add(double a, float b)\n{\ndouble sum = a+b;\n}</code></pre>\n\t</li>\n</ol>","a":[{"id":1655901,"option":"Only 1","correct":false},{"id":1655902,"option":"Only 2","correct":false},{"id":1655903,"option":"Both 1 and 2","correct":false},{"id":1655904,"option":"Both methods are equally compatible/ambiguous, so it will give a compilation error","correct":true}]},{"q":"<p>Which of the following lines of code represents the correct syntax to use extends keyword?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>class Run {\n .....\n}\nclass Sun extends Run {\n .....\n .....\n}</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>class Run {\n .....\n}\nclass Sun {\n extends Run\n .....\n}</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>class Run extends Run {\n .....\n}\nclass Sun extends Run {\n .....\n .....\n}</code></pre>","a":[{"id":1655897,"option":"1","correct":true},{"id":1655898,"option":"2","correct":false},{"id":1655899,"option":"3","correct":false},{"id":1655900,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following code snippet given below?<br>\n<strong>Code -</strong></p>\n\n<pre class=\"prettyprint\"><code>abstract class School \n{\n    int i = 0;\n    public School() \n    {\n        display();\n        i=2;\n    }\n    abstract void myMethod();\n    void display()\n    {\n        System.out.println(i);\n    }\n}\ninterface Student\n{\n    abstract void myMethod();\n}\nclass Teacher extends School implements Student \n{\n    public Teacher() \n    {\n        super();\n        i=1;\n    }\n    @Override\n    public void myMethod() \n    {\n        new Teacher();\n    }\n}\nclass Marks extends Teacher\n{\n    public Marks()\n    {\n        i=5;\n        myMethod();\n    }\n}\npublic class Main \n{\n    public static void main(String[] args) \n    {\n        Marks stu = new Marks();\n    }\n}</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0\n0</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>2</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>5\n0</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>2\n2</code></pre>\n\t</li>\n</ol>","a":[{"id":1655821,"option":"1","correct":true},{"id":1655822,"option":"2","correct":false},{"id":1655823,"option":"3","correct":false},{"id":1655824,"option":"4","correct":false}]},{"q":"<p>Bob is developing a full-stack web application using Spring Boot. When Bob integrates the frontend with the backend and sends some HTTP requests from the frontend to fetch data from the backend API he gets a forbidden error. Which of the following can be the possibilities of causing this error in this scenario:</p>\n\n<ol>\n\t<li>Check for CORS if @CrossOrigin annotation to his controller.</li>\n\t<li>By disabling csrf Protection</li>\n\t<li>Invalid token</li>\n</ol>","a":[{"id":1473866,"option":"1 and 2","correct":false},{"id":1473867,"option":"2 and 3","correct":false},{"id":1473868,"option":"1 and 3","correct":true},{"id":1473869,"option":"All of these","correct":false}]},{"q":"<p>You are using the code snippet given alongside to obtain a PushBuilder instance when working with Servlet 4.0. What should be used in place of XXX to complete the code snippet?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>@Override\n protected void doGet(XXX)\n throws ServletException, IOException {\n\n PushBuilder pushBuilder = request.newPushBuilder();\n\n}</code></pre>\n\n<p> </p>","a":[{"id":1655709,"option":"HttpServletRequest request","correct":false},{"id":1655710,"option":"HttpServletRequest request, HttpServletResponse response","correct":true},{"id":1655711,"option":"HttpServletMapping mapping","correct":false},{"id":1655712,"option":"HttpSessionContext context","correct":false}]},{"q":"<p>Predict the output of the following code snippet.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>    abstract class Student {\n    protected abstract int marks(int a, int b);\n    public void percentage() {\n    }\n    }\n    class School extends Student {\n    int marks(int a, int b) {\n    return a/b;\n    }\n    }\n    public class Main {\n    public static void main(String[] args) {\n    School s = new School();\n    System.out.println(s.marks(10,1));\n    }\n    }</code></pre>\n\n<p> </p>","a":[{"id":1655777,"option":"10","correct":false},{"id":1655778,"option":"Compilation Error","correct":true},{"id":1655779,"option":"Runtime Error","correct":false},{"id":1655780,"option":"No Output","correct":false}]},{"q":"<p>You are using Java Servlet 4.0's servlet-mapping discovery API to find a servlet’s mapping URL at runtime. In order to achieve this, you have obtained an instance of an interface 'X' by calling getHttpServletMapping() on an instance of 'X'. What is 'X' in the given context?</p>","a":[{"id":1655761,"option":"HttpServletMapping","correct":false},{"id":1655762,"option":"HttpServletRequest","correct":true},{"id":1655763,"option":"HttpServletRequestWrapper","correct":false},{"id":1655764,"option":"HttpSessionEvent","correct":false}]},{"q":"<p>Assume that you are working on a servlet in a non-distributed environment that implements the SingleThreadModel interface. How can you configure the servlet container in the given scenario?</p>","a":[{"id":1655753,"option":"The servlet container should be configured to use only one instance per servlet declaration.","correct":false},{"id":1655754,"option":"The servlet container should be configured to use only two instances (at max) per servlet declaration.","correct":false},{"id":1655755,"option":"The servlet container should be configured to use one instance (at minimum) per servlet declaration.","correct":false},{"id":1655756,"option":"The servlet container can be configured to use multiple number of instances per servlet declaration.","correct":true}]},{"q":"<p>You are using the code snippet given alongside to obtain a PushBuilder instance when working with Servlet 4.0. How many times can you use the PushBuilder instance once you obtain it?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>@Override\n protected void doGet(XXX)\n throws ServletException, IOException {\n PushBuilder pushBuilder = request.newPushBuilder();\n}</code></pre>\n\n<p> </p>","a":[{"id":1655713,"option":"Only once","correct":false},{"id":1655714,"option":"It can be reused multiple times","correct":true},{"id":1655715,"option":"It can be reused multiple times, but not in the same servlet context","correct":false},{"id":1655716,"option":"It cannot since the code has an error","correct":false}]},{"q":"<p>Mike was working on Selenium WebDriver using Java. During a run session in his testing environment, he expected some unexpected events and errors. To solve this issue he wanted to use the Recovery Scenarios so that he can instruct UFT to recover. So to use the Recovery Scenarios which of the following Java code snippets should Mike use so that he can resolve his issue?</p>\n\n<p><strong>Java Code Snippets</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>try {\n     driver.get(\"www.hackerearth.com\");\n}catch(Exception e){\n     System.out.println(e.getMessage());\n}</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>try {\n     driver.get(\"www.hackerearth.com\");\n}catch(Exception e){\n     System.out.println(driver.getMessage());\n}</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>driver.get(\"www.hackerearth.com\");\nSystem.out.println(getMessage());</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>driver.get(\"www.hackerearth.com\");\nSystem.out.println(driver.getMessage());\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1581682,"option":"1","correct":true},{"id":1581683,"option":"2","correct":false},{"id":1581684,"option":"3","correct":false},{"id":1581685,"option":"4","correct":false}]},{"q":"<p>Consider the two class definitions given alongside. Which of the following statements about the respective segment of code describes it correctly?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>public abstract class Diagram {\npublic String name;\n \npublic Diagram (String d) {\nname = d;\n}\npublic String toString( ) {\nreturn name;\n}\npublic abstract double calculatePerimeter( ); \npublic abstract double calculateArea( );\n} \n \n public class Circle extends Diagram {\nprivate double radius;\nprivate final double PI = 3.14;\n \npublic Circle (double r, String name){\nsuper(name);\nradius = r;\n} \npublic String toString( ) {\nreturn \"A circle of radius\" + radius; \n}\npublic double getPerimeter( ) {\nreturn 2*PI*radius;\n}\npublic double calculateArea( ) {\nreturn PI*radius*radius;\n}\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>The class Circle cannot be instantiated, as it inherits from an abstract class</p>\n\n<p><strong>2.</strong></p>\n\n<p>The class Circle is a subclass of Diagram, and thus all the methods in Diagram are automatically implemented in Circle</p>\n\n<p><strong>3.</strong></p>\n\n<p>The class Circle does not need to implement the method calculatePerimeter( ) as it already has a getPerimeter( ) method</p>\n\n<p><strong>4.</strong></p>\n\n<p>This code will not compile</p>","a":[{"id":1656009,"option":"1","correct":false},{"id":1656010,"option":"2","correct":false},{"id":1656011,"option":"3","correct":false},{"id":1656012,"option":"4","correct":true}]},{"q":"<p>You are using the code snippet given alongside to manage Dates and Times in your Java application.</p>\n\n<pre class=\"prettyprint\"><code>String dateTime=\"Tuesday, Apr 23, 2019 08:05:45 PM\";\n DateTimeFormatter formatter = XXXX\nLocalDateTime localDate = LocalDateTime.parse(dateTime, formatter);\nSystem.out.println(localDate);</code></pre>\n\n<p>Which of the following formatters can be used in place of XXXX to produce \"2019-04-23\" as the output?<br>\n<br>\n1. DateTimeFormatter.ofPattern(\"EEEE, MMM dd, yyyy hh:mm:ss a\");<br>\n2. DateTimeFormatter.ofPattern(\"eeee, MMM d, yyyy hh:mm:ss a\");<br>\n3. DateTimeFormatter.ofPattern(\"EEEE, MMM d, yyyy HH:mm:ss a\");</p>","a":[{"id":1656041,"option":"Both 1 and 2","correct":true},{"id":1656042,"option":"Both 2 and 3","correct":false},{"id":1656043,"option":"Only 1","correct":false},{"id":1656044,"option":"Only 2","correct":false}]},{"q":"<p>You have the following Java method definition.</p>\n\n<pre class=\"prettyprint\"><code>Public static List process( List args) {\n//do something\n}</code></pre>\n\n<p>What is the correct way to invoke this method?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;(); List&lt;Number&gt; numbers = process(list);</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>ArrayList&lt;Number&gt; list = new ArrayList&lt;&gt;(); List&lt;? extends Number&gt; numbers = process(list);</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>ArrayList&lt;Number&gt; list = new ArrayList&lt;&gt;(); List&lt;Object&gt; numbers = process(list);</code></pre>\n\n<p> </p>","a":[{"id":1656037,"option":"1","correct":false},{"id":1656038,"option":"2","correct":true},{"id":1656039,"option":"3","correct":false},{"id":1656040,"option":"Both 2 and 3","correct":false}]},{"q":"<p>You are using the following code snippet in your application when working with Lists in Java.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>List list = Arrays.asList(1, 2, 3, 4;\nlist.forEach(i -&gt; {i *= 2; System.out.print(i)});</code></pre>\n\n<p>What will be the result of executing the code snippet?</p>","a":[{"id":1656033,"option":"Compilation fails","correct":true},{"id":1656034,"option":"An exception will be thrown at runtime","correct":false},{"id":1656035,"option":"It print out \"1.2.3.4\"","correct":false},{"id":1656036,"option":"It print out \"2.4,6,8\"","correct":false}]},{"q":"<p>You want to use the code snippet given alongside in your Java application.</p>\n\n<pre class=\"prettyprint\"><code>String reg=\"[\\\\w]+ [\\\\w]+ [\\\\w]+\";\nString input = XXX;\nSystem.out.println(input.matches(reg));</code></pre>\n\n<p>Which of these strings should you use in place XXX to produce \"true\" as the output?<br>\n<br>\n1. \"Car Horn \"<br>\n2. \"1 22 333\"<br>\n3. \"1_A 2_B C_3\"<br>\n4. \"1a 2-r c_3\"</p>","a":[{"id":1656029,"option":"1 and 3","correct":false},{"id":1656030,"option":"2 and 3","correct":true},{"id":1656031,"option":"2, 3 and 4","correct":false},{"id":1656032,"option":"2 and 4","correct":false}]},{"q":"<p>You have written the code snippet given alongside when working with Wrapper classes in Java. What will be the result of executing the code snippet shown alongside?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>double num1 = 272.002;\n int num2 = 264;\n byte num3 = (byte) num1;\n short num4 = (byte) num2;\n System.out.println(num3 +\" \"+ num4);</code></pre>\n\n<p> </p>","a":[{"id":1656025,"option":"272 264","correct":false},{"id":1656026,"option":"16 8","correct":true},{"id":1656027,"option":"17 9","correct":false},{"id":1656028,"option":"16 -9","correct":false}]},{"q":"<p>You have written the code snippet given alongside when working with Wrapper classes in Java. What will be the result of executing the code snippet shown alongside?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>Integer i = new Integer(257); \n Short y =i.shortValue();\n y=y.reverseBytes(y); \nSystem.out.print(y);</code></pre>\n\n<p> </p>","a":[{"id":1656021,"option":"257","correct":true},{"id":1656022,"option":"256","correct":false},{"id":1656023,"option":"258","correct":false},{"id":1656024,"option":"0","correct":false}]},{"q":"<p>You come across the code snippet given alongside while implementing a StringBuilder. What will happen when you execute this code snippet?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>StringBuilder s1= new StringBuilder(\"1\");\nStringBuilder s2= new StringBuilder(1);\nString s3=s2.substring(0);\nchar s4=s1.charAt(0);\nString s5=s4+\"\".intern();\nString s6=s5.concat(s3.concat(s4+\"\").replace(\"1\", \"2\"));\nSystem.out.println(s6);</code></pre>\n\n<p> </p>","a":[{"id":1656017,"option":"It will output 11","correct":false},{"id":1656018,"option":"It will output 22","correct":false},{"id":1656019,"option":"It will output 12","correct":true},{"id":1656020,"option":"It will output 21","correct":false}]},{"q":"<p>You have written the code snippet given alongside to handle strings in your Java application. What will be the result of the executing the code snippet?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>String str1 = \"Z\";\nString str2 = \"z\";\nString str3 = \"y\";\nstr1.toLowerCase();\nstr3.replace('y', 'z');\nSystem.out.print((str1.equals(str2)) + \",\" + (str2.equals(str3)));</code></pre>\n\n<p> </p>","a":[{"id":1656013,"option":"true\r\nfalse","correct":false},{"id":1656014,"option":"true\r\ntrue","correct":false},{"id":1656015,"option":"false\r\nfalse","correct":true},{"id":1656016,"option":"false\r\ntrue","correct":false}]},{"q":"<p>Consider the code snippet given alongside where two classes \"D1\" and \"D2\" are derived from a common class \"Base.\" Which of these options representing the association that is achieved through this design is true?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class Base{\n}\nclass D1 extends Base{\n}\nclass D2 extends Base{\n}</code></pre>\n\n<p> </p>","a":[{"id":1656005,"option":"Generalization","correct":false},{"id":1656006,"option":"Aggregation","correct":false},{"id":1656007,"option":"Specialization","correct":false},{"id":1656008,"option":"Both 1 and 3","correct":true}]},{"q":"<p>Predict the output of the code snippet given alongside.</p>\n\n<pre class=\"prettyprint\"><code>class Class1 {\n public static void show() {\n System.out.println(\"In Class1::show()\");\n }\n}\n \nclass Class2 extends Class1 {\n public static void show() {\n System.out.println(\"In Class2::show()\");\n }\n}\n \nclass Main {\n public static void main(String[] args) {\n Class1 b = new Class2();\n b.show();\n }\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>In Class1::show()</p>\n\n<p><strong>2.</strong></p>\n\n<p>In Class2::show()</p>\n\n<p><strong>3.</strong></p>\n\n<p>Runtime error</p>\n\n<p><strong>4.</strong></p>\n\n<p>Compile error</p>","a":[{"id":1656001,"option":"1","correct":true},{"id":1656002,"option":"2","correct":false},{"id":1656003,"option":"3","correct":false},{"id":1656004,"option":"4","correct":false}]},{"q":"<p>Predict the output of the code snippet given alongside.</p>\n\n<pre class=\"prettyprint\"><code>public class Test{\npublic static void main(String[] args){\nTeacher t = new Student();\nSystem.out.println(t.name);\n}}\nclass Teacher{\nString name=\"Sam\";\n}\nclass Student{\nString name=\"Kevin\";\n}</code></pre>\n\n<p> </p>","a":[{"id":1655993,"option":"Sam","correct":false},{"id":1655994,"option":"Kevin","correct":false},{"id":1655995,"option":"Compilation error","correct":true},{"id":1655996,"option":"Run-time error","correct":false}]},{"q":"<p>You want to enable the automatic conversion of a checked RemoteException to an unchecked RemoteException while performing remoting in Spring. Which of the following would you need to do to achieve this?</p>\n\n<p> </p>","a":[{"id":1655985,"option":"a non-Rmi interface needs to be provided","correct":true},{"id":1655986,"option":"a HTTPInvoker session needs to be supplied","correct":false},{"id":1655987,"option":"a Dispatcher servlet config file needs to be setup","correct":false},{"id":1655988,"option":"None of these","correct":false}]},{"q":"<p>You run the code snippet shown alongside and find a Type mismatch error. Which of these values need to be assigned in place of X in order to successfully execute the code?</p>\n\n<p><strong>code:</strong></p>\n\n<pre class=\"prettyprint\"><code>X futures = executorService.invokeAll(callableTasks);</code></pre>\n\n<p> </p>","a":[{"id":1655869,"option":"String","correct":false},{"id":1655870,"option":"List<Future<String>>","correct":true},{"id":1655871,"option":"Future<String>","correct":false},{"id":1655872,"option":"Array<Future<String>>","correct":false}]},{"q":"<p>You have extracted an element from a list and cast it to a string A. What is likely to be the result of this operation?</p>","a":[{"id":1655865,"option":"An unchecked error might be thrown","correct":false},{"id":1655866,"option":"A ClassCastException is thrown","correct":true},{"id":1655867,"option":"A ClassErasureException is thrown","correct":false},{"id":1655868,"option":"An UnIdentifiedTypeCast error is thrown","correct":false}]},{"q":"<p>You want to produce a Stream from the entries in a directory. You also want the listing to be recursive and to a depth level of your choosing. Which of these classes in File Class are you likely to use in this scenario?</p>","a":[{"id":1655861,"option":"Files.list","correct":false},{"id":1655862,"option":"Files.walk","correct":true},{"id":1655863,"option":"Files.find","correct":false},{"id":1655864,"option":"Files.path","correct":false}]},{"q":"<p>You are using the Map. Entry instance to modify the value associated with a key in a checkedNavigableMap. What is likely to occur in the given scenario?</p>","a":[{"id":1655857,"option":"A type safety void warning is issued","correct":false},{"id":1655858,"option":"A ClassCastException occurs","correct":true},{"id":1655859,"option":"A Typesafety Error occurs","correct":false},{"id":1655860,"option":"The Spliterator is called implicitly to refresh the view for the entire Navigable Map instance","correct":false}]},{"q":"<p>You need to use a generic to create instances of Type Parameters in Java 8. However, doing so directly results in a compile time error. What can be an appropriate workaround for this?</p>","a":[{"id":1655853,"option":"Create an object of a type parameter through reflection:","correct":true},{"id":1655854,"option":"Create a NavigableSetMap and pass the object","correct":false},{"id":1655855,"option":"Create a CollectionSetMap of the Type Parameter and pass the object","correct":false},{"id":1655856,"option":"Pass the type parameter through a Stream Object and create a copy of the stream object","correct":false}]},{"q":"<p>You are using the given method of the Matcher class. public String group(int group) You performed a matching operation and the match is successful. However, the specified group fails in matching any part of the input sequence. What will happen as a result of this?</p>","a":[{"id":1655849,"option":"IllegalStateException will be thrown","correct":false},{"id":1655850,"option":"0 will be returned","correct":false},{"id":1655851,"option":"Null will be returned","correct":true},{"id":1655852,"option":"Empty subsequence will be returned","correct":false}]},{"q":"<p>You come across the exception shown alongside while using the following function to randomly permute a list.<br>\nvoid shuffle(List&lt;?&gt; list, Random rnd). Which of the following is the most appropriate explanation for the same?</p>","a":[{"id":1655845,"option":"The specified list does not support the set operation","correct":true},{"id":1655846,"option":"The specified source of randomness does not support the set operation","correct":false},{"id":1655847,"option":"The specified source of randomness cannot be found","correct":false},{"id":1655848,"option":"The specified list does not support the get operation","correct":false}]},{"q":"<p>You are collecting a list of employee names from an employee database using the StringBuilder class in Java 8. If you pass a null argument to a method in this class while doing the above operation, which of these exceptions are you likely to encounter?</p>","a":[{"id":1655841,"option":"IllegalArgumentException","correct":false},{"id":1655842,"option":"IllegalReferenceException","correct":false},{"id":1655843,"option":"NullPointerException","correct":true},{"id":1655844,"option":"IndexOutOfBounds Exception","correct":false}]},{"q":"<p>You are using the @Retention annotation in Java to specify the way the marked annotations are stored. Which of the following if used will cause the marked annotation to be retained by the compiler during compilation and ignored by the JVM?</p>","a":[{"id":1655837,"option":"RetentionPolicy.SOURCE","correct":false},{"id":1655838,"option":"RetentionPolicy.CLASS","correct":true},{"id":1655839,"option":"RetentionPolicy.RUNTIME","correct":false},{"id":1655840,"option":"RetentionPolicy.TARGET","correct":false}]},{"q":"<p>Assume that you have applied the @SafeVarargs annotation on a Java method. In the given scenario, which of these warnings related to var args usage are suppressed?</p>","a":[{"id":1655833,"option":"Checked warnings","correct":false},{"id":1655834,"option":"Unchecked warnings","correct":true},{"id":1655835,"option":"Both checked and unchecked warnings","correct":false},{"id":1655836,"option":"Only warnings related to Input/Output","correct":false}]},{"q":"<p>You are using the following Matcher class when working with Java 8.<br>\n    public int start(int group)<br>\nWhich of these exceptions will this method throw if you had previously performed a match operation that failed?</p>","a":[{"id":1655829,"option":"IllegalStateException","correct":true},{"id":1655830,"option":"IndexOutOfBoundsException","correct":false},{"id":1655831,"option":"IllegalArgumentException","correct":false},{"id":1655832,"option":"ClassCastException","correct":false}]},{"q":"<p>In which of the following scenarios can you use annotations when working on a Java8 application?<br>\n1. With class instance creation expression<br>\n2. With type cast<br>\n3. With implements clause<br>\n4. With thrown exception declaration</p>","a":[{"id":1655825,"option":"Only 1 and 3","correct":false},{"id":1655826,"option":"Only 2 and 4","correct":false},{"id":1655827,"option":"Only 1, 3 and 4","correct":false},{"id":1655828,"option":"All 1, 2, 3 and 4","correct":true}]},{"q":"<p>Predict the output of the code snippet given alongside.</p>\n\n<p><strong>code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Student{\nstatic{\nmain(new String[0]);}\npublic static void main(String[] args){\nSystem.out.println(\"Class-X\");\n}}</code></pre>\n\n<p> </p>","a":[{"id":1655813,"option":"Class-X","correct":false},{"id":1655814,"option":"Class-X Class-X","correct":true},{"id":1655815,"option":"Compilation error","correct":false},{"id":1655816,"option":"Run-time error","correct":false}]},{"q":"<p>Predict the output of the code snippet given alongside.</p>\n\n<p><strong>code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Test{\npublic static void main(String[] args){\nStudent s0=new Student ();\nStudent s1= new Student ();\ns0.marks(s1);\n}}\nclass Student {\npublic void marks(Student s1){\nSystem.out.println(this==s1);\n}}</code></pre>\n\n<p> </p>","a":[{"id":1655809,"option":"1","correct":false},{"id":1655810,"option":"0","correct":true},{"id":1655811,"option":"Compilation error","correct":false},{"id":1655812,"option":"Run-time error","correct":false}]},{"q":"<p>Determine the output of the given code snippet.<br>\n<strong>  code:</strong></p>\n\n<pre class=\"prettyprint\"><code>    abstract class School{\n    abstract static class Student{\n    static int i = 0;\n    public void marks() {};\n    }\n    static void display(){\n    System.out.println(School.Student.i);\n    }\n    }\n    public class Main extends School.Student{\n    public void marks() {\n    i = 1;\n    }\n    public static void main(String[] args) {\n    School.Student stu = new Main();\n    stu.marks();\n    School.display();\n    }\n    }</code></pre>\n\n<p> </p>","a":[{"id":1655805,"option":"0","correct":false},{"id":1655806,"option":"1","correct":true},{"id":1655807,"option":"Compilation error","correct":false},{"id":1655808,"option":"Runtime Error","correct":false}]},{"q":"<p>What will the given code snippet produce as output when you execute it?</p>\n\n<p><strong>code:</strong></p>\n\n<pre class=\"prettyprint\"><code>\n    abstract class Teacher{\n    private void show() {\n    System.out.print(\" Teacher\");\n    }}\n    public class Student extends Teacher{\n    protected void show() { // line 5\n    System.out.print(\" Student\");\n    }\n    public static void main(String[] args) {\n    Teacher teacher = new Student();\n    teacher.show(); // line 10\n    } }</code></pre>\n\n<p> </p>","a":[{"id":1655801,"option":"Teacher","correct":false},{"id":1655802,"option":"Student","correct":false},{"id":1655803,"option":"Compilation error at line 5","correct":false},{"id":1655804,"option":"Compilation error at line 10","correct":true}]},{"q":"<p>Two scenarios are given:<br>\nA.</p>\n\n<pre class=\"prettyprint\"><code> public class A extends B, C {.....}</code></pre>\n\n<p>B.</p>\n\n<pre class=\"prettyprint\"><code> public interface P extends Q,R{......}</code></pre>\n\n<p>Here, B and C are classes while Q and R are interfaces. here is an issue in one of the scenarios. Identify the class along with the issue?</p>","a":[{"id":1655793,"option":"The issue is in scenario A. A class cannot inherit from more than one class in Java.","correct":false},{"id":1655794,"option":"The issue is in scenario B. A public interface cannot inherit from more than one interface in Java.","correct":true},{"id":1655795,"option":"The issue is in scenario A. The syntax of inheritance is incorrect as the access specifier of B and C is specified.","correct":false},{"id":1655796,"option":"The issue is in B. The syntax of inheritance is incorrect as access specifier of Q and R is not specified.","correct":false}]},{"q":"<p>Class A has the following members:<br>\nint amount = 12;<br>\nString str = \"Welcome to PNB\";<br>\nfinal float rate = 4.5;<br>\nClass B has the following members:<br>\nfinal String name = \"Goodbye!\";<br>\nOut of A and B, identify the class which is an interface?</p>","a":[{"id":1655789,"option":"A","correct":false},{"id":1655790,"option":"B","correct":true},{"id":1655791,"option":"Neither A nor B","correct":false},{"id":1655792,"option":"Both A and B","correct":false}]},{"q":"<p>Determine the output of the given code snippet?<br>\n<strong> code:</strong></p>\n\n<pre class=\"prettyprint\"><code>interface Foo {\nString name = \"Foo\";\nvoid print();\n}\nclass Bar implements Foo {\nString name = \"Bar\";\n\npublic void print() {\n    System.out.println(name); // Line 1\n}\npublic static void main(String[] args) {\nFoo foo = new Bar(); // Line 2\nfoo.print(); // Line 3\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":1655785,"option":"Foo","correct":false},{"id":1655786,"option":"Bar","correct":true},{"id":1655787,"option":"Compilation failure at Line 1","correct":false},{"id":1655788,"option":"Compilation failure at Line 2","correct":false}]},{"q":"<p>Which of these lines in the below-given code snippet will throw a compilation error when executed?</p>\n\n<p><strong>code:</strong></p>\n\n<pre class=\"prettyprint\"><code> abstract class Student {   \n    private abstract void marks(); // Line 1\n    abstract void calculate(); //Line 2\n    public void percentage(){} //Line 3\n    }\n    public class School extends Student{ // Line 4   \n    void calculate() { // Line 5\n    }\n    }</code></pre>\n\n<p><br>\n    <br>\n   </p>","a":[{"id":1655781,"option":"Line 1","correct":true},{"id":1655782,"option":"Line 2","correct":false},{"id":1655783,"option":"Line 3","correct":false},{"id":1655784,"option":"Line 4","correct":false}]},{"q":"<p>You want to make your response and request object thread-safe when creating a servlet application. What should you do to ensure thread safety if the objects are accessed using multiple threads?<br>\nA. In a thread you can use a local output stream for the response object<br>\nB. You can synchronize calling of access methods<br>\nC. Access should be done through a wrapper</p>","a":[{"id":1655773,"option":"A","correct":false},{"id":1655774,"option":"A, B","correct":false},{"id":1655775,"option":"B, C","correct":false},{"id":1655776,"option":"A, B, C","correct":true}]},{"q":"<p>You are using a servlet container to handle any errors that occur during the execution of the dispatch method. When doing so, you observe that none of the listeners called any of the AsyncContext.dispatch methods. How should the container handle errors in the given scenario?</p>","a":[{"id":1655769,"option":"It should perform an error dispatch with status code as HttpServletResponse.SC_INTERNAL_SERVER_ERROR","correct":true},{"id":1655770,"option":"It should invoke AsyncListener.onError(AsyncEvent) method for all instances of the AsyncListener","correct":false},{"id":1655771,"option":"It should ensure that any calls to request.isAsyncStarted() must return false","correct":false},{"id":1655772,"option":"All of these","correct":false}]},{"q":"<p>You are using Java Servlet 4.0's servlet-mapping discovery API to find a servlet’s mapping URL at runtime. In the given scenario, which of these methods of the HttpServletMapping interface can return the type of the match as DEFAULT?</p>","a":[{"id":1655765,"option":"getMatchValue()","correct":false},{"id":1655766,"option":"getPattern()","correct":false},{"id":1655767,"option":"getServletName()","correct":false},{"id":1655768,"option":"getMappingMatch()","correct":true}]},{"q":"<p>A servlet throws a ServletException during the service of a request. What could be a possible reason for this to occur and what should you do to avoid it?</p>","a":[{"id":1655757,"option":"The servlet is unable to handle requests temporarily, and the request should be resent","correct":false},{"id":1655758,"option":"The servlet is unable to handle requests permanently, and the request should be sent to another servlet container","correct":false},{"id":1655759,"option":"An error occurred during the processing of the request, and the container should clean up the request","correct":true},{"id":1655760,"option":"An error occurred during the processing of the request, and the container should drop the request","correct":false}]},{"q":"<p>A client wants to request a resource from your HTTP servlet. However, the resource will only be returned if it has been modified recently. Which of these methods of the HttpServlet interface can be used to implement such a conditional GET request?</p>","a":[{"id":1655749,"option":"getConditional","correct":false},{"id":1655750,"option":"doGet","correct":false},{"id":1655751,"option":"getLastModified","correct":true},{"id":1655752,"option":"doGetConditional","correct":false}]},{"q":"<p>You are using the HttpServlet abstract subclass to add additional methods to a basic servlet instance. In the given context, which of the following method responds with the HTTP methods that are supported by the servlet?</p>","a":[{"id":1655745,"option":"doOptions","correct":true},{"id":1655746,"option":"doMethods","correct":false},{"id":1655747,"option":"doTypes","correct":false},{"id":1655748,"option":"doTrace","correct":false}]},{"q":"<p>You are using the getLocales method of the ServletRequest interface when determining the preferred locale of the sender. In the given context, what will the getLocales method return?</p>","a":[{"id":1655741,"option":"It returns an Enumeration of Locale objects, in the decreasing order of acceptable locales for the client","correct":true},{"id":1655742,"option":"It returns an Enumeration of Locale objects, in the  decreasing order of acceptable locales for the servlet","correct":false},{"id":1655743,"option":"It returns an List of Locale objects, in the increasing order of acceptable locales for the client","correct":false},{"id":1655744,"option":"It returns an List of Locale objects, in the increasing order of acceptable locales for the servlet","correct":false}]},{"q":"<p>You want to supply dynamically generated metadata at the end of your response from a servlet. How would you as the sender do this when working with Java servlets 4.0?</p>","a":[{"id":1655737,"option":"Use the Append() method in the HttpServletResponse to do this","correct":false},{"id":1655738,"option":"Use the metadata() method in the HttpServletResponse to do this","correct":false},{"id":1655739,"option":"Use the Trailer response header","correct":true},{"id":1655740,"option":"Use the Meta response header","correct":false}]},{"q":"<p>You want to access and mutate the default request character encoding for the current servlet context when working with Java servlet 4.0. Which of these methods of the servletContext interface can you use to achieve this?</p>","a":[{"id":1655733,"option":"getRequestCharacterEncoding()","correct":false},{"id":1655734,"option":"setRequestCharacterEncoding()","correct":false},{"id":1655735,"option":"Both 1 and 2","correct":true},{"id":1655736,"option":"Neither 1 nor 2","correct":false}]},{"q":"<p>You want a framework to obtain information about the URL that activated a particular servlet request when working with Java servlet 4.0. What can you use to achieve this?</p>","a":[{"id":1655729,"option":"You need to use the interface HttpServletMapping","correct":true},{"id":1655730,"option":"You need to use the interface HttpPersistence","correct":false},{"id":1655731,"option":"You need to use both the interfaces HttpServletMapping and HttpPersistence","correct":false},{"id":1655732,"option":"You need to use the interface routeBuilder","correct":false}]},{"q":"<p>Which of the following is a valid way in which request parameters are stored for Java servlets?</p>","a":[{"id":1655725,"option":"They are stored as ordered list of values","correct":false},{"id":1655726,"option":"They are stored as unordered list of values","correct":false},{"id":1655727,"option":"They are stored as a set of name-value pairs","correct":true},{"id":1655728,"option":"They are stored as a set of name-key pairs","correct":false}]},{"q":"<p>You are using the methods of the ServletRequest interface to access request parameters when working with Java servlets. In the given context, how can you get the first value in the array of string objects returned by getParameterValues?</p>","a":[{"id":1655721,"option":"Using getParameterValues(1)","correct":false},{"id":1655722,"option":"Using getParameterValues(0)","correct":false},{"id":1655723,"option":"Using getParameter","correct":true},{"id":1655724,"option":"None of these","correct":false}]},{"q":"<p>You are using the AyncContext class method given alongside when working with Java Servlets. When doing so, you want to use a constructor to instantiate the AsyncListener class. In the given context, how should AsyncListener class define such a constructor?</p>\n\n<pre class=\"prettyprint\"><code>public &lt;T extends AsyncListener&gt; createListener(....)</code></pre>\n\n<p> </p>","a":[{"id":1655717,"option":"It should define a zero argument constructor","correct":true},{"id":1655718,"option":"It should define a constructor with one argument","correct":false},{"id":1655719,"option":"It should define two zero argument constructors","correct":false},{"id":1655720,"option":"It should define two constructors one of which must be a zero argument constructor and the other must have a single argument.","correct":false}]},{"q":"<p>An Intrinsic lock is utilised to establish which of the following relationships between resources in order to maintain visibility in a Java 8 Environment ?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>happens-with</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>happens-before</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>has-to</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>alongwith</code></pre>\n\n<p> </p>","a":[{"id":1655921,"option":"1","correct":false},{"id":1655922,"option":"2","correct":true},{"id":1655923,"option":"3","correct":false},{"id":1655924,"option":"4","correct":false}]},{"q":"<p>Which of the following class declarations can be used to represent aggregation in java?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>class A{\n}\nclass B{\nA obj;\n}</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>class A{\n}\nclass B extends A{\n}</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>class A{\n}\nclass B extends A{\n}\nclass C extends A{\n}</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>class A{\n}\nclass B extends A{\n}\nclass C extends B{\n}</code></pre>\n\n<p> </p>","a":[{"id":1655917,"option":"1","correct":true},{"id":1655918,"option":"2","correct":false},{"id":1655919,"option":"3","correct":false},{"id":1655920,"option":"4","correct":false}]},{"q":"<p>Which of the following code snippet should be appended to the code snippet given alongside to print all the client names along with their clientids?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>Map&lt;String, Integer&gt; clientid = new HashMap&lt;&gt;();\nclientid.put(\"John\", 2);\nclientid.put(\"Don\", 4);\nclientid.put(\"Ron\", 30);</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>clientid.forEach((name, clientid) -&gt; System.out.println(name + \" is \" + clientid + \" id\"));</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>clientid.forAll((name, clientid) ). System.out.println(name + \"\" is \"\" + clientid + \"\" id\"\"));</code></pre>\n\n<p> </p>","a":[{"id":1655913,"option":"1","correct":true},{"id":1655914,"option":"2","correct":false},{"id":1655915,"option":"Either 1 or 2","correct":false},{"id":1655916,"option":"None of these","correct":false}]},{"q":"<p>You have the following class in your Java program:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Super {\npublic static float calc(int p, int r, int t){\nreturn (p*r*t)/100;\n}\n}</code></pre>\n\n<p><br>\nWhat can you do to create a class 'Sub' that inherits from class 'Super' and has the method 'calc' as well?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>Simply override the calc function in Sub class</p>\n\n<p><strong>2.</strong></p>\n\n<p>Change the return type of calc function in Sub class</p>\n\n<p><strong>3.</strong></p>\n\n<p>Change the order of arguments in calc function on Sub class</p>\n\n<p><strong>4.</strong></p>\n\n<p>The function cannot be overridden.</p>","a":[{"id":1655909,"option":"1","correct":false},{"id":1655910,"option":"2","correct":false},{"id":1655911,"option":"3","correct":false},{"id":1655912,"option":"4","correct":true}]},{"q":"<p>Predict the output of the given code snippet.<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Test{\npublic static void main(String[] args){\nStudent s =new Student();\nSystem.out.println(s.marks);\n}}\nclass Student{\npublic int marks;\n}</code></pre>\n\n<p> </p>","a":[{"id":1655905,"option":"0","correct":true},{"id":1655906,"option":"Null","correct":false},{"id":1655907,"option":"Garbage value","correct":false},{"id":1655908,"option":"Error","correct":false}]},{"q":"<p>Given, alongside are two pseudo-class definitions in an Object-Oriented Programming language.<br>\nWhich of the following statements is true regarding the return type of Dog’s seekFood() function?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Animal {\n\n protected Food seekFood() {\n\n return new Food();\n }\n}\n\npublic class Dog extends Animal {\n\n protected Food seekFood() {\n\n return new DogFood();\n }\n}</code></pre>\n\n<p> </p>","a":[{"id":1655893,"option":"It is an example of the use of covariant return type.","correct":true},{"id":1655894,"option":"It is an example of the use of abstract return type.","correct":false},{"id":1655895,"option":"It is an example of the use of contravariant return type.","correct":false},{"id":1655896,"option":"It is an example of the use of virtual return type.","correct":false}]},{"q":"<p>You are using the below given method of the ServletContext Interface to get the ServletContext object.</p>\n\n<pre class=\"prettyprint\"><code>public ServletContext getServletContext()</code></pre>\n\n<p>Which of the following lines of code are valid ways to get the ServletContext object using this method?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>ServletContext application=getServletConfig().getServletContext();</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>ServletContext application=getServletContext();</code></pre>\n\n<p> </p>","a":[{"id":1655889,"option":"1","correct":false},{"id":1655890,"option":"2","correct":false},{"id":1655891,"option":"Both 1 and 2","correct":true},{"id":1655892,"option":"Neither 1 nor 2","correct":false}]},{"q":"What output will be produced once you execute the code snippet given alongside?","a":[{"id":1655997,"option":"Students are good","correct":true},{"id":1655998,"option":"Teacher teaches student","correct":false},{"id":1655999,"option":"Compilation error at line 2","correct":false},{"id":1656000,"option":"Compilation error at line 5","correct":false}]},{"q":"<p>In Spring Boot, if you have implemented the following code then which of the following statements is correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>@Component\npublic class Hackerearth \n{\n\n     private Hack hack;\n\n     @Autowired\n     public Hackerearth(Hack hack) \n     {\n         this.hack = hack;\n     }\n}\n\n@Component\npublic class hack1 extends hack \n{\n\n     public hack1(DataSource hack_data) \n     {\n         // some code\n     }\n}\n\n@Primary\n@Component\npublic class hack2 extends hack \n{\n\n     public hack2(SessionFactory hack_session) \n     {\n         // some code\n     }\n    \n}</code></pre>\n\n<p><br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The <strong>@Primary</strong> annotation lies in the <strong>org.springframework.context.annotation</strong> package.<br>\n\t </li>\n\t<li>During component scanning, the hack2 bean will be injected preferentially over the hack1 bean.<br>\n\t </li>\n\t<li>In XML based configuration the <strong>@Primary</strong> annnotation can be configured using the following syntax-\n\t<pre class=\"prettyprint\"><code>&lt;bean primary=\"true\"/&gt; </code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1558226,"option":"1 and 2","correct":false},{"id":1558227,"option":"2 and 3","correct":false},{"id":1558228,"option":"1 and 3","correct":false},{"id":1558229,"option":"All of these","correct":true}]},{"q":"<p>In Spring Boot, if you have implemented the following code then which of the following statements is correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Hackerearth  \n{  \n    private int hack_id;  \n    \n    @Required  \n    public void setHack_id(int hack_id)   \n    {  \n        this.hack_id = hack_id;  \n    }  \n    \n    public int getHack_id()    \n    {  \n        return id;  \n    }     \n}  </code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The <strong>@Required</strong> annotation lies in the <strong>org.springframework.beans.factory.annotation</strong> package.<br>\n\t </li>\n\t<li>The <strong>@Required</strong> annotation indicates that the <strong><em>setHack_id</em></strong> setter method must be configured to be dependency-injected with a value.<br>\n\t </li>\n\t<li>An exception BeanInitializationException is thrown if the <em><strong>hack_id</strong> </em>property is not set at the configuration time.</li>\n</ol>","a":[{"id":1558472,"option":"1 and 2","correct":false},{"id":1558473,"option":"2 and 3","correct":false},{"id":1558474,"option":"1 and 3","correct":false},{"id":1558475,"option":"All of these","correct":true}]},{"q":"<p>Bob was working on Spring Boot. In Spring Boot he was working on the  ApplicationContext interface that lies in the <strong>org.springframework.context</strong> package. To get the unique id of this application context Bob was using the the <strong>getId() </strong>method. And to get the parent context he used the <strong>getParent()</strong> method. Comparing these methods to the other methods of the ApplicationContext there is unique point these 2 methods possess. In this scenario if you are required to suggest Bob then which of the following methods would you suggest Bob?</p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The <strong>getParent()</strong> method of ApplicationContext can return a null value.</li>\n\t<li>The <strong>getParent()</strong> method of ApplicationContext cannot return a null value.</li>\n\t<li>The <strong>getId()</strong> method of ApplicationContext can return a null value.</li>\n\t<li>The <strong>getId()</strong> method of ApplicationContext cannot return a null value.</li>\n</ol>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1558480,"option":"1 and 3","correct":true},{"id":1558481,"option":"2 and 3","correct":false},{"id":1558482,"option":"1 and 4","correct":false},{"id":1558483,"option":"2 and 4","correct":false}]},{"q":"<p>Alice was working on Spring Boot. In Spring Boot she was working on the Lifecycle interface that lies in the <strong>org.springframework.context</strong> package. To control the Lifecycle interface <strong>start()</strong> and <strong>stop() </strong>methods are used. But Alice wasn't aware of it. In this scenario if you are required to help Alice then which of the following statements would suggest Alice to be aware of?</p>\n\n<p><strong>Statement:</strong></p>\n\n<ol>\n\t<li>The <strong>start()</strong> method of the Lifecycle interface should throw an exception if the component is already running.</li>\n\t<li>The <strong>start()</strong> method of the Lifecycle interface should not throw an exception if the component is already running.</li>\n\t<li>The <strong>stop()</strong> method of the Lifecycle interface should throw an exception if the component is not started yet.</li>\n\t<li>The <strong>stop()</strong> method of the Lifecycle interface should not throw an exception if the component is not started yet.</li>\n</ol>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1558508,"option":"1 and 3","correct":false},{"id":1558509,"option":"2 and 3","correct":false},{"id":1558510,"option":"1 and 4","correct":false},{"id":1558511,"option":"2 and 4","correct":true}]},{"q":"<p>You are working on a student portal using Spring Boot, and you have a SQL database named <em><strong>student_data</strong> </em> that contains information about the students. In order to initialize the <strong><em>student_data</em></strong> database so that it can be used with the web application, you are using Spring Data JPA and have created a repository file named <strong><em>StudentRepository</em></strong> to access the data. Now if you have imported the <em><strong>spring.jpa.hibernate.ddl-auto </strong></em>dependency then which of the following statements is correct?<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>Possible property values of <em><strong>spring.jpa.hibernate.ddl-auto</strong> </em>dependency can be none, validate, update, and create-drop.<br>\n\t </li>\n\t<li>Using the following code in the <strong><em>StudentRepository</em></strong> file we can use the generic CRUD methods-\n\t<pre class=\"prettyprint\"><code>public interface StudentRepository extends JpaRepository&lt; &gt; { … }</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Using the following code in the <strong><em>StudentRepository</em></strong> file we can use the generic CRUD methods-</p>\n\n\t<pre class=\"prettyprint\"><code>public class StudentRepository extends JpaRepository&lt; &gt; { … }</code></pre>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1558238,"option":"1 and 3","correct":false},{"id":1558239,"option":"1 and 2","correct":true},{"id":1558240,"option":"only 1","correct":false},{"id":1558241,"option":"All of these","correct":false}]},{"q":"<p>Alice was working on Spring Boot. While performing some operations he wanted to store data in a Java collection. But he was confused about which type of Java collection types he can use. In this scenario which of the following type of Java collection types can Alice use?</p>\n\n<p><strong>Collection Types:</strong></p>\n\n<ol>\n\t<li>List<br>\n\t </li>\n\t<li>Set<br>\n\t </li>\n\t<li>Map</li>\n</ol>","a":[{"id":1558536,"option":"1 and 2","correct":false},{"id":1558537,"option":"2 and 3","correct":false},{"id":1558538,"option":"1 and 3","correct":false},{"id":1558539,"option":"All of these","correct":true}]},{"q":"<p>Bob was working on Spring Boot. He wanted to fetch some data from the DataBase. In the process, he wanted to map a class to the database table. But he forgot which annotation is used to map that class to the DataBase. Which annotation should Bob use to map?</p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1558532,"option":"@Repository","correct":false},{"id":1558533,"option":"@Map","correct":false},{"id":1558534,"option":"@Entity","correct":true},{"id":1558535,"option":"@Table","correct":false}]},{"q":"<p>Ben wanted to build a REST API service in Spring Boot. So to exchange data between client and server he doesn't know what message format he can use. Which of the following message exchange formats can Ben use? </p>\n\n<p><strong>Formats:</strong></p>\n\n<ol>\n\t<li>JSON<br>\n\t </li>\n\t<li>XML</li>\n</ol>","a":[{"id":1558524,"option":"only 1","correct":false},{"id":1558525,"option":"only 2","correct":false},{"id":1558526,"option":"Both 1 and 2","correct":true},{"id":1558527,"option":"None of these","correct":false}]},{"q":"<p>Mike was working on Spring Boot. He wanted to create BeanInfo instances for Spring beans using the BeanInfoFactory interface that lies in the org.springframework.beans. But in the process, he confused about the <strong>getBeanInfo()</strong> method. If you are required to help Mike in this scenario then which of the following statements would you suggest Mike?</p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The <strong>getBeanInfo()</strong> method of the BeanInfoFactory interface can return a null value.</li>\n\t<li>The <strong>getBeanInfo()</strong> method of the BeanInfoFactory interface cannot return a null value.</li>\n\t<li>In case of exceptions, the <strong>getBeanInfo()</strong> method throws an <strong>IntrospectionException</strong> exception.</li>\n\t<li>The <strong>getBeanInfo()</strong> method doesn't throw any exception.</li>\n</ol>","a":[{"id":1558520,"option":"1 and 4","correct":false},{"id":1558521,"option":"2 and 3","correct":false},{"id":1558522,"option":"1 and 3","correct":true},{"id":1558523,"option":"2 and 4","correct":false}]},{"q":"<p>Mary was working on Selenium WebDriver using Java. mary wrote the following Java code to click on an element. </p>\n\n<p><strong>Java Code</strong></p>\n\n<pre class=\"prettyprint\"><code>driver.findElement(By.id(\"Id Value\")).click();</code></pre>\n\n<p>But Mary was unable to achieve this task due to some issue. She found out and wanted to solve this using the JavaScriptExecutor interface. But Mary don't know how to execute it. In this scenario if you are required to help Mary then which of the following Java code snippets would you suggest Mary?</p>\n\n<p> </p>\n\n<p>Note : Consider Mary has imported the following package</p>\n\n<pre class=\"prettyprint\"><code>import org.openqa.selenium.JavascriptExecutor;</code></pre>\n\n<p> </p>\n\n<p><strong>Java Code Snippets</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>WebDriver temp = (JavascriptExecutor) driver;  \ntemp.executeScript(Script,Arguments);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>JavascriptExecutor temp = new (JavascriptExecutor) driver;  \ntemp.executeScript(Script,Arguments);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>JavascriptExecutor temp = (JavascriptExecutor) driver;  \ntemp.executeScript(Script,Arguments);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>WebDriver temp = new (JavascriptExecutor) driver;  \ntemp.executeScript(Script,Arguments);</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1581727,"option":"1","correct":false},{"id":1581728,"option":"2","correct":false},{"id":1581729,"option":"3","correct":true},{"id":1581730,"option":"4","correct":false}]},{"q":"<p>Ben was working on Selenium WebDriver using Java. While he was working he faced some issues due to the cookies and he wanted to delete the <strong>browser cookies</strong>. If you are required to help Ben in this scenario then which of the following Java code snippets would you suggest Ben?</p>\n\n<p><strong>Java codes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>driver.Cookies.DeleteAllCookies();</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>driver.Manage().DeleteCookie();</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>driver.Manage().Cookies.DeleteCookies();</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>driver.Manage().Cookies.DeleteAllCookies();</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1581486,"option":"1","correct":false},{"id":1581487,"option":"2","correct":false},{"id":1581488,"option":"3","correct":false},{"id":1581489,"option":"4","correct":true}]},{"q":"<p>John was working on Selenium WebDriver using Java. Consider the following HTML code John was working on.</p>\n\n<p><strong>HTML Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;input name=\"nameTemp\" value=\"valueTemp\"&gt;HackerEarth&lt;/input&gt;</code></pre>\n\n<p>John wanted to get the attribute value using Selenium WebDriver. And he was coding in Java. Which of the following Java code snippets John has executed such that he received the following output:</p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>valueTemp</code></pre>\n\n<p> </p>\n\n<p><strong>Java Code snippets</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>String temp = driver.findElement(By.getAttribute(\"nameTemp\",\"value\"));\nSystem.out.println(temp);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>String temp = driver.findElement(By.name(\"nameTemp\")).getAttribute(\"value\");\nSystem.out.println(temp);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>String temp = driver.findElement(By.name(\"nameTemp\")).getvalue(\"value\");\nSystem.out.println(temp);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>String temp = driver.findElement(By.name(\"nameTemp\").getvalue(\"value\"));\nSystem.out.println(temp);</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1582278,"option":"1","correct":false},{"id":1582279,"option":"2","correct":true},{"id":1582280,"option":"3","correct":false},{"id":1582281,"option":"4","correct":false}]},{"q":"<p>Paul was working on Selenium WebDriver using Java. Every day Paul log in to his college website and check the attendance. So he thought of automating this task so that he can save time. To login into the website, Paul needs to enter credentials i.e his username and password. But Paul always wanted to try something different.  So instead of using <strong>sendKeys() </strong>to enter values in the textbox, he wanted to use JavaScript. Paul has wrote the following 2 Java codes. In this scenario if you are required to help Paul then which of the following Java codes would you suggest:</p>\n\n<p><strong>Java code snippets</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>JavascriptExecutor temp = (JavascriptExecutor)webdriver;\n\n// To enter the username\ntemp.executeScript(\"document.getElementById('Username').value='HackerEarth.com'\");\n\n// To enter the password\ntemp.executeScript(\"document.getElementById('Password').value='Hack'\");</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>JavascriptExecutor temp = new (JavascriptExecutor)webdriver;\n\n// To enter the username\ntemp.executeScript(\"document.getElementById('Username').value('HackerEarth.com')\");\n\n// To enter the password\ntemp.executeScript(\"document.getElementById('Password').value('Hack')\");</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1582282,"option":"1","correct":true},{"id":1582283,"option":"2","correct":false},{"id":1582284,"option":"Both 1 and 2","correct":false},{"id":1582285,"option":"I would suggest Paul that we cannot use Javascript to send values into the textbox.","correct":false}]},{"q":"<p>Bob was working on Selenium WebDriver using Java. While working there was a specific task to handle the SSL certificates using desired capabilities in the chrome browser. So Bob decided to create an instance of DesiredCpabilities. If you are required to help Bob in this scenario then which of the following Java syntaxes would you suggest to Bob?</p>\n\n<p><strong>Java Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>DesiredCapabilities temp = SSLcertificateHandle.chrome();</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>DesiredCapabilities temp = DesiredCapabilities.chrome();</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>WebDriver temp = SSLcertificateHandle.chrome();</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>WebDriver temp = DesiredCapabilities.chrome();</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1581490,"option":"1","correct":false},{"id":1581491,"option":"2","correct":true},{"id":1581492,"option":"3","correct":false},{"id":1581493,"option":"4","correct":false}]},{"q":"<p>Alice was working on Selenium WebDriver using Java. Whenever she visits a website most of the websites ask for sending notifications. Alice always prefers to use chrome. So she always receives those chrome notifications asking for user permission. You can allow or block. Alice wanted to automate these notifications using selenium. So she implemented a code and it was successes. Considering this scenario which of the following Java code Alice might have used?</p>\n\n<p><strong>Java Codes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>ChromeNotifications temp1 = new ChromeNotifications();\ntemp1.addoptions(\"disable-infobars\");\nWebDriver temp2 = new ChromeDriver(temp1);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>ChromeNotifications temp1 = new ChromeNotifications();\ntemp1.addArguments(\"disable-infobars\");\nWebDriver temp2 = new ChromeDriver(temp1);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>ChromeOptions temp1 = new ChromeOptions();\ntemp1.addoptions(\"disable-infobars\");\nWebDriver temp2 = new ChromeDriver(temp1);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>ChromeOptions temp1 = new ChromeOptions();\ntemp1.addArguments(\"disable-infobars\");\nWebDriver temp2 = new ChromeDriver(temp1);</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1581438,"option":"1","correct":false},{"id":1581439,"option":"2","correct":false},{"id":1581440,"option":"3","correct":false},{"id":1581441,"option":"4","correct":true}]},{"q":"<p>Alice has implemented the below Java code to perform various operations on her file named hackfile.txt. If she is required to implement various in-built functions of this <strong>File</strong> class, then which of the following statements about these in-built functions in file handling are correct:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.io.File; \n\nFile myhackObj = new File(\"hackfile.txt\"); </code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The method <strong>canRead()</strong> is used to test whether the file is readable or not.</li>\n\t<li>The method <strong>createFile()</strong> is used to create an empty file.</li>\n\t<li>The method <strong>getsName()</strong> is used to return the name of the file.</li>\n\t<li>The method <strong>list()</strong> is used to return an array of the files in the directory.</li>\n</ol>","a":[{"id":1580635,"option":"1, 3, and 4","correct":false},{"id":1580636,"option":"1 and 4","correct":true},{"id":1580637,"option":"2 and 4","correct":false},{"id":1580638,"option":"All of these","correct":false}]},{"q":"<p>In Spring Boot, you are working on Spring Data JPA. Now, if you are required to create JPA repositories then which of the following statements is correct?<br>\n<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The Spring Data JPA repositories support can be activated using an annotation through JavaConfig<br>\n\t </li>\n\t<li>Spring Data JPA repositories can be configured using an XML namespace<br>\n\t </li>\n\t<li>The <em>entity-manager-factory-ref </em>JPA-specific attribute is usually used if multiple <strong>EntityManagerFactory</strong> beans are used within the application</li>\n</ol>","a":[{"id":1557872,"option":"1 and 2","correct":false},{"id":1557873,"option":"2 and 3","correct":false},{"id":1557874,"option":"1 and 3","correct":false},{"id":1557875,"option":"All of these","correct":true}]},{"q":"<p>In Java, you are working on file handling. You have an existing file named <em>hack_file. </em>Now, in order to get convert the path of the file to the \"real\" path of the <em>hack_file</em> you are using the <strong>toRealPath() </strong>method. But some error occurred and the method threw an exception. Which of the following statements can be the reason behind this error?<br>\n </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The file <em>hack_file </em>does not exist.<br>\n\t </li>\n\t<li>The file <em>hack_file </em>cannot be accessed.<br>\n\t </li>\n\t<li>The path to the file <em>hack_file </em>contains symbolic links.</li>\n</ol>","a":[{"id":1555887,"option":"1 and 3","correct":false},{"id":1555888,"option":"2 and 3","correct":false},{"id":1555889,"option":"1 and 2","correct":true},{"id":1555890,"option":"None of these","correct":false}]},{"q":"<p>In Java, you are working on file handling. You have a file named <em>hack_file, </em>the path to which is given below. If the path to the file <em>hack_file</em> contains some redundant elements then which of the following methods can you use to remove those redundant elements?<br>\n </p>\n\n<p>hack_file:</p>\n\n<pre class=\"prettyprint\"><code>/home/hack_user/../hack_dir/hack_file</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Methods:</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>normalize()</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>remove()</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>clean()</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>remove_redundancy()</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1555147,"option":"1","correct":true},{"id":1555148,"option":"2","correct":false},{"id":1555149,"option":"3","correct":false},{"id":1555150,"option":"4","correct":false}]},{"q":"<p>In Java, you are working on Multithreading. If you have executed the code given below that contains three threads <strong>h1</strong>, <strong>h2, </strong>and<strong> h3,</strong> then which of the following statements is correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class hack_thread extends Thread\n{  \n    public void run()\n    {  \n        for(int h=1;h&lt;=3;h++)\n        {  \n            try\n            {  \n                Thread.sleep(10);  \n                \n            }\n            catch(Exception hackerearth)\n            {\n                System.out.println(\"hello\");\n                \n            }  \n            System.out.print(h+\" \");  \n            \n        }  \n        \n    }  \n    public static void main(String args[])\n    {  \n        hack_thread h1=new hack_thread();  \n        hack_thread h2=new hack_thread();  \n        hack_thread h3=new hack_thread();  \n        \n        h1.setPriority(Thread.MAX_PRIORITY);\n        h2.setPriority(Thread.MIN_PRIORITY);\n        h3.setPriority(Thread.NORM_PRIORITY);\n        h1.start(); \n        \n        try\n        {  \n            h1.join();\n            h2.join();\n            \n        }\n        catch(Exception hackerearth)\n        {\n            System.out.println(\"hi\");\n            \n        }  \n        h2.start(); \n        h3.start();\n        \n    }  \n} </code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>Thread h1 executes before thread h2 and thread h3 starts.<br>\n\t </li>\n\t<li>Thread h2 and thread h3 execute simultaneously<br>\n\t </li>\n\t<li>Thread h3 starts executing after h2 has completed its task.</li>\n</ol>","a":[{"id":1555033,"option":"1 and 2","correct":true},{"id":1555034,"option":"2 and 3","correct":false},{"id":1555035,"option":"1 and 3","correct":false},{"id":1555036,"option":"Only 1","correct":false}]},{"q":"<p>In Java, you are working on the garbage collections. If you are required to execute the following code, then which of the following statements about this code are correct:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Main\n{\n    public static void main(String[] args) throws InterruptedException\n    {\n        Main hack1 = new Main();\n        Main hack2 = new Main();\n        hack1 = null;\n        System.gc();\n        hack2 = null;\n        Runtime.getRuntime().gc();\n    }\n      \n    @Override\n    protected void finalize() throws Throwable\n    {\n        System.out.println(\"Hello HackerEarth!\");\n    }\n}</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>System class contains a dynamic method gc() for requesting JVM to run Garbage Collector.</li>\n\t<li>Runtime class allows the application to interface with the JVM in which the application is running.</li>\n\t<li>System class contains a static method gc() for requesting JVM to run Garbage Collector\n\t<ol>\n\t</ol>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1574965,"option":"1 and 2","correct":false},{"id":1574966,"option":"2 and 3","correct":true},{"id":1574967,"option":"Only 2","correct":false},{"id":1574968,"option":"None of these","correct":false}]},{"q":"<p>In Java EE7, you are working on Context and Dependency Injection (CDI) which allows you to manage the lifecycle of stateful components via domain-specific lifecycle contexts and inject components (services) into client objects in a type-safe way. Now to define a bean you are supposed to give the bean a scope. Which of the following statements is correct regarding scopes used by CDI?<br>\n<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>Beans of contextual scope lie in the context having life-cycle determined by JEE specifications<br>\n\t </li>\n\t<li>The @Dependent is a contextual scope<br>\n\t </li>\n\t<li>Beans using scopes always need to be serialized.</li>\n</ol>","a":[{"id":1487374,"option":"1 and 2","correct":false},{"id":1487375,"option":"2 and 3","correct":false},{"id":1487376,"option":"1 and 3","correct":false},{"id":1487377,"option":"only 1","correct":true}]},{"q":"<p>Bob is working on Enterprise Java Bean, which is a server-side software component that encapsulates the business logic of an application. The EJB web container provides a runtime environment for web-related software components, including computer security, Java servlet lifecycle management, transaction processing, and other web services. Now Bob wants to concatenate an entity. And he wants to do it before deleting it. Which of the following ways can he use to perform this action?<br>\n </p>\n\n<ol>\n\t<li>concatenating inside the session bean<br>\n\t </li>\n\t<li>using the EJB-service-bean from Message-Driven Beans<br>\n\t </li>\n\t<li>using EJB-call from a Servlet</li>\n</ol>","a":[{"id":1486601,"option":"1 and 2","correct":true},{"id":1486602,"option":"2 and 3","correct":false},{"id":1486603,"option":"1 and 3","correct":false},{"id":1486604,"option":"All of these","correct":false}]},{"q":"<p>In Java SE 16, you are working on Java Networking. Java Networking uses <strong>jdk.net</strong> module which contains the relevant packages implementing the concepts of networking. If you have implemented the <strong>jdk.net.NetworkPermission</strong> package then which of the following statements is correct?</p>\n\n<p><br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>NetworkPermission cannot be serialized.<br>\n\t </li>\n\t<li>NetworkPermission cannot be inherited.<br>\n\t </li>\n\t<li>The package NetworkPermission extends a class of the module java.security</li>\n</ol>","a":[{"id":1486571,"option":"1 and 3","correct":false},{"id":1486572,"option":"2 and 3","correct":true},{"id":1486573,"option":"1 and 2","correct":false},{"id":1486574,"option":"All of these","correct":false}]},{"q":"<p>Alice is developing a Java EE application using Spring. And the application is secured through Spring Security. Which of the following AuthenticationProvider should she use while building a connection to the database?</p>\n\n<p> </p>\n\n<ol>\n\t<li>ODBCAuthenticationProvider<br>\n\t </li>\n\t<li>JDBCAuthenticationProvider<br>\n\t </li>\n\t<li>DaoAuthenticationProvider</li>\n</ol>","a":[{"id":1480026,"option":"1","correct":false},{"id":1480027,"option":"2","correct":false},{"id":1480028,"option":"3","correct":true},{"id":1480029,"option":"None of these","correct":false}]},{"q":"<p>Alice is developing a Java EE application. She is confused with the framework she should use to develop an application either Spring Web MVC or Spring Data REST. Which of the following is correct if she chooses Spring Web MVC over Spring Data REST?</p>\n\n<p> </p>\n\n<ol>\n\t<li>require business layer service<br>\n\t </li>\n\t<li>hide internal data model<br>\n\t </li>\n\t<li>not using Spring data repositories</li>\n</ol>","a":[{"id":1480018,"option":"1 and 2","correct":false},{"id":1480019,"option":"2 and 3","correct":false},{"id":1480020,"option":"1 and 3","correct":false},{"id":1480021,"option":"All of these","correct":true}]},{"q":"<p>While working on Spring Boot,  Alice comes across a situation where she wants to push Spring Boot Integration Test to roll back updates to the data source upon completion. Which of the following ways can she use to perform this action?</p>\n\n<p> </p>\n\n<ol>\n\t<li>Injecting the EntityManager into the Test Class and call rollback.<br>\n\t </li>\n\t<li>Manually deleting the entities before the end of the test. <br>\n\t </li>\n\t<li>Annotating the Test Class with @Transactional which will automatically roll back each test's transaction.</li>\n</ol>","a":[{"id":1473970,"option":"1 and 3","correct":false},{"id":1473971,"option":"2 and 3","correct":false},{"id":1473972,"option":"only 3","correct":true},{"id":1473973,"option":"None of these","correct":false}]},{"q":"<p>Alice is working on Spring, when building a service abstraction which of the following ways can she use to make the bean available for Spring Dependency Injection?</p>\n\n<p> </p>\n\n<ol>\n\t<li>annotating the class<br>\n\t </li>\n\t<li>Maven Configuration<br>\n\t </li>\n\t<li>Java Config</li>\n</ol>","a":[{"id":1473962,"option":"1 and 3","correct":true},{"id":1473963,"option":"2 and 3","correct":false},{"id":1473964,"option":"1 and 2","correct":false},{"id":1473965,"option":"All of these","correct":false}]},{"q":"<p>Alice is learning Spring Data and is confused with the behavior of Spring Data Repositories at runtime. Which of the following defines the process through which the behavior of Spring Data Repositories is added to the runtime based on the interface defined in the runtime?</p>\n\n<p> </p>\n\n<ol>\n\t<li>Aspecting<br>\n\t </li>\n\t<li>Maven Packaging<br>\n\t </li>\n\t<li>Introspection</li>\n</ol>","a":[{"id":1473874,"option":"1 and 2","correct":false},{"id":1473875,"option":"2 and 3","correct":false},{"id":1473876,"option":"only 1","correct":true},{"id":1473877,"option":"All of these","correct":false}]},{"q":"<p>Bob is working on Spring Data and he wants to define a remote database. Which of the following is/are required from the configuration perspective? </p>\n\n<p> </p>\n\n<ol>\n\t<li>Database IOPS<br>\n\t </li>\n\t<li>Database Type<br>\n\t </li>\n\t<li>Database URL<br>\n\t </li>\n\t<li>Database Username</li>\n</ol>","a":[{"id":1473870,"option":"1, 2, and 3","correct":false},{"id":1473871,"option":"2, 3, and 4","correct":true},{"id":1473872,"option":"1, 3, and 4","correct":false},{"id":1473873,"option":"1, 2, and 4","correct":false}]},{"q":"<p>Bob is working on Java Server Faces and he is confused with the binding of data and operations. Which of the following object Facelets bind their data and operations to?</p>\n\n<p> </p>\n\n<ol>\n\t<li>Backing Bean<br>\n\t </li>\n\t<li>Scriptlet<br>\n\t </li>\n\t<li>Pojo</li>\n</ol>","a":[{"id":1473303,"option":"1","correct":true},{"id":1473304,"option":"2","correct":false},{"id":1473305,"option":"3","correct":false},{"id":1473306,"option":"None of these","correct":false}]},{"q":"<p>Bob is working on Java Server Pages and he wants to safely display user-provided data to a page. Which of the following JSTL tags can Bob use to do this task?</p>\n\n<p><br>\n<br>\n </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;c:out&gt;</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;c:safe&gt;</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;c:encode&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1473291,"option":"1","correct":true},{"id":1473292,"option":"2","correct":false},{"id":1473293,"option":"3","correct":false},{"id":1473294,"option":"All of these","correct":false}]},{"q":"<p>Alice is working on Java Batch Processing API  but she is confused about the correct order of declaring tags in the <strong>EventFilesProcessorJob.xml</strong> file. Which of the following is the correct order of declaring tags in the EventFilesProcessorJob.xml?<br>\n </p>\n\n<ol>\n\t<li>writer &gt; step &gt; chunk<br>\n\t </li>\n\t<li>step &gt; chunk &gt; writer<br>\n\t </li>\n\t<li>chunk &gt; step &gt; writer</li>\n</ol>","a":[{"id":1469148,"option":"1","correct":false},{"id":1469149,"option":"2","correct":true},{"id":1469150,"option":"3","correct":false},{"id":1469151,"option":"None of these","correct":false}]},{"q":"<p>Bob is developing a web service using JAX-RS. He has created a method to send a GET request to the server to fetch data. But upon sending the request the server responds to him with an HTTP Error 500. Which of the following can be the reason for the error?<br>\n </p>\n\n<ol>\n\t<li>The constraints on the GET method request do not meet<br>\n\t </li>\n\t<li>The GET method is not accessible<br>\n\t </li>\n\t<li>The request is too large for the server to handle   </li>\n</ol>","a":[{"id":1469136,"option":"1 and 2","correct":false},{"id":1469137,"option":"2 and 3","correct":false},{"id":1469138,"option":"only 1","correct":true},{"id":1469139,"option":"None of these","correct":false}]},{"q":"<p>Bob and Alice are discussing Java Enterprise Edition but their views contradict the technique Java EE relies on to state configurations. On which of the following does the Java EE model depend to state the configurations?<br>\n<br>\n </p>\n\n<ol>\n\t<li>XML<br>\n\t </li>\n\t<li>dependency injection<br>\n\t </li>\n\t<li>annotations</li>\n</ol>","a":[{"id":1469094,"option":"1 and 2","correct":false},{"id":1469095,"option":"2 and 3","correct":false},{"id":1469096,"option":"only 3","correct":true},{"id":1469097,"option":"All of these","correct":false}]},{"q":"<p>Bob is developing a Java application that involves complex features like distributed transactions, messaging and for which he needs a complete application server providing support for all of the Java EE APIs. Which of the following supports the entire Java EE API?</p>\n\n<p> </p>\n\n<ol>\n\t<li> JSP<br>\n\t </li>\n\t<li> WebSocket<br>\n\t </li>\n\t<li> Apache TomEE</li>\n</ol>","a":[{"id":1469031,"option":"1 and 2","correct":true},{"id":1469032,"option":"2 and 3","correct":false},{"id":1469033,"option":"3 and 1","correct":false},{"id":1469034,"option":"None of these","correct":false}]},{"q":"<p>In JAVA EE, you are working on Object Model API and you have a text file named <strong>hack_data </strong>that contains data in the form of JsonObject. Now, if you have implemented the following code then which of the following statements is correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.io.FileReader;\nimport javax.json.Json;\nimport javax.json.JsonReader;\nimport javax.json.JsonStructure;\n\n\nJsonReader hack = Json.createReader(new FileReader(\"hack_data.txt\"));\nJsonStructure hack2 = hack.read();</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The code creates an object model from JSON data in <strong>hack_data</strong> file.<br>\n\t </li>\n\t<li>The object reference hack2 is of type JsonObject.</li>\n</ol>","a":[{"id":1468134,"option":"only 1 ","correct":false},{"id":1468135,"option":"only 2","correct":false},{"id":1468136,"option":"Both 1 and 2","correct":true},{"id":1468137,"option":"None of these","correct":false}]},{"q":"<p>Alice is studying the MVC design pattern, but she is a little confused so she tries to learn it through a real-life example of a restaurant. Alice goes to a restaurant where she gives an order to the waiter which is prepared by the chef. Now, which of the following MVC patterns can Alice use to understand the MVC design patterns.<br>\n<br>\n<strong>MVC Patterns:</strong></p>\n\n<ol>\n\t<li>Model = chef, View = Alice, Controller = waiter<br>\n\t </li>\n\t<li>Model = Alice, View = chef, Controller = waiter<br>\n\t </li>\n\t<li>Model = waiter, View = Alice, Controller = chef</li>\n</ol>","a":[{"id":1468130,"option":"1","correct":true},{"id":1468131,"option":"2","correct":false},{"id":1468132,"option":"3","correct":false},{"id":1468133,"option":"All of these","correct":false}]},{"q":"<p>You are working on a Spring Boot project. The <strong>application.properties</strong> file has two custom properties as given. Now if you have implemented the following code, then which of the following statements is correct?</p>\n\n<p><strong>application.properties</strong></p>\n\n<pre class=\"prettyprint\"><code>hack.hack_name=\"Bob\"\nhack.hack_id=\"101\"</code></pre>\n\n<p><br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>package hackerearth;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@ConfigurationProperties(prefix = \"hack\")\npublic class Hackerearth \n{\n\n    private final String hack_name;\n    private final int hack_id;\n    \n    public Hackerearth(String hack_name, int hack_id) \n    {\n        this.hack_name = hack_name;\n        this.hack_id = hack_id;\n    }\n\n    public String getHack_name() \n    {\n        return hack_name;\n    }\n\n    public String getHack_id() \n    {\n        return hack_id;\n    }\n\n}</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The @ConfigurationProperties annotation can be used in a @Configuration class to bind and validate some external properties.<br>\n\t </li>\n\t<li> Adding <strong>@ConstructorBinding </strong>annotation in the given code will make the <em>Hackerearth</em> class as immutable.</li>\n</ol>","a":[{"id":1558028,"option":"only 1","correct":false},{"id":1558029,"option":"only 2","correct":false},{"id":1558030,"option":"1 and 2","correct":true},{"id":1558031,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n </p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>package hackerearth;\n \npublic class hack1\n{\n    public static void main(String[] args)\n    {\n        hack2 h = new hack2();\n         \n        System.out.println(h.H);\n         \n        h.hack_method();\n    }\n}\nclass hack2\n{\n    protected int H = 1;\n     \n    void hack_method()\n    {\n        System.out.println(H);\n    }\n}</code></pre>\n\n<p><br>\n<br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\n1</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0\n1</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1555109,"option":"2","correct":false},{"id":1555110,"option":"1","correct":true},{"id":1555111,"option":"3","correct":false},{"id":1555112,"option":"The code gives a compilation error","correct":false}]},{"q":"<p>You are working on a Spring Boot application. Now if you want to analyze the operational information about your application that is currently running, then which of the following Spring Boot starters can you use to perform this action?</p>\n\n<p><br>\n </p>","a":[{"id":1558230,"option":"Spring Boot Starter Test","correct":false},{"id":1558231,"option":"Spring Boot Starter Undertow","correct":false},{"id":1558232,"option":"Spring Boot Starter Actuator","correct":true},{"id":1558233,"option":"Spring Boot Starter Logging","correct":false}]},{"q":"<p>Which of the following statements is correct about the BeanFactory interface in Spring Boot?</p>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The BeanFactory interface lies in the org.springframework.beans.factory package.<br>\n\t </li>\n\t<li>The BeanFactory interface is the root interface for accessing a Spring bean container.<br>\n\t </li>\n\t<li>The BeanFactory interface is implemented by objects that hold a number of bean definitions, each uniquely identified by a String name.</li>\n</ol>","a":[{"id":1558104,"option":"1 and 2","correct":false},{"id":1558105,"option":"2 and 3","correct":false},{"id":1558106,"option":"1 and 3","correct":false},{"id":1558107,"option":"All of these","correct":true}]},{"q":"<p>In Spring Boot, if you have implemented the following code then which of the following statements is correct?<br>\n </p>\n\n<p><strong>Code:</strong><br>\n </p>\n\n<pre class=\"prettyprint\"><code>@RestController\n@RequestMapping(\"/hack_user\")\npublic class Hackerearth_User \n{\n\n    @CrossOrigin(origins = \"http://hack.com\")\n    @RequestMapping(method = RequestMethod.GET, path = \"/{id}\")\n    public User get_user(@PathVariable Long hack_id) \n    {\n        // some code\n    }\n\n    @RequestMapping(method = RequestMethod.DELETE, path = \"/{id}\")\n    public void del_user(@PathVariable Long hack_id) \n    {\n        // some code\n    }\n}</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The @CrossOrigin annotation is used to allow cross-origin requests on specific handler classes and/or handler methods.<br>\n\t </li>\n\t<li>The <em>del_user </em>allows all origins to send cross-origin requests.<br>\n\t </li>\n\t<li>The <em>get_user</em>  method allows only http://hack.com to send cross-origin requests.</li>\n</ol>","a":[{"id":1558100,"option":"1 and 2","correct":false},{"id":1558101,"option":"2 and 3","correct":false},{"id":1558102,"option":"1 and 3","correct":false},{"id":1558103,"option":"All of these","correct":true}]},{"q":"<p>In Spring Boot, if you have implemented the following code then which of the following statements is correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>@Component\n@Qualifier(\"hack1\")\npublic class hacker implements Hackerearth \n{\n    public String hack_method() \n    {\n        return \"hack1\";\n    }\n}\n\n@Component\n@Qualifier(\"hack2\")\npublic class hacks implements Hackerearth \n{\n    public String hack_method() \n    {\n        return \"hack2\";\n    }\n}\n\npublic class hack_class \n{\n    \n    @Autowired\n    @Qualifier(\"hack1\")\n    private Hackerearth hackerearth;\n}</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The @Qualifier annotation helps to resolve the issue of which bean needs to be injected when there is an ambiguity.<br>\n\t </li>\n\t<li>The @Qualifier annotation defines a preference when there are many beans of the same type and it is ambiguous to decide which bean to inject.</li>\n</ol>","a":[{"id":1558032,"option":"only 1","correct":true},{"id":1558033,"option":"only 2","correct":false},{"id":1558034,"option":"Both 1 and 2","correct":false},{"id":1558035,"option":"None of these","correct":false}]},{"q":"<p>In Spring Boot, if you have used the <strong>@ConfigurationPropertiesScan</strong> annotation then which of the following statements is correct?<br>\n </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The <strong>@ConfigurationPropertiesScan</strong> annotation lies in the org.springframework.beans package.<br>\n\t </li>\n\t<li>A class annotated with @Component is not scanned by the <strong>@ConfigurationPropertiesScan</strong> annotation.<br>\n\t </li>\n\t<li>The <strong>@ConfigurationPropertiesScan</strong> annotation configures the base packages while scanning configuration property classes.</li>\n</ol>","a":[{"id":1557984,"option":"1 and 2","correct":false},{"id":1557985,"option":"2 and 3","correct":true},{"id":1557986,"option":"1 and 3","correct":false},{"id":1557987,"option":"None of these","correct":false}]},{"q":"<p>Dependency Injection is a principle that makes the code cleaner and also decoupling becomes more effective when objects are provided with their dependencies. Consider you are working on a Spring Boot application. Now if you are required to use the principle of dependency injection, then which of the following statements is correct?</p>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>Constructor-based dependency injection is implemented by the container invoking a constructor with a number of arguments, each representing a dependency.<br>\n\t </li>\n\t<li>Generally the constructor-based dependency injection is used for mandatory dependencies.<br>\n\t </li>\n\t<li>Generally the setter-based dependency injection is used for optional dependencies.</li>\n</ol>","a":[{"id":1557864,"option":"1 and 2","correct":false},{"id":1557865,"option":"2 and 3","correct":false},{"id":1557866,"option":"1 and 3","correct":false},{"id":1557867,"option":"All of these","correct":true}]},{"q":"<p>Spring Boot uses the concept of autowiring which helps to reduce the need to specify properties or constructor arguments. Now, if you are working on a Spring Boot application and you have implemented the concept of autowiring then which of the following statements is correct?<br>\n<br>\n </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>Properties such as primitives, Strings, and Classes can be autowired. <br>\n\t </li>\n\t<li>When using XML-based configuration, with <em>byType</em> or <em>constructor</em> autowiring modes you can wire arrays and typed collections.<br>\n\t </li>\n\t<li>The <em>byType </em>autowiring mode in XML-based configuration throws an exception if more than one bean of the property type exists in the container.</li>\n</ol>","a":[{"id":1557800,"option":"1 and 2","correct":false},{"id":1557801,"option":"2 and 3","correct":true},{"id":1557802,"option":"1 and 3","correct":false},{"id":1557803,"option":"All of these","correct":false}]},{"q":"<p>You are working on Spring Boot. Now, which of the following statements is correct about bean scopes that are supported by Spring Boot?</p>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The <em>singleton </em>bean scope scopes a single bean definition to a single object instance.<br>\n\t </li>\n\t<li>If the bean scope is not specified then the <em>prototype </em>bean scope is used by default.<br>\n\t </li>\n\t<li>The <em>session</em> bean scope can be used only in web-based applications<code>.</code></li>\n</ol>","a":[{"id":1557560,"option":"1 and 2","correct":false},{"id":1557561,"option":"2 and 3","correct":false},{"id":1557562,"option":"1 and 3","correct":true},{"id":1557563,"option":"All of these","correct":false}]},{"q":"<p>In Spring Boot, if you have used the <strong>@Component</strong> annotation, then which of the following statements is correct?</p>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The <strong>@Component</strong> annotation lies in the org.springframework.stereotype package.<br>\n\t </li>\n\t<li>A class annotated with <strong>@Component </strong>annotation is considered as a candidate for auto-detection during classpath scanning.<br>\n\t </li>\n\t<li>The <strong>@Component </strong>annotation is a class-level annotation<strong>.</strong></li>\n</ol>\n\n<p> </p>","a":[{"id":1557556,"option":"1  and 2","correct":false},{"id":1557557,"option":"2 and 3","correct":false},{"id":1557558,"option":"1 and 3","correct":false},{"id":1557559,"option":"All of these","correct":true}]},{"q":"<p>In Java, you are working on collection frameworks. You are given the following Java code that performs operations on Linked List.</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;  \nclass Example {  \n    public static void main(String args[]){  \n        \n        LinkedList&lt;String&gt; list_1=new LinkedList&lt;String&gt;();\n        list_1.add(\"Alice\");  \n        list_1.add(\"Mike\");\n      \n        LinkedList&lt;String&gt; list_2=new LinkedList&lt;String&gt;();  \n        list_2.add(\"Bob\");\n        list_2.add(\"Lisa\");  \n        list_2.addAll(0,list_1);\n        list_2.addLast(\"Bob\");\n        list_2.remove(\"Bob\");\n        \n        Iterator itr=list_2.descendingIterator();  \n           while(itr.hasNext())  \n           {  \n               System.out.println(itr.next());  \n           }\n    }  \n}</code></pre>\n\n<p> </p>\n\n<p>Which of the following outputs is the correct output of the above Java code?</p>\n\n<p> </p>\n\n<p><strong>Outputs</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>Alice\nMike\nLisa</code></pre>\n\n<p> </p>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>Alice\nMike\nBob\nLisa</code></pre>\n\n<p> </p>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>Alice\nMike\nLisa\nBob</code></pre>\n\n<p> </p>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>Bob\nLisa\nMike\nAlice</code></pre>\n\n<p> </p>","a":[{"id":1555939,"option":"1","correct":false},{"id":1555940,"option":"2","correct":false},{"id":1555941,"option":"3","correct":false},{"id":1555942,"option":"4","correct":true}]},{"q":"<p>In Java, you are working on collection frameworks. You are given the following Java code that performs operations on Linked List.</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;  \nclass Example {  \n    public static void main(String args[]){  \n      \n        LinkedList&lt;String&gt; list=new LinkedList&lt;String&gt;();  \n        list.add(\"Alice\");  \n        list.addLast(\"Lisa\");  \n        list.add(\"Bob\");\n        list.addFirst(\"Tara\");\n        list.add(0,\"Mike\");\n          \n        Iterator&lt;String&gt; itr=list.iterator();  \n        while(itr.hasNext()){  \n            System.out.println(itr.next());  \n        }  \n    }  \n}</code></pre>\n\n<p> </p>\n\n<p>Which of the following outputs is the correct output of the above Java code?</p>\n\n<p> </p>\n\n<p><strong>Outputs</strong></p>\n\n<p><strong>1. </strong></p>\n\n<pre class=\"prettyprint\"><code>Alice\nLisa\nBob\nTara\nMike</code></pre>\n\n<p> </p>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>Tara\nMike\nAlice\nBob\nLisa</code></pre>\n\n<p> </p>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>Mike\nTara\nAlice\nLisa\nBob</code></pre>\n\n<p> </p>","a":[{"id":1555935,"option":"1","correct":false},{"id":1555936,"option":"2","correct":false},{"id":1555937,"option":"3","correct":true},{"id":1555938,"option":"This code will give runtime error","correct":false}]},{"q":"<p>In Java, you are working on collection frameworks. You are given the following Java code that performs operations on Linked List.</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;  \nclass Example {  \n    public static void main(String args[]){  \n      \n        LinkedList&lt;String&gt; list=new LinkedList&lt;String&gt;();  \n        list.add(\"Alice\");  \n        list.add(\"Bob\");  \n        list.add(3,\"Mike\");  \n        list.add(\"Lisa\");  \n          \n        Iterator&lt;String&gt; itr=list.iterator();  \n        while(itr.hasNext()){  \n            System.out.println(itr.next());  \n        }  \n    }  \n}  </code></pre>\n\n<p> </p>\n\n<p>Which of the following outputs is the correct output of the above Java code?</p>\n\n<p> </p>\n\n<p><strong>Outputs</strong></p>\n\n<p><strong>1. </strong></p>\n\n<pre class=\"prettyprint\"><code>Alice\nBob\nMike\nLisa</code></pre>\n\n<p> </p>\n\n<p><strong>2. </strong></p>\n\n<pre class=\"prettyprint\"><code>Lisa\nMike\nBob\nAlice</code></pre>\n\n<p> </p>\n\n<p><strong>3. </strong></p>\n\n<pre class=\"prettyprint\"><code>Alice\nBob\nLisa\nMike</code></pre>\n\n<p> </p>","a":[{"id":1555931,"option":"1","correct":false},{"id":1555932,"option":"2","correct":false},{"id":1555933,"option":"3","correct":false},{"id":1555934,"option":"This code will give runtime error","correct":true}]},{"q":"<p>In Java, you are working on collection frameworks. You are given the following Java code that performs operations on an Array.</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.ArrayList; \n \nclass Example {\n    public static void main(String[] args) {  \n        ArrayList names = new ArrayList();  \n        names.add(\"Alice\");   \n        names.add(\"Bob\");\n        ArrayList list = new ArrayList();  \n        list.add(\"A\");\n        list.add(\"B\");\n        names.addAll(list);\n        System.out.println(names);   \n    }     \n}</code></pre>\n\n<p> </p>\n\n<p>Which of the following outputs will the above Java code produce?</p>\n\n<p> </p>\n\n<p><strong>Outputs</strong></p>\n\n<p><strong>1. </strong></p>\n\n<pre class=\"prettyprint\"><code>[A, B, Alice, Bob]</code></pre>\n\n<p> </p>\n\n<p><strong>2. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, Bob, A, B]</code></pre>\n\n<p> </p>","a":[{"id":1555927,"option":"[A, B, Alice, Bob]","correct":false},{"id":1555928,"option":"[Alice, Bob, A, B]","correct":true},{"id":1555929,"option":"This code will give compilation error","correct":false},{"id":1555930,"option":"This code will give runtime error","correct":false}]},{"q":"<p>In Java, you are working on Collection Frameworks. What is the output of the following java code?</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.ArrayList; \n \nclass Example {\n    public static void main(String[] args) {  \n        ArrayList list_1 = new ArrayList();\n        list_1.add(\"Tara\");\n        list_1.add(\"Lisa\");\n        ArrayList list_2 = new ArrayList();  \n        list_2.addAll(list_1);\n        list_2.add(0,\"Alice\");   \n        list_2.add(1,\"Bob\"); \n        list_2.add(4, \"Tara\");\n        list_2.remove(\"Tara\");\n        System.out.println(list_2);    \n    }     \n}</code></pre>\n\n<p> </p>\n\n<p>Which of the following outputs will the above Java code produce?<br>\n </p>\n\n<p><strong>Outputs</strong></p>\n\n<p><strong>1. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, Bob, Lisa]</code></pre>\n\n<p> </p>\n\n<p><strong>2. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, Bob, Tara, Lisa]</code></pre>\n\n<p> </p>\n\n<p><strong>3. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, Bob, Lisa, Tara]</code></pre>\n\n<p> </p>","a":[{"id":1555923,"option":"1","correct":false},{"id":1555924,"option":"2","correct":false},{"id":1555925,"option":"3","correct":true},{"id":1555926,"option":"This code will give runtime error","correct":false}]},{"q":"<p>In Java, you are working on collection frameworks. You are given the following Java code that performs operations on an Array.</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.ArrayList; \n\nclass Example {\n    public static void main(String[] args) {  \n        ArrayList list = new ArrayList();  \n        list.add(\"Alice\");   \n        list.add(\"Bob\"); \n        list.add(1, \"Mike\");\n        list.add(3, \"Tara\");\n            // Line 10\n        System.out.println(list);    \n    }     \n}</code></pre>\n\n<p>The above code is incomplete. If you are asked to complete the code then which of the following code snippets would you choose so that it best fit in <strong>Line 10</strong> such that the above code will return the following output</p>\n\n<p><strong>output</strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, Mike, Bob]</code></pre>\n\n<p> </p>\n\n<p><strong>Code Snippets</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>list.remove(\"Tara\");</code></pre>\n\n<p> </p>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>list.remove(-1);</code></pre>\n\n<p> </p>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>list.remove(3);</code></pre>\n\n<p> </p>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>list.remove(\"3\");</code></pre>\n\n<p> </p>","a":[{"id":1555919,"option":"1 and 2","correct":false},{"id":1555920,"option":"1 and 3","correct":true},{"id":1555921,"option":"2 and 4","correct":false},{"id":1555922,"option":"3 and 4","correct":false}]},{"q":"<p>In Java, you are working on Collection Frameworks. You are given the following Java code that performs operations on an Array. What is the output of the following Java code?</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.ArrayList;\n\nclass Example\n{\n\tpublic static void main (String[] args)\n\t{\n\t    ArrayList list = new ArrayList();  \n        list.add(\"Alice\");   \n        list.add(Boolean.TRUE); \n        list.add(1,\"Bob\"); \n        list.remove(\"true\");\n        list.add(1, \"Mike\");\n        list.add(4, \"Tara\");\n        System.out.println(list); \t\t\n\t}\n}</code></pre>\n\n<p> </p>\n\n<p>Which of the following outputs will the above Java code produce?</p>\n\n<p> </p>\n\n<p><strong>Outputs</strong></p>\n\n<p><strong>1. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, Mike, Bob, Tara]\n</code></pre>\n\n<p> </p>\n\n<p><strong>2. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, Mike, Bob, true, Tara]\n</code></pre>\n\n<p> </p>","a":[{"id":1555151,"option":"1","correct":false},{"id":1555152,"option":"2","correct":true},{"id":1555153,"option":"This code will give compilation error","correct":false},{"id":1555154,"option":"This code will give runtime error","correct":false}]},{"q":"<p>In Java, you are working on collection frameworks. You are given the following Java code that performs operations on an Array. What is the output of the following Java code?</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.ArrayList; \n \nclass Example {\n    public static void main(String[] args) {  \n        ArrayList list = new ArrayList();  \n        list.add(\"Alice\");   \n        list.add(Boolean.TRUE); \n        list.add(\"Bob\");    \n        System.out.println(list);    \n    }     \n}</code></pre>\n\n<p> </p>\n\n<p>Which of the following outputs will the above Java code produce?</p>\n\n<p> </p>\n\n<p><strong>Outputs</strong></p>\n\n<p><strong>1. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice,  Bob]</code></pre>\n\n<p> </p>\n\n<p><strong>2. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, true, Bob]</code></pre>\n\n<p> </p>\n\n<p><strong>3. </strong></p>\n\n<pre class=\"prettyprint\"><code>[Alice, 1, Bob]</code></pre>\n\n<p> </p>","a":[{"id":1555143,"option":"1","correct":false},{"id":1555144,"option":"2","correct":true},{"id":1555145,"option":"3","correct":false},{"id":1555146,"option":"This code will give compilation error","correct":false}]},{"q":"<p>In Java, you are working on file handling. You have a file named <em>hack_file. </em>The code given below performs some operations on the path to the file <em>hack_file.</em> Now, If you have executed the following code, then which of the following statements is correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.nio.file.*;\n  \npublic class hackerearth \n{\n    public static void main(String[] args)\n    {\n        Path path = Paths.get(\"/hack_user/hack_dir/hack_file\");\n  \n        Path hackPath = path.toRealPath();\n \n    }\n}</code></pre>\n\n<p><br>\n </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>If the path variable contains a relative path then the hackPath variable will have an absolute path.<br>\n\t </li>\n\t<li>If the path variable contains redundant elements then the hackPath variable will have a path with those elements removed.<br>\n\t </li>\n\t<li>The code will throw an exception if <em>hack_file </em>cannot be accessed.</li>\n</ol>","a":[{"id":1555911,"option":"1 and 2","correct":false},{"id":1555912,"option":"2 and 3","correct":false},{"id":1555913,"option":"1 and 3","correct":false},{"id":1555914,"option":"All of these","correct":true}]},{"q":"<p>In Java, you are working on file handling. You have a file named <em>hack_file. </em>The code given below performs some operations on the path to the file <em>hack_file.</em> Now, If you have executed the following code, then which of the following statements is correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.nio.file.*;\n  \npublic class hackerearth \n{\n    public static void main(String[] args)\n    {\n        Path path = Paths.get(\"C:\\\\..\\\\.\\\\hack_users\\\\hack_user1\" + \"\\\\hack_dir\\\\hack_file\");\n  \n        Path hackPath = path.normalize();\n \n    }\n}</code></pre>\n\n<p><br>\n </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The given code removes any redundant elements in the path to the file <em>hack_file.</em><br>\n\t </li>\n\t<li>The given code performs a pure syntactic operation.<br>\n\t </li>\n\t<li>Path obtained through the code will always be valid.</li>\n</ol>","a":[{"id":1555907,"option":"1 and 2","correct":false},{"id":1555908,"option":"2 and 3","correct":false},{"id":1555909,"option":"1 and 3","correct":false},{"id":1555910,"option":"All of these","correct":true}]},{"q":"<p>What will be the output of the following Java code?<br>\n </p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class Hackerearth \n{\n    private static int hack;\n\n    public Hackerearth() \n    {\n        hack++;\n    }\n\n    protected static int hack_method() \n    {\n        return hack;\n    }\n\n    public static void main(String[] args) \n    {\n\n       Hackerearth h1 = new Hackerearth();\n       Hackerearth h2 = new Hackerearth();\n       Hackerearth h3 = new Hackerearth();\n       Hackerearth h4 = new Hackerearth();\n       Hackerearth h5 = new Hackerearth();\n       Hackerearth h6 = new Hackerearth();\n       h6.hack++;\n       System.out.println(hack_method());\n    }\n}</code></pre>\n\n<p><br>\n </p>\n\n<p><strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>6</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>7</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1555139,"option":"1","correct":false},{"id":1555140,"option":"2","correct":true},{"id":1555141,"option":"3","correct":false},{"id":1555142,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>package Hackerearth;\n \npublic class hackerearth\n{\n    public static void main(String[] args)\n    {\n        hack2 h = new hack2();\n        System.out.println(h.hack_method1(0));\n    }\n}\npublic class hack1\n{\n    private int hack_method1(int hack)\n    {\n        return hack++;\n    }\n     \n    public int hack_method2(int hack)\n    {\n      \n        System.out.println(hack);\n        return hack_method1(hack++);\n    }\n}\n \n\nclass hack2 extends hack1\n{\n    int hack_method1(int hack)\n    {\n        return hack_method2(++hack);\n    }\n}</code></pre>\n\n<p> </p>\n\n<p><strong>Output:</strong></p>\n\n<ol>\n\t<li> \n\t<pre class=\"prettyprint\"><code>0\n1</code></pre>\n\t<br>\n\t </li>\n\t<li> \n\t<pre class=\"prettyprint\"><code>1\n1</code></pre>\n\t<br>\n\t </li>\n\t<li> \n\t<pre class=\"prettyprint\"><code>1\n2</code></pre>\n\t<br>\n\t </li>\n\t<li> \n\t<pre class=\"prettyprint\"><code>2\n3</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1555119,"option":"1","correct":false},{"id":1555120,"option":"2","correct":true},{"id":1555121,"option":"3","correct":false},{"id":1555122,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>package hackerearth;\n \npublic class hack1\n{\n    public static void main(String[] args)\n    {\n        hack4 h = new hack4();\n        h.hack_method();\n    }\n}\nclass hack2\n{\n    protected static String hack = \"hello hackerearth\";\n}\n \nclass hack3 extends hack2\n{\n     \n}\n \nclass hack4 extends hack3\n{   \n    static void hack_method()\n    {    \n        hack2.hack = \"hello\";\n        System.out.println(hack);\n    }\n}</code></pre>\n\n<p> </p>\n\n<p><strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello hackerearth\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>null\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1555115,"option":"1","correct":false},{"id":1555116,"option":"2","correct":true},{"id":1555117,"option":"3","correct":false},{"id":1555118,"option":"The code gives a compilation error","correct":false}]},{"q":"<p>Anita has recently started building an application in Java. She recently came across the concept of Servlet Filter and started studying it. Which of the following options given below hold true with respect to the concept she is studying?</p>\n\n<ol>\n\t<li>Servlet filter only processes the initial HTTP request and response.</li>\n\t<li>It can be used to compress the response data that is sent to the client.</li>\n\t<li>It can be used for logging request parameters to log files.</li>\n\t<li>Servlet filters are pluggable.</li>\n</ol>","a":[{"id":630389,"option":"1 and 2","correct":false},{"id":630390,"option":"1 and 3","correct":false},{"id":630391,"option":"1, 2, and 4","correct":false},{"id":630392,"option":"2,3 and 4","correct":true}]},{"q":"<p>Alice is working in a Company. She was assigned with a project that has to be done using Java. Since she has to use Java,she needs to work on servlets. But she has no prior knowledge in this language. Now she wants to know how to&nbsp;get the actual path of servlet in a server. Help her to understand which among the following is correct?</p>\n\n<p>&nbsp;</p>","a":[{"id":664966,"option":"getServletContext().getAttribute(request.getPath())","correct":false},{"id":664967,"option":"getServletContext().getServerInfo(request.getServletPath())","correct":false},{"id":664968,"option":"getServletContext().getRealPath(request.getServletPath())","correct":true},{"id":664969,"option":"All of these","correct":false}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass Main {\n\tint a;int b=9;\n\t\n\tpublic int sum()\n\t{\n\t    \treturn a+b;\n\t}\n\t\n\tprivate int add()\n\t{\n\t\treturn a+b;\n\t}\n\n\tint result()\n\t{\n\t\treturn new Main().add();\n\t}\n}\n\npublic class Examp3\n{\n\t\n\tpublic static void main(String []aa)\n\t{\n\t\tMain e=new Main();\n\t\tSystem.out.println(e.sum()+e.result());\n\t\t\n\t}\n}\n</code></pre>\n\n<p> </p>","a":[{"id":653031,"option":"0","correct":false},{"id":653032,"option":"9","correct":false},{"id":653033,"option":"18","correct":true},{"id":653034,"option":"Run-time error","correct":false}]},{"q":"<p>Which of these is the correct order in which the major tasks performed by a servlet is executed?</p>\n\n<ol>\n\t<li>Read the implicit HTTP request data sent by various clients (browsers).</li>\n\t<li>Process the data and generate results.</li>\n\t<li>Read the explicit data sent by clients (browsers).</li>\n\t<li>Send the explicit data (i.e., the document) to the clients (browsers).</li>\n\t<li>Send the implicit HTTP response to the clients (browsers).</li>\n</ol>","a":[{"id":627385,"option":"3, 1, 2, 4, 5","correct":true},{"id":627386,"option":"1, 3, 2, 4, 5","correct":false},{"id":627387,"option":"1, 3, 2, 5, 4","correct":false},{"id":627388,"option":"3, 1, 2, 5, 4","correct":false}]},{"q":"<p>In Java, which of the following statements about <strong>s</strong><strong>ervlets </strong>are true?</p>\n\n<ol>\n\t<li>For every request made to a servlet, a new lightweight Java thread is created instead of a process.</li>\n\t<li>If 'N' requests are made to a servlet class, then 'N' copies of the servlet are loaded into the memory.</li>\n\t<li>Servlets remain in memory even after completing a response.</li>\n\t<li>Servlets do not use operating system shells for executing a system call.    </li>\n</ol>","a":[{"id":627966,"option":"1, 2, and 3","correct":false},{"id":627967,"option":"1, 2, and 4","correct":false},{"id":627968,"option":"1, 3, and 4","correct":true},{"id":627969,"option":"All of these","correct":false}]},{"q":"<p>Bob is building an application in Java. He wanted to know about the correct structure for initializing context parameters in servlets. The context parameters are in the web.xml file. Which of the following options answers the aforementioned problem mentioned by Bob?<br>\n<strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;web-app&gt;\n\t&lt;context-param&gt;\n\t\t.....\n\t&lt;/context-param&gt;\n\t&lt;servlet&gt;\n\t\t.....\n\t&lt;/servlet&gt;\n&lt;/web-app&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;web-app&gt;\n\t&lt;servlet&gt;\n\t\t&lt;context-param&gt;\n\t\t.....\n\t\t&lt;/context-param&gt;\n\t&lt;/servlet&gt;\n&lt;/web-app&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;web-app&gt;\n\t&lt;servlet&gt;\n\t\t&lt;context&gt;\n\t\t\t&lt;context-param&gt;\n\t\t\t\t.....\n\t\t\t&lt;/context-param&gt;\n\t\t&lt;/context&gt;\n\t&lt;/servlet&gt;\n&lt;/web-app&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;web-app&gt;\n\t&lt;context&gt;\n\t\t&lt;servlet&gt;\n\t\t\t&lt;context-param&gt;\n\t\t\t\t.....\n\t\t\t&lt;/context-param&gt;\n\t\t&lt;/servlet&gt;\n\t&lt;/context&gt;\n&lt;/web-app&gt;</code></pre>\n\t</li>\n</ol>","a":[{"id":631286,"option":"1","correct":true},{"id":631287,"option":"2","correct":false},{"id":631288,"option":"3","correct":false},{"id":631289,"option":"4","correct":false}]},{"q":"<p>Lisa has been tasked with building an application using Java. She was studying the concepts of servlets and wanted to know what methods are used by them to set headers of an HTTP response. Which of the following options answers the following aforementioned question?</p>","a":[{"id":630470,"option":"setHeader()","correct":false},{"id":630471,"option":"addHeader()","correct":false},{"id":630472,"option":"Both of these","correct":true},{"id":630473,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java code:<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth\n{\n  public static void main(String[] args) \n  {\n        HackerEarth obj = new HackerEarth();\n        obj.start();\n  }\n\n  private void start() \n  {\n        System.out.println(check(\"12345\"));\n        System.out.println(check(\"123456\"));\n        System.out.println(check(null));\n  }\n\n  private boolean check(String aString)\n  {\n    try\n    {\n        return aString.length() &gt; 5;\n    }\n    catch (NullPointerException e)\n    {\n        System.out.println(\"An Exception Occurred!\");\n        return false;\n    }\n  }\n}</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue\nAn Exception Occurred!</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue\nAn Exception Occurred!\nfalse</code></pre>\n\t</li>\n</ol>","a":[{"id":691966,"option":"1","correct":false},{"id":691967,"option":"2","correct":false},{"id":691968,"option":"3","correct":true},{"id":691969,"option":"None of these","correct":false}]},{"q":"<p>In Java, which of these lines can cause an error in the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass B1\n{\n\tpublic B1(){}\n\t\n\tprivate int a=10;  /**Line A**/\n\tprotected int b=30;\n\t\n\tprotected void sum()\n\t{\n\t\t new B1().get();\n\t}\n\tprivate void  get()   /**Line B**/\n\t{\n\t   System.out.println(a+b);\n\t}\n}\n\nclass B2 extends B1\n{\n\tprotected int c=10;\n\t\n\tprotected void add()  \n\t{\n\t\t sum();   /**Line C**/\n\t}\n\t\n\t}\npublic class Examp7 {\n\tpublic static void main(String []aa)\n\t{\n\tnew B2().add();\n\t}\n}\n</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":653916,"option":"Line A","correct":false},{"id":653917,"option":"Line B","correct":false},{"id":653918,"option":"Line C","correct":false},{"id":653919,"option":"Output is 40","correct":true}]},{"q":"<p>In Java, which of these lines can cause an error in the following code:</p>\n\n<pre class=\"prettyprint\"><code>package Practi;\npublic class Examp10 {\n\n\tprotected int a;\n\tpublic int b;\n\tint c;\n\tprotected int d;\n\t\n\tpublic Examp10()\n\t{\n\t\ta=10;\n\t\tb=15;\n\t\tc=10;d=10;\n\t}\n\n\tpublic void sum3()\n\t{\n\t\tSystem.out.println(a+b+c+d); /**Line A**/\n\t}\n}\npackage Doprctice;\nimport Practi.Examp10;\n\npublic class Examp10con extends Examp10{\n  Examp10con(){}\n\t public void sum3()\n\t{\n\t\tSystem.out.println(a+b+c+d); /**Line B**/\n\t}\n\t public static void main(String []aa)\n\t {\n\t\t Examp10con e=new Examp10con(); \n          e.sum3();  /**Line C**/\n\t\t\t \n }\n}\n\n</code></pre>\n\n<p> </p>","a":[{"id":654226,"option":"Line A","correct":false},{"id":654227,"option":"Line B","correct":true},{"id":654228,"option":"Line C","correct":false},{"id":654229,"option":"No error","correct":false}]},{"q":"<p>Which of the following statements about WEB-INF directory is true:</p>\n\n<ol>\n\t<li>/WEB-INF/classes/*: It contains compiled class files.</li>\n\t<li>/WEB-INF/lib/*.jar: It contains different library jar files.</li>\n\t<li>/WEB-INF/web.xml: It is a deployment descriptor that specifies the web application configuration.</li>\n</ol>","a":[{"id":664788,"option":"2 and 3","correct":false},{"id":664789,"option":"1 and 3","correct":false},{"id":664790,"option":"1, 2, and 3","correct":true},{"id":664791,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements do not follow the correct syntax and cannot compile?</p>","a":[{"id":694249,"option":"private void HackerEarth(String name)\r\n{\r\n    if (name.equals(\"Java\"))\r\n    throw new IllegalArgumentException(name);\r\n}","correct":false},{"id":694250,"option":"private void HackerEarth(int age) {\r\nif (age > 30)\r\nthrow Exception();\r\n}","correct":true},{"id":694251,"option":"public double HackerEarth() throws Exception {\r\nreturn 0.7;\r\n}","correct":false},{"id":694252,"option":"All of these will compile successfully","correct":false}]},{"q":"<p>In Java, which of the following statements about <em>Interface</em> are true:</p>\n\n<ol>\n\t<li>An interface can extend multiple interfaces.</li>\n\t<li>An interface cannot extend any class.</li>\n\t<li>Interface methods can define an implementation by using the default methods.</li>\n\t<li>A static method in a class does not hide or override the static method in the interface that it implements.</li>\n</ol>","a":[{"id":693624,"option":"1, 2, and 3","correct":true},{"id":693625,"option":"1, 2, and 4","correct":false},{"id":693626,"option":"1, 3, and 4","correct":false},{"id":693627,"option":"All of these","correct":false}]},{"q":"<p>Which of the following methods accepts three integers as method arguments and returns their sum as a floating-point number?</p>","a":[{"id":693608,"option":"public void addVals(byte val1, int val2, int val3) \r\n{\r\n    double sum = val1 + val2 + val3;\r\n}","correct":false},{"id":693609,"option":"public double addVals(byte val1, int val2, int val3) \r\n{\r\ndouble sum = val1 + val2 + val3;\r\nreturn sum;\r\n}","correct":true},{"id":693610,"option":"public double addVals(long val1, byte val2, double val3) \r\n{\r\nreturn val1 + val2 + val3;\r\n}","correct":false},{"id":693611,"option":"None of these","correct":false}]},{"q":"<p>In Java, which of the following statements about <strong>constructors</strong> is true:</p>\n\n<ol>\n\t<li>If you define a return type for a constructor, then it will no longer be treated as a constructor. It will be treated as a regular method even though it shares the same name as its class.</li>\n\t<li>If you define both an initializer and a constructor for a class, the initializer block will be executed prior to the constructor.</li>\n\t<li>A constructor cannot call another overloaded constructor.</li>\n\t<li>A call to another constructor must be the first statement in a constructor.</li>\n</ol>","a":[{"id":693596,"option":"1, 2, and 3","correct":false},{"id":693597,"option":"1, 2, and 4","correct":false},{"id":693598,"option":"1, 3, and 4","correct":true},{"id":693599,"option":"All of these","correct":false}]},{"q":"<p>In Java, which of the following statements about <em>variables </em>and <em>objects </em>is true:</p>\n\n<ol>\n\t<li>The scope of a local variable is less than the scope of a method if they are declared in a sub-block (for example, inside an <strong>if</strong> statement) in a method.</li>\n\t<li>In a method, if a local variable exists with the same name as an instance variable, the local variable takes precedence.</li>\n\t<li>An object can become inaccessible if it can no longer be referenced by any variable, which happens when a reference variable is explicitly set to null or when it goes out of scope.</li>\n\t<li>Declaring a reference object variable is not the same as creating an object.</li>\n</ol>","a":[{"id":693592,"option":"1, 2, and 3","correct":false},{"id":693593,"option":"1 and 2","correct":false},{"id":693594,"option":"1, 3, and 4","correct":false},{"id":693595,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.regex.Pattern;\nimport java.util.regex.Matcher;\n\npublic class StringMatch\n{\n\npublic static void main(String[] args) \n{\nString regex = \"\\\\b(\\\\d{3})\\\\d{7}\\\\b\";\nPattern p = Pattern.compile(regex);\nString source = \"3342449027, 2339829, and 6152534734\";\n\nMatcher m = p.matcher(source);\n\nwhile(m.find())\n{\n    String val = m.group();\n    String val2 = m.group(1);\n    System.out.println(\"Val: \" + val + \", Val2: \" + val2);\n}\n}\n}\n</code></pre>\n\n<p> </p>","a":[{"id":692556,"option":"Val: 3342449027, Val2: 334\r\nVal: 6152534734, Val2: 615","correct":true},{"id":692557,"option":"Val: 3342449027, Val2: 33424\r\nVal: 6152534734, Val2: 61525","correct":false},{"id":692558,"option":"Val: 3342449027, Val2: 027\r\nVal: 6152534734, Val2: 734","correct":false},{"id":692559,"option":"Compilation error","correct":false}]},{"q":"<p>If the following code is executed by using the line 'java -ea HackerEarth', then what is the output:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n{\nstatic int val = 3;\n\nstatic int getValue()\n{\n    return val--;\n}\n\npublic static void main(String args[])\n{\n    int n;\n    for(int i=0; i &lt; 5; i++)\n    {\n        n = getValue();\n        assert n &gt; 2;\n        System.out.println(\" \" + n);\n    }\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":691610,"option":"1\r\n2\r\n3\r\n4","correct":false},{"id":691611,"option":"3\r\n2\r\n1\r\n0","correct":false},{"id":691612,"option":"3\r\n2\r\n1\r\n0\r\n-1","correct":true},{"id":691613,"option":"3\r\n2\r\n1\r\nAn Exception will be thrown at this point","correct":false}]},{"q":"<p>If the input is 'Javaq', then what is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.io.*;\n\nclass HackerEarth\n{\n    public static void main(String args[]) \n    {\n        char c;\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        System.out.println(\"Enter characters, 'q' to quit.\");\n        \n        do\n        {\n            c = (char) br.read();\n            System.out.println(c);\n        }\n        while(c != 'q');\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":691606,"option":"J\r\na\r\nv\r\na\r\nq","correct":false},{"id":691607,"option":"J\r\na\r\nv\r\na","correct":false},{"id":691608,"option":"Compilation error\r\n","correct":true},{"id":691609,"option":"Run-time error","correct":false}]},{"q":"<p>Which of the following are built-in <strong>annotations </strong>in Java:</p>\n\n<ol>\n\t<li>@Retention</li>\n\t<li>@Deprecated</li>\n\t<li>@SafeVarargs</li>\n\t<li>@Inherited</li>\n</ol>","a":[{"id":691602,"option":"1 and 2","correct":false},{"id":691603,"option":"1, 2, and 3","correct":false},{"id":691604,"option":"1, 2, and 4","correct":false},{"id":691605,"option":"All of these","correct":true}]},{"q":"<p>In Java, which of these lines can cause an error in the following code:</p>\n\n<pre class=\"prettyprint\"><code>public class Main /**Line A**/\n{\n\tint a=9;int b=9;\n\t\t\t\n\tprivate int add() /**Line B**/\n\t{\n\t\treturn a+b;\n\t}\n\tint result() \n\t{\n\t\treturn new Main().add();\n\t}\n}\n\npublic class Examp3  \n{\n\t\n\tpublic static void main(String []aa)\n\t{\n\t\tMain e=new Main();\n\t\tSystem.out.println(2*e.result()); /**Line C**/\n\t\t\n\t}\n}\n</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":653035,"option":"Line A","correct":true},{"id":653036,"option":"Line B","correct":false},{"id":653037,"option":"Line C","correct":false},{"id":653038,"option":"No error: Output is 36","correct":false}]},{"q":"<p>Which of the following <strong>servlet</strong> methods is used to handle a request coming from an HTML form with no METHOD specified?</p>","a":[{"id":628887,"option":"doPost()","correct":false},{"id":628888,"option":"doGet()","correct":true},{"id":628889,"option":"doRequest","correct":false},{"id":628890,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java servlet code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class MyServlet1 extends HttpServlet {\n   \n    String msg = \"\";\n\n    @Override\n    public void init(ServletConfig config)\n    {   \n        destroy();  \n        msg = \"Hello from Servlets!\";\n              \n    }\n    \n    @Override\n    public void init()\n    {\n        msg=\"Servlets!\";destroy();\n    }\n     @Override\n    public void doGet(HttpServletRequest request,\n        HttpServletResponse response)\n        throws IOException, ServletException\n    {     \n        response.setContentType(\"html\");\n        PrintWriter out = response.getWriter();\n\n        out.println(\"&lt;HTML&gt;\");\n         out.println(msg);\n        out.println(\"&lt;/HTML&gt;\");\n    }\n    \n    @Override\n    public void destroy() \n    {\n        System.out.println(\"Destroy method called!\");\n    }\n}</code></pre>","a":[{"id":666723,"option":"Destroy method called!","correct":false},{"id":666724,"option":"Servlets!","correct":false},{"id":666725,"option":"Hello from Servlets!","correct":true},{"id":666726,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java Servlet code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>@WebServlet(name = \"MyServlet1\", urlPatterns = {\"/MyServlet1\"})\npublic class MyServlet1 extends HttpServlet {\n   \n    String msg = \"\";\n\n    @Override\n    public void init(ServletConfig config)\n    {   \n        msg = \"Hello from Servlets!\";\n        destroy();          \n    }\n    \n    @Override\n    public void init()\n    {\n        msg=\"Servlets!\";\n      destroy();\n    }\n     @Override\n    public void doGet(HttpServletRequest request,\n        HttpServletResponse response)\n        throws IOException, ServletException\n    {       \n        response.setContentType(\"html\");\n        PrintWriter out = response.getWriter();\n\n        out.println(\"&lt;HTML&gt;\");\n         out.println(msg);\n        out.println(\"&lt;/HTML&gt;\");\n    }\n    \n    @Override\n    public void destroy()\n    {\n    }\n}</code></pre>","a":[{"id":665198,"option":"No output","correct":false},{"id":665199,"option":"Servlets!","correct":false},{"id":665200,"option":"Hello from Servlets!","correct":true},{"id":665201,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java servlet code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class MyServlet1 extends HttpServlet \n{\n   \n    String msg = \"\";\n\n    @Override\n    public void init(ServletConfig config)\n    {   \n        msg = \"Hello from Servlets!\";\n        destroy();          \n    }\n     @Override\n    public void doGet(HttpServletRequest request,\n        HttpServletResponse response)\n        throws IOException, ServletException\n    {     \n        response.setContentType(\"html\");\n        PrintWriter out = response.getWriter();\n\n        out.println(\"&lt;HTML&gt;\");\n         out.println(msg);\n        out.println(\"&lt;/HTML&gt;\");\n    }\n    \n    @Override\n    public void destroy()\n    {\n\n    }\n}</code></pre>","a":[{"id":664970,"option":"No output","correct":false},{"id":664971,"option":"Error at init() method","correct":false},{"id":664972,"option":"Hello from Servlets!","correct":true},{"id":664973,"option":"None of these","correct":false}]},{"q":"<p>Alice is working in a Company. She was assigned with a project that has to be done using Java. Since she has to use Java,she needs to work on servlets. But she has no prior knowledge in this language. Now she wants to know different ways of servlet authentication. Help her to understand which among the following statements are true?</p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>HTTP basic authentication</li>\n\t<li>HTTP digest authentication</li>\n\t<li>HTTPS authentication</li>\n\t<li>Form-based login</li>\n</ol>","a":[{"id":664962,"option":"1 and 2","correct":false},{"id":664963,"option":"2, 3, and 4","correct":false},{"id":664964,"option":"All of these","correct":true},{"id":664965,"option":"None of these","correct":false}]},{"q":"<p>Alice is working in a Company. She was assigned with a project that has to be done using Java. Since she has to use Java,she needs to work on servlets. But she has no prior knowledge in this language. Help her to understand which of the following statements about ServletConfig and ServletContext is valid?</p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>ServletConfig is a unique object per servlet whereas ServletContext is a unique object for a complete application.</li>\n\t<li>We cannot set attributes in ServletConfig object whereas we can set attributes in ServletContext that other servlets can use in their implementation.</li>\n\t<li>ServletConfig is used to provide init parameters to the servlet whereas ServletContext is used to provide application-level init parameters.</li>\n</ol>","a":[{"id":664958,"option":"2 and 3","correct":false},{"id":664959,"option":"1 and 3","correct":false},{"id":664960,"option":"All of these","correct":true},{"id":664961,"option":"None of these","correct":false}]},{"q":"<p>Ben is working in a Company. He was assigned with a project that has to be done using Java. Since he has to use Java,he needs to work on servlets. But he has no prior knowledge about java servlets. Help him to understand which among the following statements are correct?</p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>javax.servlet.Servlet<strong> </strong>is an interface.</li>\n\t<li>javax.servlet.GenericServlet<strong> </strong>is protocol independent and an abstract class.</li>\n\t<li>javax.servlet.http.HttpServlet is an abstract class for communication&nbsp;over the HTTP protocol.</li>\n</ol>","a":[{"id":665583,"option":"Only 1","correct":false},{"id":665584,"option":"1 and 2","correct":false},{"id":665585,"option":"2 and 3","correct":false},{"id":665586,"option":"All of these","correct":true}]},{"q":"<p>Alice is working in a Company. She was assigned with a project that has to be done using Java. Since she has to use Java,she needs to work on servlets. But she has no prior knowledge in this language. She wants to know about the wrapper classes. Help her to understand which of the following&nbsp; are provided&nbsp;by Java&nbsp;servlet?</p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>java.serlet.ServletRequestWrapper</li>\n\t<li>javax.servlet.ServletResponseWrapper</li>\n\t<li>javax.servlet.http.HTTPServletResponseWrapper</li>\n</ol>\n\n<p>&nbsp;</p>","a":[{"id":665579,"option":"Only 3","correct":false},{"id":665580,"option":"1 and 2","correct":false},{"id":665581,"option":"2 and 3","correct":false},{"id":665582,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth {\n\n    int getValue() {\n        int returnValue = 10;\n        try {\n            String[] Languages = {\n                \"Java\",\n                \"Ruby\"\n            };\n            System.out.println(Languages[5]);\n        } catch (Exception e) {\n            System.out.println(\"Catch Block :\" + returnValue);\n            return returnValue;\n        } finally {\n            returnValue += 10;\n            System.out.println(\"Finally Block :\" + returnValue);\n        }\n        return returnValue;\n    }\n\n    public static void main(String args[]) {\n        HackerEarth\n        var = new HackerEarth();\n        System.out.println(\"Main Block:\" +\n            var.getValue());\n    }\n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Java\nRuby\nFinally Block :20\nMain Block:10</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Catch Block :10\nFinally Block :20\nMain Block:10</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Catch Block :10\nFinally Block :20\nMain Block:20</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Compilation error</code></pre>\n\t</li>\n</ol>","a":[{"id":693719,"option":"1","correct":false},{"id":693720,"option":"2","correct":true},{"id":693721,"option":"3","correct":false},{"id":693722,"option":"4","correct":false}]},{"q":"<p>Which of the given options given below causes an error in the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>package practii;\npublic class A {\n\t int a;\n\tprivate String b;\n\t\n\t public A(int a, String b)\n\t{\n\t\tthis.a=a;\n\t\tthis.b=b;\n\t}\n\tprotected void get()\n\t{\n\t\tprint();\n\t}\n\tpublic void print()\n\t{\n\t\tSystem.out.println(b+\" \"+a);\n\t}\n}\n\n\npackage Practi;\nimport practii.A;\n\n class B extends A{\n\tpublic B(int a, String b) {\n\t\tsuper(a, b);\n\t\t}\n\tpublic static void main(String []aa)\n\t{\n\t\tA a=new A(100,\"Modifier\");\n\t\ta.get();\n\t}\n}\n</code></pre>","a":[{"id":656709,"option":"The class B should be  public","correct":false},{"id":656710,"option":"Constructor for class A should be protected","correct":false},{"id":656711,"option":"The function get() should be public","correct":true},{"id":656712,"option":"Output is \"Modifier  100\"","correct":false}]},{"q":"<p>What will be the output of the following Java Servlet code?</p>\n\n<pre class=\"prettyprint\"><code>&lt;web-app&gt;\n    &lt;context-param&gt;  \n       &lt;param-name&gt;user_name&lt;/param-name&gt;  \n       &lt;param-value&gt;Servlet Programming.&lt;/param-value&gt;  \n    &lt;/context-param&gt;  \n   \n  &lt;servlet&gt; \n    &lt;servlet-name&gt;DemoServletContext&lt;/servlet-name&gt;\n    &lt;servlet-class&gt;DemoServletContext&lt;/servlet-class&gt;\n  &lt;/servlet&gt;\n......\n&lt;/web-app&gt;\n....\n........\npublic class DemoServletContext extends HttpServlet {\n    public void doGet(HttpServletRequest req, HttpServletResponse res)\n            throws ...... {\n        res.setContentType(\"text/html\");\n        PrintWriter out = res.getWriter();\n        ServletContext context = getServletContext(); /**Line A**/\n        String fullname = context.getInitParameter(\"user_name\");  /**Line B**/\n        out.print(\"&lt;b&gt;\"+fullname+\"&lt;/b&gt;\");\n         out.print(........);  \n        out.flush();\n        out.close();\n    }\n \n.......\n</code></pre>","a":[{"id":664334,"option":"Error at Line A","correct":false},{"id":664335,"option":"Error at Line B","correct":false},{"id":664336,"option":"Servlet Programming.","correct":true},{"id":664337,"option":"No output","correct":false}]},{"q":"<p>Paul is tasked with building an application in Java. He came across the concept of servlet config and started studying it. Which of the following options are methods included in the topic Paul is studying?</p>\n\n<ol>\n\t<li>getInitParameter();</li>\n\t<li>getParameterNames();</li>\n\t<li>getServletContext();</li>\n\t<li>getServletName();</li>\n</ol>","a":[{"id":631282,"option":"1 and 2","correct":false},{"id":631283,"option":"1, 2, and 3","correct":false},{"id":631284,"option":"1, 3, and 4","correct":true},{"id":631285,"option":"All of the above","correct":false}]},{"q":"<p>Paul is tasked with building an application in Java. He came across the concept of servlets and started studying it. He wanted to know about mapping a URL to a servlet. Which of the following statements is true about the aforementioned problem that Paul wanted to know?</p>\n\n<ol>\n\t<li>A servlet must be declared with the <strong>&lt;servlet&gt; </strong>element.</li>\n\t<li>Mapping from the URL path to a servlet declaration is defined with the <strong>&lt;servlet-mapping&gt;</strong> element.</li>\n\t<li>Mappings between URL paths and servlets are defined in the <strong>web.json </strong>file.</li>\n\t<li>Using the same name for multiple servlets across the deployment descriptor is allowed.</li>\n</ol>","a":[{"id":631206,"option":"1 and 2","correct":true},{"id":631207,"option":"1, 2, and 3","correct":false},{"id":631208,"option":"1, 3, and 4","correct":false},{"id":631209,"option":"1 and 3","correct":false}]},{"q":"<p>Mike has started building an application in Java. He was studying header and servlets and wanted to know when will the header set by the servlet be ignored by the servlet container. Which of the following options answer the aforementioned question?</p>","a":[{"id":630474,"option":"If the headers are set before the response is committed.","correct":false},{"id":630475,"option":"If the headers are set after the response is committed.","correct":true},{"id":630476,"option":"If the headers contain data that represents a Date object.","correct":false},{"id":630477,"option":"If a set of header values already exists.","correct":false}]},{"q":"<p>Anita has recently started building an application in Java. She recently came across the concept of Servlet and started studying it. Which of the following options given below must be true before populating the post form data to a parameter set in the topic she is studying?</p>\n\n<ol>\n\t<li>The request must be either HTTP or HTTPS.</li>\n\t<li>The HTTP method must be either POST or GET.</li>\n\t<li>The content type is application/x-www-form-urlencoded.</li>\n\t<li>The servlet has called any method&nbsp;of the getParameter family on the request object.</li>\n</ol>","a":[{"id":630393,"option":"1, 2, and 3","correct":false},{"id":630394,"option":"1, 2, and 4","correct":false},{"id":630395,"option":"1, 3, and 4","correct":true},{"id":630396,"option":"All of these","correct":false}]},{"q":"<p>Bob has been working with Java. He recently came across the concept of the ServletRequest interface and started studying it. Which of the following options do you think is a part of the concept Bob is studying and is also used to access attributes?</p>\n\n<ol>\n\t<li>getAttribute()</li>\n\t<li>getAttributeNames()</li>\n\t<li>setAttribute()</li>\n\t<li>setAttributeNames()</li>\n</ol>","a":[{"id":629781,"option":"1 and 3","correct":false},{"id":629782,"option":"2 and 4","correct":false},{"id":629783,"option":"1, 2, and 3","correct":true},{"id":629784,"option":"1, 2, and 4","correct":false}]},{"q":"<p>In Java, you are working on Multithreading. If you have executed the code given below that contains two threads <em>h1</em> and <em>h2</em><strong>,</strong>&nbsp;then which of the following statements is correct?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class hack_thread extends Thread\n{  \n    public void run()\n    {  \n        for(int h=1;h&lt;=3;h++)\n        {  \n            try\n            {  \n                Thread.sleep(10);  \n                \n            }\n            catch(Exception hackerearth)\n            {\n                System.out.println(\"hello\");\n                \n            }  \n            System.out.print(h+\" \");  \n            \n        }  \n        \n    }  \n    public static void main(String args[])\n    {  \n        hack_thread h1=new hack_thread();  \n        hack_thread h2=new hack_thread();  \n        h1.setPriority(Thread.MAX_PRIORITY);\n        h2.setPriority(Thread.MIN_PRIORITY);\n        h1.start(); \n        \n        try\n        {  \n            h1.join();  \n            \n        }\n        catch(Exception hackerearth)\n        {\n            System.out.println(\"hi\");\n            \n        }  \n        h2.start();  \n        \n    }  \n} </code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>Thread h2 starts executing after h1 has completed its task.</li>\n\t<li>The code gives the following output:\n\t<pre class=\"prettyprint\"><code>1 2 3 1 2 3</code></pre>\n\t</li>\n\t<li>Thread h1 and thread h2 execute simultaneously</li>\n\t<li>Thread h1&nbsp;starts executing after h2&nbsp;has completed its task.</li>\n</ol>","a":[{"id":665214,"option":"1 and 2","correct":true},{"id":665215,"option":"2 and 4","correct":false},{"id":665216,"option":"only 3","correct":false},{"id":665217,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.ArrayList;\nimport java.util.List;\n \npublic class StrPerm {\n \n    public static void main(String args[]) {\n \n        List&lt;String&gt; output = StrPerm.genPerm(\"AB\");\n        output.stream().forEach(System.out::println); \n    }\n \n    public static List&lt;String&gt; genPerm(String input) \n    {\n         List&lt;String&gt; strList = new ArrayList&lt;String&gt;();\n         StrPerm.permutations(\"\", input, strList);\n         return strList;\n    }\n \n    private static void permutations(String consChars, String str, List&lt;String&gt; opContainer){\n \n            for(int i=0; i&lt;str.length(); i++) {\n            permutations(consChars+str.charAt(i), str.substring(0,+str.substring(i+1),opContainer);\n        }\n    }\n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>AB\nBA</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>AA\nBB</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Compilation error</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>No output</code></pre>\n\t</li>\n</ol>","a":[{"id":575087,"option":"1","correct":false},{"id":575088,"option":"2","correct":false},{"id":575089,"option":"3","correct":true},{"id":575090,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Java 8 code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.stream.IntStream;\nimport java.util.stream.Stream;\n\npublic class HackerEarth\n {\n  public static void main(String args[])\n  {\n    Stream&lt;double[]&gt; HackValue = IntStream.rangeClosed(1, 100)\n    .boxed().flatMap(a -&gt;IntStream.rangeClosed(a, 10)\n    .mapToObj(\n    b -&gt; new double[] {a,b, Math.sqrt(a * a + b * b)})\n    .filter (t -&gt; t[2] % 1 == 0));\n \nHackValue.limit(5)\n    .forEach(t-&gt; System.out.println(t[0] + \", \" + t[1] + \", \" + t[2]));\n   }\n}</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>3.0, 4.0, 5.0             \n6.0, 8.0, 10.0</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>3.0, 4.0, 5.0             \n6.0, 8.0, 10.0         \n5.0, 12.0, 13.0</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>3.0, 4.0, 5.0</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>6.0, 8.0, 10.0         \n5.0, 12.0, 13.0</code></pre>","a":[{"id":552948,"option":"1","correct":true},{"id":552949,"option":"2","correct":false},{"id":552950,"option":"3","correct":false},{"id":552951,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\ninterface SupInterface\n{\n\n    void proc1();\n    void proc2();\n\n}\n\ninterface SubInterface implements SupInterface \n{\n\n    void proc3();\n\n}\n\nclass HackerEarth implements SubInterface\n{\n    public void proc1()\n    {\n        System.out.println(\"Python\");\n    }\n    \n    public void proc2() \n    {\n        System.out.println(\"Java\");\n    }\n    \n    public void proc3() \n    {\n        System.out.println(\"PHP\");\n    }\n}\n\nclass MainClass\n{\n    public static void main(String arg[]) \n    {\n        HackerEarth ob = new HackerEarth();\n        ob.proc1();\n        ob.proc2();\n        ob.proc3();\n    }\n}\n\n</code></pre>\n\n<p> </p>","a":[{"id":691094,"option":"Python\r\nJava\r\nPHP","correct":false},{"id":691095,"option":"Compile-time error","correct":true},{"id":691096,"option":"Run-time error","correct":false},{"id":691097,"option":"Program runs but with no output.","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth \n{\n\n\tpublic static void main(String[] args)\n\n\t{\n\t    String string = \"Python\";\n\t    System.out.println(string.substring(3, 2));\n\n\t}\n\n}</code></pre>\n\n<p> </p>","a":[{"id":678010,"option":"on","correct":false},{"id":678011,"option":"ho","correct":false},{"id":678012,"option":"Compilation error","correct":false},{"id":678013,"option":"Run-time error","correct":true}]},{"q":"<p>In Java, you are working on Java Persistence API. Now if you have used the following method of the <strong>EntityManager</strong> interface then which of the following statements is correct?<br>\n<br>\n<strong>Method:</strong></p>\n\n<pre class=\"prettyprint\"><code>void persist(Object entity)</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The given method is used to merge the state of an entity into the current persistence context<br>\n\t.</li>\n\t<li>The given method throws an exception if the entity already exists.<br>\n\t </li>\n\t<li>The given method throws an exception if there is no transaction when invoked on a container-managed entity manager that is of type PersistenceContextType.TRANSACTION</li>\n</ol>","a":[{"id":666731,"option":"1 and 2","correct":false},{"id":666732,"option":"2 and 3","correct":true},{"id":666733,"option":"1 and 3","correct":false},{"id":666734,"option":"All of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class hackerearth\n{\n\tstatic int hack_opr(int h1, int h2)\n\t{\n\t\treturn h1/h2;\n\t}\n\t\n\tstatic int hack_opr2(int h1, int h2) \n\t{\n\t    int hack = 0;\n\t\t\n\t\ttry\n\t\t{\n\t\t    hack = hack_opr(h1,h2);\n\t\t}\n\t\tcatch(ArithmeticException hackerearth)\n\t\t{\n\t\t    System.out.println(\"hello\");\n\t\t}\n\t\treturn hack;\n\t}\n\t\n\tpublic static void main(String args[])\n\t{\n\t\t\n\t\tint h1 = 40;\n\t\tint h2 = 0;\n\t\t\n\t\ttry\n\t\t{\n\t\t    int hack = hack_opr2(h1,h2);\n\t\t\n\t\t}\n\t\t\n\t\tcatch(ArithmeticException ex)\n\t\t{\n\t\t\tSystem.out.println(\"hi\");\n\t\t}\n\t}\n}</code></pre>\n\n<p><br>\n </p>\n\n<p><strong>Output:</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hi</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":661993,"option":"2","correct":false},{"id":661994,"option":"3","correct":false},{"id":661995,"option":"1","correct":true},{"id":661996,"option":"The code gives a compilation error","correct":false}]},{"q":"<p>What is the output of the following Java code if the input is 123:</p>\n\n<pre class=\"prettyprint\"><code>import java.io.IOException;\n\npublic class Hacker1 \n{\npublic static char readInput() \n{\n    char c = '\\u0000';\n    int input = 0;\n\n    try\n    {\n        input = System.in.read();\n        if (input != -1) \n        {\n            c = (char)input;\n        }\n    }\n\n    catch (IOException e)\n    {\n        System.out.print(\"An Exception occurred while reading input.\");\n    }\n    return c;\n}\n\npublic static void main(String[] args) \n{\n    char c = Hacker1.readInput();\n    System.out.println(c);\n}\n}</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>1\n2\n3</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>1</code></pre>","a":[{"id":692118,"option":"1","correct":false},{"id":692119,"option":"2","correct":false},{"id":692120,"option":"An exception occurs while reading the input.","correct":true},{"id":692121,"option":"Compilation error","correct":false}]},{"q":"<p>In Java, which of the following exceptions is generated when you create an object of an abstract class or interface?</p>","a":[{"id":691112,"option":"InstantiateException","correct":false},{"id":691113,"option":"InstantiationException","correct":true},{"id":691114,"option":"IllegalAccessException","correct":false},{"id":691115,"option":"UnsupportedOperationException","correct":false}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class Examp3 {\n\tint a;int b=9;\n\t\n\tpublic int sum()\n\t{\n\t    \treturn a+b;\n\t}\n\t\n\tprivate int add()\n\t{\n\t\treturn a+b;\n\t}\n\n\tint result()\n\t{\n\t\treturn new Examp3().add();\n\t}\n\t\n\tpublic static void main(String []aa)\n\t{\n\t\tExamp3 e=new Examp3();\n\t\tSystem.out.println(e.sum()+e.result()+e.add());\n\t\t\n\t}\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":653027,"option":"Compilation error","correct":false},{"id":653028,"option":"Run-time error","correct":false},{"id":653029,"option":"27","correct":true},{"id":653030,"option":"0","correct":false}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\n\nclass Examp {\n\t  \n\tpublic int a;\n\t    private  Examp() \n\t    {\n\t    \tthis.a=10; /**Line A**/\n\t    }\n\t    \n\t    public void print()\n\t    {\n\t    \tSystem.out.println(a);\n\t    }\n\t    \n\t    public static Examp set()\n\t    {\n\t    \treturn new Examp(); /**Line B**/\n\t    }\n\n}\n\npublic class Examp4{\n\t\n\tpublic static void main(String aa[])\n\t{\n\t\tExamp e=Examp.set();\n\t\te.print();\n\t\t\n\t}\n}\n\n</code></pre>\n\n<p> </p>","a":[{"id":653265,"option":"0","correct":false},{"id":653266,"option":"Error at Line A","correct":false},{"id":653267,"option":"10","correct":true},{"id":653268,"option":"Error at Line B","correct":false}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code> class Examp {\n\t  \n\tprivate  int a;\n\t    private  Examp()\n\t    {\n\t    \tthis.a=10;\n\t    \t\n\t    }\n\t    \n\t    public void print()\n\t    {\n\t    \tprotected int a=20;\n\t    \tSystem.out.println(a);\n\t    }\n\t    \n\t    protected static Examp set()\n\t    {\n\t    \treturn new Examp();\n\t    }\n\n}\n\npublic class Examps{\n\t\n\tpublic static void main(String aa[])\n\t{\n\t\tExamp e=Examp.set();\n\t\te.print();\n\t\t\n\t}\n}\n\n</code></pre>\n\n<p> </p>","a":[{"id":653746,"option":"10","correct":false},{"id":653747,"option":"20","correct":false},{"id":653748,"option":"0","correct":false},{"id":653749,"option":"Compilation error","correct":true}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass B1\n{\n\tprivate int a=10;\n\tprotected int b=30;\n\tpublic B1(int a,int b){\n\t\t\n\t\tthis.a=a;this.b=b;\n\t}\n\tprotected void sum(int a,int b)\n\t{\n\t\t new B1(a,b).get();\n\t}\n\tprivate void  get()\n\t{\n\t   System.out.println(a+b);\n\t}\n}\n\nclass B2 extends B1\n{\n\tprivate B2(int a, int b) {\n\t\tsuper(a, b);\n\t}\n\tprotected int c=10;\n\t\n\tprotected void add()\n\t{\n\t\t sum(10,20);\n\t}\n\t\n\t}\npublic class Examp7 {\n\tpublic static void main(String []aa)\n\t{\n\tnew B2(2,3).add();\n\t}\n}\n</code></pre>\n\n<p> </p>","a":[{"id":653920,"option":"40","correct":false},{"id":653921,"option":"30","correct":false},{"id":653922,"option":"5","correct":false},{"id":653923,"option":"Compilation error","correct":true}]},{"q":"<p>In Java, which of these lines can cause an error in the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nabstract class MyClass\n{  \n\t   private void disp1() /**Line A**/\n      {\n\t     System.out.println(\"Parent class\");\n\t  }\n\t  abstract public void disp2();\n\t  abstract  void disp3();\n\t  abstract protected void disp4();\n}\n\nclass Program extends MyClass\n{\n\tpublic void disp2() \n\t   {\n\t       System.out.println(\"1\");\n\t   }\n\t   void disp3() /**Line B**/\n\t   {\n\t       System.out.println(\"2\");\n\t   }\n\t   public void disp4() /**Line C**/\n\t   {\n\t       System.out.println(\"3\");\n\t   }\n       public static void main(String args[])\n       {\n          Program obj = new Program();\n       }\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":653928,"option":"Line A","correct":false},{"id":653929,"option":"Line B","correct":false},{"id":653930,"option":"Line C","correct":false},{"id":653931,"option":"No error","correct":true}]},{"q":"<p>In Java, which of these lines can cause an error in the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nabstract class MyClass\n{  \n    private void disp1() /**Line A**/\n    {\n\t     System.out.println(\"Parent class\");\n\t}\n\t   abstract public void disp2();\n\t   abstract void disp3();\n\t   abstract protected void disp4();\n}\n\nclass Program extends MyClass\n{\n\tvoid disp2() /**Line B**/\n\t{\n\t    System.out.println(\"1\");\n\t}\n\tvoid disp3() /**Line C**/\n\t{\n\t    System.out.println(\"2\");\n\t}\n\tprotected void disp4()  \n\t{\n\t    System.out.println(\"3\");\n\t}\n    public static void main(String args[])\n    {\n        Program obj = new Program();\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":653924,"option":"Line A","correct":false},{"id":653925,"option":"Line B","correct":true},{"id":653926,"option":"Line C","correct":false},{"id":653927,"option":"No error","correct":false}]},{"q":"<p>In Java, what is the difference between <strong>Swing</strong> and <strong>JSF</strong>?</p>","a":[{"id":8316,"option":"JSF applications cannot be operated when the network is present, while Swing applications can operate on local data when the network is absent.","correct":false},{"id":8317,"option":"JSF applications can operate when the network is not present, while Swing applications cannot operate on local data when the network is absent,","correct":false},{"id":8318,"option":"JSF applications cannot operate when the network is not present, while Swing applications can operate on local data when the network is absent.","correct":true},{"id":8319,"option":"None of these","correct":false}]},{"q":"<p>In which of the following modes can the servlets can be used?</p>\n\n<ol>\n\t<li>Filter chains can be used to collect servlets together</li>\n\t<li>Support HTTP protocol</li>\n\t<li>Used for CGI based applications</li>\n\t<li>Dynamic generation of servlets</li>\n</ol>","a":[{"id":664784,"option":"1, 2, and 3","correct":false},{"id":664785,"option":"2, 3, and 4","correct":false},{"id":664786,"option":"All of these","correct":true},{"id":664787,"option":"None of these","correct":false}]},{"q":"<p>What is the error in the following Servlet code:</p>\n\n<pre class=\"prettyprint\"><code>@WebServlet(urlPatterns = {\"/MyFilter\"})\n\n   public class MyFilter implements Filter  /**Line A**/\n{  \n   @Override  \npublic void init(FilterConfig arg0) throws ServletException {\n    }  \n       @Override  \npublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n throws  ServletException  /**Line B**/\n {             \n    PrintWriter out=response.getWriter();  \n    String userName = request.getParameter(.....);\n    out.print(\"&lt;h2&gt;Hello \"+userName+\"&lt;/h2&gt;\");  \n            \n    chain.forward(request, response);  /**Line C**/\n     out.print(......);  \n    }  \n    public void destroy() {\n    //servlet filter destroy\n    }  \n</code></pre>\n\n<p> </p>","a":[{"id":664780,"option":"At Line A","correct":false},{"id":664781,"option":"At Line B","correct":false},{"id":664782,"option":"At Line C","correct":true},{"id":664783,"option":"No error","correct":false}]},{"q":"<p>In which of the following formats does the <em>getParameterNames() </em>method obtains a list of all the parameter names in a form?</p>\n\n<p> </p>","a":[{"id":631218,"option":"String","correct":false},{"id":631219,"option":"Array","correct":false},{"id":631220,"option":"Enumeration","correct":true},{"id":631221,"option":"List","correct":false}]},{"q":"<p>Which of the following methods is used to retrieve the value of a parameter name that appears multiple times in a form data?</p>","a":[{"id":631214,"option":"getParameter()","correct":false},{"id":631215,"option":"getParameterValues()","correct":true},{"id":631216,"option":"getMultipleValues()","correct":false},{"id":631217,"option":"None of these","correct":false}]},{"q":"<p>Which of the following methods returns information about a servlet such as its name and version?</p>","a":[{"id":628895,"option":"getServletInfo()","correct":true},{"id":628896,"option":"getServletInformation()","correct":false},{"id":628897,"option":"getInfoServlet()","correct":false},{"id":628898,"option":"getServletData()","correct":false}]},{"q":"<p>Which of the following statements about <strong>threads </strong>are true in Java:</p>\n\n<ol>\n\t<li>The multithreading mechanism in Java uses the polling<em> </em>method.</li>\n\t<li>Each object has its own, implicit monitor that is automatically entered when one of the object’s synchronized methods is called.</li>\n\t<li>A thread can be created by creating a class that extends the runnable<em> </em>interface.</li>\n\t<li>We can obtain a reference to the main thread by calling the currentThread()<em> </em>method.</li>\n</ol>","a":[{"id":691117,"option":"1, 2, and 3","correct":false},{"id":691118,"option":"1 and 2","correct":false},{"id":691119,"option":"2 and 4","correct":true},{"id":691120,"option":"None of these","correct":false}]},{"q":"<p>What is the error in the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n{\n    static void proc1()    \n    {\n        System.out.println(\"Inside Proc1\");\n        throw new IllegalAccessException(\"Java\");\n    }\n\npublic static void main(String args[]) \n{\n        proc1();\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":691104,"option":"Declaring that proc1 throws IllegalAccessException","correct":false},{"id":691105,"option":"Not defining a try-catch statement in the main() method","correct":false},{"id":691106,"option":"Both of these","correct":true},{"id":691107,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about <strong>exceptions</strong> in Java are true:</p>\n\n<ol>\n\t<li>All exception types are subclasses of the built-in class<em>Throwable</em>.</li>\n\t<li>The<em> Throwable </em>class has 2 subclasses - <em>Exception </em>and<em> Error</em></li>\n\t<li>The <em>throws </em>statement is used to explicitly throw an exception.</li>\n\t<li>There are two ways to obtain a <em>Throwable </em>object - using a parameter in a catch clause or creating one with the <em>new</em> operator.</li>\n</ol>","a":[{"id":691098,"option":"1, 2, and 4","correct":true},{"id":691099,"option":"1, 2, and 3","correct":false},{"id":691100,"option":"1, 3, and 4","correct":false},{"id":691101,"option":"All of these","correct":false}]},{"q":"<p>Which of the following access modifiers is typically used within related classes to allow only internal access to data?</p>","a":[{"id":654904,"option":"Private","correct":false},{"id":654905,"option":"Default","correct":false},{"id":654906,"option":"Public ","correct":false},{"id":654907,"option":"Protected","correct":true}]},{"q":"<p>Which of the following methods is provided by the <em>HttpServletRequest </em>interface for accessing cookies present in a request?</p>","a":[{"id":629785,"option":"getCookies()","correct":true},{"id":629786,"option":"getCookie()","correct":false},{"id":629787,"option":"retrieveCookie()","correct":false},{"id":629788,"option":"getServletCookies()","correct":false}]},{"q":"<p>Which of the following is the correct form of the getSession() method which is used in servlets to retrieve the current user's session?</p>","a":[{"id":630361,"option":"public HttpSession HttpServletRequest.getSession(boolean create);","correct":true},{"id":630362,"option":"public HttpSession HttpServletRequest.getSession(String create)","correct":false},{"id":630363,"option":"public HttpSession ServletRequest.getSession(boolean create)","correct":false},{"id":630364,"option":"public HttpServletRequest.getSession(boolean create)","correct":false}]},{"q":"<p>Which of the following exceptions is thrown when a servlet<strong> </strong>is unable to handle requests?</p>","a":[{"id":628913,"option":"ServletUnavailableException","correct":false},{"id":628914,"option":"UnavailableException","correct":true},{"id":628915,"option":"UnavailableServletException","correct":false},{"id":628916,"option":"None of these","correct":false}]},{"q":"<p>In Servlet, which of the following signatures of the <strong>service() </strong>method is correct?</p>","a":[{"id":628883,"option":"public void service(ServletRequest request, ServletResponse response) throws ServletException , IOException{ }","correct":true},{"id":628884,"option":"public int service(ServletRequest request, ServletResponse response) throws ServletException , IOException{ }","correct":false},{"id":628885,"option":"public void service(Request request, Response response) throws ServletException , IOException{ }","correct":false},{"id":628886,"option":"private void service(ServletRequest request, ServletResponse response) throws ServletException , IOException{ }","correct":false}]},{"q":"<p>In Java, which of the following collection classes is used to accept <strong>enum</strong> constants of an <strong>enum</strong> type?</p>","a":[{"id":583736,"option":"java.util.EnumSet ","correct":true},{"id":583737,"option":"java.util.Enum ","correct":false},{"id":583738,"option":"java.util.EnumType","correct":false},{"id":583739,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about the benefits of the Java Database Connectivity interface are correct:</p>\n\n<ol>\n\t<li>Error-free and efficient SQL processing</li>\n\t<li>A simple syntax that is easy to learn</li>\n\t<li>Queries are DBMS-specific in nature</li>\n</ol>","a":[{"id":582798,"option":"1 and 2","correct":true},{"id":582799,"option":"1 and 3","correct":false},{"id":582800,"option":"All of these","correct":false},{"id":582801,"option":"None of these","correct":false}]},{"q":"<p>In Java, which of the following interfaces are implemented by a <strong>HashMap</strong>?</p>\n\n<ol>\n\t<li>Serializable</li>\n\t<li>Map</li>\n\t<li>Cloneable</li>\n</ol>","a":[{"id":579334,"option":"1","correct":true},{"id":579335,"option":"1 and 2","correct":false},{"id":579336,"option":"2 and 3","correct":false},{"id":579337,"option":"4","correct":false}]},{"q":"<p>In Java 8, what type of bit values does an array holds that is created by the <strong>BitSet </strong>class?</p>","a":[{"id":552912,"option":"integer","correct":false},{"id":552913,"option":"double","correct":false},{"id":552914,"option":"boolean","correct":true},{"id":552915,"option":"None of these","correct":false}]},{"q":"<p>Which of the following classes or interfaces have been recently introduced in Java 8?<br>\n<br>\n1. PrimitiveIterator<br>\n2. StringJoiner<br>\n3. StringFilter<br>\n4. UncheckedIOException</p>","a":[{"id":552956,"option":"1 and 2","correct":false},{"id":552957,"option":"1, 2, and 4","correct":true},{"id":552958,"option":"2 and 3","correct":false},{"id":552959,"option":"1, 3, and 4","correct":false}]},{"q":"<p>Among the following Java annotations, which is newly introduced in Java 8?</p>","a":[{"id":552680,"option":"@Override","correct":false},{"id":552681,"option":"@Deprecated","correct":false},{"id":552682,"option":"@Repeatable","correct":true},{"id":552683,"option":"@SuppressWarnings","correct":false}]},{"q":"<p>Alice is working in a Company. She was assigned with a project that has to be done using Java. Since she has to use Java,she needs to work on servlets. But she has no prior knowledge in this language. Now she wants to know why servlets are required and the benefits of using it.Help her to understand which among the following statements are correct regarding servlets?</p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The Servlet is a server-side component which gives a powerful mechanism for developing server side application.</li>\n\t<li>A web developer can create a fast and efficient server-side program by using Servlets.</li>\n\t<li>The Servlet provides ways to perform&nbsp;authentication and authorization in a web application.</li>\n\t<li>Servlet plays an important role in exploring the internet, reusability, performance, and scalability.</li>\n</ol>","a":[{"id":663040,"option":"1, 2, and 4","correct":false},{"id":663041,"option":"1, 2, and 3","correct":false},{"id":663042,"option":"All of these","correct":true},{"id":663043,"option":"None of these","correct":false}]},{"q":"<p>Alice is working in a Company. She was assigned with a project that has to be done using Java. Since she has to use Java,she needs to work on servlets. But she has no prior knowledge in this language. Now,she wants to know what will the Servlet resulting from&nbsp;a JSP page implement or extend if the<em><strong>&nbsp;</strong></em><strong>isThreadSafe</strong> attribute&nbsp;in the JSP page is assigned with the&nbsp;boolean value as false?</p>\n\n<p>&nbsp;</p>","a":[{"id":669330,"option":"Runnable interface","correct":false},{"id":669331,"option":"Executor class","correct":false},{"id":669332,"option":"SingleThreadModel interface","correct":true},{"id":669333,"option":"None of these","correct":false}]},{"q":"<p>In Java 8, which of the following interfaces are defined by the Stream API for handling primitive type streams?</p>\n\n<p><strong>Options:</strong><br>\n1. IntStream<br>\n2. DoubleStream<br>\n3. FloatStream<br>\n4. LongStream</p>","a":[{"id":552920,"option":"1 and 2","correct":false},{"id":552921,"option":"3 and 4","correct":false},{"id":552922,"option":"1, 2, and 4","correct":true},{"id":552923,"option":"1, 2, 3 and 4","correct":false}]},{"q":"<p>John has recently started working on a Java application. He came across the topic of access specifiers and wanted to know more about it. He made the following list given below based on his studies. Which of the following are true?</p>\n\n<ol>\n\t<li>Access modifiers define the visibility of a class.</li>\n\t<li>If no keyword is mentioned then that is default access modifier.</li>\n\t<li>The four access modifiers in java include public, private, protected, and default.</li>\n\t<li>Private and protected keywords cannot be used for classes and interfaces.</li>\n</ol>","a":[{"id":654808,"option":"Only 1, 2, and 4 ","correct":false},{"id":654809,"option":"Only 4 ","correct":false},{"id":654810,"option":"Both 1 and 3","correct":false},{"id":654811,"option":"All of these","correct":true}]},{"q":"<p>Which of the given lists of data instances is accessible in class A3 of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class A1 \n{\n public int x;\n private int y;\n protected int z;\n …\n }\n public class A2 extends A1 {\n protected int a; \nprivate int b; \n…} \npublic class A3 extends A2 { \nprivate int q;\n…\n}\n</code></pre>","a":[{"id":656667,"option":"x, y, z, a, b, q ","correct":false},{"id":656668,"option":"a, b, q ","correct":false},{"id":656669,"option":"x, z, a, q ","correct":true},{"id":656670,"option":"x, a, q ","correct":false}]},{"q":"<p>Mike has recently started working on a Java application. He came across the topic of access specifiers and wanted to know more about it. He made the following list given below based on his studies. Which of the following are true?</p>\n\n<ol>\n\t<li>Access specifiers are keywords in object-oriented languages that set the accessibility of&nbsp;classes, methods, and other members.</li>\n\t<li>Access modifiers are a specific part of a programming language syntax that is used to facilitate the encapsulation of components.</li>\n\t<li>The public access specifier gives access to the member function from outside the class.&nbsp;</li>\n</ol>","a":[{"id":655812,"option":"Only 2 is true","correct":false},{"id":655813,"option":"Both 2 and 3 are true","correct":false},{"id":655814,"option":"Both 1 and 3 are true","correct":false},{"id":655815,"option":"All of these","correct":true}]},{"q":"<p>Which of the given options should be the most appropriate access modifier for the variable \"a\" in the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class A\n{\nint a = 25;\nprivate int b=26;\nprotected int c=9;\nboolean m1() \n{\n    .....\n}\n.....\n}\n</code></pre>","a":[{"id":654896,"option":"Private","correct":false},{"id":654897,"option":"Protected","correct":false},{"id":654898,"option":"Default","correct":true},{"id":654899,"option":"Public","correct":false}]},{"q":"<p>Ben has recently started working on a Java application. He came across the topic of access specifiers and wanted to know more about it. He made the following list given below. Which of the following are true?</p>\n\n<ol>\n\t<li><strong>Public:</strong>&nbsp; &nbsp; &nbsp; &nbsp;Visible to all classes</li>\n\t<li><strong>Private:</strong>&nbsp; &nbsp; &nbsp; Visible to classes within the package</li>\n\t<li><strong>Default:</strong>&nbsp; &nbsp; &nbsp; Visible to classes within the package and subclasses of other packages</li>\n</ol>","a":[{"id":654804,"option":"1","correct":true},{"id":654805,"option":"1 and 3","correct":false},{"id":654806,"option":"All of these","correct":false},{"id":654807,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Temp{\n\tprivate static  int x=10;\n\tprivate static  int y=10;\n\nprivate Temp(){\n    this(5);\n}\n\nprivate Temp(int x){\nthis(x, y);\n}\n\nprivate Temp(int x, int y){\n     System.out.println(x * y);\n}\n\npublic final static void main(String args[]){\n     Temp t=new Temp();\n   }\n}</code></pre>","a":[{"id":654800,"option":"100","correct":false},{"id":654801,"option":"No output","correct":false},{"id":654802,"option":"50","correct":true},{"id":654803,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Temp{\n\tprivate int x=10;\n\tprotected int y=10;\n\nprotected Temp(){\n     this(5);\n}\n\nprivate Temp(int x){\n     this(x, 15);\n}\n\nprotected Temp(int x, int y){\n     System.out.println(x * y);\n}\n\npublic static void main(String aa[]){\n     new Temp();\n   }\n}</code></pre>","a":[{"id":654796,"option":"100","correct":false},{"id":654797,"option":"Compilation error","correct":false},{"id":654798,"option":"75","correct":true},{"id":654799,"option":"Run-time error","correct":false}]},{"q":"<p>Mike has started building his first application in Java. He started studying class variables and wanted to learn more about them. Which of the following keywords given below is used to declare the aforementioned topic he is studying?</p>","a":[{"id":677511,"option":"static","correct":true},{"id":677512,"option":"final","correct":false},{"id":677513,"option":"abstract","correct":false},{"id":677514,"option":"None of these","correct":false}]},{"q":"<p>Bob is tasked with building an application in Java. While building the application, Bob came across the topic of servlets and started learning more about it. He wanted to know about the logical data models for databases that are included in the topic he is learning. Which of the following options given below represents the answer to the aforementioned query?</p>\n\n<ol>\n\t<li>Hierarchical database model</li>\n\t<li>Network model</li>\n\t<li>Relational model</li>\n\t<li>Document model</li>\n</ol>","a":[{"id":638423,"option":"1 and 2","correct":false},{"id":638424,"option":"1 and 3","correct":false},{"id":638425,"option":"1, 2, and 3","correct":false},{"id":638426,"option":"All of these","correct":true}]},{"q":"<p>Ben has recently started working with Java. While building an application, he came across the concept of deployment descriptors. Which of the given options is actually a part of the concept studied by Ben and is used in servlets?</p>","a":[{"id":631210,"option":"web.json","correct":false},{"id":631211,"option":"web.xml","correct":true},{"id":631212,"option":"web.js","correct":false},{"id":631213,"option":"web.html","correct":false}]},{"q":"<p>What is the output of the following Java 8 code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.util.function.Function;\nimport java.util.stream.Collectors;\n\npublic class HackerEarth\n{\n   public static void main(String args[])\n   {\n       List&lt;String&gt; Languages = Arrays.asList(\"Python\",\"Java\",\"python\");\n       Map&lt;String, Integer&gt; LanguagesLength = \n       Languages.stream().collect(Collectors.toMap(Function.identity(), String::length));\n       System.out.println(\"list: \" + Languages);\n   }\n}</code></pre>","a":[{"id":552944,"option":"[Python, Java, python]","correct":true},{"id":552945,"option":"[Python, Java]","correct":false},{"id":552946,"option":"[Java,python]","correct":false},{"id":552947,"option":"Returns exception in thread \"main\" java.lang.IllegalStateException: Duplicate key Python","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.List;\nimport java.util.ArrayList;\n \npublic class ListMut {\n\n   public void Display()\n   {\n      List&lt;String&gt; list = new ArrayList&lt;String&gt;();\n      list.add(\"Alice\");\n      list.add(\"Smith\");\n      list.add(\"Jones\");\n \n      for (String str : list) \n      {\n         str += \"50\";  \n      }\n      System.out.println(list);  \n   }\n\n   public static void main(String[] args) \n   {\n      ListMut obj = new ListMut();\n      obj.Display();\n   }\n      \n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[Alice, Smith, Jones]</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[Alice50, Smith50,  Jones50]</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Compilation Error</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>No output</code></pre>\n\t</li>\n</ol>","a":[{"id":577567,"option":"1","correct":true},{"id":577568,"option":"2","correct":false},{"id":577569,"option":"3","correct":false},{"id":577570,"option":"4","correct":false}]},{"q":"<p>Ben is tasked with building an application in Java. He was studying abstract methods and wanted to know more about iterable interfaces. Which of the abstract methods from the following options is declared by the Iterable&lt;E&gt; interface to retrieve the object iterator&lt;E&gt; which is associated with all the collections?</p>","a":[{"id":576825,"option":"iterator()","correct":true},{"id":576826,"option":"Listiterator()","correct":false},{"id":576827,"option":"Enumeration()","correct":false},{"id":576828,"option":"None of these","correct":false}]},{"q":"<p>Which of the following options represents a valid functional interface?</p>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>public interface Hackerearth\n{\n  int getInput(int a, int b);\n}\n</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>public interface Hiring extends Hackerearth\n{\n  int getInput(double a, double b);\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>public interface Competitors\n{\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>interface Hackerearth\n{\n  int getInput(int num1, int num2);\n  default int getValue()\n  {\n    return 0;\n  }\n}</code></pre>\n\t</li>\n</ol>","a":[{"id":552700,"option":"1 and 4","correct":true},{"id":552701,"option":"1 and 2","correct":false},{"id":552702,"option":"All of these","correct":false},{"id":552703,"option":"None of these ","correct":false}]},{"q":"<p>What is the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\n\nclass HackerEarth\n{\npublic static void main(String args[]) \n{\n\tLinkedList&lt;Integer&gt; list = new LinkedList&lt;Integer&gt;();\n\t\tlist.add(-8);\n\t\tlist.add(10);\n\t\tlist.add(-20);\n\t\tlist.add(null);\n\tComparator&lt;Integer&gt; r = Collections.reverseOrder();\n\tCollections.sort(list, r);\n\tfor(int i : list)\n\tSystem.out.print(i+ \" \");\n\tSystem.out.println();\n}\n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>-20 -8 10</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>10 -8 -20</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Compilation error</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Runtime error </code></pre>\n\t</li>\n</ol>","a":[{"id":574814,"option":"1","correct":false},{"id":574815,"option":"2","correct":false},{"id":574816,"option":"3","correct":false},{"id":574817,"option":"4","correct":true}]},{"q":"<p>What will be the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.Collections;\nimport java.util.LinkedList;\n\npublic class Replace {\n\n\tpublic static void main(String a[]){\n\t\t\n\t\tLinkedList&lt;String&gt; list = new LinkedList&lt;String&gt;();\n\t\tlist.add(\"Java\");\n\t\tlist.add(\"is\");\n\t\tlist.add(\"multithreaded\");\n\t\tlist.add(\"and\");\n\t\tlist.add(\"Platform\");\n\t\tlist.add(\"Independent\");\n\t\t\n\t\tCollections.swap(list, 2, 6);\n\t\tfor(String str: list){\n\t\t\tSystem.out.print(\" \"+str);\n\t\t}\n\t}\n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Java independent multithreaded and platform is </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Java is and Platform Independent</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Java is null and Platform Independent</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Runtime Error - IndexOutOfBoundsException</code></pre>\n\t</li>\n</ol>","a":[{"id":574868,"option":"1","correct":false},{"id":574869,"option":"2","correct":false},{"id":574870,"option":"3","correct":false},{"id":574871,"option":"4","correct":true}]},{"q":"<p>What will be the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.util.Map.Entry;\n\npublic class OrderValue{\n \n    public static void main(String a[]){\n        Map&lt;String, Integer&gt; names = new HashMap&lt;String, Integer&gt;();\n        names.put(\"Anne\", 10);\n        names.put(\"John\", 35);\n        names.put(\"Bob\", 2);\n        Set&lt;Entry&lt;String, Integer&gt;&gt; set = names.entrySet();\n        List&lt;Entry&lt;String, Integer&gt;&gt; list = new ArrayList&lt;Entry&lt;String, Integer&gt;&gt;(set);\n        Collections.sort( list, new Comparator&lt;Map.Entry&lt;String, Integer&gt;&gt;()\n        {\n          public int compare( Map.Entry&lt;String, Integer&gt; order1, Map.Entry&lt;String, Integer&gt; order2)\n            {\n                return (order2.getValue()).compareTo( order1.getValue() );\n            }\n        });\n        for(Map.Entry&lt;String, Integer&gt; entry:list){\n            System.out.print(\" \"+entry.getKey());\n        }\n    }\n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Anne John Bob</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>John Anne Bob</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>35 10 2</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>10 35 2</code></pre>\n\t</li>\n</ol>","a":[{"id":574872,"option":"1","correct":false},{"id":574873,"option":"2","correct":true},{"id":574874,"option":"3","correct":false},{"id":574875,"option":"4","correct":false}]},{"q":"<p>Ben is tasked with building an application using Java. He was reading up on collections in Java and came across different newly introduced methods in them. Which of the following from the given options are a part of the newly added methods in the collections class in Java?</p>\n\n<ol>\n\t<li>removeIf()</li>\n\t<li>hashNode()</li>\n\t<li>retainAll()</li>\n\t<li>spliterator()</li>\n</ol>","a":[{"id":574862,"option":"1, 3, and 4","correct":true},{"id":574863,"option":"1 and 2","correct":false},{"id":583872,"option":"2, 3, and 4","correct":false},{"id":583873,"option":"1 and 4","correct":false}]},{"q":"<p>Anita is tasked to build an application in Java. She was studying collections in java and wanted to know about different methods which are required to empty a collection in Java. Which of the methods from the following options is used for the aforementioned task?</p>","a":[{"id":574067,"option":"clear()","correct":true},{"id":574068,"option":"empty()","correct":false},{"id":574069,"option":"remove()","correct":false},{"id":574070,"option":"removeAll()","correct":false}]},{"q":"<p>John is asked to build an application in Java. He was using the Map instance for grouping the objects and storing the output. Which of the following functions will be used by John to complete the aforementioned task?</p>","a":[{"id":573587,"option":"Collectors.groupingBy()","correct":true},{"id":573588,"option":"Collectors.groupBy()","correct":false},{"id":573589,"option":"Collectors.partitioningBy()","correct":false},{"id":573590,"option":"Collectors.partitionBy()","correct":false}]},{"q":"<p>Ben has started learning Java. He wants to know which of the following options is the&nbsp;root interface of the collections framework. Which of the following options do you think is suitable for the aforementioned case?</p>","a":[{"id":559621,"option":"java.util.Collection","correct":false},{"id":559622,"option":"java.util.Collections","correct":true},{"id":559623,"option":"java.lang.Collection ","correct":false},{"id":559624,"option":"java.lang.Collections ","correct":false}]},{"q":"<p>Mike has written the following code Java 8 -<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.lang.annotation.*;\n\n public class HackerEarth\n{\n\n @Target({ElementType.TYPE_PARAMETER, ElementType.TYPE_USE})\n @interface MyAnnotation { }\n\n @Retention(RetentionPolicy.RUNTIME)\n @interface Hints \n {\n  Hint[] value();\n }\n\n @Repeatable(Hints.class)\n @Retention(RetentionPolicy.RUNTIME)\n @interface Hint\n {\n  String value();\n }\n\n @Hint(\"hint1\")\n @Hint(\"hint2\")\n\n class Person { }\n\n public static void main(String[] args) \n  {\n  Hint hint = Person.class.getAnnotation(Hint.class);\n  System.out.println(hint);\n  Hints hints1 = Person.class.getAnnotation(Hints.class);\n  System.out.println(hints1.value().length);\n  Hint[] hints2 = Person.class.getAnnotationsByType(Hint.class);\n  System.out.println(hints2.length);\n  }\n}</code></pre>\n\n<p>What is going to be the output of the aforementioned code snippet?<br>\n<strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>2\n2\nnull</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>2\nnull\n2</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>null\n2\n2</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Compilation error</code></pre>\n\t</li>\n</ol>","a":[{"id":552964,"option":"1","correct":false},{"id":552965,"option":"2","correct":false},{"id":552966,"option":"3","correct":true},{"id":552967,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>interface IntNumber \n{\n    void ins(int item); \n    int delt();\n}\n\nclass HackerEarth implements IntNumber \n{\n    private int stck[];\n    private int pos;\n\nHackerEarth(int size)\n{\n    stck = new int[size];\n    pos = -1;\n}\n\npublic void ins(int item) \n{\n    if(pos==stck.length-1)  \n        System.out.println(\"Overflow\");\n    else\n        stck[++pos] = item;\n}\n\npublic int delt() \n{\n    if(pos &lt; 0)\n    {\n        System.out.println(\"Underflow\");\n        return 0;\n    }\n    else\n    return stck[pos--];\n}\n}\n\nclass Hacker \n{\npublic static void main(String args[]) \n{\n    HackerEarth obj = new HackerEarth(3);\n    for(int i=0; i&lt;4; i++) obj.ins(i);\n    for(int i=0; i&lt;=3; i++)\n    System.out.println(obj.delt());\n}\n}   \n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Overflow\n2\n1\n0\nUnderflow\n0</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>2\n1\n0\n0</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Overflow\n2\n1\n0\n0</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>2\n1\n0\nUnderflow\n0</code></pre>\n\t</li>\n</ol>","a":[{"id":691086,"option":"1","correct":true},{"id":691087,"option":"2","correct":false},{"id":691088,"option":"3","correct":false},{"id":691089,"option":"4","correct":false}]},{"q":"<p>Which of the following keywords is used to inherit one interface from another interface in Java?</p>","a":[{"id":675882,"option":"extends","correct":true},{"id":675883,"option":"implements","correct":false},{"id":675884,"option":"extend","correct":false},{"id":675885,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Hackerearth\n{  \n    int hack_method(int h1, int h2)\n    {\n        return h1 + h2;\n    }\n    int hack_method(int h1, int h2, int h3)\n    {\n        return h1 + h2 + h3;\n    }\n    void hack_opr()\n    {\n        System.out.println(hack_method(10, 10));\n    }\n    public static void main(String []args)\n    {   \n        new Hackerearth().hack_opr();\n        \n    }  \n}  \n</code></pre>\n\n<p> </p>","a":[{"id":662980,"option":"The code gives a compilation error","correct":false},{"id":662981,"option":"30","correct":false},{"id":662982,"option":"20","correct":true},{"id":662983,"option":"The code gives a runtime error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\nclass HackerEarth \n{\n    int setValue() \n    {\n        int a = 10;\n        int b = 20;\n    try \n    {\n        ++a;\n        b++;\n    } \n\n    catch(java.io.FileNotFoundException e)\n    {\n        System.out.println(\"Error\");\n    }\n\n    finally \n    {\n        a++;\n        b--;\n    }\n    return a+b;\n\n}\n\npublic static void main(String args[]) \n{\n    System.out.println(new HackerEarth().setValue());\n}\n}\n</code></pre>\n\n<p> </p>","a":[{"id":694373,"option":"32","correct":false},{"id":694374,"option":"33","correct":false},{"id":694375,"option":"Compile-time Error","correct":true},{"id":694376,"option":"Run-time Error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n{    \n    public void m1(double num)\n    {    \n        System.out.println(\"Inside HackerEarth Class \" + num);    \n    }\n}\n\nclass Hacker extends HackerEarth\n{\n    public void m1(int num)\n    {    \n        System.out.println(\"Inside Hacker Class \" + num);\n    }\n}\n\npublic class HackerEarthMain\n{\n    public static void main(String[] args)\n    {\n        HackerEarth obj = new Hacker();\n        obj.m1(10);    \n    }\n\n}</code></pre>\n\n<p> </p>","a":[{"id":673343,"option":"Inside HackerEarth Class 10.0","correct":true},{"id":673344,"option":"Inside Hacker Class 10","correct":false},{"id":673345,"option":"Compile-time Error","correct":false},{"id":673346,"option":"Run-time Error","correct":false}]},{"q":"<p>Which of these statements about the following Java code are valid:</p>\n\n<ol>\n\t<li>finalize() is guaranteed to be called.</li>\n\t<li>finalize() might or might not be called.</li>\n\t<li>Garbage collection might or might not run.</li>\n\t<li>Garbage collection is guaranteed to run.</li>\n</ol>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth \n{\n\tprotected void finalize() \n\t{\n\t\tSystem.out.println(\"Coding!\");\n\t}\n\npublic static void main(String[] args)\n{\n\tHackerEarth hacker = new HackerEarth();\n\thacker = null;\n\tSystem.gc();\n} \n}</code></pre>\n\n<p> </p>","a":[{"id":677523,"option":"1 and 3","correct":false},{"id":677524,"option":"2 and 3","correct":true},{"id":677525,"option":"1 and 4","correct":false},{"id":677526,"option":"2 and 4","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\n\nclass HackerEarth\n\n{\n        public void print()\n\n        {\n            System.out.println(\"Inside HackerEarth\");\n        }\n\n}\n\nclass Hacker extends HackerEarth\n\n{\n\n    public void print()\n\n    {\n        System.out.println(\"Inside Hacker\");\n    }\n\n}\n\npublic class HackerEarthMain\n\n{\n\n    public static void main(String[] args)\n\n    {\n\n        HackerEarth obj1 = new HackerEarth();\n        Hacker obj2 = new Hacker();\n    \n        ((HackerEarth)obj2).print();\n        \n        obj1 = obj2;\n\n        obj1.print();\n    \n    }\n\n}\n\n</code></pre>\n\n<p> </p>","a":[{"id":671822,"option":"Inside HackerEarth\r\nInside Hacker","correct":false},{"id":671823,"option":"Inside Hacker\r\nInside HackerEarth","correct":false},{"id":671824,"option":"Inside HackerEarth\r\nInside HackerEarth","correct":false},{"id":671825,"option":"Inside Hacker\r\nInside Hacker","correct":true}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>interface IntNumber \n{\n    void ins(int item); \n    int delt();\n}\n\nclass HackerEarth implements IntNumber \n{\n    private int stck[];\n    private int pos;\n\nHackerEarth(int size)\n{\n    stck = new int[size];\n    pos = -1;\n}\n\npublic void ins(int item) \n{\n    if(pos==stck.length)  \n        System.out.println(\"Overflow.\");\n    else\n        stck[++pos] = item;\n}\n\npublic int delt() \n{\n    if(pos &lt;= 0)\n    {\n        System.out.println(\"Underflow.\");\n        return 0;\n    }\n    else\n    return stck[pos--];\n}\n}\n\nclass Hacker \n{\n\npublic static void main(String args[]) \n{\n    HackerEarth obj = new HackerEarth(3);\n    for(int i=0; i&lt;4; i++) obj.ins(i);\n    for(int i=0; i&lt;=3; i++)\n    System.out.println(obj.delt());\n}\n\n}   \n</code></pre>\n\n<p> </p>","a":[{"id":691090,"option":"Overflow\r\n2\r\n1\r\n0\r\n\r\n","correct":false},{"id":691091,"option":"Overflow\r\n2\r\n1\r\n0\r\nUnderflow\r\n0","correct":false},{"id":691092,"option":"Compile Time Error","correct":false},{"id":691093,"option":"An Exception is generated at run-time","correct":true}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n\n{\n\n       protected int var1 = 200;\n       private String var2 = \"Scala\";   \n\n}\n\nclass Hacker extends HackerEarth\n\n{\n\n    public int var1 = 500;\n    public String var2 = \"Python\";\n\n    public void display()\n\n    {\n\n        System.out.println(\"\"+var1);\n        System.out.println(\"\"+super.var2);\n\n    }\n\n}\n\npublic class HackerEarthMain\n\n{\n\n    public static void main(String[] args)\n\n    {\n\n       Hacker obj = new Hacker();\n    \n       obj.display();\n    \n    }\n\n}</code></pre>\n\n<p> </p>","a":[{"id":671858,"option":"500\r\nPython","correct":false},{"id":671859,"option":"200\r\nScala","correct":false},{"id":671860,"option":"500\r\nScala","correct":false},{"id":671861,"option":"Compilation error","correct":true}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n\n{\n        public String str = \"Java\";\n        public static void print()\n        {\n            System.out.println(\"Inside HackerEarth\");\n        }\n\n}\n\nclass Hacker extends HackerEarth\n\n{\n    public String str = \"Scala\";\n    public static void print()\n    {\n        System.out.println(\"Inside Hacker\");\n    }\n}\n\npublic class HackerEarthMain\n\n{\n    public static void main(String[] args)\n\n    {\n        HackerEarth obj1 = new HackerEarth();\n        Hacker obj2 = new Hacker();\n    \n        System.out.println(((HackerEarth)obj2).str);\n        ((HackerEarth)obj2).print();    \n    }\n\n}\n\n</code></pre>\n\n<p> </p>","a":[{"id":671818,"option":"Java\r\nInside Hacker","correct":false},{"id":671819,"option":"Scala\r\nInside HackerEarth","correct":false},{"id":671820,"option":"Java\r\nInside HackerEarth","correct":true},{"id":671821,"option":"Scala\r\nInside Hacker","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth \n{\n\n\tpublic static void main(String[] args)\n\t{\n\n\tint[] values = new int[3];\n\tvalues[0] = 10;\n\tvalues[1] = new Integer(5);\n\tvalues[2] = 15;\n\n\tfor(int i=1; i&lt;values.length; i++) \n\t{\n\t\tSystem.out.println(values[i]-values[i-1]);\n\t}\n\n\t} \n\t\n}</code></pre>\n\n<p> </p>","a":[{"id":677531,"option":"-510","correct":false},{"id":677532,"option":"-5\r\n10","correct":true},{"id":677533,"option":"10\r\n-5","correct":false},{"id":677534,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth\n\n{\n\n    public static void main(String[] args) \n\n     {\n\n        Integer var1 = Integer.valueOf(34);\n        Integer var2 = Integer.valueOf(34);\n        System.out.println(\"\" + (var1 == var2));\n        System.out.println(\"\" + var1.equals(var2));\n\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":670205,"option":"true\r\ntrue","correct":true},{"id":670206,"option":"true\r\nfalse","correct":false},{"id":670207,"option":"false\r\ntrue","correct":false},{"id":670208,"option":"false\r\nfalse","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth \n\n{\n\tprivate static String str1 = \"Java\";\n\tprivate String str2 = \"Scala\";\n\t\n\tpublic static void Java() \n\t{\n\t\tSystem.out.println(str1);\n\t}\n\t\n\tpublic static void Scala() \n\t\n\t{\n\t\t System.out.println(str2);\n}\n\n\tpublic static void main(String args[])\n\n\t{\n\t    Java();\n\t    Scala();\n\t}\n}\n\t</code></pre>\n\n<p> </p>","a":[{"id":678380,"option":"Java\r\nScala","correct":false},{"id":678381,"option":"Java","correct":false},{"id":678382,"option":"Compile time Error","correct":true},{"id":678383,"option":"Run-time Error","correct":false}]},{"q":"<p>In Java, you are working on Multithreading. If you have executed the code given below that contains two threads <strong>h1</strong> and <strong>h2,</strong> then which of the following statements is correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class hack_thread extends Thread\n{  \n    public void run()\n    {  \n        for(int h=1;h&lt;=3;h++)\n        {  \n            try\n            {  \n                Thread.sleep(10);  \n                \n            }\n            catch(Exception hackerearth)\n            {\n                System.out.println(\"hello\");\n                \n            }  \n            System.out.print(h+\" \");  \n            \n        }  \n        \n    }  \n    public static void main(String args[])\n    {  \n        hack_thread h1=new hack_thread();  \n        hack_thread h2=new hack_thread();  \n        h1.start();  \n        try\n        {  \n            h1.join();  \n            \n        }\n        catch(Exception hackerearth)\n        {\n            System.out.println(\"hi\");\n            \n        }  \n        h2.start();  \n        \n    }  \n} </code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>Thread h1 and thread h2 execute simultaneously<br>\n\t </li>\n\t<li>The code gives the output-\n\t<pre class=\"prettyprint\"><code>1 1 2 2 3 3</code></pre>\n\t<br>\n\t </li>\n\t<li>Thread h2 starts executing after h1 has completed its task.<br>\n\t </li>\n\t<li>The code gives the output-\n\t<pre class=\"prettyprint\"><code>1 2 3 1 2 3</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":666735,"option":"3 and 4","correct":true},{"id":666736,"option":"1 and 2","correct":false},{"id":666737,"option":"only 3","correct":false},{"id":666738,"option":"only 1","correct":false}]},{"q":"<p>What will be the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Hackerearth \n{  \n    public static void main(String[] args) \n    {  \n        try\n        {    \n            Integer hack[]= new Integer[1];\n            hack[0]=null;\n            System.out.println(hack.length);  \n        }    \n        \n        catch(NullPointerException h1)  \n        {  \n            System.out.println(\"hello\");  \n            \n        }    \n        catch(Exception h2)  \n        {  \n            System.out.println(\"hi\");  \n        }             \n        System.out.println(\"hackerearth\");    \n    }  \n} </code></pre>\n\n<p><br>\n<br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhackerearth</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\nhackerearth</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi\nhackerearth</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":662102,"option":"3","correct":false},{"id":662103,"option":"1","correct":false},{"id":662104,"option":"2","correct":true},{"id":662105,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\npublic class HackerEarth \n{\n    void func()\n    {\n        try \n        {\n            String str = null;\n            System.out.println(\"1\");\n            try\n            {\n                System.out.println(str.length());\n            }\n            catch (NullPointerException e) \n            {\n                System.out.println(\"inner\");\n            }\n            System.out.println(\"2\");\n        }\n        catch (NullPointerException e) \n        {\n            System.out.println(\"outer\");\n        }\n    }\n    public static void main(String args[]) \n    {\n        HackerEarth obj = new HackerEarth();\n        obj.func();\n    }\n}</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>1\ninner\n2</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>1\ninner\n2\nouter</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>1\nouter</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>1\ninner</code></pre>\n\n<p> </p>","a":[{"id":693723,"option":"1","correct":true},{"id":693724,"option":"2","correct":false},{"id":693725,"option":"3","correct":false},{"id":693726,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class Main\n{\n    static void Java() \n    {\n        try \n        {\n            System.out.println(\"inside Java\");\n            throw new RuntimeException(\"demo\");\n        }\n        finally \n        {\n            System.out.println(\"Java's finally\");\n        }\n    }\n    static void Python() \n    {\n        try\n        {\n            System.out.println(\"inside Python\");\n            return;\n        }\n        finally \n        {\n            System.out.println(\"Python's finally\");\n        }\n    }\n\n    public static void main(String args[]) \n    {\n        try\n        {\n            Java();\n        }\n        catch (Exception e) \n        {\n            System.out.println(\"Exception caught\");\n        }\n    Python();\n    }\n}</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>inside Java\nJava's finally\ninside Python\nPython's finally\nException caught</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>inside Java\nJava's finally\nException caught\ninside Python\nPython's finally</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>inside Java\nJava's finally\ninside Python\nPython's finally</code></pre>","a":[{"id":691108,"option":"1","correct":false},{"id":691109,"option":"2","correct":true},{"id":691110,"option":"3","correct":false},{"id":691111,"option":"Run-time error","correct":false}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass Deer\n{\n    public void play() \n    {\n         System.out.println(\" Deer is beautiful\");\n    }\n}  \nclass Program\n{  \n    public static void main(String args[])\n    {\n       Deer d=new Deer(); \n       d.play(); \n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":652603,"option":"Deer is beautiful","correct":true},{"id":652604,"option":"Compilation error","correct":false},{"id":652605,"option":"Runtime error","correct":false},{"id":652606,"option":"None of these","correct":false}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass A{  \nprotected void msg()\n{\n    System.out.println(\"Hello\");\n}  \n}  \n\nclass Program extends A\n{  \n    public static void main(String args[])\n    {\n   Program obj = new Program();  \n   obj.msg(); \n    }\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":653023,"option":"Compilation error","correct":false},{"id":653024,"option":"Run-time error","correct":false},{"id":653025,"option":"Hello","correct":true},{"id":653026,"option":"No output","correct":false}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class Examp8 \n{\n\t protected int a=10;\n\t public int b=9;\n\t int c=100;\n\t protected Examp8(int a, int b)\n\t {\n\t\t this.a=a;\n\t\t this.b=b;\n\t\t c=99; \n     }\n\t protected void add()\n\t {\n\t\t System.out.println(a+b+c);\n\t }\n}\nclass Program extends Examp8\n{  \n\tpublic Examp8con(int a,int b)\n    {\n\t\tsuper(a,b);\n\t}\n    public static void main(String args[])\n    {\n        Program e=new Program(15,10);\n\t\te.c=110;\n        e.add();\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":654172,"option":"135","correct":false},{"id":654173,"option":"124","correct":false},{"id":654174,"option":"129","correct":false},{"id":654175,"option":"Compilation error","correct":true}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass MyOuterClass \n{\n\t   protected int x= 1;\n\t   private String st=\"Number\"; \n\t   private void innerInstance()\n\t   {\n\t       MyInnerClass inner = new MyInnerClass();\n\t       inner. seeOuter();\n\t   }\n\t   public static void main(String args[])\n       {\n\t       MyOuterClass obj = new MyOuterClass();\n\t       obj.innerInstance();\n\t   }\n\t   \n\t  private class MyInnerClass \n      {\n\t       private void seeOuter () \n           {\n\t    \t   protected int x=2;\n\t          System.out.println(st+\" \"+x); \n\t       }\n\t   } \n}</code></pre>\n\n<p> </p>","a":[{"id":654461,"option":"Compilation error","correct":true},{"id":654462,"option":"Number  1","correct":false},{"id":654463,"option":"Number  2","correct":false},{"id":654464,"option":"No output","correct":false}]},{"q":"<p>The CosmosClient initialization is used to provide the client-side logical representation for an Azure cosmos database service. If the following Java code is used to configure and execute requests against the service, then which of these Java commands is used to create a CosmosDatabase method:<br>\n    </p>\n\n<pre class=\"prettyprint\"><code>    client = new CosmosClientBuilder()\n                    .setEndpoint(AccountSettings.HOST)\n                    .setKey(AccountSettings.MASTER_KEY)\n                    .setConnectionPolicy(defaultPolicy)\n                    .setConsistencyLevel(ConsistencyLevel.EVENTUAL)\n                    .buildClient();\n    </code></pre>","a":[{"id":1152741,"option":"database = client.create.CosmosDatabaseIfNotExists(databaseName).getDatabase();","correct":false},{"id":1152742,"option":"database = client.createDatabaseIfNotExists(databaseName).getDatabase(); ","correct":true},{"id":1152743,"option":"database = client.createDatabaseIfNotExits(databaseName).setDatabase();","correct":false},{"id":1152744,"option":"database = client.create.CosmosDatabaseIfNotExists(databaseName).setDatabase();","correct":false}]},{"q":"<p>In Java 8, which of the following interface is implemented by the <strong>DateTimeException</strong> class?</p>","a":[{"id":552676,"option":"Comparable","correct":false},{"id":552677,"option":"Serializable","correct":true},{"id":552678,"option":"Chronology","correct":false},{"id":552679,"option":"TemporalAmount","correct":false}]},{"q":"<p>Which of the following design patterns are used in the Spring framework:</p>\n\n<ol>\n\t<li>Singleton Pattern</li>\n\t<li>Proxy Pattern</li>\n\t<li>Adapter Pattern</li>\n\t<li>Model View Controller</li>\n</ol>","a":[{"id":729448,"option":"1 and 3","correct":false},{"id":729449,"option":"1, 2, and 3","correct":false},{"id":729450,"option":"1, 3, and 4","correct":false},{"id":729451,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following Java 8 code:</p>\n\n<pre class=\"prettyprint\"><code>\"hackerearth\".chars().distinct().peek(ch-&gt;System.out.print(ch)).sorted();</code></pre>","a":[{"id":552732,"option":"a,c,e,h,k,r,t","correct":false},{"id":552733,"option":"t,r,k,h,e,c,a","correct":false},{"id":552734,"option":"Compilation error","correct":false},{"id":552735,"option":"No output","correct":true}]},{"q":"<p>In Java 8, which of the following statements is used to define a predicate?</p>","a":[{"id":552724,"option":"Predicate is an anonymous function that accepts one argument and produces a result","correct":true},{"id":552725,"option":"Predicate is an anonymous function that accepts no argument and produces a result","correct":false},{"id":552726,"option":"Predicate is an anonymous function that accepts an argument and produces no result","correct":false},{"id":552727,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Servlet code:</p>\n\n<pre class=\"prettyprint\"><code>@WebServlet(name = \"MyServlet1\", urlPatterns = {\"/MyServlet1\"})\npublic class MyServlet1 extends HttpServlet {\n   \n    String msg = \"\";\n\n    @Override\n    public void init(ServletConfig config) \n    {    \n        msg = \"Hello from Servlets!\";\n    }\n\n    @Override\n    public void doGet(HttpServletRequest request,\n        HttpServletResponse response)\n        throws IOException, ServletException\n    {\n        response.setContentType(\"html\");\n        PrintWriter out = response.getWriter();\n\n        out.println(\"&lt;HTML&gt;\");\n         out.println(msg);\n        out.println(\"&lt;/HTML&gt;\");\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":664950,"option":"Error at init() method","correct":false},{"id":664951,"option":"Error at Get() method","correct":false},{"id":664952,"option":"Output cannot be predicted","correct":false},{"id":664953,"option":"Hello from Servlets!","correct":true}]},{"q":"<p>in Servlets, which of the following statements defines the use of <strong>filters</strong>:</p>\n\n<ol>\n\t<li>Security checks</li>\n\t<li>Data compression</li>\n\t<li>Response compression</li>\n\t<li>Logging and auditing</li>\n</ol>","a":[{"id":664946,"option":"1, 2, and 3","correct":false},{"id":664947,"option":"Only 1","correct":false},{"id":664948,"option":"1 and 3","correct":false},{"id":664949,"option":"All of these","correct":true}]},{"q":"<p>In Servlets, which of the following returns the IP address of a client?</p>","a":[{"id":664942,"option":"request.getRemoteName()","correct":false},{"id":664943,"option":"request.getLocalAddr()","correct":false},{"id":664944,"option":"request.getRemoteAddr()","correct":true},{"id":664945,"option":"request.getRemoteHost()","correct":false}]},{"q":"<p>In Java, which of these lines can cause an error in the following code:</p>\n\n<pre class=\"prettyprint\"><code>package Practi;\n\npublic class Examp8 {\n\t protected int a=10;\n\t public int b=9;\n\t \n\t protected Examp8(int a, int b)  /**Line A**/\n\t {\n\t\t this.a=a;\n\t\t this.b=b;\n\t }\n\t protected void add()   \n\t {\n\t\t System.out.println(a+b);\n\t }\n}\npackage Doprctice;\nimport Practi.Examp8;\npublic class Examp8con extends Examp8 \n{\n\tpublic Examp8con(int a,int b) \n{\n\t\tsuper(a,b);\n\t}\n\t\n\tpublic static void main(String []aa)\n\t{\n\t\tExamp8con e=new Examp8con(15,10);\n\t\te.add();    /**Line B**/\n\t}\n     \n}\n</code></pre>\n\n<p> </p>","a":[{"id":654168,"option":"Line A","correct":false},{"id":654169,"option":"The output is 19.","correct":false},{"id":654170,"option":"Line B","correct":false},{"id":654171,"option":"The output is 25.","correct":true}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>class A{\n    public int x;\n     private int y;\n\n    void cal(int a, int b){\n        x =  a + 1;\n        y =  b;\n    }        \n\n}    \n\nclass Begin {\n    public static void main(String []aa)\n    {\n        A obj = new A();   \n        obj.cal(2, 3);\n        System.out.println(obj.x + \" \" + obj.y);     \n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":652731,"option":"3 3","correct":false},{"id":652732,"option":"2 3","correct":false},{"id":652733,"option":"Compilation error","correct":true},{"id":652734,"option":"Run-time error","correct":false}]},{"q":"<p>In Java, which of the following statements about the <strong>overriding methods </strong>is true:</p>\n\n<ol>\n\t<li>The argument list passed to the overridden method in the base class must be the same as the argument list passed to the overriding method in the subclass.</li>\n\t<li>A derived class can override only non-final methods.</li>\n\t<li>An overridden method defined in the base class can be an abstract method or a non-abstract method.</li>\n\t<li>The name of the overridden method in the base class and the overriding method in the subclass can be different.</li>\n</ol>","a":[{"id":693620,"option":"1, 2, and 4","correct":false},{"id":693621,"option":"1, 2, and 3","correct":true},{"id":693622,"option":"1, 3, and 4","correct":false},{"id":693623,"option":"All of these","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\nclass HackerEarth {\n\n    public static void main(String args[])\n\n    {\n\n        StringBuilder b = \"hacker\";\n        b.append(4).deleteCharAt(3).delete(3, b.length() - 1);\n        System.out.println(b);\n\n    }\n\n}\n</code></pre>\n\n<p> </p>","a":[{"id":691082,"option":"hacker","correct":false},{"id":691083,"option":"hac","correct":false},{"id":691084,"option":"Compile time error","correct":true},{"id":691085,"option":"hac4","correct":false}]},{"q":"<p>Which of the following is also known as native access modifier and universal access modifier in Java?</p>","a":[{"id":656683,"option":"Private and Protected respectively","correct":false},{"id":656684,"option":"Protected and Public respectively","correct":false},{"id":656685,"option":"Private and Public respectively","correct":true},{"id":656686,"option":"Public and Default respectively","correct":false}]},{"q":"<p>Which of these causes an error in the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\tclass A\n\t{  ......\n\tprivate class B\n\t{\n\t   ....\n\t}\n\t}\n\t\n\tpublic class Main extends A\n\t{\n\tpublic static void main(String[] aa)\n\t{\n\t     B b = new B();\n          .....\n\t}\n\t}\n</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":655808,"option":"Class A should be public","correct":false},{"id":655809,"option":"Class B cannot be private","correct":false},{"id":655810,"option":"Class B cannot be instantiated outside the Class A","correct":true},{"id":655811,"option":"No error","correct":false}]},{"q":"<p>Which of the following servlet methods is called for performing cleanup activities such as closing database connections, halting background tasks, etc?</p>","a":[{"id":628891,"option":"public void destroy()","correct":true},{"id":628892,"option":"public void clean()","correct":false},{"id":628893,"option":"public void close()","correct":false},{"id":628894,"option":"public void reset()","correct":false}]},{"q":"<p>Which of the following statements about the <strong>service() </strong>method in servlet are valid:</p>\n\n<ol>\n\t<li>This method is called only once when the servlet is created.</li>\n\t<li>This method is responsible for handling requests coming from the client.</li>\n\t<li>This method invokes doGet(), doPost(), doPut(), etc. depending on the HTTP request type.</li>\n\t<li>This method is not responsible for writing the formatted response back to the client.</li>\n</ol>","a":[{"id":628879,"option":"1, 2, and 4","correct":false},{"id":628880,"option":"1, 3, and 4","correct":false},{"id":628881,"option":"2 and 3","correct":true},{"id":628882,"option":"2 and 4","correct":false}]},{"q":"<p>In Java, which of the following packages are required for creating a <strong>servlet?</strong></p>","a":[{"id":627389,"option":"java.servlet and java.servlet.http","correct":false},{"id":627390,"option":"javax.servlet and javax.servlet.http","correct":true},{"id":627391,"option":"util.servlet and util.servlet.http","correct":false},{"id":627392,"option":"servlet and servlet.http","correct":false}]},{"q":"<p>In Java 8, which of the following statements about the garbage collection process is correct?</p>\n\n<ol>\n\t<li>Unused package in a program automatically gets deleted.</li>\n\t<li>The memory occupied by objects with no reference is automatically reclaimed for deletion.</li>\n\t<li>Java deletes all unused java files on the system.</li>\n\t<li>The JVM cleans output of Java program.</li>\n</ol>\n\n<p> </p>","a":[{"id":612501,"option":"2","correct":true},{"id":612502,"option":"1 and 3","correct":false},{"id":612503,"option":"1 and 4","correct":false},{"id":612504,"option":"2 and 4","correct":false}]},{"q":"<p>In Java, which of the following is used by a linked list?</p>","a":[{"id":583864,"option":"Variables","correct":false},{"id":583865,"option":"Objects","correct":false},{"id":583866,"option":"Nodes","correct":true},{"id":583867,"option":"Structures","correct":false}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>import java.util.HashMap;\nimport java.util.Set;\n \nclass charCount\n{\n    static void charNum(String inputString)\n    {\n        HashMap&lt;Character, Integer&gt; charMap = new HashMap&lt;Character, Integer&gt;();\n        char[] strArray = inputString.toCharArray();\n        for (char c : strArray)\n        {\n            if(charMap.containsKey(c))\n            {\n                charMap.put(c, charMap.get(c)+1);\n            }\n            else\n            {\n                charMap.put(c, 1);\n            }\n        }\n        Set&lt;Character&gt; charsInString = charMap.keySet();\n        for (Character ch : charsInString)\n        {\n            if(charMap.get(ch) &gt; 1)\n            {\n               System.out.println(ch +\" : \"+ charMap.get(ch));\n            }\n        }\n    }\n \n    public static void main(String[] args)\n    {\n       charNum(\"JavaJ2Ee\");\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":579354,"option":"a : 2\r\nE : 2\r\nJ : 2","correct":false},{"id":579355,"option":"a : 2\r\nJ : 2","correct":true},{"id":579356,"option":"J : 2 \r\na : 2\r\nE : 1\r\ne : 1\r\nv : 1","correct":false},{"id":579357,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>import java.util.Collections;\nimport java.util.*;\n\npublic class MyString \n{\n\tpublic MyString(String val) \n\t{\n\tthis.val = val;\n\t}\nprivate String val;\n\npublic static void main(String args[]) \n{\n\tMap&lt;String, Integer&gt; map1 = new HashMap&lt;String, Integer&gt;();\n\tString str1 = new String(\"Java OOPs!\");\n\tString str2 = new String(\"Java OOPs\");\n\tmap1.put(str1, new Integer(10));\n\tmap1.put(str2, new Integer(20));\n\tMap&lt;MyString, Integer&gt; map2 = new HashMap&lt;MyString, Integer&gt;();\n\tMyString str3 = new MyString(str1);\n\tMyString str4 = new MyString(str2);\n\tmap2.put(str3, new Integer(10));\n\tmap2.put(str4, new Integer(20));\n\tSystem.out.println(map1.get(str1));\n\tSystem.out.println(map2.get(str3));\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":579269,"option":"10\r\n20","correct":false},{"id":579270,"option":"20\r\n10","correct":false},{"id":579271,"option":"10\r\n10 ","correct":true},{"id":579272,"option":"20\r\n20","correct":false}]},{"q":"<p>In Java 8, what is the component of functional interfaces?</p>","a":[{"id":552652,"option":"Exactly one abstract method","correct":true},{"id":552653,"option":"Multiple abstract methods","correct":false},{"id":552654,"option":"Abstract as well as concrete methods","correct":false},{"id":552655,"option":"None of these","correct":false}]},{"q":"<p>In Java 8, you can pass references of methods using the__________keyword.</p>","a":[{"id":552688,"option":"colon (:)","correct":false},{"id":552689,"option":"arrow (->)","correct":false},{"id":552690,"option":"Double colon (::)","correct":true},{"id":552691,"option":"dot (.)","correct":false}]},{"q":"<p>In Java 8, which of the following operations are related to the <strong>Map</strong> interface?</p>","a":[{"id":552904,"option":"insert() and delete()","correct":false},{"id":552905,"option":"get() and put()","correct":true},{"id":552906,"option":"add() and remove()","correct":false},{"id":552907,"option":"None of these","correct":false}]},{"q":"<p>Which of the following functional interfaces were currently introduced in Java 8:</p>\n\n<ol>\n\t<li>Runnable </li>\n\t<li>List </li>\n\t<li>Callable </li>\n\t<li>Collection</li>\n</ol>","a":[{"id":552660,"option":"1 and 3","correct":true},{"id":552661,"option":"3 and 4","correct":false},{"id":552662,"option":"1, 2, and 4","correct":false},{"id":552663,"option":"2, 3, and 4","correct":false}]},{"q":"<p>In Java, the forEach() method takes the ______________ object as an argument.</p>","a":[{"id":552684,"option":"java.util.function.Consumer","correct":true},{"id":552685,"option":"java.util.Consumer","correct":false},{"id":552686,"option":"java.lang.function.Consumer","correct":false},{"id":552687,"option":"java.lang.Consumer","correct":false}]},{"q":"<p>In Java 8, which of the following methods are used to store and load information from the Properties object to a disk?</p>","a":[{"id":552908,"option":"store() and keep()","correct":false},{"id":552909,"option":"store() and load()","correct":true},{"id":552910,"option":"stored() and loaded()","correct":false},{"id":552911,"option":"keep() and load()","correct":false}]},{"q":"<p>What is the output of the following Java 8 code:</p>\n\n<pre class=\"prettyprint\"><code>interface Climb\n {\n  boolean isTooHigh(int height, int limit);\n }\n\npublic class Climber\n {\n  public static void main(String[] args)\n {\n  check((h, l) -&gt; h.append(l).isEmpty(), 5);\n }\n\nprivate static void check(Climb climb, int height)\n {\n  if (climb.isTooHigh(height, 10))\n  System.out.println(\"too high\");\n  else\n  System.out.println(\"OK\");\n }\n}</code></pre>\n\n<p> </p>","a":[{"id":552932,"option":"too high","correct":false},{"id":552933,"option":"OK","correct":false},{"id":552934,"option":"Runtime error","correct":false},{"id":552935,"option":"Compilation error","correct":true}]},{"q":"<p>Alice is working in a Company. She was assigned with a project that has to be done using Java. Since she has to use Java,she need to know more about it. Now she wants to know about reference types. Help her to understand which among the following statements<strong>&nbsp;</strong>are&nbsp;correct?</p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>They contain the value of the object that they refer to.</li>\n\t<li>A reference can be assigned to another object of the same type.</li>\n\t<li>A reference can be assigned to a new object by using the new keyword.</li>\n\t<li>They throw a compiler error if you attempt to assign them null.</li>\n</ol>","a":[{"id":677475,"option":"1, 2, and 3","correct":false},{"id":677476,"option":"1, 2, and 4","correct":false},{"id":677477,"option":"2 and 3","correct":true},{"id":677478,"option":"2, 3, and 4","correct":false}]},{"q":"<p>Alice is working in a Company. She was assigned with a project that has to be done using Java. Since she has to use Java,she needs to know about this language. But she has no prior knowledge in this language. Now,she wants to know about collection types that are associated with J2EE. Help her to understand which among the following are correct?</p>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>Set type</li>\n\t<li>List type</li>\n\t<li>Array type</li>\n\t<li>Bag type</li>\n</ol>","a":[{"id":665575,"option":"1, 2, and 4","correct":false},{"id":665576,"option":"1, 2, and 3","correct":false},{"id":665577,"option":"All of these","correct":true},{"id":665578,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java 8 code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.util.stream.*;\n\nclass HackerEarth {\n    public static void main(String[] args) {\n        ArrayList &lt; Integer &gt; myList = new ArrayList &lt; &gt; ();\n        myList.add(7);\n        myList.add(4);\n        myList.add(10);\n        myList.add(3);\n        myList.add(17);\n        Stream &lt; Integer &gt; myStream = myList.stream();\n\n        Stream &lt; Integer &gt; myVals = myList.stream().sorted().filter((n) -&gt; (n % 2) == 1);\n        myVals = myList.stream().filter((n) -&gt; (n % 2) == 1)\n            .filter((n) -&gt; n &gt; 5);\n        myVals.forEach((n) -&gt; System.out.print(n + \" \"));\n    }\n}</code></pre>","a":[{"id":552924,"option":"3 7 17","correct":false},{"id":552925,"option":"7 17","correct":true},{"id":552926,"option":"7 10 17","correct":false},{"id":552927,"option":"3 4","correct":false}]},{"q":"<p>Paul has recently started working on a Java application. He came across the topic of access specifiers and wanted to know more about it. He wanted to know about the access specifier which is used to do pure internal functions of a class and will never be shared outside. Which of the following options given below is the answer for the aforementioned query by Paul?</p>","a":[{"id":654900,"option":"Public","correct":false},{"id":654901,"option":"Protected","correct":false},{"id":654902,"option":"Private","correct":true},{"id":654903,"option":"Public","correct":false}]},{"q":"<p>Ben was tasked with building an application in Java. He was studying the concepts of function overriding and wanted to know which codes override all the subclass of the main class. Which of the following codes given below overrides all of the subclasses of the class HackerEarth and provides an implementation of all the methods included in the class?<br>\n<strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>public abstract class HackerEarth {\npublic abstract int hashCode();\npublic abstract boolean equals(Object obj);\npublic abstract String toString();\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>public abstract class HackerEarth {\npublic abstract double hashCode();\npublic abstract int equals(Object obj);\npublic abstract String toString();\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>public class HackerEarth {\npublic int hashCode();\npublic boolean equals(Object obj);\npublic String toString();\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>None of these</code></pre>\n\t</li>\n</ol>","a":[{"id":673339,"option":"1","correct":true},{"id":673340,"option":"2","correct":false},{"id":673341,"option":"3","correct":false},{"id":673342,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth {\n\tvoid printNumber() {\n\t\tSystem.out.println(\"This is Java\");\n\t}\n\t\n\tpublic static void main(String[] args){\t\n\t\tint x = printNumber();\n\t}\n}</code></pre>","a":[{"id":669797,"option":"This is Java ","correct":false},{"id":669798,"option":"Compilation error","correct":true},{"id":669799,"option":"Run-time error","correct":false},{"id":669800,"option":"Garbage value","correct":false}]},{"q":"<p>Which of the given options is the equivalent lambda version of the following Java 8 code snippet?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>Collections.sort(users, new Comparator&lt;Author&gt;()\n{\n  public int compare(Author a1, Author a2)\n  {\n    return a1.compareTo(a2.id);\n  }\n}</code></pre>","a":[{"id":552952,"option":"Collections.sort(authors, (Author a1, Author a2) -> a1.compareTo(a2));\r\n","correct":true},{"id":552953,"option":"Collections.sort(authors, (Author a1, Author a2) => a1.compareTo(a2));\r\n","correct":false},{"id":552954,"option":"Collections.sort { authors, (Author a1, Author a2) -> a1.compareTo(a2) };","correct":false},{"id":552955,"option":"Collections.sort( (Author a1, Author a2) -> a1.compareTo(a2));","correct":false}]},{"q":"<p>What is the output of the following Java 8 code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\n\nclass HackerEarth\n{\n  public static void main(String[] args)\n  {\n    int[] array = {6,9,8};\n    List&lt;Integer&gt; arraylist = new ArrayList&lt;&gt;();\n    arraylist.add(array[0]);\n    arraylist.add(array[2]);\n    arraylist.set(1, array[1]);\n    arraylist.remove(0);\n    System.out.println(arraylist);\n  }\n}</code></pre>","a":[{"id":552876,"option":"8","correct":false},{"id":552877,"option":"[9]","correct":true},{"id":552878,"option":"Compilation error","correct":false},{"id":552879,"option":"[8]","correct":false}]},{"q":"<p>John has recently started coding in Java. He came across the topic 'Map Collection' and wanted to know more about it. He has been given the following options and is asked to find out which is correct. Which of the following options is correct?</p>","a":[{"id":578182,"option":"Duplicate keys or values are allowed","correct":false},{"id":578183,"option":"Duplicate keys are allowed but duplicate values are not allowed","correct":false},{"id":578184,"option":"Duplicate keys are not allowed but duplicate values are allowed","correct":true},{"id":578185,"option":"Duplicate keys or values are not allowed","correct":false}]},{"q":"<p>Bob has recently started coding in Java. He came across the topic 'Double Ended Queue' and wanted to know more about it. He has been given the following options and is asked to find out which is correct. Which of the following options is correct?</p>","a":[{"id":578178,"option":"Elements can be inserted or deleted only at one end.","correct":false},{"id":578179,"option":"Elements can be inserted at both ends, but deleted from one end","correct":false},{"id":578180,"option":"Elements can be deleted from both ends, but insertion only at one end","correct":false},{"id":578181,"option":"Elements can be inserted or deleted at both ends","correct":true}]},{"q":"<p>Tara is working with Java to build an application. She was studying collections class and wanted to know about the function in the collections class which randomizes objects which are thereafter stored in a list. Which of the following functions will help Tara complete the aforementioned task?</p>","a":[{"id":577710,"option":"random()","correct":false},{"id":577711,"option":"shuffle()","correct":true},{"id":577712,"option":"unordered()","correct":false},{"id":577713,"option":"None of these","correct":false}]},{"q":"<p>Mike is tasked with building an application using Java. He was working to different streams in Java and wanted to know more about correct order of iterations during parallel streams in Java. Which of the following functions should be used while calling forEach() function on the aforementioned stream to ensure correct order?</p>","a":[{"id":576833,"option":"forEachOrder()","correct":false},{"id":576834,"option":"forEachOrders()","correct":false},{"id":576835,"option":"forEachOrdered()","correct":true},{"id":576836,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\n\npublic class ListProg {\n\n\tpublic static void main(String args[]) {\n\t\tList&lt;String&gt; myList = new ArrayList&lt;String&gt;();\n\n\t\tmyList.add(\"1\");\n\t\tmyList.add(\"2\");\n\t\tmyList.add(\"3\");\n\t\tmyList.add(\"4\");\n\n\t\tIterator&lt;String&gt; it = myList.iterator();\n\t\twhile (it.hasNext()) {\n\t\t\tString value = it.next();\n\t\t\tSystem.out.println(\" \" + value);\n\t\t\tif (value.equals(\"2\"))\n\t\t\t\tmyList.remove(value);\n\t\t}\n\t}\n}</code></pre>\n\n<p>Options:</p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\n2\n3\n4</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\n3\n4</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\n2 \nRuntime Error-ConcurrentModificationException is generated</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Runtime Error-ConcurrentModificationException is generated</code></pre>\n\t</li>\n</ol>","a":[{"id":576897,"option":"1","correct":false},{"id":576898,"option":"2","correct":false},{"id":576899,"option":"3","correct":true},{"id":576900,"option":"4","correct":false}]},{"q":"<p>Lisa is asked to build an application using Java. She was studying Java and came across Abstract Methods in Java. She made a list of abstract method functions and was not sure which of them are declared by the Iterator&lt;E&gt; interface. Which of the following abstract method functions from the given list created by Lisa are declared by the Iterator&lt;E&gt; interface?</p>\n\n<ol>\n\t<li>hasNext()</li>\n\t<li>next()</li>\n\t<li>remove()</li>\n\t<li>clear()</li>\n</ol>","a":[{"id":576829,"option":"1 and 4","correct":false},{"id":576830,"option":"1, 2, and 3","correct":true},{"id":576831,"option":"2, 3, and 4","correct":false},{"id":576832,"option":"1, 2, and 4","correct":false}]},{"q":"<p>What is the output of the following Java 8 code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth{\n  public static void main(String[] args)\n  {\n    int a = 0;\n    int b = 3;\n    while(++a &lt; 3)\n    {\n    int c = --a + b++;\n    switch(b)\n      {\n        default:\n        case 0: a = ++a + a--;\n        case 1: a += a-- + ++b;\n      }\n    }\n    System.out.println(a);\n  }\n}</code></pre>","a":[{"id":552872,"option":"6","correct":true},{"id":552873,"option":"10","correct":false},{"id":552874,"option":"14","correct":false},{"id":552875,"option":"Runtime Error  ","correct":false}]},{"q":"<p>Lisa is asked to build an application using Java. She was studying Java and came across Java Collections Framework (JFC). She made a list of interfaces in JFC and was not sure which of them cannot contain duplicate elements. Which of the following from the given list created by Lisa cannot contain a duplicate element?</p>\n\n<ol>\n\t<li>Set</li>\n\t<li>List</li>\n\t<li>Map</li>\n\t<li>SortedSet</li>\n</ol>","a":[{"id":575458,"option":"1 and 2","correct":false},{"id":575459,"option":"1, 2, and 3","correct":false},{"id":575460,"option":"1, 3, and 4","correct":true},{"id":575461,"option":"3","correct":false}]},{"q":"<p>What is the output of the following Java 8 code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>public class _Hackerearth\n{\n  private static int $;\n  public static void main(String[] main)\n  {\n    String s;\n    System.out.print($);\n    System.out.print(s);\n  }\n}</code></pre>","a":[{"id":552752,"option":"Compilation Error: Class name cannot start with an underscore (_)","correct":false},{"id":552753,"option":"Compilation Error: Local variables should be initialized before referencing","correct":true},{"id":552754,"option":"Null Null","correct":false},{"id":552755,"option":"NullNull","correct":false}]},{"q":"<p>What is the output of the following Java 8 code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.lang.*;\npublic class Hackerearth\n{\n  final int num = 10;\n  public void display()\n  {\n    int num =15;\n    Runnable r = new Runnable()\n    {\n      final int num = 20;\n      public void run(){\n        int num = 25;\n        System.out.println(this.num);\n      }\n    };\n    r.run();\n  }\n  public static void main(String args[])\n  {\n    Hackerearth sv = new Hackerearth();\n    sv.display();\n  }\n}</code></pre>","a":[{"id":552704,"option":"10","correct":false},{"id":552705,"option":"25","correct":false},{"id":552706,"option":"15","correct":false},{"id":552707,"option":"20","correct":true}]},{"q":"<p>What is the output of the following Java 8 code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Hackerearth\n{\n  public static void main (String[] args) \n  {\n    String Fruits = new String(\"Mango,Banana,Apple\");\n    Fruits = Fruits.replaceAll(\",\", \":\");\n    System.out.println(Fruits);\n  }  \n}</code></pre>","a":[{"id":552696,"option":"Mango : Banana : Apple","correct":false},{"id":552697,"option":"Mango:Banana:Apple","correct":true},{"id":552698,"option":"Runtime Error","correct":false},{"id":552699,"option":"Syntax Error","correct":false}]},{"q":"<p>John has written the following code in Java 7 and he wants to convert it to Java 8, then which of the given option is the correct Java 8 alternative?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>Arrays.sort(testStrings, new Comparator&lt;String&gt;() {\n  @Override\n  public int compare(String s1, String s2) {\n    return(s1.length() - s2.length());\n  }\n});</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Arrays.sort(testStrings, (s1, s2) -&gt; s1.length() - s2.length());</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Array.sort(testStrings, s1, s2 :: s1.length() - s2.length())</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Arrays.sort(((s1, s2),testStrings) -&gt; s1.length() - s2.length());</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Array.sort((s1, s2), testStrings -&gt; s1.size() - s2.size());</code></pre>\n\t</li>\n</ol>","a":[{"id":552672,"option":"1","correct":true},{"id":552673,"option":"2","correct":false},{"id":552674,"option":"3","correct":false},{"id":552675,"option":"4","correct":false}]},{"q":"<p>Ben is tasked with building an application using Java. He was reading up on collections in Java and came across different static variables in them. Which of the following from the given options are a part of the collections class in Java?</p>\n\n<ol>\n\t<li>EMPTY_SET</li>\n\t<li>EMPTY_LIST</li>\n\t<li>EMPTY_MAP</li>\n\t<li>EMPTY_TREE</li>\n</ol>","a":[{"id":574690,"option":"1, 2, and 4","correct":false},{"id":574691,"option":"1 and 2","correct":false},{"id":574692,"option":"1, 2, and 3","correct":true},{"id":574693,"option":"3 and 4","correct":false}]},{"q":"<p>Tara is tasked with building an application using Java. She was studying queue data structure in Java and wanted to know more about the poll() method of queues. Which of the following options is correct about poll() method of the queue data structure in java?<br>\n<br>\n&nbsp;</p>","a":[{"id":574600,"option":"Returns the element at the head of the queue and elements are not removed in the process","correct":false},{"id":574601,"option":"Returns the element at the tail of the queue and elements are not removed in the process","correct":false},{"id":574602,"option":"Returns the element at the head of the queue and elements are removed in the process","correct":true},{"id":574603,"option":"Returns the element at the tail of the queue and elements are removed in the process","correct":false}]},{"q":"<p>Bob is tasked to build an application in Java. He was studying exceptions and wanted to know what type of exception will be thrown if he tried to remove an element from an empty queue. Which of the Errors from the following options will be thrown at Bob for the aforementioned problem?</p>","a":[{"id":574596,"option":"IllegalArgumentException","correct":false},{"id":574597,"option":"NoSuchElementException","correct":true},{"id":574598,"option":"EmptyQueueException","correct":false},{"id":574599,"option":"None of these","correct":false}]},{"q":"<p>Bob is tasked to build an application in Java. He was studying exceptions and wanted to know what type of exception will be thrown if he tried to add an object that is incompatible with another object in a collection. Which of the Errors from the following options will be thrown at Bob for the aforementioned problem?</p>","a":[{"id":574023,"option":"UnsupportedOperationException","correct":false},{"id":574024,"option":"ClassCastException","correct":true},{"id":574025,"option":"NullPointerException","correct":false},{"id":574026,"option":"IllegalStateException","correct":false}]},{"q":"<p>Ben is tasked to build an application in Java. He was studying exceptions and wanted to know what type of exception will be thrown if he tried to modify the contents of an unmodifiable collection. Which of the Errors from the following options will be thrown for the aforementioned problem?</p>","a":[{"id":574015,"option":"ClassCastException","correct":false},{"id":574016,"option":"UnsupportedOperationException","correct":true},{"id":574017,"option":"IllegalArgumentException","correct":false},{"id":574018,"option":"None of these","correct":false}]},{"q":"<p>Anita has started working with Java Language. She was learning the concept of interfaces and collection frameworks. She wanted to know about interfaces that are a part of the collections framework but not the collections interface. Which of the following interfaces in the given options answer her aforementioned question?</p>","a":[{"id":559625,"option":"List","correct":false},{"id":559626,"option":"Map","correct":true},{"id":559627,"option":"Set","correct":false},{"id":559628,"option":"Queue","correct":false}]},{"q":"<p>Which of the following statements about the <strong>default </strong>methods<strong> </strong>in<strong> </strong>Java are true:</p>\n\n<ol>\n\t<li>It provides a default implementation for a method.</li>\n\t<li>It is declared by using the keyword <strong>default.</strong></li>\n\t<li>It can be declared as static or abstract.</li>\n\t<li>A default method does not have access to the instance of variables of a class that is used to implement the interface.</li>\n</ol>","a":[{"id":674508,"option":"1, 2, and 3","correct":false},{"id":674509,"option":"1, 2, and 4","correct":true},{"id":674510,"option":"1 and 2","correct":false},{"id":674511,"option":"2 and 3","correct":false}]},{"q":"<p>In Java, which of the following statements about <strong>method overloading </strong>are valid<strong>:</strong></p>\n\n<ol>\n\t<li>Any method (static or non-static) can be overloaded.</li>\n\t<li>Overloading has nothing to do with Inheritance.</li>\n\t<li>Return types of overloaded methods do not play any roles in overloading.</li>\n\t<li>Overloaded methods must differ in the number of parameters, their types or orders.</li>\n</ol>","a":[{"id":671838,"option":"1, 2, and 3","correct":false},{"id":671839,"option":"1, 3, and 4","correct":false},{"id":671840,"option":"2, 3, and 4","correct":false},{"id":671841,"option":"1, 2, 3, and 4","correct":true}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth\n\n{\n\n    public static void main(String[] args)\n    {\n\n        Integer var1 = new Integer(25);\n        Integer var2 = new Integer(25);\n        System.out.println(\"\" + (var1 == var2));\n        System.out.println(\"\" + var1.equals(var2));\n\n    }\n\n}</code></pre>\n\n<p> </p>","a":[{"id":670201,"option":"true\r\nfalse","correct":false},{"id":670202,"option":"true\r\ntrue","correct":false},{"id":670203,"option":"false\r\nfalse","correct":false},{"id":670204,"option":"false\r\ntrue","correct":true}]},{"q":"<p>In Java, which of the following statements about the <strong>shallow copy </strong>of an array are correct:</p>\n\n<ol>\n\t<li>Elements of both the original and the cloned array refer to the same object in memory.</li>\n\t<li>Elements of the original and the cloned array refer to different objects in memory.</li>\n\t<li>Objects can be modified by using their references that are stored in the original array as well as the cloned array.</li>\n\t<li>The original array can be modified even if a copy of the original array is passed to a method.</li>\n</ol>","a":[{"id":671743,"option":"1, 3, and 4","correct":true},{"id":671744,"option":"2, 3, and 4","correct":false},{"id":671745,"option":"1, 2, and 3","correct":false},{"id":671746,"option":"1, 2, and 4","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\npublic class HackerEarth \n{\n\tpublic static void main(String[] args)\n\t\n\t{\n\t\tHackerEarth h1 = new HackerEarth();\n\t\tHackerEarth h2 = new HackerEarth();\n\t\tHackerEarth h3 = h1;\n\n\t\tSystem.out.println(h1 == h3);\n\t\tSystem.out.println(h1 == h2);\n\t\tSystem.out.println(h1.equals(h2)); \t\n\t}\n}</code></pre>\n\n<p> </p>","a":[{"id":678018,"option":"true\r\nfalse\r\nfalse","correct":true},{"id":678019,"option":"true\r\ntrue\r\nfalse\r\n","correct":false},{"id":678020,"option":"false\r\nfalse\r\nfalse","correct":false},{"id":678021,"option":"false\r\ntrue\r\ntrue","correct":false}]},{"q":"<p>In Java, which of the following is used to get a reference to the static method?</p>","a":[{"id":669789,"option":"SomeClass :: staticMethodName","correct":true},{"id":669790,"option":"SomeClass : staticMethodName","correct":false},{"id":669791,"option":"SomeClass -> staticMethodName","correct":false},{"id":669792,"option":"SomeClass = staticMethodName","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public class HackerEarth \n{\n\tpublic static void main(String[] args)\n\t{\n\t\tSystem.out.println(\"abc\".equals(\"ABC\"));\t\n\n\t}\n\n}</code></pre>\n\n<p> </p>","a":[{"id":678014,"option":"true","correct":false},{"id":678015,"option":"false","correct":true},{"id":678016,"option":"Compilation error","correct":false},{"id":678017,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\npublic class HackerEarth \n\n{\n\tpublic void code(String s)\n\t{\n\t\tSystem.out.print(\"Java \");\n\t}\n\n\tpublic void write(Object o) \n\t{\n\t\tSystem.out.print(\"Language\");\n\t}\n\npublic static void main(String[] args)\n\n{\n\tHackerEarth r = new HackerEarth();\n\n\tr.code(\"Object \");\n\tr.write(555);\n\n}\n\n}\n</code></pre>\n\n<p> </p>","a":[{"id":678392,"option":"Object 555","correct":false},{"id":678393,"option":"Java Object ","correct":false},{"id":678394,"option":"Object Language","correct":false},{"id":678395,"option":"Java Language","correct":true}]},{"q":"<p>In Java, which of the following methods can be declared in an <strong>interface:</strong></p>","a":[{"id":674482,"option":"Abstract methods","correct":false},{"id":674483,"option":"Static methods","correct":false},{"id":674484,"option":"Default methods","correct":false},{"id":674485,"option":"All of these","correct":true}]},{"q":"<p>In Java, which of the following keywords is used to call a <strong>constructor</strong> from <strong>another constructor </strong>of the same class?</p>","a":[{"id":671846,"option":"super","correct":false},{"id":671847,"option":"this","correct":true},{"id":671848,"option":"static","correct":false},{"id":671849,"option":"None of these","correct":false}]},{"q":"<p>In Java, which of these keywords will you use to create a class that represents a concept rather than objects?</p>\n\n<p> </p>","a":[{"id":673331,"option":"static ","correct":false},{"id":673332,"option":"final","correct":false},{"id":673333,"option":"abstract","correct":true},{"id":673334,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Hackerearth\n{  \n    public static void main(String []args)\n    {  \n        hack2 h= new hack2();  \n        h.hack_method();  \n        h.hack_method2();  \n        \n    }  \n}  \nabstract class hack1\n{  \n    hack1()\n    {\n        System.out.println(\"hello\");\n        \n    }  \n   abstract void hack_method();  \n   \n   void hack_method2()\n   {\n       System.out.println(\"hi\");\n       \n   }  \n}   \nclass hack2 extends hack1\n{  \n    void hack_method()\n    {\n        System.out.println(\"hackerearth\");\n        \n    }  \n}  </code></pre>\n\n<p><br>\n<br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhackerearth\nhi\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi\nhackerearth\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hackerearth\nhello\nhi\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":663036,"option":"3","correct":false},{"id":663037,"option":"1","correct":true},{"id":663038,"option":"2","correct":false},{"id":663039,"option":"The code gives a runtime error","correct":false}]},{"q":"<p>In Java, which of the following <strong>method</strong> declarations are valid:</p>\n\n<ol>\n\t<li>final public void Hacker( ) { }</li>\n\t<li>public void final Hacker( ) { }</li>\n\t<li>public modifier void Hacker( ) { }</li>\n\t<li>public static final void Hacker( ) { }</li>\n</ol>","a":[{"id":678376,"option":"1 and 4","correct":true},{"id":678377,"option":"2 and 3","correct":false},{"id":678378,"option":"1 and  3","correct":false},{"id":678379,"option":"2 and 4","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n{\n\tpublic static void main(String[] args)\n\t{\n\t\tSystem.out.printf(\"%b %n\", 19856);\t\n\t}\n\n}\n</code></pre>\n\n<p> </p>","a":[{"id":671631,"option":"19856","correct":false},{"id":671632,"option":"true","correct":true},{"id":671633,"option":"false","correct":false},{"id":671634,"option":"null","correct":false}]},{"q":"<p>In Java, which of the following declarations are valid:</p>\n\n<ol>\n\t<li>int num, String value;</li>\n\t<li>boolean var1, var2;</li>\n\t<li>double d1, double d2;</li>\n\t<li>int val1; val2;</li>\n</ol>\n\n<p> </p>","a":[{"id":677479,"option":"1, 2, and 3","correct":false},{"id":677480,"option":"2 and 4","correct":false},{"id":677481,"option":"Only 2","correct":true},{"id":677482,"option":"2 and 3","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth \n{\n\n\tpublic static void main(String args[])\n\t{\n\t\tSystem.out.printf(\"%s and %&lt;S\",\"Hello\");\n\t}\n\n}</code></pre>\n\n<p> </p>","a":[{"id":671579,"option":"hello and Hello","correct":false},{"id":671580,"option":"HELLO and Hello","correct":false},{"id":671581,"option":"Hello and HELLO","correct":true},{"id":671582,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\npublic class HackerEarth \n\n{\nstatic\n{ \n\t code(2); \n}\n\nstatic void code(int val)\n{\n\t System.out.print(val + \" \");\n}\n\nHackerEarth() \n{\n\t code(5); \n}\n\nstatic \n{\n\t code(4);\n}\n\n{\n\t code(6);\n}\n\nstatic \n{\n\t new HackerEarth();\n}\n\n{\n\t code(8); \n}\n\npublic static void main(String[] args)\n{\n\n}\n}\n</code></pre>\n\n<p> </p>","a":[{"id":678401,"option":"2 4 6 8 5","correct":true},{"id":678402,"option":"2 4 8 6 5","correct":false},{"id":678403,"option":"5 4 6 8 2","correct":false},{"id":678404,"option":"Run-time Error","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class hackerearth\n{\n    public static void main(String[] args)\n    {\n        hack1 h1 =  new hack2();\n        hack2 h2 =  new hack2();\n        hack1 h;\n        h = h1;\n        h.hack_method();\n        \n    }\n\n}\n\nclass hack1\n{\n    hack1() \n    {\n        System.out.println(\"hello\");\n    \n    }\n    void hack_method()\n    {\n        System.out.println(\"hackerearth\");\n\n    }\n\n} \n\nclass hack2 extends hack1\n{ \n    hack2()\n    {\n        System.out.println(\"hi\");\n    }\n\n    void hack_method()\n    {\n        System.out.println(\"hello world\");\n\n    }\n} </code></pre>\n\n<p><br>\n<br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi\nhello\nhi\nhackerearth</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi\nhello world</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi\nhello\nhi\nhello world</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi\nhackerearth</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":669729,"option":"4","correct":false},{"id":669730,"option":"3","correct":true},{"id":669731,"option":"1","correct":false},{"id":669732,"option":"2","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\ninterface HackerEarth \n{\n    public void work();\n    class NoWork implements HackerEarth\n    {\n        private NoWork() \n        {\n            System.out.println(\"No Coding in Java\");    \n        }\n        public void work()\n        {\n            System.out.println(\"Code in Java\");    \n        }\n    }\n    HackerEarth obj = new NoWork();\n}\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        getWork(HackerEarth.obj);\n    }\n    public static void getWork(HackerEarth obj) \n    {\n        obj.work();\n    }\n}\n</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>Code in Java</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>No Coding in Java</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>No Coding in Java\nCode in Java</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>Code in Java\nNo Coding in Java</code></pre>\n\n<p> </p>","a":[{"id":674512,"option":"1","correct":false},{"id":674513,"option":"2","correct":false},{"id":674514,"option":"3","correct":true},{"id":674515,"option":"4","correct":false}]},{"q":"<p>Which of the following sorting algorithms is implemented in the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>public void Sort(int[] num) \n\n{\nboolean flag;\ndo \n  {\n   flag = false;\n   for (int i = 0; i &lt; num.length - 1; i++)\n\n   {\n    if (num[i + 1] &lt; num[i]) {\n    int tmp = num[i + 1];\n    num[i + 1] = num[i];\n    num[i] = tmp;\n    flag = true;\n   }\n }\n}\n\nwhile (flag);\n\n}</code></pre>\n\n<p> </p>","a":[{"id":669777,"option":"Bubble sort","correct":true},{"id":669778,"option":"Selection sort","correct":false},{"id":669779,"option":"Quick sort","correct":false},{"id":669780,"option":"Insertion sort","correct":false}]},{"q":"<p>In Java, you are working on Multithreading. Now, if you have executed the code given below then which of the following statements is correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Hackerearth\n{\n    public static void main(String args[])\n    {  \n        hack_thread h=new hack_thread();   \n        h.start(); \n        while(h.isAlive())\n        {\n            try\n            {\n                h.sleep(10);\n                \n            }\n            \n            catch(Exception e)\n            {\n                System.out.println(\"hello\");\n                \n            }\n            System.out.println(\"hackerearth\");\n            \n        }\n        \n    }  \n}\nclass hack_thread extends Thread\n{  \n    public void run()\n    {  \n        System.out.println(\"hi\");          \n    }    \n}    </code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The code does not give a runtime error<br>\n\t </li>\n\t<li>The code produces the output - \n\t<pre class=\"prettyprint\"><code>hello\nhackerearth</code></pre>\n\t<br>\n\t </li>\n\t<li>The code produces the output - \n\t<pre class=\"prettyprint\"><code>hi\nhackerearth</code></pre>\n\t<br>\n\t </li>\n</ol>","a":[{"id":661989,"option":"1 and 3","correct":true},{"id":661990,"option":"1 and 2","correct":false},{"id":661991,"option":"only 1","correct":false},{"id":661992,"option":"None of these","correct":false}]},{"q":"<p>What will be the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class hack1\n{  \n    void hack_method()throws Exception\n    {\n        System.out.println(\"hackerearth\");\n        \n    }  \n}  \n  \nclass hack2 extends hack1\n{\n    void hack_method()throws Exception\n    {\n        System.out.println(\"hacker\");\n        \n    }  \n    \n    public static void main(String args[])\n    {  \n        hack2 h=new hack2();  \n        try\n        {  \n            h.hack_method();  \n            \n        }\n        catch(Exception e)\n        {\n            System.out.print(\"hello\");\n            \n        }  \n        finally \n        {\n            System.out.println(\"hi\");\n            \n        }\n        \n    }  \n}  </code></pre>\n\n<p><br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hello\nhi</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hackerearth\nhi</code></pre>\n\t<br>\n\t </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>hacker\nhi</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":662020,"option":"2","correct":false},{"id":662021,"option":"3","correct":true},{"id":662022,"option":"1","correct":false},{"id":662023,"option":"The code gives a compilation error","correct":false}]},{"q":"<p>What is the output of the following Java 8 code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\ninterface StrFunc\n{\n  String disp(String n);\n}\nclass Main\n{\n    public static void main(String args[])\n    {\n        StrFunc output = (str) -&gt; {\n        String result = \"\";\n        int a;\n        for(a = str.length()-1; a &gt;= 0; a--)\n            result += str.charAt(a);\n        return result;\n        };\n    System.out.println(output.disp(\"HACKEREARTH\"));\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":552892,"option":"HTRAEREKCAH","correct":true},{"id":552893,"option":"HACKEREARTH","correct":false},{"id":552894,"option":"HCERAT","correct":false},{"id":552895,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nenum Languages \n{\n    Python(10-10+10*10), Java(9+9*9-9), Angular(12*12-12-12);\n    private int coders; \n    Languages(int p)\n    {\n         coders = p;\n    }\n    int getcoders()\n    { \n        return coders; \n    }\n}\n\npublic class HackerEarth1\n{\n    public static void main(String args[])\n    {\n        Languages ap;\n       \n        for(Languages a : Languages.values())\n        System.out.println(a + \" \" + a.getcoders() +\" coders.\");\n    }\n}</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>Python 100 coders.\nJava 81 coders.\nAngular 120 coders.</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>Angular 120 coders.\nPython 100 coders.\nJava 81 coders.</code></pre>\n\n<p> </p>","a":[{"id":691598,"option":"1","correct":true},{"id":691599,"option":"2","correct":false},{"id":691600,"option":"Compilation error","correct":false},{"id":691601,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class StringMatch\n{\n    public static void main(String[] args)\n    {\n        String regex = \".@.\";\n        StringMatch.compare(\"Hacker@Earth.com\", regex);\n        StringMatch.compare(\"a@N\", regex);\n        StringMatch.compare(\"Java@Program\", regex);\n    }\n    public static void compare(String str, String regex)\n    {\n        if (str.matches(regex))\n        {\n            System.out.println(str + \" matches\");\n        }\n        else\n        {\n            System.out.println(str + \" does not match\");\n        }\n    }\n}</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>Hacker@Earth.com does not match\na@N matches\nJava@Program does not match</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>Hacker@Earth.com does not match\na@N matches\nJava@Program matches</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>Hacker@Earth.com matches\na@N matches\nJava@Program matches</code></pre>\n\n<p> </p>","a":[{"id":692452,"option":"1","correct":true},{"id":692453,"option":"2","correct":false},{"id":692454,"option":"3","correct":false},{"id":692455,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class HackerEarth1\n{\n    public static void main(String args[])\n    {\n        ArrayList&lt;StringBuilder&gt; myList = new ArrayList&lt;&gt;();\n        StringBuilder sb1 = new StringBuilder(\"Java\");\n        StringBuilder sb2 = new StringBuilder(\"Python\");\n        StringBuilder sb3 = new StringBuilder(\"Scala\");\n        StringBuilder sb4 = new StringBuilder(\"Angular\");\n        myList.add(sb1);\n        myList.add(sb2);\n        myList.add(sb3);\n        myList.add(sb4);\n        myList.remove(1);\n\n        for (StringBuilder element:myList)\n            System.out.println(element);\n            myList.remove(sb3);\n            myList.remove(new StringBuilder(\"Angular\"));\n        for (StringBuilder element : myList)\n            System.out.println(element);\n    }\n}</code></pre>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>Python\nAngular\nScala\nJava\nPython</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>Java\nScala\nAngular\nJava\nAngular</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>Python\nAngular\nScala\nAngular\nJava</code></pre>\n\n<p> </p>","a":[{"id":693616,"option":"1","correct":false},{"id":693617,"option":"2","correct":true},{"id":693618,"option":"3","correct":false},{"id":693619,"option":"None of these","correct":false}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class MyOuterClass\n{  \n       private int x= 1;\n\t   private String st=\"Number\";\n\t   public void innerInstance()\n\t   {\n\t       MyInnerClass inner = new MyInnerClass();\n\t       inner. seeOuter();\n\t   }\n       public static void main(String args[])\n       {\n           MyOuterClass obj = new MyOuterClass();\n\t       obj.innerInstance();\n       }\n       private class MyInnerClass\n       {\n\t       private void seeOuter () \n           {\n\t          System.out.println(st+\" \"+x);\n\t       }\n\t   } \n}</code></pre>\n\n<p> </p>","a":[{"id":654457,"option":"Compilation error","correct":false},{"id":654458,"option":"No output","correct":false},{"id":654459,"option":"Run-time error","correct":false},{"id":654460,"option":"Number 1","correct":true}]},{"q":"<p>In Java, what is the output of the following code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass A{\n\n    public int x;\n\n    protected int y;\n\n    void cal(int a, int b){\n\n        x =  a + 1;\n\n        y =  b;\n\n    }        \n\n}    \n\nclass B {\n\n    public static void main(String args[])\n\n    {\n\n        A obj = new A();   \n\n        obj.cal(2, 3);\n\n        System.out.println(obj.x + \" \" + obj.y);     \n\n    }\n\n}</code></pre>\n\n<p> </p>","a":[{"id":653019,"option":"2 3","correct":false},{"id":653020,"option":"Compilation error","correct":false},{"id":653021,"option":"3 3","correct":true},{"id":653022,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass Add\n{\n\n   protected int addNumbers(int a, int b)\n   {\n\treturn a+b;\n   }\n}\n\nclass Test extends Add{\n   public static void main(String []aa)\n   {\n\tTest obj = new Test();\n\tSystem.out.println(obj.addNumbers(11, 22));\n   }\n}</code></pre>\n\n<p> </p>","a":[{"id":652599,"option":"addNumbers cannot be protected","correct":false},{"id":652600,"option":"Compilation error","correct":false},{"id":652601,"option":"Class Add cannot be inherited","correct":false},{"id":652602,"option":"33","correct":true}]},{"q":"<p>What is the output of the following Java 8 code:<br>\n </p>\n\n<pre class=\"prettyprint\"><code>import java.util.HashMap;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\npublic class HackerEarth\n  {\n   public static void main(String a[]) {\n\n   Map&lt;String, String&gt; Hacker = new HashMap&lt;&gt;();\n   Hacker.put(\"Key 1\", \"Value 1\");\n   Hacker.put(\"Key 2\", \"Value 2\");\n   HackerEarth.iterateMap(Hacker);\n}\n\npublic static void iterateMap(Map&lt;String, String&gt; Hacker)\n   {\n    for(Entry&lt;String, String&gt; entry:Hacker.entrySet())\n     {\n      System.out.print(entry.getValue()+\", \"+entry.getKey());\n     }\n   }\n }\n</code></pre>\n\n<p> </p>","a":[{"id":552940,"option":"Key 1 Value 1, Key 2 Value 2","correct":false},{"id":552941,"option":"Value 1 Key 1, Value 2, Key 2","correct":false},{"id":552942,"option":"Value 1, Key 1Value 2, Key 2","correct":true},{"id":552943,"option":"Key 1, Value 1Key 2, Value 2","correct":false}]},{"q":"<p>Which of the following statements about access modifiers in Java is true?</p>","a":[{"id":655800,"option":"The protected modifiers have more visibility or scope compared to private and lesser as compared to default modifiers.","correct":false},{"id":655801,"option":"The public modifiers have more visibility or scope compared to private and lesser as compared to protected modifiers.","correct":false},{"id":655802,"option":"The protected modifiers have more visibility or scope compared to private and lesser as compared to public modifiers.","correct":true},{"id":655803,"option":"The public modifiers have more visibility or scope compared to private and lesser as compared to default modifiers.","correct":false}]},{"q":"<p>In Java, which of the following methods comprises the <strong>servlet</strong> life cycle:</p>\n\n<ol>\n\t<li>init()</li>\n\t<li>clean()</li>\n\t<li>service()</li>\n\t<li>destroy()</li>\n</ol>","a":[{"id":627970,"option":"1, 2, and 3","correct":false},{"id":627971,"option":"1, 3, and 4","correct":true},{"id":627972,"option":"1 and 3","correct":false},{"id":627973,"option":"3 and 4","correct":false}]},{"q":"<p>In Java, which of the following statements about the synchronized methods is correct?</p>\n\n<ol>\n\t<li>A synchronized method is used to lock an object for any shared resource.</li>\n\t<li>When a thread invokes a synchronized method, it automatically acquires the lock for all the objects and releases it when the thread completes its task.</li>\n</ol>","a":[{"id":613785,"option":"1","correct":false},{"id":613786,"option":"2","correct":false},{"id":613787,"option":"Both of these","correct":true},{"id":613788,"option":"None of these","correct":false}]},{"q":"<p>In Java, which of the following statements about a generic constructor is correct?</p>","a":[{"id":613777,"option":"A constructor is generic if it declares one or more type variables.","correct":false},{"id":613778,"option":"A constructor can be declared generic irrespective of whether the class is declared generic.","correct":false},{"id":613779,"option":"A constructor contains the formal type parameters as its type variables.","correct":false},{"id":613780,"option":"All of these","correct":true}]},{"q":"<p>In Java, which of the following data types are automatically implemented by using pointers:</p>\n\n<ol>\n\t<li>Integer</li>\n\t<li>Character</li>\n\t<li>Arrays</li>\n\t<li>Objects</li>\n</ol>","a":[{"id":597563,"option":"1 and 2","correct":false},{"id":597564,"option":"2 and 4","correct":false},{"id":597565,"option":"3 and 4","correct":true},{"id":597566,"option":"1 and 4","correct":false}]},{"q":"<p>What is the output of the following Java code:  </p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\n\nclass HackerEarth\n{\n\tpublic static void main(String args[])\n\t {\n\t\tArrayList&lt;Double&gt; vals = new ArrayList&lt;&gt;();\n\t\tvals.add(1.0);\n\t\tvals.add(4.0);\n\t\tvals.add(16.0);\n\t\tSpliterator&lt;Double&gt; spltitr = vals.spliterator();\n\t\twhile(spltitr.tryAdvance((n) -&gt; System.out.print(\" \"+n)));\n\t\tSystem.out.println();\n\t\tspltitr = vals.spliterator();\n\t\tArrayList&lt;Double&gt; sqrs = new ArrayList&lt;&gt;();\n\t\twhile(spltitr.tryAdvance((n) -&gt; sqrs.add(Math.sqrt(n))));\n\t\tspltitr = sqrs.spliterator();\n\t\tspltitr.forEachRemaining((n) -&gt; System.out.print(\" \"+n));\n\t}\n}</code></pre>\n\n<p> </p>","a":[{"id":574684,"option":"1.0 4.0 16.0\r\n1.0 2.0 4.0","correct":true},{"id":574685,"option":"1.0 2.0 4.0\r\n1.0 4.0 16.0","correct":false},{"id":574686,"option":"1 4 16\r\n1 2 4","correct":false},{"id":574687,"option":"Compilation error","correct":false}]},{"q":"<p>In Java, which of the following methods is used to return the size of a collection?</p>","a":[{"id":583740,"option":"size()","correct":true},{"id":583741,"option":"getSize()","correct":false},{"id":583742,"option":"getCollectionSize()","correct":false},{"id":583743,"option":"collectionSize()","correct":false}]},{"q":"<p>Which of the following statements about <strong>hashCode </strong>in Java are true?</p>\n\n<ol>\n\t<li>If two objects are declared equal using the <em>equals()</em> method, then they must have the same hash codes.</li>\n\t<li>If two objects are declared equal using the <em>equals() </em>method, they may or may not have the same hash codes.</li>\n\t<li>During the execution of a Java application, if the <em>hashCode()</em> method is called on the same object multiple times, then the method must return the same integer value.</li>\n\t<li>The Object class has a <em>hashCode()</em> method that returns only positive integers.</li>\n</ol>","a":[{"id":582790,"option":"1 and 3","correct":true},{"id":582791,"option":"2 and 4","correct":false},{"id":582792,"option":"2, 3, and 4","correct":false},{"id":582793,"option":"1, 3 and 4","correct":false}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>\n class HackerEarth\n{\n\tstatic String strVal;\n\tpublic static void main(String[] args) \n\t{\n\t\tHackerEarth h1 = new HackerEarth();\n\t\tstrVal = h1.getString(\"Program\");\n\t\tSystem.out.print(\" \"+strVal);\n\t}\n\npublic static String getString(String str){\n\n   StringBuffer strBuf = new StringBuffer(str.length());\n\n   for(int i=str.length() -1 ; i&gt;0;i--)\n   {\n     strBuf.append(str.charAt(i));\n   } \n   return strBuf.toString();\n}\t\n}</code></pre>\n\n<p> </p>","a":[{"id":579330,"option":"margor","correct":true},{"id":579331,"option":"margorP","correct":false},{"id":579332,"option":"margo","correct":false},{"id":579333,"option":"Runtime error","correct":false}]},{"q":"<p>In Java, which of the following statements about the <strong>Comparator Interface</strong> is correct?</p>\n\n<ol>\n\t<li>It must be implemented by all the elements in a SortedSet.</li>\n\t<li>It defines a function that is used to compare two objects.</li>\n\t<li>It can be used to design the custom-ordering scheme.</li>\n\t<li>It is used to order the objects of user-defined classes.</li>\n</ol>","a":[{"id":578450,"option":"1, 2, and 4","correct":false},{"id":578451,"option":"2 and 4","correct":false},{"id":578452,"option":"2, 3, and 4","correct":true},{"id":578453,"option":"1 and 4","correct":false}]},{"q":"<p>In Java 8, which of the following methods defined by collection is used to obtain a parallel stream?</p>","a":[{"id":552928,"option":"parallel()","correct":false},{"id":552929,"option":"parallelInput()","correct":false},{"id":552930,"option":"getParallelStream()","correct":false},{"id":552931,"option":"parallelStream()","correct":true}]},{"q":"<p>What is the output of the following Java 8 code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n  {\n\t\tpublic static void main(String[] args)\n\t{\n\t\tint val = 10;\n\t\tif((val&gt;10 ? val++: --val)&lt;10)\n\t{\n\t\tSystem.out.print(\"MAC\");\n\t}\n\t\tif(val&lt;10)\n\t\tSystem.out.print(\"PC\");\n\t}\n  }</code></pre>\n\n<p> </p>","a":[{"id":552960,"option":"MAC","correct":false},{"id":552961,"option":"PC","correct":false},{"id":552962,"option":"MACPC","correct":true},{"id":552963,"option":"Runtime error","correct":false}]},{"q":"<p>In Java 8, which of the following representations of the <strong>lambda </strong>operator is correct?</p>","a":[{"id":552888,"option":"=>","correct":false},{"id":552889,"option":"->","correct":true},{"id":552890,"option":":","correct":false},{"id":552891,"option":"::","correct":false}]},{"q":"<p>What is the output of the following Java 8 code:<br>\n </p>\n\n<pre class=\"prettyprint\"><code>interface LangFunction \n {\n   void callMe();\n }\n\nclass HackerEarth{\n public static void main(String args[])\n {\n  String str = \"Hacking\";\n  LangFunction Lf = ()-&gt; System.out.println(str+\"java\");\n  str=\"ay\";\n  Lf.callMe();\n }\n}</code></pre>\n\n<p> </p>","a":[{"id":552736,"option":"HelloWorldjava","correct":false},{"id":552737,"option":"HelloWorlday ","correct":false},{"id":552738,"option":"ayjava","correct":false},{"id":552739,"option":"Compilation error","correct":true}]},{"q":"<p>In Java 8, which of the following statements about the <em>lambda expressions</em> are true:</p>\n\n<ol>\n\t<li>It enables you to treat functionality as a method argument.</li>\n\t<li>It allows you to write functions that do not belong to a class.</li>\n\t<li>You should create a functional interface for calling a lambda expression.</li>\n\t<li>Lambda expressions cannot have empty bodies.</li>\n</ol>","a":[{"id":552656,"option":"1, 2, and 4","correct":false},{"id":552657,"option":"2 and 4","correct":false},{"id":552658,"option":"1, 2, and 3","correct":true},{"id":552659,"option":"1 and 3","correct":false}]},{"q":"<p>What is the output of the following Java 8 code:</p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth \n {\n   public static void main(String[] args) \n {\n   int sum = 0;\n   int a = 3;\n    while(sum++ &lt; 3)\n {\n    int b = (1 + 2 * sum) % 3;\n      switch(b) \n     {\n     default:\n     case 0:\n       a -= 1; \n       break;\n     case 1: \n       a += 5;\n     }\n }\n    System.out.println(a);\n }\n }</code></pre>\n\n<p> </p>","a":[{"id":552744,"option":"1","correct":false},{"id":552745,"option":"6","correct":true},{"id":552746,"option":"3","correct":false},{"id":552747,"option":"4","correct":false}]},{"q":"<p>Anita has started building her first application in Java. She has recently started learning the concept of interfaces in Java and wanted to know how to implement it. Which of the following options given below is used to implement the concept she is studying in Java?</p>","a":[{"id":673347,"option":"implement","correct":false},{"id":673348,"option":"implements","correct":true},{"id":673349,"option":"extends","correct":false},{"id":673350,"option":"extend","correct":false}]},{"q":"<p>Anita has recently started learning Java. She is now learning more about the Java collections framework topic and wanted to know about the utility classes in them. Which of the following options given below are the utility classes available in the topic she is studying?</p>","a":[{"id":578186,"option":"java.util.Array and java.util.Collection","correct":false},{"id":578187,"option":"java.util.Arrays and java.util.Collections","correct":true},{"id":578188,"option":"java.util.Arrays and java.util.Collection","correct":false},{"id":578189,"option":"java.util.Array and java.util.Collections","correct":false}]},{"q":"<p>What is the output of the following Java 8 code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\n\nenum Fruit\n{\n   Mango, apple, Grapes, Apple\n}\n\nclass HackerEarth\n{\n   public static void main (String args[]) \n   {\n      Set&lt;Fruit&gt; obj = new TreeSet&lt;Name&gt;();\n      obj.add(Fruit.Mango);\n      obj.add(Fruit.Apple);\n      obj.add(Fruit.Grapes);\n      obj.add(Fruit.Mango);\n      obj.add(Fruit.apple);\n      for(Fruit f: obj)\n\t  {\n         System.out.println(f);\n      }\n   }\n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Mango\nApple\nGrapes\napple</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Mango apple Grapes Apple</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Mango\nApple\nGrapes\nMango\napple</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>apple\nApple\nMango\nMango\nGrapes</code></pre>\n\t</li>\n</ol>","a":[{"id":552692,"option":"1","correct":true},{"id":552693,"option":"2","correct":false},{"id":552694,"option":"3","correct":false},{"id":552695,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\n\nclass HackerEarth\n{\n\tpublic static void main(String args[]) \n\t{\n\t\tArrayList&lt;String&gt; h = new ArrayList&lt;String&gt;();\n\t\tSystem.out.println(h.size());\n\t\th.add(\"h\");\n\t\th.add(\"a\");\n\t\th.add(\"c\");\n\t\th.add(1, \"k\");\n\t\tSystem.out.println(h.size());\n\t\th.remove(\"a\");\n\t\th.remove(2);\n\t\tSystem.out.println(h.size());\n\t}\n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0 \n4 \n2</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>null \n4 \n2</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1 5 3</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0\n4 \n3</code></pre>\n\t</li>\n</ol>","a":[{"id":574680,"option":"1","correct":true},{"id":574681,"option":"2","correct":false},{"id":574682,"option":"3","correct":false},{"id":574683,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following Java code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.Iterator;\nimport java.util.LinkedList;\n \npublic class HackerEarth {\n \n    public static void main(String a[]){\n         \n        LinkedList&lt;String&gt; list = new LinkedList&lt;String&gt;();\n        list.add(\"Val 1\");\n        list.add(\"Val 2\");\n        list.add(\"Val 3\");\n        list.add(\"Random\");\n        Iterator&lt;String&gt; itr = list.descendingIterator();\n        while(itr.hasNext()){\n            System.out.print(\" \"+itr.next());\n        }\n    }\n}</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Val 1 Val 2 Val 3 Random</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Val 1 Val 2 Val 3</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Val 3 Val 2 Val 1</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Random Val 3 Val 2 Val 1</code></pre>\n\t</li>\n</ol>","a":[{"id":574864,"option":"1","correct":false},{"id":574865,"option":"2","correct":false},{"id":574866,"option":"3","correct":false},{"id":574867,"option":"4","correct":true}]},{"q":"<p>Paul was working with old APIs while building an application in Java. He wanted some function to act as a link between the collections and older APIs that expect arrays during input. Which of the following functions from the options with help Paul solve the aforementioned problem?</p>","a":[{"id":573349,"option":"toArray()","correct":true},{"id":573350,"option":"toArrays()","correct":false},{"id":573351,"option":"Array.join()","correct":false},{"id":573352,"option":"Array.bridge()","correct":false}]},{"q":"<p>What is the output of the following Java code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass Language \n{\n    public String name;\n}\n\npublic class HackerEarth1\n{\n    public static void main(String[] args)\n    {\n        Language p = new Language();\n        p.name = \"EJava\";\n        func1(p);\n        System.out.println(p.name);\n        func2(p);\n        System.out.println(p.name);\n    }\n    static void func2(Language p)\n    {\n        p.name = \"Python\";\n        System.out.println(p.name);\n    }\n    static void func1(Language p) \n    {\n        p = new Language();\n        p.name = \"Angular\";\n        System.out.println(p.name);\n    }\n}</code></pre>\n\n<p><strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Python\nPython\nAngular\nEjava</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Angular\nEJava\nPython\nPython</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Python\nAngular\nEJava\nPython</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>EJava\nAngular\nPython\nPython</code></pre>\n\t</li>\n</ol>","a":[{"id":693612,"option":"1","correct":false},{"id":693613,"option":"2","correct":true},{"id":693614,"option":"3","correct":false},{"id":693615,"option":"4","correct":false}]},{"q":"<p>Which of the following statements about <strong>abstract classes </strong>in Java are true:</p>\n\n<ol>\n\t<li>An abstract class can contain only abstract methods.</li>\n\t<li>An abstract method cannot be declared static.</li>\n\t<li>An abstract method in a class can override an abstract method in its superclass without providing an implementation.</li>\n\t<li>You can declare a class as abstract even though it does not have any abstract methods.</li>\n</ol>","a":[{"id":673335,"option":"1, 3, and 4","correct":false},{"id":673336,"option":"1, 2, and 4","correct":false},{"id":673337,"option":"2, 3, and 4","correct":true},{"id":673338,"option":"1, 2, and 3","correct":false}]},{"q":"<p>Which of the following statements must be valid for <strong>method overriding </strong>in Java:</p>\n\n<p>1. The method can be either a static method or an instance method.</p>\n\n<p>2. The overriding method must have the same name as the overridden method.</p>\n\n<p>3. The order of the parameters in the overriding method and the overridden method can be different.</p>\n\n<p>4. If the overridden method has package-level access, the overriding method may have public, protected, or package-level<br>\naccess</p>","a":[{"id":671826,"option":"1, 2, and 3","correct":false},{"id":671827,"option":"1, 3, and 4","correct":false},{"id":671828,"option":"2, and 4","correct":true},{"id":671829,"option":"2, 3, and 4","correct":false}]},{"q":"<p>In Java, which of the following methods is used to copy the elements of one array to another?</p>","a":[{"id":671687,"option":"arraycopy()","correct":true},{"id":671688,"option":"copy()","correct":false},{"id":671689,"option":"copyarray()","correct":false},{"id":671690,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\npublic class Main \n{\n\tpublic static void main(String[] args)\n\t{\n\t\tStringBuilder sb = new StringBuilder();\n\t\tsb.append(\"aaa\").insert(1, \"bb\").insert(4, \"ccc\");\n\t\tSystem.out.println(sb); \n\t}\n}</code></pre>\n\n<p> </p>","a":[{"id":678172,"option":"bbaaaccc","correct":false},{"id":678173,"option":"bbcccaaa","correct":false},{"id":678174,"option":"abbaaccc","correct":false},{"id":678175,"option":"abbaccca","correct":true}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\nimport java.lang.*;\n\nclass Java\n{\n    public void Skills() \n    {\n        System.out.println(\"Java\");\n    }\n}\nclass Scala\n{\n    public void Skills()\n    {\n        System.out.println(\"Scala\"); \n}\n    }\nclass Python \n{\n    public void Skills() \n    {\n        System.out.println(\"Python\"); \n    }\n}\nclass Program\n{\n    public static void main(String args[])\n    {\n        Java f1 = new Java();\n        Python f2 = new Python();\n        f1.Skills();\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":693715,"option":"Java","correct":true},{"id":693716,"option":"Scala","correct":false},{"id":693717,"option":"Python","correct":false},{"id":693718,"option":"Compilation error","correct":false}]},{"q":"<p>In object-oriented programming, which of the following statements about <strong>instance variables</strong> are correct:</p>\n\n<ol>\n\t<li>An instance variable of the type <strong>boolean </strong>defaults to false.</li>\n\t<li>An instance variable of the type <strong>boolean </strong>defaults to true.</li>\n\t<li>An instance variable of the type <strong>int </strong>defaults to 0.</li>\n\t<li>An instance variable of the type <strong>int </strong>defaults to null.</li>\n</ol>\n\n<p> </p>","a":[{"id":677519,"option":"1 and 3","correct":true},{"id":677520,"option":"1 and 4","correct":false},{"id":677521,"option":"2 and 3","correct":false},{"id":677522,"option":"2 and 4","correct":false}]},{"q":"<p>In Java, which of the following is inherited by a subinterface from its superinterface?</p>\n\n<ol>\n\t<li>Abstract methods</li>\n\t<li>Default methods</li>\n\t<li>Constant fields</li>\n\t<li>Static methods</li>\n</ol>","a":[{"id":676574,"option":"1, 2, and 3","correct":true},{"id":676575,"option":"1, 2, and 4","correct":false},{"id":676576,"option":"1, 3, and 4","correct":false},{"id":676577,"option":"All of these","correct":false}]},{"q":"<p>In Java, which of the following statements about a <strong>singleton </strong>application is correct?</p>","a":[{"id":613789,"option":"It has a design solution where an application has only one instance of a class in all the possible scenarios without any exceptional conditions.","correct":true},{"id":613790,"option":"It has a design solution where an application has one or more instances of any class in all the possible scenarios without any exceptional conditions.","correct":false},{"id":613791,"option":"Both of these","correct":false},{"id":613792,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>import java.util.*;\npublic class Program\t\n{\npublic static void main(String[] args)\n{\n\tList&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);\n\tnumbers.stream().map(Program::divideByZero).forEach(System.out::println);\n}\n\npublic static int divideByZero(int n)\n{\n\treturn n / 0;\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":583868,"option":"0","correct":false},{"id":583869,"option":"Compilation error","correct":false},{"id":583870,"option":"Exception: java.lang.nullpointerexception","correct":false},{"id":583871,"option":"Exception: java.lang.ArithmeticException: / by zero","correct":true}]},{"q":"<p>What is the output of the following Java code: </p>\n\n<pre class=\"prettyprint\"><code>class HackerEarth\n{\n\tprivate boolean[] arr = new boolean[2]; // An instance variable\n\tpublic HackerEarth() \n\t{\n\t\tfor (int i = 0; i &lt; arr.length; i++) \n\t\t{\n\t\t\tSystem.out.println(\" \"+arr[i]);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) \n\t{\n\t\tnew HackerEarth();\n\t\tString[] str = new String[2]; \n\t\tfor (int i = 0; i &lt; str.length; i++) \n\t\t{\n\t\t\tSystem.out.println(\" \" + str[i]);\n\t\t}\n\t}\n}</code></pre>\n\n<p> </p>","a":[{"id":582794,"option":"false\r\nfalse\r\nnull\r\nnull","correct":true},{"id":582795,"option":"true\r\ntrue\r\nnull\r\nnull","correct":false},{"id":582796,"option":"0\r\n0\r\nnull\r\nnull","correct":false},{"id":582797,"option":"null\r\nnull\r\n0\r\n0","correct":false}]},{"q":"<p>In Java, which of the following methods is used to retrieve a portion of an <strong>ArrayList</strong>?</p>","a":[{"id":579338,"option":"subSection()","correct":false},{"id":579339,"option":"subPortion()","correct":false},{"id":579340,"option":"subList()","correct":true},{"id":579341,"option":"subArray()","correct":false}]},{"q":"<p>In Java, which of the following methods are declared by the <strong>Set </strong>interface:</p>\n\n<ol>\n\t<li>add()</li>\n\t<li>remove()</li>\n\t<li>delete()</li>\n\t<li>contains()</li>\n</ol>","a":[{"id":578174,"option":"1 and 2","correct":false},{"id":578175,"option":"1, 2, and 4","correct":true},{"id":578176,"option":"1, 3, and 4","correct":false},{"id":578177,"option":"1 and 4","correct":false}]},{"q":"<p>If you are required to execute the following Java code, then determine the number of lines of output that will be printed in this scenario:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.lang.reflect.Method;\nimport java.lang.reflect.Field;\nimport java.lang.reflect.Constructor;\n\nclass hackfunc1\n{\n\tprivate String hack_str;\n\tpublic hackfunc1() \n\t{ \n\t    hack_str = \"HackerEarth\"; \n\t}\n\tprivate void hack_method() \n\t{\n\t\tSystem.out.println(\"Hello HackerEarth!\");\n\t}\n}\n\npublic class Demo\n{\n\tpublic static void main(String args[]) throws Exception\n\t{\n\t\thackfunc1 hack_obj = new hackfunc1();\n\t\tClass hack_class = hack_obj.getClass();\n\t\tConstructor hack_const = hack_class.getConstructor();\n\t\tMethod[] methods = hack_class.getMethods();\n\t\tfor (Method method:methods)\n\t\t\tSystem.out.println(method.getName());\n\t\tMethod hack_call = hack_class.getDeclaredMethod(\"hack_method\");\n\t\thack_call.setAccessible(true);\n\t\thack_call.invoke(hack_obj);\n\t}\n}\n</code></pre>","a":[{"id":1806121,"option":"7","correct":false},{"id":1806122,"option":"9","correct":false},{"id":1806123,"option":"10","correct":true},{"id":1806124,"option":"1","correct":false}]}]