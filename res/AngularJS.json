[{"q":"<p>If you want to show a section of HTML code when a button is clicked and hide when the button is clicked again like a dropdown menu then you need to make the button behave like a toggle switch. If the following is the HTML structure of the functionality, what will the Angular script look like?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"myController\"&gt;\n &lt;button ng-click=\"myFunction()\"&gt;Click Me!&lt;/button&gt;\n &lt;div ng-show=\"showList\"&gt;\n &lt;h1&gt;Head&lt;/h1&gt;\n &lt;div&gt;Item2&lt;/div&gt;\n &lt;div&gt;Item1&lt;/div&gt;\n &lt;/div&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.myFunction = function() {\n $scope.showMenu = ~$scope.showMenu;\n }\n });</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.showMenu = false;\n $scope.myFunction = function() {\n $scope.showMenu = !$scope.showMenu;\n }\n });</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.showMenu = !$scope.showMenu;\n }\n });</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.showMenu = false;\n $scope.showMenu = ~$scope.showMenu;\n });</code></pre>","a":[{"id":1719463,"option":"1","correct":false},{"id":1719464,"option":"2","correct":true},{"id":1719465,"option":"3","correct":false},{"id":1719466,"option":"4","correct":false}]},{"q":"<p>If the following is the HTML and Angular script for an application, what will be the outcome, when the user clicks on the disable button?<br>\n<strong>HTML</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;div ng-controller=\"app\" ng-init=\"disable=false\"&gt;\n &lt;button ng-click=\"func(disable)\" ng-disabled=\"disable\"&gt;Disable&lt;/button&gt;\n &lt;button ng-click=\"func(disable)\" ng-show=\"disable\"&gt;Enable&lt;/button&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>Angular</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module(\"app\", []);\n app.controller('app', ['$scope', function ($app) {\n $app.func = function (disable) {\n $app.disable = !!disable;}\n }]);\n &lt;/script&gt;</code></pre>","a":[{"id":1719459,"option":"The \"disable\" button will be disabled and an enabled \"enable\" button will appear next to it","correct":false},{"id":1719460,"option":"The \"disable\" button will be enabled and another enabled \"enable\" button will be displayed next to it","correct":false},{"id":1719461,"option":"The \"disable\" button will be enabled and no other button will be appeared next to it.","correct":true},{"id":1719462,"option":"The \"disable\" button will be enable and another disabled \"enable\" button will appear next to it.","correct":false}]},{"q":"<p>In your AngularJS application, you are frequently required to change the string to integers. You decided to write an angular script. If given is the HTML structure for testing the script, what would the angular script look like?<br>\n&nbsp;&nbsp;&nbsp;&nbsp;<br>\n<strong>Code</strong>:</p>\n\n<pre class=\"prettyprint\"><code> &lt;div ng-app=\"myApp\"&gt;\n &lt;div ng-controller=\"myController\"&gt;\n Value = {{num}}\n &lt;br&gt;\n &lt;button ng-click='convertToInt()'&gt;Convert&lt;/button&gt;\n &lt;br&gt;\n Is Integer - {{isInteger}}&lt;br&gt;\n &lt;/div&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>var myApp = angular.module(\"myApp\", []);\n myApp.controller(\"myController\", function ($scope, $angular) {\n $scope.num = '0';\n $scope.isInteger = $angular.isInt($scope.num);\n $scope.convertToInt = function () {\n $scope.num = $angular.parseInt($scope.num);\n $scope.isInteger = $angular.isInt($scope.num);\n };\n });</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>var myApp = angular.module(\"myApp\", []);\n myApp.controller(\"myController\", function ($scope) {\n $scope.num = '0';\n $scope.convertToInt = function () {\n $scope.isInteger = angular.parseInt($scope.isInteger);$scope.num = $angular.int($scope.num);\n $scope.isInteger = angular.parseInt($scope.isInteger);\n };\n });</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>var myApp = angular.module(\"myApp\", []);\n myApp.controller(\"myController\", function ($scope) {\n $scope.num = '0';\n $scope.isInteger = angular.isNumber($scope.num);\n $scope.convertToInt = function () {\n $scope.num = parseInt($scope.num);\n $scope.isInteger = angular.isNumber($scope.num);\n };\n });</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>var myApp = angular.module(\"myApp\", []);\n myApp.controller(\"myController\", function ($scope, $angular) {\n $scope.convertToInt = function () {$scope.num = '0';\n $scope.isInteger = $angular.isInt($scope.num);\n $scope.num = $angular.parseInt($scope.num);\n $scope.isInteger = $angular.isInt($scope.num);\n };\n });</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719455,"option":"1","correct":false},{"id":1719456,"option":"2","correct":false},{"id":1719457,"option":"3","correct":true},{"id":1719458,"option":"4","correct":false}]},{"q":"<p>In your AngularJS application, you want to restrict copy-paste functionality. The user should not be able to copy any data from the application. For this, you want to write the implementation considering the following rules as of now:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. The page should display a text area that should get the value from application data.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. The page should constantly display a message indicating whether the data has been copied or not.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;3. The initial message should be: “Content copied: false” and when the user copies some text message should change to “Content copied: true”.<br>\nWhich of the following displays the correct application for the required functionality?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"myApp\"&gt;\n &lt;div ng-init=\"isCopy=false\"&gt;\n &lt;textarea ng-copy=\"isCopy=true\" ng-model=\"copy='Some Text' \"&gt;\n &lt;/textarea&gt;\n &lt;pre&gt;Content Copied: {{ng-copy}}&lt;/pre&gt;\n &lt;/div&gt;\n &lt;/body&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"myApp\"&gt;\n &lt;div ng-init=\"isCopy=false; copy='Some Text' \"&gt;\n &lt;textarea ng-model=\"copy\"&gt;\n &lt;/textarea&gt;\n &lt;pre&gt;Content Copied: {{ng-copy: true| isCopy}}&lt;/pre&gt;\n &lt;/div&gt;\n &lt;/body&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"myApp\"&gt;\n &lt;div ng-init=\"isCopy=false\"&gt;\n &lt;textarea ng-copy=\"isCopy=true\" ng-bind=\"copy='Some Text'\" ng-model=\"copy\"&gt;\n &lt;/textarea&gt;\n &lt;pre&gt;Content Copied: {{ng-bind= isCopy}}&lt;/pre&gt;\n &lt;/div&gt;\n &lt;/body&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"myApp\"&gt;\n &lt;div ng-init=\"isCopy=false; copy='Some Text' \"&gt;\n &lt;textarea ng-copy=\"isCopy=true\" ng-model=\"copy\"&gt;\n &lt;/textarea&gt;\n &lt;pre&gt;Content Copied: {{isCopy}}&lt;/pre&gt;\n &lt;/div&gt;\n &lt;/body&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719451,"option":"1","correct":false},{"id":1719452,"option":"2","correct":false},{"id":1719453,"option":"3","correct":false},{"id":1719454,"option":"4","correct":true}]},{"q":"<p>In your AngularJS application, you have a form that takes the user data as input. Now, you wish to display a note consistently, until the form is not updated initially. As soon as the user updates any of the form fields, the message should disappear. Now, even if the user updates a text field with some value and then deletes it, then also the message should not be displayed. What would be the correct approach to implement this functionality?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;form name=\"myForm\"&gt;\n &lt;p&gt;Name: &lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n //code to display message\n &lt;/p&gt;\n &lt;/form&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719447,"option":"<span ng-show=\"myForm.$pristine\">Some message</span>","correct":true},{"id":1719448,"option":"<span ng-show=\"myForm.$untouched\">Some message</span>","correct":false},{"id":1719449,"option":"<span ng-show=\"myForm.$dirty\">Some message</span>","correct":false},{"id":1719450,"option":"<span ng-show=\"myForm.$valid\">Some message</span>","correct":false}]},{"q":"<p>You decided to use a new directive as a class in your AngularJS application, the directive is customized and the use case structure of the directive is given below. What would be the correct Angular script to support this?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;body ng-app=\"myApp\"&gt;\n &lt;div class=\"my-directive\"&gt;&lt;/div&gt;\n &lt;/body&gt;</code></pre>\n\n<p><br>\n<strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module(\"myApp\", []);\n app.directive(\"myDirective\", function() {\n return {\n data : \"&lt;h1&gt;This is my directive!&lt;/h1&gt;\"\n };\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module(\"myApp\", []);\n angular.directive(\"my-directive\", function() {\n return {\n restrict : \"C\",\n template : \"&lt;h1&gt;This is my directive!&lt;/h1&gt;\"\n };\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module(\"myApp\", []);\n angular.directive(\"my-directive\", function() {\n return {\n template : \"This is my directive!\"\n };\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module(\"myApp\", []);\n app.directive(\"myDirective\", function() {\n return {\n restrict : \"C\",\n template : \"&lt;h1&gt;This is my directive!&lt;/h1&gt;\"\n };\n });\n &lt;/script&gt;</code></pre>\n\n<p><br>\n&nbsp;&nbsp;&nbsp;&nbsp;</p>\n\n<p><br>\n&nbsp;&nbsp;&nbsp;&nbsp;</p>","a":[{"id":1719443,"option":"1","correct":false},{"id":1719444,"option":"2","correct":false},{"id":1719445,"option":"3","correct":false},{"id":1719446,"option":"4","correct":true}]},{"q":"<p>In an AngularJS application, if you are using expressions to display the data, what would be displayed on the browser if the following expression is used? Assume name to be: ABC.<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;The name is{{ {{ {{ lastName }} | uppercase }} | lowercase }}&lt;/p&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719439,"option":"The name is abc","correct":false},{"id":1719440,"option":"The name is {{ {{ ABC | uppercase }} | lowercase }}","correct":false},{"id":1719441,"option":"The name is {{ ABC | lowercase }}","correct":false},{"id":1719442,"option":"The name is {{ {{ {{ lastName }} | uppercase }} | lowercase }}","correct":true}]},{"q":"<p>You decided to use AngularJS in your application. If you are given the following steps of configuring the AngularJS application, what would be the correct order of execution?</p>\n\n<p><strong>Steps</strong><br>\n&nbsp;&nbsp;&nbsp;&nbsp;Step 1: The HTML template will be linked with the controller with an ng-controller directive.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Step 2: A controller will be assigned to the module.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Step 3: The angular.module will be created.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Step 4: The module will be linked with the HTML template with an angular app(ng-app).</p>","a":[{"id":1719435,"option":"1,3,2 and 4","correct":false},{"id":1719436,"option":"4,2,1 and 3","correct":true},{"id":1719437,"option":"1,4,2 and 3","correct":false},{"id":1719438,"option":"4, 1, 2 and 3","correct":false}]},{"q":"<p>You are hosting an AngularJS application locally. The application consists of a text field for the user to enter a random string. Now, you want to display the list of each word typed in (separated by spaces) as soon as the user types the string in the text field, what is the correct application of HTML and AngularJS that would enable this?<br>\n<strong>Case</strong>: My name is XYZ<br>\n<strong>Result</strong>: [“My”, “name”, “is”, “XYZ”]</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"myApp\"&gt;\n &lt;div ng-controller=\"myController\"&gt;\n &lt;p&gt;Enter Input: &lt;input type=\"text\" ng-model=\"data\" ng-list=\" \"&gt;&lt;/p&gt;\n {{list}}\n &lt;/div&gt; \n &lt;script&gt;\n var app = angular.module(\"myApp\", []);\n &lt;/script&gt;\n &lt;/body&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"myApp\"&gt;\n &lt;div ng-controller=\"myController\"&gt;\n &lt;p&gt;Enter Input: &lt;input type=\"text\" ng-model=\"data\" ng-list=\" \"&gt;&lt;/p&gt;\n {{list}}\n &lt;/div&gt; \n &lt;script&gt;\n var app = angular.module(\"myApp\", []);\n app.controller('myController', ['$scope', function ($scope) {\n $scope.data = [];\n }]);\n &lt;/script&gt;\n &lt;/body&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"myApp\"&gt;\n &lt;div ng-controller=\"myController\"&gt;\n &lt;p&gt;Enter Input: &lt;input type=\"text\" ng-model=\"data\" &gt;&lt;/p&gt;\n {{list.split()}}\n &lt;/div&gt; \n &lt;script&gt;\n var app = angular.module(\"myApp\", []);\n app.controller('myController', ['$scope', function ($scope) {\n $scope.data = [];\n }]);\n &lt;/script&gt;\n &lt;/body&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"myApp\"&gt;\n &lt;div ng-controller=\"myController\"&gt;\n &lt;p&gt;Enter Input: &lt;input type=\"text\" ng-model=\"data\"&gt;&lt;/p&gt;\n {{list [].split()}}\n &lt;/div&gt; \n &lt;script&gt;\n var app = angular.module(\"myApp\", []);\n &lt;/script&gt;\n &lt;/body&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719431,"option":"1","correct":false},{"id":1719432,"option":"2","correct":true},{"id":1719433,"option":"3","correct":false},{"id":1719434,"option":"4","correct":false}]},{"q":"<p>You are developing a grocery management system that displays several items and their feature and their price. The price is strictly needed to be in a native currency that is Rs and it should be displayed up to 3 decimal places. Now, if you are storing only the amount and want to display that along with the currency, What should be the correct application of available ng-options to do so in AngularJS?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p ng-model = {{ currency : \"Rs\" : 3}}&gt;Amount : {{ amount }} &lt;/p&gt;\n \n &lt;script&gt;\n var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.amount = 27;\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Amount : {{ amount | filterby : \"Rs\" }}&lt;/p&gt;\n \n &lt;script&gt;\n var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.amount = 27;\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Amount : {{ amount | currency : \"Rs\" : 3}}&lt;/p&gt;\n \n &lt;script&gt;\n var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.amount = 27;\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p ng-bind = \"{{ currency : \"Rs\" : 3}}\"&gt;Amount : {{ amount }}&lt;/p&gt;\n \n &lt;script&gt;\n var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.amount = 27;\n });\n &lt;/script&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719427,"option":"1","correct":false},{"id":1719428,"option":"2","correct":false},{"id":1719429,"option":"3","correct":true},{"id":1719430,"option":"4","correct":false}]},{"q":"<p>You have an AngularJS application, that deals with evaluating the expressions. Now, you are given the following HTML snippet, What would be the result of using this in the application?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;body ng-app=\"\" &gt;\n &lt;div&gt;\n &lt;span non-bindable&gt;{{We evaluated {{5+5}} as: }}&lt;/span&gt; {{5+5}} \n &lt;/div&gt; \n &lt;/body&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719423,"option":"{{We evaluated {{5+5}} as: }} 10","correct":false},{"id":1719424,"option":"{{We evaluated 5+5 as: }} {{5+5}}","correct":false},{"id":1719425,"option":"We evaluated 5+5 as: 10","correct":false},{"id":1719426,"option":"{{We evaluated {{5+5}} as: }} {{5+5}}","correct":true}]},{"q":"<p>In an AngularJS application, you have a label for the name and a text field for the user to enter the name. You have used the following CSS for key-down and key-up. If you want to change the color of the text field on key down and back to white on key up, what is the correct way to use the input tag to do this?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>    .keyDown {\n    background-color: green;\n    color: white;\n    }\n    .keyUp {\n    background-color: white;\n    }</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;b&gt;Enter Name: &lt;/b&gt;&lt;input type=\"text\" ng-model=\"someValue\" ng-keydown=\"keyDown=true\" ng-keyup=\"keyDown=false\" ng-class= \"{true:'keyDown', false:'keyUp'}[keyDown]\" /&gt;</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;b&gt;Enter Name: &lt;/b&gt;&lt;input type=\"text\" ng-model=\"someValue\" ng-keydown=\"keyDown=false\" ng-keyup=\"keyDown=true\" ng-class= \"{true:'keyDown', false:'keyUp'}[keyDown]\" /&gt;</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;b&gt;Enter Name: &lt;/b&gt;&lt;input type=\"text\" ng-model=\"someValue\" ng-keydown=\"keyDown=false\" ng-keyup=\"keyDown=true\" ng-class= \"{true:'keyUp', false:'keyDown'}[keyDown]\" /&gt;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>&lt;b&gt;Enter Name: &lt;/b&gt;&lt;input type=\"text\" ng-model=\"someValue\" ng-keydown=\"keyDown=true\" ng-keyup=\"keyDown=false\" ng-class= \"{true:'keyUp', false:'keyDown'}[keyDown]\" /&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719419,"option":"1","correct":true},{"id":1719420,"option":"2","correct":false},{"id":1719421,"option":"3","correct":false},{"id":1719422,"option":"4","correct":false}]},{"q":"<p>If the following is an HTML snippet, what would be the correct angular script to display an alert on the browser when the button is clicked?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;body ng-app=\"myApp\" &gt;\n &lt;div ng-controller=\"app\"&gt;\n &lt;button&gt;&lt;a href=\"\" ng-click=\"alert()\"&gt;Click Here&lt;/a&gt;&lt;/button&gt;\n &lt;/div&gt; \n &lt;/body&gt;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.controller(\"app\", []);\n app.controller(['$scope', function ($app) {\n $app.alert = function () {\n $scope.alert(\"Some Text!\");\n }\n }]);\n &lt;/script&gt;</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module(\"myApp\", []);\n app.controller(“app”, ['$app', function ($app) {\n $app.alert = function () {\n $app.alert(\"Some Text!\");\n }\n }]);\n &lt;/script&gt;</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module(\"myApp\", []);\n app.controller(“app”, ['$scope', function ($app) {\n $app.alert = function () {\n alert(\"Some Text!\");\n }\n }]);\n &lt;/script&gt;</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module(\"app\", []);\n app.controller(“app”, function ($scope) {\n $scope.alert = function () {\n alert(\"Some Text!\");\n }\n }]);\n &lt;/script&gt;</code></pre>","a":[{"id":1719415,"option":"1","correct":false},{"id":1719416,"option":"2","correct":false},{"id":1719417,"option":"3","correct":true},{"id":1719418,"option":"4","correct":false}]},{"q":"<p>In your AngularJS application, if you have used the following syntax for data binding, then you are implementing which of the following data binding?<br>\n<strong>Syntax</strong>: [class]=”variable”</p>","a":[{"id":1719411,"option":"Interpolation","correct":false},{"id":1719412,"option":"Property Binding","correct":true},{"id":1719413,"option":"Component Binding","correct":false},{"id":1719414,"option":"Two-way binding","correct":false}]},{"q":"<p>If the following script is used in your AngularJS application, which is a correct directive that can be used to get the value of the key used?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script type=\"text/javascript\"&gt;\n var app = angular.module('app', []);\n app.controller('controller', function ($scope) {\n $scope.getkeys = function (event) {\n $scope.keyValue = event.keyCode;\n }\n });\n &lt;/script&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719407,"option":"ng-key","correct":false},{"id":1719408,"option":"ng-keyup","correct":false},{"id":1719409,"option":"ng-keydown","correct":false},{"id":1719410,"option":"ng-keypress","correct":true}]},{"q":"<p>If the following snippet has been added to the HTML file, when will the content in the paragraph tag be displayed?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;input type=\"checkbox\" ng-model=\"show\" /&gt;\n &lt;p ng-show=\"show\"&gt; Some content in paragraph tag &lt;/p&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719403,"option":"When the checkbox is checked but will be displayed at the start of the application","correct":false},{"id":1719404,"option":"When the checkbox is unchecked but will be displayed at the start of the application","correct":false},{"id":1719405,"option":"When the checkbox is checked but will not be displayed at the start of the application","correct":true},{"id":1719406,"option":"When the checkbox is unchecked but will not be displayed at the start of the application","correct":false}]},{"q":"<p>In your AngularJS application, you have the functionality to visualize various sorting techniques. The sorting techniques involved should be part of AngularJS application data. Which of the following directive can be used to specify the sorts involved in the application?</p>","a":[{"id":1719399,"option":"ng-init","correct":true},{"id":1719400,"option":"ng-app","correct":false},{"id":1719401,"option":"ng-model","correct":false},{"id":1719402,"option":"ng-bind","correct":false}]},{"q":"<p>You have an AngularJS application listening on PORT 4200. The backend of the application is listening on port 8080, then which of the following file needs to be included in angular.json to enable communication between them?</p>","a":[{"id":1719395,"option":"package.json","correct":false},{"id":1719396,"option":"proxy.conf.json","correct":true},{"id":1719397,"option":"proxy.tconfig.json","correct":false},{"id":1719398,"option":"tsconfig.app.json","correct":false}]},{"q":"<p>In your AngularJS application, you have functionalities to perform various mathematical operations. Considering addition and subtraction as operations, if the following script is used for performing operations, what can be the correct way to initialize the factory service?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> application.controller('myController', function($scope, factoryService) {\n $scope.sub = function() {\n $scope.results = factoryService.Subtract($scope.num1, $scope.num2)\n };\n $scope.add = function() {\n $scope.results = factoryService.Add($scope.num1, $scope.num2)\n };\n });</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>var application = angular.module('myApp', []);\n application('factoryService', function() {\n Subtract = function(num1, num2) {\n return num1 - num2;\n };\n Add = function(num1, num2) {\n return num1 + num2;\n };\n });</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>var application = angular.module('myApp', []);\n application.factory('factoryService', function() {\n var factory = {};\n factory.Subtract = function(num1, num2) {\n return num1 - num2;\n };\n factory.Add = function(num1, num2) {\n return num1 + num2;\n };\n return factory;\n });</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>var application = angular.module('myApp', []);\n application.init('factoryService', function() {\n application.Subtract = function(num1, num2) {\n return num1 - num2;\n };\n application.Add = function(num1, num2) {\n return num1 + num2;\n };\n });</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>var application = angular.module('myApp', []);\n application.getFactory('factoryService', function() {\n var factory = {};\n factory.Subtract = {\n return num1 - num2;\n };\n factory.Add = {\n return num1 + num2;\n };\n return factory;\n });</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719391,"option":"1","correct":false},{"id":1719392,"option":"2","correct":true},{"id":1719393,"option":"3","correct":false},{"id":1719394,"option":"4","correct":false}]},{"q":"<p>In your AngularJS application, you have a text field for the user to specify the name. The text field should be initially empty and no message is displayed. Now, when the user changes the value of the text field to empty after accessing it, a message saying <em>name is required</em> should be displayed next to the text field. If the following is a structure of the HTML code, which of the following would be the correct implementation of the requirement?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;form name=\"myForm\"&gt;\n &lt;p&gt;Name:\n //some code\n &lt;/p&gt;\n &lt;/form&gt;</code></pre>\n\n<p>&nbsp;<strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n &lt;span ng-bind={{myForm.myName.$invalid}}&gt;The name is required.&lt;/span&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n &lt;span ng-show=\"myForm.myName.$touched &amp;&amp; myForm.myName.$invalid\"&gt;The name is required.&lt;/span&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n &lt;span ng-show=\"myForm.myName.$invalid\"&gt;The name is required.&lt;/span&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n &lt;span ng-show={{myForm.myName.$untouched &amp;&amp; myForm.myName.$invalid }}&gt;The name is required.&lt;/span&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719387,"option":"1","correct":false},{"id":1719388,"option":"2","correct":true},{"id":1719389,"option":"3","correct":false},{"id":1719390,"option":"4","correct":false}]},{"q":"<p>In your AngularJS application, you have an animation CSS for a division and a checkbox. When the value of the checkbox is altered, the division vanishes and appears accordingly.<br>\n<strong>Rules</strong><br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. Checkbox should be unchecked initially.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. The division should be present initially.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;3. The division should be animated according to CSS when the checkbox value is altered.<br>\nWhich of the following depicts the correct HTML and script code for the application of the functionality?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>HTML: \n &lt;body ng-app=\"myApp\"&gt;\n &lt;h1&gt;Hide the DIV: &lt;input type=\"checkbox\" ng-model=\"myCheckbox\"&gt;&lt;/h1&gt;\n &lt;div ng-hide=\"myCheckbox\"&gt;&lt;/div&gt;\n &lt;/body&gt;\n \n Script:\n var app = angular.module('myApp', ['ngAnimate']);</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>HTML: \n &lt;body ng-model=\"\"&gt;\n &lt;h1&gt;Hide the DIV: &lt;input type=\"checkbox\" ng-bind=\"myCheckbox\"&gt;&lt;/h1&gt;\n &lt;div ng-show=\"myCheckbox\"&gt;&lt;/div&gt;\n &lt;/body&gt;\n \n Script:\n var app = angular.module('', []);</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>HTML: \n &lt;body ng-app=\"myApp\" ng-controller=\"ngAnimate\" &gt;\n &lt;h1&gt;Hide the DIV: &lt;input type=\"checkbox\" ng-model=\"myCheckbox\"&gt;&lt;/h1&gt;\n &lt;div ng-bind=\"myCheckbox\"&gt;&lt;/div&gt;\n &lt;/body&gt;\n \n Script:\n var app = angular.module('myApp', ['ngAnimate']);</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>HTML: \n &lt;body ng-model=\"myApp\"&gt;\n &lt;h1&gt;Hide the DIV: &lt;input type=\"checkbox\" ng-bind=\"myCheckbox\"&gt;&lt;/h1&gt;\n &lt;div ng-show=\"{{!myCheckbox}}\"&gt;&lt;/div&gt;\n &lt;/body&gt;\n \n Script:\n var app = angular.module('myApp', []);</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719383,"option":"1","correct":true},{"id":1719384,"option":"2","correct":false},{"id":1719385,"option":"3","correct":false},{"id":1719386,"option":"4","correct":false}]},{"q":"<p>You have an AngularJS application, and you want a utility that displays a list of candidates and their major subjects.&nbsp; &nbsp;&nbsp;<br>\n<strong>Rule</strong><br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. You can not use any script other than including angular.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. The list should be numbered from 1 to n.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;3. The display part of the code should be dynamic so that it does not change when new candidates are added.<br>\n<strong>Data</strong><br>\n&nbsp;&nbsp;&nbsp;&nbsp;{name: \"A\", major: \"English\"}<br>\n&nbsp;&nbsp;&nbsp;&nbsp;{name: \"B\", major: \"Chemistry\"}<br>\n&nbsp;&nbsp;&nbsp;&nbsp;{name: \"C\", major: \"Physics\"}</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app = \"candidates\" ng-bind = \"[{name: \"A\", major: \"English\"}, {name: \"B\", major: \"Chemistry\"}, {name: \"C\", major: \"Physics\"}]\"&gt; \n &lt;ol&gt;\n &lt;li ng-repeat = \"candidate in candidates\"&gt;\n ‘Name: ' + {{ candidate.name }} + ', Major: ' + {{ candidate.major }}\n &lt;/li&gt;\n &lt;/ol&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app = \"\" ng-init = \"candidates = [{name: \"A\", major: \"English\"}, {name: \"B\", major: \"Chemistry\"}, {name: \"C\", major: \"Physics\"}]\"&gt; \n &lt;ol&gt;\n &lt;li ng-bind=\"candidates\" ng-for = \"candidate in candidates\"&gt;\n {{ ‘Name: ' + candidate.name + ', Major: ' + candidate.major }}\n &lt;/li&gt;\n &lt;/ol&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app = \"\" ng-bind = \"candidates:[{name: \"A\", major: \"English\"}, {name: \"B\", major: \"Chemistry\"}, {name: \"C\", major: \"Physics\"}]\"&gt; \n &lt;ol&gt;\n &lt;li ng-loop = \"candidate in candidates\"&gt;\n ‘Name: ' + {{ candidate.name }} + ', Major: ' + {{ candidate.major }}\n &lt;/li&gt;\n &lt;/ol&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app = \"\" ng-init = \"candidates = [{name: \"A\", major: \"English\"}, {name: \"B\", major: \"Chemistry\"}, {name: \"C\", major: \"Physics\"}]\"&gt; \n &lt;ol&gt;\n &lt;li ng-repeat = \"candidate in candidates\"&gt;\n {{ ‘Name: ' + candidate.name + ', Major: ' + candidate.major }}\n &lt;/li&gt;\n &lt;/ol&gt;\n &lt;/div&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719379,"option":"1","correct":false},{"id":1719380,"option":"2","correct":false},{"id":1719381,"option":"3","correct":false},{"id":1719382,"option":"4","correct":true}]},{"q":"<p>In your AngularJS application, you have a point where you get the list of items from the server and display them in a dropdown list. The code for retrieving the data had already been written. You have to choose the correct way to integrate the items with the drop-down list and an option to select them in HTML. Which of the following is the correct way to accomplish the integration?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;select ng-app=\"myApp\" ng-controller=\"myController\" ng-options=\"item for item in items\"&gt;\n &lt;ng-model=\"selectedItems\" &gt;&lt;/select&gt;\n &lt;/select&gt;</code></pre>\n\n<p>2</p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"myController\"&gt;\n {{ ng-repeat=\"item for item in items\" }} &lt;select ng-model=\"selectedItems\" &gt;&lt;/select&gt;\n &lt;/div&gt;</code></pre>\n\n<p>3</p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"myController\"&gt;\n &lt;select ng-model=\"selectedItems\" ng-options=\"item for item in items\"&gt;&lt;/select&gt;\n &lt;/div&gt;</code></pre>\n\n<p>4</p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"myController\" ng-repeat=\"item for item in items\"&gt;\n &lt;select ng-bind=\"myController\" &gt;&lt;/select&gt;\n &lt;/div&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719375,"option":"1","correct":false},{"id":1719376,"option":"2","correct":false},{"id":1719377,"option":"3","correct":true},{"id":1719378,"option":"4","correct":false}]},{"q":"<p>You have an AngularJS application and in that, you want to show the coordinates of the mouse pointer when hovered over a particular text. The HTML snippet for the text is:</p>\n\n<pre class=\"prettyprint\"><code>&lt;h1 ng-mousemove=\"myFunction($event)\"&gt;Some text!&lt;/h1&gt;</code></pre>\n\n<p><strong>Rule</strong><br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. The coordinates should change when you hover the mouse over the text only.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. If the mouse has hovered somewhere outside the text, the coordinates of the last mouse pointer over the text should be displayed.<br>\nYou need to write the angular script to implement the functionality that follows the rules. Which of the following is the correct way to implement it?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module('myApplication', []);\n app.controller('myController', function($scope) {\n $scope.myFunction = function(myEvent) {\n $scope.xCoordinate = myEvent.clientX;\n $scope.yCoordinate = myEvent.clientY;\n }\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module('myApplication', []);\n app.controller('myController', function(myEvent) {\n myEvent.xCoordinate = myEvent.clientX;\n myEvent.yCoordinate = myEvent.clientY;\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n angular.controller('myController', function($scope) {\n $scope.myFunction = function(myEvent) {\n myEvent.xCoordinate = myEvent.clientX;\n myEvent.yCoordinate = myEvent.clientY;\n }\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module('myApplication', []);\n app.controller('myController', myFunction = function($myEvent) {\n $app.xCoordinate = myEvent.clientX;\n $app.yCoordinate = myEvent.clientY;\n });\n &lt;/script&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719371,"option":"1","correct":true},{"id":1719372,"option":"2","correct":false},{"id":1719373,"option":"3","correct":false},{"id":1719374,"option":"4","correct":false}]},{"q":"<p>You have an AngularJS application hosted locally. It contains various text fields and various related data. You want to design a text field that follows the given rules:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. The background color of the text field should change according to the text field input.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. If text field input is an invalid color, the white background should be displayed.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;3. Only angular directives should be used, no script should be included other than AngularJS.<br>\nWhat would be the correct way to design a text field in this way?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-init=\"\" ng-bind=\"userColor=\"\" \"&gt;\n &lt;input style=\"background-color:{{ng-model=\"userColor\"}}\" &gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"\" ng-init=\"userColor=\"\" \"&gt;\n &lt;input style=\"background-color:{{userColor}}\" &gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-init=\"\" ng-model=\"userColor=\"\" \"&gt;\n &lt;input style=\"background-color:{{userColor}}\" ng-bind=\"userColor\"&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"\" ng-init=\"userColor=\"\" \"&gt;\n &lt;input style=\"background-color:{{userColor}}\" ng-model=\"userColor\"&gt;\n &lt;/div&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719367,"option":"1","correct":false},{"id":1719368,"option":"2","correct":false},{"id":1719369,"option":"3","correct":false},{"id":1719370,"option":"4","correct":true}]},{"q":"<p>You have an AngularJS application that contains a division for an organization's details. The name of the organization is used frequently, hence it is needed to be declared at the start of application in a variable.<br>\nWhat would be the correct option that declares the variable at the start of the application and uses it later?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"\" name=\"organizationName='XYZ'\"&gt;\n &lt;p&gt;The name of the organisation is &lt;span ng-bind=\"name\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"\" ng-init=\"organizationName='XYZ'\"&gt;\n &lt;p&gt;The name of the organisation is &lt;span ng-bind=\"organizationName\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"\" init=\"name:organizationName='XYZ'\"&gt;\n &lt;p&gt;The name of the organisation is &lt;span ng-bind=\"name\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"organizationName\" ng-model=\"name='XYZ'\"&gt;\n &lt;p&gt;The name of the organisation is &lt;span ng-bind=\"organizationName\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;/div&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719363,"option":"1","correct":false},{"id":1719364,"option":"2","correct":true},{"id":1719365,"option":"3","correct":false},{"id":1719366,"option":"4","correct":false}]},{"q":"<p>In your AngularJS application, You have demo data stored at a position with URL as \"/demoData.txt\". You want to get that data using an HTTP request and display it in a table. The HTML snippet for the same has been given below, what is the correct way of writing an angular script to achieve this?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;div ng-app = \"\" ng-controller = \"myController\"&gt;\n &lt;table&gt;\n &lt;tr&gt;\n &lt;th&gt;Field 1&lt;/th&gt;\n &lt;th&gt;Field 2&lt;/th&gt;\n &lt;/tr&gt;\n &lt;tr ng-repeat = \"data in demoData\"&gt;\n &lt;td&gt;{{ data.field1 }}&lt;/td&gt;\n &lt;td&gt;{{ data.field2 }}&lt;/td&gt;\n &lt;/tr&gt;\n &lt;/table&gt;\n &lt;/div&gt;</code></pre>\n\n<p><br>\n&nbsp;<strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n function myController($scope) {\n var url = \"/demoData.txt\";\n $scope.http.get(url).then( function(response) {\n $scope.demoData = response.data;\n });\n }\n &lt;/script&gt;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n function myController($scope, $http) {\n var url = \"/demoData.txt\";\n $http('get', url).then( function(response) {\n $scope.demoData = response.data;\n });\n }\n &lt;/script&gt;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n function myController($scope) {\n var url = \"/demoData.txt\";\n $scope.http(\"get\", url).then( function(response) {\n $scope.demoData = response.data;\n });\n }\n &lt;/script&gt;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n function myController($scope, $http) {\n var url = \"/demoData.txt\";\n $http.get(url).then( function(response) {\n $scope.demoData = response.data;\n });\n }\n &lt;/script&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719359,"option":"1","correct":false},{"id":1719360,"option":"2","correct":false},{"id":1719361,"option":"3","correct":false},{"id":1719362,"option":"4","correct":true}]},{"q":"<p>In your AngularJS application, you have a controller that binds the first name and the last name of the candidate with the respective variables. You want to display the first name and the last name for the candidate as soon as the value of their respective inputs is changed. If you have only written the following code, what would be the output if the values of the input fields are as follows?<br>\n&nbsp;&nbsp;&nbsp;&nbsp;First name: ABC<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Last Name: MNO<br>\n&nbsp;&nbsp;&nbsp;&nbsp;<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;div ng-app=\"myApp\" ng-controller=\"myController\"&gt;\n First Name: &lt;input type=\"text\" ng-model=\"firstName\"&gt;&lt;br&gt;\n Last Name: &lt;input type=\"text\" ng-model=\"lastName\"&gt;&lt;br&gt;\n &lt;br&gt;\n Full Name: {{firstName + \" \" + lastName}}\n &lt;/div&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719355,"option":"Full Name: firstName lastName","correct":false},{"id":1719356,"option":"Full Name: {{firstName + \" \" + lastName}}","correct":true},{"id":1719357,"option":"Full Name: ABC MNO","correct":false},{"id":1719358,"option":"Full Name: ABC + \" \" + MNO","correct":false}]},{"q":"<p>You are using the AngularJS framework in which you have a division with an ng-app directive and you want a text field corresponding to a name label. As soon as the user types in the text field, the same text needs to be reflected in a paragraph tag. If you have the following snippet, what is the correct way to achieve the goal?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n &lt;body&gt;\n \n &lt;div ng-app=\"\"&gt;\n \n &lt;/div&gt;\n \n &lt;/body&gt;\n &lt;/html&gt;</code></pre>\n\n<p>&nbsp;<strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Name: &lt;input type=\"text\" ng-model=\"name\"&gt;&lt;/p&gt;\n &lt;p ng-bind=\"name\"&gt;&lt;/p&gt;</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Name: &lt;input type=\"text\" ng-model=\"bind\"&gt;&lt;/p&gt;\n &lt;p ng-bind=\"text\"&gt;&lt;/p&gt;</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Name: &lt;input type=\"bind\" ng-bind=\"name\"&gt;&lt;/p&gt;\n &lt;p ng-bind=\"name\"&gt;&lt;/p&gt;</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;p&gt;Name: &lt;input type=\"bind\" ng-bind=\"name\"&gt;&lt;/p&gt;\n &lt;p ng-value=\"name\"&gt;&lt;/p&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719351,"option":"1","correct":true},{"id":1719352,"option":"2","correct":false},{"id":1719353,"option":"3","correct":false},{"id":1719354,"option":"4","correct":false}]},{"q":"<p>You have a mathematical expression to solve and display the result for it. You had to use AngularJS extending HTML for evaluating the expression.&nbsp;What would be the correct alternative to display the evaluation result?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n &lt;body&gt;\n \n &lt;div ng-app=\"\"&gt;\n &lt;p&gt;Evaluation Result is: {{ 2 * 5 + 13 }}&lt;/p&gt;\n &lt;/div&gt;\n \n &lt;/body&gt;\n &lt;/html&gt;</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n &lt;body&gt;\n \n &lt;div ng-app=\"\"&gt;\n &lt;p&gt;Evaluation Result is: {{ &lt;span ng-eval=\"2 * 5 + 13\"&gt; }}&lt;/p&gt;\n &lt;/div&gt;\n \n &lt;/body&gt;\n &lt;/html&gt;</code></pre>\n\n<p><strong>3</strong>.</p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n &lt;body&gt;\n \n &lt;div ng-app=\"\" ng-math=\"true\"&gt;\n &lt;p&gt;Evaluation Result is: { 2 * 5 + 13 }&lt;/p&gt;\n &lt;/div&gt;\n \n &lt;/body&gt;\n &lt;/html&gt;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n &lt;body&gt;\n \n &lt;div ng-app=\"\" ng-init=\"math\"&gt;\n &lt;p&gt;Evaluation Result is: {{ ng-bind=\"math{2 * 5 + 13}\" }}&lt;/p&gt;\n &lt;/div&gt;\n \n &lt;/body&gt;\n &lt;/html&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719347,"option":"1","correct":true},{"id":1719348,"option":"2","correct":false},{"id":1719349,"option":"3","correct":false},{"id":1719350,"option":"4","correct":false}]},{"q":"<p>You have a basic AngularJS application setup locally. You need to design an Angular component using HTML that can do the following:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. Calculates and displays the total cost.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. No additional script is added apart from the AngularJS script.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;3. The calculation part should be dynamic and not hardcoded.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Quantity: 5 cost: 50<br>\nWhich of the following would result in the correct cost and display it accordingly?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"\" ng-init=\"quantity=5;cost=50\"&gt;\n \n &lt;p&gt;Total cost: &lt;span ng-bind=\"quantity * cost\"&gt;&lt;/span&gt;&lt;/p&gt;\n \n &lt;/div&gt;</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"\" ng-init=\"quantity=5;cost=50\"&gt;\n \n &lt;p&gt;Total cost: &lt;span ng-model=\"{{quantity * cost}}\"&gt;&lt;/span&gt;&lt;/p&gt;\n \n &lt;/div&gt;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-init=\"\" ng-model=\"quantity=5;cost=50\"&gt;\n \n &lt;p&gt;Total cost: &lt;span ng-bind={{quantity * cost}}&gt;&lt;/span&gt;&lt;/p&gt;\n \n &lt;/div&gt;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"\" ng-init=\"{{quantity=5;cost=50}}\"&gt;\n \n &lt;p&gt;Total cost: &lt;span ng-model=\"quantity * cost\"&gt;&lt;/span&gt;&lt;/p&gt;\n \n &lt;/div&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719343,"option":"1","correct":true},{"id":1719344,"option":"2","correct":false},{"id":1719345,"option":"3","correct":false},{"id":1719346,"option":"4","correct":false}]},{"q":"<p>In your AngularJS application, you have a checkbox and a button. You have to implement a functionality following these rules:</p>\n\n<p><strong>Rules</strong><br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. The button should not be displayed initially.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. If the user clicks on the checkbox, the button should be displayed.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;3. The button should not be displayed again when the value of the checkbox is changed.</p>\n\n<p>Which of the following would be the correct alternative to implement the functionality?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;input type = \"checkbox\" ng-model = \"myButton\"&gt;My Button\n &lt;button ng-disabled = \"myButton\"&gt;Click Me!&lt;/button&gt;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>&lt;input type = \"checkbox\" ng-model = \"myButton\"&gt;My Button\n &lt;button ng-show = \"myButton\"&gt;Click Me!&lt;/button&gt;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>&lt;input type = \"checkbox\" ng-model = \"myButton\"&gt;My Button\n &lt;button ng-hide = \"myButton\"&gt;Click Me!&lt;/button&gt;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>&lt;input type = \"checkbox\" ng-model = \"myButton\"&gt;My Button\n &lt;button ng-click = \"mybutton\"&gt;Click Me!&lt;/button&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719339,"option":"1","correct":false},{"id":1719340,"option":"2","correct":true},{"id":1719341,"option":"3","correct":false},{"id":1719342,"option":"4","correct":false}]},{"q":"<p>You have the following HTML snippet. What is the correct script for displaying the value name1 in uppercase and name2 in lowercase?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;div ng-app=\"myApp\" ng-controller=\"myController\"&gt;\n &lt;p&gt;{{ name1 }}&lt;/p&gt;\n &lt;p&gt;{{ name2 }}&lt;/p&gt;\n &lt;/div&gt;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n $init('myApp').controller('myController', function($scope) {\n $scope.name1 = \"XYZ\";\n $scope.name2 = angular.lowercase($scope.x1);\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.name1 = \"XYZ\";\n $scope.name2 = angular.lowercase($scope.x1);\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n var app = angular.module('myApp', []);\n app.controller('myController', function($scope) {\n $scope.name1 = \"XYZ\";\n $scope.name2 = ($scope.x1) | lowercase;\n });\n &lt;/script&gt;</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;script&gt;\n angular.init(\"myApp\").controller('myController', function($scope) {\n $scope.name1 = \"XYZ\";\n $scope.name2 = ($scope.x1) | lowercase;\n });\n &lt;/script&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719335,"option":"1","correct":false},{"id":1719336,"option":"2","correct":true},{"id":1719337,"option":"3","correct":false},{"id":1719338,"option":"4","correct":false}]},{"q":"<p>You have the following function, that needs to be executed after a delay of 5 seconds. What AngularJS service would you use to accomplish this?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>    function () {\n    $scope.data = \"Some data\";\n    }\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719331,"option":"$timeout.delay(function(){ … }, 5000);","correct":false},{"id":1719332,"option":"window.setTimeout(function(){ … }, 5000);","correct":false},{"id":1719333,"option":"$timeout(function(){ … }, 5000);","correct":true},{"id":1719334,"option":"$timeout.set(function(){ … }, 5000);","correct":false}]},{"q":"<p>You want to use an AngularJS service in your application that returns information about the location of the current web page. If you have the following snippet, what would be the correct use of the service to retrieve the desired information?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>    var myApplication = angular.module('myApplication', []);\n    myApplication.controller('someController', function($scope, $location) {\n    //code to retrieve desired information\n    });</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719327,"option":"$scope.myUrl = $location.absUrl();","correct":true},{"id":1719328,"option":"$scope.myUrl = $location.absPath();","correct":false},{"id":1719329,"option":"$scope.myUrl = $location.href();","correct":false},{"id":1719330,"option":"$scope.myUrl = $location.metaData();","correct":false}]},{"q":"<p>You want to modify the data so as to present them in a particular form. You need to display the height of the students in increasing order.<br>\nYou are using the code given below to display the list. The starting li tag contains some missing code. What code would you consider adding in the li tag?<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code> &lt;ul&gt;\n &lt;li MISSING CODE&gt;\n {{ student.name + ', height:' + student.height }}\n &lt;/li&gt;\n &lt;/ul&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719319,"option":"ng-model = \"height in student.heights | groupBy:'heights'\"","correct":false},{"id":1719320,"option":"Ng-controller = \"height in student.heights | groupBy:'heights'\"","correct":false},{"id":1719321,"option":"ng-repeat = \"height in student.heights || ASC|orderBy:'heights'\"","correct":false},{"id":1719322,"option":"ng-repeat = \"height in student.heights | orderBy:'heights'\"","correct":true}]},{"q":"<p>You are initializing numbers in Angular JS for processing it further with expression. You are given the code you are using to initialize and process.<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n &lt;html&gt;\n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n &lt;body&gt;\n &lt;div &lt;MISSING CODE&gt;=\"roll_no=13;marks=52:total_marks=60;\"&gt;\n &lt;h5&gt;Percentage of marks: {{ marks * 100/ total_marks }}&lt;/h5&gt;\n &lt;/div&gt;\n &lt;/body&gt;\n &lt;/html&gt;</code></pre>\n\n<p>What directive will you use in the MISSING CODE to initialize the variables?</p>","a":[{"id":1719315,"option":"ng-init","correct":true},{"id":1719316,"option":"ng-app","correct":false},{"id":1719317,"option":"ng-bind","correct":false},{"id":1719318,"option":"ng-model","correct":false}]},{"q":"<p>You can disable animations globally for any of the required animations to increase the rendering speed. You want to configure the animations using a function while allowing the following:<br>\n<strong>Rules</strong><br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. You can call the function even during the config phase of the app.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. The function must take only a single filter function.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;3. The animations must work only if the filter function returns true.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;4. It must not be a difficult task to set up rules allow some of the specific events along with the animations for the DOM’s subtrees (with dynamic modification feature).</p>\n\n<p>Which of the following functions would you use to enable the developer to perform the given functions?</p>","a":[{"id":1719311,"option":"$animateProvider.customFilter()","correct":true},{"id":1719312,"option":"$animateProvider.classNameFilter()","correct":false},{"id":1719313,"option":"$animate.enabled()","correct":false},{"id":1719314,"option":"$animateProvider.Filter()","correct":false}]},{"q":"<p>You are using the MVC pattern for building the web application to avoid the complexities of the application logic in the UI. You need to achieve the following objectives:<br>\n<strong>Rules</strong><br>\n&nbsp;&nbsp;&nbsp;&nbsp;1. Interact with the models to build up the data needed.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;2. The response must be presentable.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;3. There must be a proper response to the input by the user.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;4. There must be secure validation of the user’s input before modifying the data.<br>\nBy using which of the following would you ensure the aforementioned objectives?</p>","a":[{"id":1719307,"option":"The Model","correct":false},{"id":1719308,"option":"The View","correct":false},{"id":1719309,"option":"The Controller","correct":true},{"id":1719310,"option":"The event","correct":false}]},{"q":"<p>You want to check out the regional data centers like Google Host and transfer the task of hosting the files from personal servers to an external group of servers to ensure not downloading the Angular JS again if previously downloaded. What would you do to enable the user to accomplish this?</p>","a":[{"id":1719303,"option":"Use the ng-controller for access","correct":false},{"id":1719304,"option":"Integrate the API with Google Hosts","correct":false},{"id":1719305,"option":"Use HTTP protocol","correct":false},{"id":1719306,"option":"Allow CDN access","correct":true}]},{"q":"<p>We extend the HTML attributes and bind data with Directives and Expressions to them in Angular JS. How would you bind the application data to the HTML control’s values like input?</p>","a":[{"id":1719299,"option":"Using ng-app","correct":false},{"id":1719300,"option":"Using ng-model","correct":true},{"id":1719301,"option":"Using ng-bind","correct":false},{"id":1719302,"option":"Using ng-init","correct":false}]},{"q":"<p>You want to mark the DOM elements like attributes, elements, and CSS, etc to develop new custom tags to be used in HTML to allow users to add new widgets. How would you enable users to use those tags?</p>","a":[{"id":1719295,"option":"Filters","correct":false},{"id":1719296,"option":"Directives","correct":true},{"id":1719297,"option":"Templates","correct":false},{"id":1719298,"option":"Routing","correct":false}]},{"q":"<p>We use data binding to synchronize between the model and the view. The changes in the model affect the view along with updating the models as well. You have a controller “test-ctrl” and an input named test_id. The function is defined in the script along with the controller. Go through the code given below. It has a total of 3 lines missing named Line1, Line2, Line 3. Choose the appropriate option to replace the missing lines.<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>Var test_app = angular.module(\"test_app\", []);\n Line1\n \n Line2\n $scope.number = test_Input;\n $scope.output = testService.square($scope.number);\n $scope.operation = function() {\n $scope.output = testService.operation($scope.number);\n }\n });</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div controller = “test_ctrl”&gt;\n var app = angular.module(TEST_APP, []);\n app.controller(function($scope) {</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div controller = “test_ctrl”, $scope&gt;\n var app = angular.module(TEST_APP, []);\n app.controller(function(test_id) {</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"TEST_APP\" ng-controller=\"test_ctrl\"&gt;\n var app = angular.module('TEST_APP', []);\n app.controller('test_ctrl', function($scope) {</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div app=\"TEST_APP\" controller=\"test_ctrl\"&gt;\n var app = angular.module('TEST_APP', []);\n app.controller(function($scope) {</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719291,"option":"1","correct":false},{"id":1719292,"option":"2","correct":false},{"id":1719293,"option":"3","correct":true},{"id":1719294,"option":"4","correct":false}]},{"q":"<p>You are required to pass the values during the config part to the controller when AngularJS bootstraps itself. The module name is ‘testapp’ and the inputs are named as ‘test_inp’. Now, you need to inject the values into the controller. The given code has 2 lines missing as Line1 and Line2. What would you replace them with so that the code works without any errors?<br>\n<strong>Code</strong>:</p>\n\n<pre class=\"prettyprint\"><code>Var test_app = angular.module(\"test_app\", []);\n    Line1\n    \n    Line2\n    $scope.number = test_Input;\n    $scope.output = testService.square($scope.number);\n    $scope.operation = function() {\n    $scope.output = testService.operation($scope.number);\n    }\n    });</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>test_app.value(test_Input, 100);\n test_controller.controller(test_ctrl, function(scope, testService, test_Input) {</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>test_app.value(test_Input, 100);\n test_controller.controller('testService', function(testService) {</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>test_app.value(\"test_Input\", 100);\n test_app.controller('test_ctrl', function($scope, testService, test_Input) {</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>test_input = input();\n test_controlloer(test_input){</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1719287,"option":"1","correct":false},{"id":1719288,"option":"2","correct":false},{"id":1719289,"option":"3","correct":true},{"id":1719290,"option":"4","correct":false}]},{"q":"<p>You have created an Angular app. You have written the code given alongside while implementing lazy loading and some of the changes are done automatically because this is the ts (typescript) file for your angular app. What is the function of providers here?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n@NgModule({\n declarations: [\n AppComponent\n ],\n imports: [\n BrowserModule,\n AppRoutingModule\n ],\n providers: [], \n bootstrap: [AppComponent] \n})\nexport class AppModule { }</code></pre>\n\n<p> </p>","a":[{"id":1654113,"option":"Providers receive an array of components that are part of the module.","correct":false},{"id":1654114,"option":"Providers define an array of components, directives and pipes which will be used by the other modules.","correct":false},{"id":1654115,"option":"Providers declare the services. If it is the root module, the services are available for the entire application.","correct":true},{"id":1654116,"option":"Providers only declare components.","correct":false}]},{"q":"<p>You are creating an Angular app. You want to implement lazy loading in your app. Given below are the steps that you need to follow:<br>\nI. Starting with a new Angular 4 project, you can create a new project.<br>\nII. Create a lazy loading module.<br>\nIII. Now, you have to create two new components to demonstrate lazy loading.<br>\nWhat will be the CLI commands for the given steps?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>$ ng new lazyDemo –routing\n$ ng g module lazy –flat\n$ ng g c lazy-child\n</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>$ ng new lazyDemo –routing\n$ ng g module lazy –flat\n$ ng g c lazy-parent</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>$ ng new lazyDemo –routing\n$ ng g module lazy –flat\n$ ng g c lazy-parent\n$ ng g c lazy-child</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>$ ng g module lazy –flat\n$ ng g c lazy-parent\n$ ng g c lazy-child</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654105,"option":"1","correct":false},{"id":1654106,"option":"2","correct":false},{"id":1654107,"option":"3","correct":true},{"id":1654108,"option":"4","correct":false}]},{"q":"<p>You have used the table to display the names and countries in which these banks are established. You have written the code as given alongside. What is odd and even used for in the code-snippet?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;style&gt;\ntable, td {\n border: 1px solid grey;\n border-collapse: collapse;\n padding: 5px;\n}\n&lt;/style&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;body&gt;\n\n&lt;div ng-app=\"myApp\" ng-controller=\"customersCtrl\"&gt; \n&lt;table&gt;\n &lt;tr ng-repeat=\"x in names\"&gt;\n &lt;td ng-if=\"$odd\" style=\"background-color:#f1f1f1\"&gt;\n {{ x.Name }}&lt;/td&gt;\n &lt;td ng-if=\"$even\"&gt;\n {{ x.Name }}&lt;/td&gt;\n &lt;td ng-if=\"$odd\" style=\"background-color:#f1f1f1\"&gt;\n {{ x.Country }}&lt;/td&gt;\n &lt;td ng-if=\"$even\"&gt;\n {{ x.Country }}&lt;/td&gt;\n &lt;/tr&gt;\n&lt;/table&gt;\n&lt;/div&gt;\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('customersCtrl', function($scope, $http) {\n $http.get(\"customers.php\")\n .then(function (response) {$scope.names = response.data.records;});\n});\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p> </p>","a":[{"id":1654097,"option":"Here the $odd and $even are used for alternate names of the banks.","correct":false},{"id":1654098,"option":"Here $odd and $even are used to alternate between the white and grey colors for displaying 2 colors alternatively in the rows.","correct":true},{"id":1654099,"option":"Here $odd and $even are used to alternate between the white and grey colors for displaying different colors in the rows.","correct":false},{"id":1654100,"option":"To alternate between countries.","correct":false}]},{"q":"<p>You have designed a form in Angular. Now, you want to use CSS properties to style the form. You style the form in such a way that when the user inputs a text in the input field, the form's background changes from blue to pink to let the user know that he/she has modified the form and that he/she does not need to fill the areas which are pink. Which of the following code-snippets corresponds to the above situation?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt; \n&lt;style&gt;\nform.ng-pristine {\n background-color:lightblue;\n}\nform.ng-dirty {\n background-color:pink;\n}\n&lt;/style&gt;\n&lt;body ng-app=\"\"&gt;\n\n&lt;form name=\"myForm\"&gt;\n\n&lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt; \n&lt;style&gt;\nform.ng-dirty {\n background-color:lightblue;\n}\nform.ng-dirty {\n background-color:pink;\n}\n&lt;/style&gt;\n&lt;body ng-app=\"\"&gt;\n\n&lt;form name=\"myForm\"&gt;\n\n&lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt; \n&lt;style&gt;\nform.ng-pristine {\n background-color:pink;\n}\nform.ng-dirty {\n background-color:lightblue;\n}\n&lt;/style&gt;\n&lt;body ng-app=\"\"&gt;\n\n&lt;form name=\"myForm\"&gt;\n\n&lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt; \n&lt;style&gt;\nform.ng-pristine {\n background-color:lightblue;\n}\nform.ng-dirty {\n background-color:pink;\n}\n&lt;/style&gt;\n&lt;body ng-repeat=\"\"&gt;\n\n&lt;form name=\"myForm\"&gt;\n\n&lt;input name=\"myName\" ng-model=\"myName\" required&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654093,"option":"1","correct":true},{"id":1654094,"option":"2","correct":false},{"id":1654095,"option":"3","correct":false},{"id":1654096,"option":"4","correct":false}]},{"q":"<p>While implementing routing in your Angular app, you wrote the code given alongside. What function is performed by the Activated route, here?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>@Component({...})\nclass MyComponent {\n constructor(route: ActivatedRoute) {\n const id: Observable&lt;string&gt; = route.params.pipe(map(p =&gt; p.id));\n const url: Observable&lt;string&gt; = route.url.pipe(map(segments =&gt; segments.join('')));\n // route.data includes both `data` and `resolve`\n const user = route.data.pipe(map(d =&gt; d.user));\n }\n}</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>ActivatedRoute contains the information about a route associated with a component loaded in an outlet. It can also be used to traverse the router state component. The ActivatedRoute will be injected as a router service to access the information. In the given code snippet, you can access route path and parameters.</li>\n\t<li>ActivatedRoute contains the information about a route associated with a component loaded in an outlet. It can also be used to traverse the router state tree. The ActivatedRoute will be injected as a router service to access the information. In the given code snippet, you can make route path and parameters available.</li>\n\t<li>ActivatedRoute contains the information about a route associated with a component loaded in an outlet. It can also be used to traverse the router state tree. The ActivatedRoute will be transformed as a router service to access the information. In the given code snippet, you can access route path and parameters.</li>\n\t<li>ActivatedRoute contains the information about a route associated with a component loaded in an outlet. It can also be used to traverse the router state tree. The ActivatedRoute will be injected as a router service to access the information. In the given code snippet, you can access route path and parameters.</li>\n</ol>","a":[{"id":1654089,"option":"1","correct":false},{"id":1654090,"option":"2","correct":false},{"id":1654091,"option":"3","correct":false},{"id":1654092,"option":"4","correct":true}]},{"q":"<p>You have implemented routing in your Angular app. You have assigned string values to the router-link directive - a list of todos and completed todos. Which of the given code-snippets represents the above condition?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;h1&gt;Angular Router&lt;/h1&gt;\n&lt;nav&gt;\n &lt;a routerLink=\"/todosList\" &gt;List of todos&lt;/a&gt;\n &lt;a routerLink=\"/completed\" &gt;Completed todos&lt;/a&gt;\n&lt;/nav&gt;\n&lt;router-outlet&gt;&lt;/router-outlet&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;h1&gt;Angular Router&lt;/h1&gt;\n&lt;nav href=\"https://tutorialedge.net/typescript/angular/angular-routing-tutorial/\"&gt;\n &lt;a routerLink=\"/todosList\" &gt;List of todos&lt;/a&gt;\n &lt;a routerLink=\"/completed\" &gt;Completed todos&lt;/a&gt;\n&lt;/nav&gt;\n&lt;router-outlet&gt;&lt;/router-outlet&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;h1&gt;Angular Router&lt;/h1&gt;\n&lt;nav&gt;\n &lt;a router=\"/todosList\" &gt;List of todos&lt;/a&gt;\n &lt;a router=\"/completed\" &gt;Completed todos&lt;/a&gt;\n&lt;/nav&gt;\n&lt;router-outlet&gt;&lt;/router-outlet&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;h1&gt;Angular Router&lt;/h1&gt;\n&lt;nav&gt;\n &lt;a href=\"/todosList\" &gt;List of todos&lt;/a&gt;\n &lt;a href=\"/completed\" &gt;Completed todos&lt;/a&gt;\n&lt;/nav&gt;\n&lt;router-outlet&gt;&lt;/router-outlet&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654085,"option":"1","correct":true},{"id":1654086,"option":"2","correct":false},{"id":1654087,"option":"3","correct":false},{"id":1654088,"option":"4","correct":false}]},{"q":"<p>You have designed a table to display the name and countries of a list of people. For designing the table you have used the CSS properties given alongside. What does the border-collapse property perform?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;style&gt;\ntable, th , td {\n border: 1px solid grey;\n border-collapse: collapse;\n padding: 5px;\n}\ntable tr:nth-child(odd) {\n background-color: #f1f1f1;\n}\ntable tr:nth-child(even) {\n background-color: #ffffff;\n}\n&lt;/style&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;</code></pre>\n\n<p> </p>","a":[{"id":1654081,"option":"The border-collapse property sets whether table borders should show as single border or be separated as in standard HTML.","correct":false},{"id":1654082,"option":"The border-collapse property sets whether table borders should collapse into a single border or be separated as in standard HTML.","correct":true},{"id":1654083,"option":"The border-collapse property sets whether table should segregate the elements stored inside the table or not.","correct":false},{"id":1654084,"option":"The border-collapse property sets whether table borders should collapse into a single border or be separated as in standard JavaScript.","correct":false}]},{"q":"<p>You have developed an Angular app. You have created a button such that the number of times you will click on the button, \"Click Here!\" will get displayed corresponding to the total number of clicks. Which of the following code-snippets corresponds to the above situation.</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-click=\"\"&gt;\n&lt;p&gt;Total number of Clicks: {{ Counts }}&lt;/p&gt;\n&lt;button ng-click = \"Counts = Counts+ 1\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-app=\"\"&gt;\n&lt;p&gt;Total number of Clicks: {{ Counts }}&lt;/p&gt;\n&lt;button ng-show = \"Counts = Counts+ 1\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-app=\"\"&gt;\n&lt;p&gt;Total number of Clicks: {{ Counts }}&lt;/p&gt;\n&lt;button ng-click = \"Counts = Counts+ 1\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-app=\"\"&gt;\n&lt;p&gt;Total number of Clicks: {{ Counts }}&lt;/p&gt;\n&lt;button ng-disabled = \"Counts = Counts+ 1\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654077,"option":"1","correct":false},{"id":1654078,"option":"2","correct":false},{"id":1654079,"option":"3","correct":true},{"id":1654080,"option":"4","correct":false}]},{"q":"<p>You have created an app in Angular. In this app, you have used various mouse events to display various functions. Which of the following is <em>NOT</em> a mouse event?</p>","a":[{"id":1654069,"option":"ng-mouseleave","correct":false},{"id":1654070,"option":"ng-mousedown","correct":false},{"id":1654071,"option":"ng-mouseover","correct":false},{"id":1654072,"option":"ng-mouseclick","correct":true}]},{"q":"<p>You want to count the number of times a mouse has been moved over a certain text 'Mouse over me'. You have written the code such that below the text is shown the number of times the mouse has been moved over the text. Select from the code sections given in options that provide the above functionality.</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;body&gt;\n\n&lt;div ng-app=\"myApp\" ng-controller=\"PersonCtrl\"&gt;\n\n&lt;h1 ng-mousemove=\"count = count + 1\"&gt;Mouse Over Me!&lt;/h1&gt;\n\n&lt;h2&gt;{{ count }}&lt;/h2&gt;\n\n&lt;/div&gt;\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n $scope.count = 0;\n});\n&lt;/script&gt; \n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;body&gt;\n\n&lt;div ng-app=\"myApp\" ng-controller=\"myCtrl\"&gt;\n\n&lt;h1 ng-mousemove=\"count = count + 1\"&gt;Mouse Over Me!&lt;/h1&gt;\n\n&lt;h2&gt;{{ countOverMe }}&lt;/h2&gt;\n\n&lt;/div&gt;\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n $scope.count = 0;\n});\n&lt;/script&gt; \n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;body&gt;\n\n&lt;div ng-app=\"myApp\" ng-controller=\"myCtrl\"&gt;\n\n&lt;h1 ng-mousemove=\"count = count + 1\"&gt;Mouse Over Me!&lt;/h1&gt;\n\n&lt;h2&gt;{{ count }}&lt;/h2&gt;\n\n&lt;/div&gt;\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n $scope.count = 0;\n});\n&lt;/body&gt; \n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;body&gt;\n\n&lt;div ng-app=\"myApp\" ng-controller=\"myCtrl\"&gt;\n\n&lt;h1 ng-mousemove=\"count = count + 1\"&gt;Mouse Over Me!&lt;/h1&gt;\n\n&lt;h2&gt;{{ count }}&lt;/h2&gt;\n\n&lt;/div&gt;\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n $scope.count = 0;\n});\n&lt;/script&gt; \n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654065,"option":"1","correct":false},{"id":1654066,"option":"2","correct":false},{"id":1654067,"option":"3","correct":false},{"id":1654068,"option":"4","correct":true}]},{"q":"<p>You want to update specific properties of your form model. The properties are the user's name and the user's address (street number). Which of the following code snippets performs this functionality?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>updateProfile() {\n this.userProfile.patchValue({\n firstName: 'John',\n address: {\n street: '98 Crescent Street'\n }\n });\n}\n &lt;Controller=\"updateProfile()\"&gt;Update Profile&lt;/Controller&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>updateProfile() {\n this.userProfile.patchValue({\n firstName: 'John',\n address: {\n street: '98 Crescent Street'\n }\n });\n}\n &lt;button (click)=\"updateProfile()\"&gt;Update Profile&lt;/button&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>updateProfile() {\n this.userProfile.patchValue({\n firstName: 'John',\n address: '98 Crescent Street'\n });\n}\n &lt;button (click)=\"updateProfile()\"&gt;Update Profile&lt;/button&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>updateProfile() {\n userProfile.patchValue({\n firstName: 'John',\n address: {\n street: '98 Crescent Street'\n }\n });\n}\n &lt;button (click)=\"updateProfile()\"&gt;Update Profile&lt;/button&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654061,"option":"1","correct":false},{"id":1654062,"option":"2","correct":true},{"id":1654063,"option":"3","correct":false},{"id":1654064,"option":"4","correct":false}]},{"q":"<p>You want to deploy a form on your Angular app. It is not a simple or ordinary form but a dynamic form. In the code section, the 'ts' (typescript) file for your dynamic form is given. Which of the following code-snippets provides the html file for your dynamic form?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { QuestionBase } from './question-base';\n\n@Component({\n selector: 'app-question',\n templateUrl: './dynamic-form-question.component.html'\n})\nexport class DynamicFormQuestionComponent {\n @Input() question!: QuestionBase&lt;string&gt;;\n @Input() form!: FormGroup;\n get isValid() { return this.form.controls[this.question.key].valid; }\n}</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;div [formGroup]=\"form\"&gt;\n &lt;label [attr.for]=\"question.key\"&gt;{{question.label}}&lt;/label&gt;\n\n &lt;div [ngSwitch]=\"question.controlType\"&gt;\n\n &lt;input *ngSwitchCase=\"'textbox'\" [formControlName]=\"question.key\"\n [id]=\"question.key\" [type]=\"question.type\"&gt;\n\n &lt;select [id]=\"question.key\" *ngSwitchCase=\"'dropdown'\" [formControlName]=\"question.key\"&gt;\n &lt;option *ngFor=\"let opt of question.options\" [value]=\"opt.key\"&gt;{{opt.value}}&lt;/option&gt;\n &lt;/select&gt;\n\n &lt;/div&gt;\n\n &lt;div class=\"errorMessage\" *ngIf=\"!isValid\"&gt;{{question.label}} is required&lt;/div&gt;\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;div [formGroup]=\"form\"&gt;\n &lt;script [attr.for]=\"question.key\"&gt;{{question.label}}&lt;/script&gt;\n\n &lt;div [ngSwitch]=\"question.controlType\"&gt;\n\n &lt;input *ngSwitchCase=\"'textbox'\" [formControlName]=\"question.key\"\n [id]=\"question.key\" [type]=\"question.type\"&gt;\n\n &lt;select [id]=\"question.key\" *ngSwitchCase=\"'dropdown'\" [formControlName]=\"question.key\"&gt;\n &lt;option *ngFor=\"let opt of question.options\" [value]=\"opt.key\"&gt;{{opt.value}}&lt;/option&gt;\n &lt;/select&gt;\n\n &lt;/div&gt;\n\n &lt;div class=\"errorMessage\" *ngIf=\"!isValid\"&gt;{{question.label}} is required&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;div [formGroup]=\"form\"&gt;\n &lt;label [attr.for]=\"question.key\"&gt;{{question.label}}&lt;/label&gt;\n\n &lt;div [ngSwitch]=\"question.controlType\"&gt;\n\n &lt;input *ngSwitchCase=\"'textbox'\" [formControlName]=\"question.key\"\n [id]=\"question.key\" [type]=\"question.type\"&gt;\n\n &lt;label [id]=\"question.key\" *ngSwitchCase=\"'dropdown'\" [formControlName]=\"question.key\"&gt;\n &lt;option *ngFor=\"let opt of question.options\" [value]=\"opt.key\"&gt;{{opt.value}}&lt;/option&gt;\n &lt;/label&gt;\n\n &lt;/div&gt;\n\n &lt;div class=\"errorMessage\" *ngIf=\"!isValid\"&gt;{{question.label}} is required&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;div [formGroup]=\"form\"&gt;\n &lt;label [attr.for]=\"question.key\"&gt;{{question.label}}&lt;/label&gt;\n\n &lt;div [ngSwitch]=\"question.controlType\"&gt;\n\n &lt;input *ngSwitchCase=\"'textbox'\" [formControlName]=\"question.key\"\n [id]=\"question.key\" [type]=\"question.type\"&gt;\n\n &lt;select [id]=\"question.key\" *ngSwitchCase=\"'dropdown'\" [formControlName]=\"question.key\"&gt;\n &lt;option *ngFor=\"let opt of question.options\" [value]=\"opt.key\"&gt;{{opt.value}}&lt;/option&gt;\n &lt;/select&gt;\n\n &lt;/div&gt;\n\n &lt;div class=\"errorMessage\" *ng-repeat=\"!isValid\"&gt;{{question.label}} is required&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654057,"option":"1","correct":true},{"id":1654058,"option":"2","correct":false},{"id":1654059,"option":"3","correct":false},{"id":1654060,"option":"4","correct":false}]},{"q":"<p>You are creating an app using Angular. You want to implement DomSanitizer in your app. You have written the code given alongside.<br>\nWhat is the use of sanitize() method, here?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>abstract class DomSanitizer implements Sanitizer {\n\n abstract sanitize(context: SecurityContext, value: string | SafeValue): string | null\n abstract bypassSecurityTrustHtml(value: string): SafeHtml\n abstract bypassSecurityTrustStyle(value: string): SafeStyle\n abstract bypassSecurityTrustScript(value: string): SafeScript\n abstract bypassSecurityTrustUrl(value: string): SafeUrl\n abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl\n\n}</code></pre>\n\n<p> </p>","a":[{"id":1654053,"option":"Sanitizes a value for use in the given SecurityContext. If value is not trusted for the context, this method will unwrap the contained safe value and use it directly.","correct":false},{"id":1654054,"option":"Sanitizes a value for use in the given SecurityContext. If value is trusted for the context, this method will unwrap the contained safe value and use it directly.","correct":true},{"id":1654055,"option":"Sanitizes the parameters of sanitize() function for use in the given SecurityContext. If value is trusted for the context, this method will unwrap the contained safe value and use it directly.","correct":false},{"id":1654056,"option":"Sanitizes a value for use in the arbitrary SecurityContext. If value is trusted for the context, this method will unwrap the contained safe value and use it directly.","correct":false}]},{"q":"<p>You want to add a search bar in your app such that it requests data using the HttpClient because it provides typed request and response objects. Also, you want to add testability features to your app. You are providing user service by first fetching the user ID, name, and city. Alongside are given the steps to do that. Select the correct sequence in which you would follow the steps.</p>\n\n<pre class=\"prettyprint\"><code>I. fetchUserProfile() {\n this.userProfileService.getUserProfile()\n .subscribe((data: User) =&gt; this.user = {\n id: data['userId'],\n name: data['firstName'],\n city: data['city']\n });\n}\nII. import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst userProfileUrl: string = 'assets/data/profile.json';\n\n@Injectable()\nexport class UserProfileService {\n constructor(private http: HttpClient) { }\n\n getUserProfile() {\n return this.http.get(this.userProfileUrl);\n }\n}\nIII. import { HttpClientModule } from '@angular/common/http';\n@NgModule({\n imports: [\n BrowserModule,\n // import HttpClientModule after BrowserModule.\n HttpClientModule,\n ],\n ......\n })\n export class AppModule {}</code></pre>\n\n<p> </p>","a":[{"id":1654049,"option":"I -> II -> III","correct":false},{"id":1654050,"option":"II -> I -> III","correct":false},{"id":1654051,"option":"III -> II -> I","correct":true},{"id":1654052,"option":"I -> III -> II","correct":false}]},{"q":"<p>You have made an Angular app. You have written the code given alongside to print the first name and the last name of a person.<br>\nSelect a code-snippet from the following options, which does the same work as the code-snippet in the code section, but uses controller methods.</p>\n\n<p><strong>code:</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"myCtrl\"&gt;\n\nFirst Name: &lt;input type=\"text\" ng-model=\"firstName\"&gt;&lt;br&gt;\nLast Name: &lt;input type=\"text\" ng-model=\"lastName\"&gt;&lt;br&gt;\n&lt;br&gt;\nFull Name: {{firstName + \" \" + lastName}}\n\n&lt;/div&gt;\n\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n $scope.firstName = \"John\";\n $scope.lastName = \"Doe\";\n});\n&lt;/script&gt;</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"personCtrl\"&gt;\n\nFirst Name: &lt;input type=\"text\" ng-model=\"firstName\"&gt;&lt;br&gt;\nLast Name: &lt;input type=\"text\" ng-model=\"lastName\"&gt;&lt;br&gt;\n&lt;br&gt;\nFull Name: {{fullName()}}\n\n&lt;/div&gt;\n\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n $scope.firstName = \"John\";\n $scope.lastName = \"Doe\";\n $scope.fullName = function() {\n return $scope.firstName + \" \" + $scope.lastName;\n };\n});\n&lt;/script&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"personCtrl\"&gt;\n\nFirst Name: &lt;input type=\"text\" ng-model=\"firstName\"&gt;&lt;br&gt;\nLast Name: &lt;input type=\"text\" ng-model=\"lastName\"&gt;&lt;br&gt;\n&lt;br&gt;\nFull Name: {{fullName()}}\n\n&lt;/div&gt;\n\n&lt;body&gt;\nvar app = angular.module('myApp', []);\napp.controller('personCtrl', function($scope) {\n $scope.firstName = \"John\";\n $scope.lastName = \"Doe\";\n $scope.fullName = function() {\n return $scope.firstName + \" \" + $scope.lastName;\n };\n});\n&lt;/body&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"personCtrl\"&gt;\n\nFirst Name: &lt;input type=\"text\" ng-model=\"firstName\"&gt;&lt;br&gt;\nLast Name: &lt;input type=\"text\" ng-model=\"lastName\"&gt;&lt;br&gt;\n&lt;br&gt;\nFull Name: {{fullName()}}\n\n&lt;/div&gt;\n\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('personCtrl', function($scope) {\n $scope.firstName = \"John\";\n $scope.lastName = \"Doe\";\n $scope.fullName = function() {\n return $scope.firstName + \" \" + $scope.lastName;\n };\n});\n&lt;/script&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;div ng-app=\"myApp\" ng-controller=\"personCtrl\"&gt;\n\nFirst Name: &lt;input type=\"text\" ng-model=\"firstName\"&gt;&lt;br&gt;\nLast Name: &lt;input type=\"text\" ng-model=\"lastName\"&gt;&lt;br&gt;\n&lt;br&gt;\nFull Name: {{fullName()}}\n\n&lt;/div&gt;\n\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('personCtrl', function($scope) {\n $scope.firstName = \"John\";\n $scope.lastName = \"Doe\";\n $scope.fullName = function() =&gt;{\n return $scope.firstName + \" \" + $scope.lastName;\n };\n});\n&lt;/script&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1654045,"option":"1","correct":false},{"id":1654046,"option":"2","correct":false},{"id":1654047,"option":"3","correct":true},{"id":1654048,"option":"4","correct":false}]},{"q":"<p>You are creating an app in Angular and you have written the code given alongside. Now, when you click on the header, it will change the name from John to Nelly. What kind of approach have you used to do that?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;body&gt;\n\n&lt;div ng-app=\"myApp\" ng-controller=\"myCtrl\"&gt;\n &lt;h1 ng-click=\"changeName()\"&gt;{{firstname}}&lt;/h1&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nvar app = angular.module('myApp', []);\napp.controller('myCtrl', function($scope) {\n $scope.firstname = \"John\";\n $scope.changeName = function() {\n $scope.firstname = \"Nelly\";\n }\n});\n&lt;/script&gt;\n\n&lt;p&gt;Click on the header to run the \"changeName\" function.&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p> </p>","a":[{"id":1654041,"option":"Due to data binding, the view will reflect any changes made in the controller.","correct":true},{"id":1654042,"option":"Due to 2 way data binding, the view will reflect any changes made in the controller and vice versa.","correct":false},{"id":1654043,"option":"Due to data binding, the model will reflect any changes made in the controller.","correct":false},{"id":1654044,"option":"Due to data binding, the view will reflect any changes made in the model.","correct":false}]},{"q":"<p>While building an Angular app, you have used a lot of filters to optimize your application. Which of the following is NOT a type of filter?</p>","a":[{"id":1654037,"option":"Time filter","correct":true},{"id":1654038,"option":"Filter filter","correct":false},{"id":1654039,"option":"orderBy filter","correct":false},{"id":1654040,"option":"Currency filter","correct":false}]},{"q":"<p>You are building an app in Angular. You are experiencing an error when you check the browser to view your app, which should be shown to the user. But it is not showing. You are testing the app.<br>\nWhat service can be useful in debugging and auditing? Which of the code sections corresponds to the correct usage of the service?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>AngularJs includes debugging service $debug, which debugs and prints the messages to the browser's console.\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;script src=\"~/Scripts/angular.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-app=\"myApp\" &gt;\n &lt;div ng-controller=\"myController\"&gt;\n &lt;p&gt;Please check the browser console for the debugging information.&lt;/p&gt;\n &lt;/div&gt;\n &lt;script&gt;\n var myApp = angular.module('myApp', []);\n\n myApp.controller(\"myController\", function ($debug) {\n \n $debug.debugg('This is debugging.');\n $debug.error('This is error.');\n $debug.info('This is info.');\n $debug.warn('This is warning.');\n $debug.debug('This is debugging.');\n\n });\n &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>AngularJs includes logging service $Log, which logs the messages to the browser's console.\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;script src=\"~/Scripts/angular.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-app=\"myApp\" &gt;\n &lt;div ng-controller=\"myController\"&gt;\n &lt;p&gt;Please check the browser console for the logging information.&lt;/p&gt;\n &lt;/div&gt;\n &lt;script&gt;\n var myApp = angular.module('myApp', []);\n\n myApp.controller(\"myController\", function ($Log) {\n \n $Log.Log('This is log.');\n $Log.error('This is error.');\n $Log.info('This is info.');\n $Log.warn('This is warning.');\n $Log.debug('This is debugging.');\n\n });\n &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>AngularJs includes logging service $log, which logs the messages to the browser's console.\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;script src=\"~/Scripts/angular.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-app=\"myApp\" &gt;\n &lt;div ng-controller=\"myController\"&gt;\n &lt;p&gt;Please check the browser console for the logging information.&lt;/p&gt;\n &lt;/div&gt;\n &lt;script&gt;\n var myApp = angular.module('myApp', []);\n\n myApp.controller(\"myController\", function ($log) {\n \n $log.log('This is log.');\n $log.error('This is error.');\n $log.info('This is info.');\n $log.warn('This is warning.');\n $log.debug('This is debugging.');\n\n });\n &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>There is no such service. You can use a debugging console online to do that.</p>\n\t</li>\n</ol>","a":[{"id":1654033,"option":"1","correct":false},{"id":1654034,"option":"2","correct":false},{"id":1654035,"option":"3","correct":true},{"id":1654036,"option":"4","correct":false}]},{"q":"<p>You are creating an app using Angular. You have taken the details of all the products of a particular brand, for which you are building the app. Now, you want to add a filter to sort the product according to their prices.<br>\nWhat type of filter will you use? Also, select the code section which fulfills the above condition.</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>You will use orderBy filter.<br>\n\t&lt;ul&gt;<br>\n\t&lt;li ng-repeat = \"company in product.products | orderBy:'price\"&gt;<br>\n\t {{ company.product + ', price:' + product.price }}<br>\n\t &lt;/li&gt;<br>\n\t&lt;/ul&gt;</li>\n\t<li>You will use number filter.<br>\n\t&lt;ul&gt;<br>\n\t&lt;li ng-repeat = \"company in product.products | number:'price\"&gt;<br>\n\t {{ company.product + ', price:' + product.price }}<br>\n\t &lt;/li&gt;<br>\n\t&lt;/ul&gt;</li>\n\t<li>You will use orderBy filter.<br>\n\t&lt;ul&gt;<br>\n\t&lt;ul ng-repeat = \"company in product.products | orderBy:'price\"&gt;<br>\n\t {{ company.product + ', price:' + product.price }}<br>\n\t &lt;/ul&gt;<br>\n\t&lt;/ul&gt;</li>\n\t<li>You will use the currency filter.<br>\n\t&lt;ul&gt;<br>\n\t&lt;li ng-repeat = \"company in product.products | currency:'price\"&gt;<br>\n\t {{ company.product + ', price:' + product.price }}<br>\n\t &lt;/li&gt;<br>\n\t&lt;/ul&gt;</li>\n</ol>","a":[{"id":1654029,"option":"1","correct":true},{"id":1654030,"option":"2","correct":false},{"id":1654031,"option":"3","correct":false},{"id":1654032,"option":"4","correct":false}]},{"q":"<p>You have made a login application in Angular, for a user to log in. You want to add features to it and make the webpage look more appealing. Therefore, you use an animation module to do the same. In the code section, the steps are given to use the animation module. Reassemble the steps to form a correct sequence.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>I. Adding the animation metadata property :\n@Component({\n selector: 'app-root',\n templateUrl: 'app.component.html',\n styleUrls: ['app.component.css'],\n animations: [\n // animation triggers go here\n ]\n})\nII. Enabling the animations module :\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n imports: [\n BrowserModule,\n BrowserAnimationsModule\n ],\n declarations: [ ],\n bootstrap: [ ]\n})\nexport class AppModule { }\nIII. Importing animation functions into component files :\nimport {\n trigger,\n state,\n style,\n animate,\n transition,\n // ...\n} from '@angular/animations';</code></pre>\n\n<p> </p>","a":[{"id":1654025,"option":"I -> II -> III","correct":false},{"id":1654026,"option":"II -> III -> I","correct":true},{"id":1654027,"option":"III -> I -> II","correct":false},{"id":1654028,"option":"II -> I -> III","correct":false}]},{"q":"<p>While building an Angular app, you come across expressions. You want to include them in your code. So you build the code as given alongside. What are expressions? Where are they used in the given code?</p>\n\n<pre class=\"prettyprint\"><code>&lt;div ng-controller=\"ParentCtrl\"&gt;\n &lt;h1&gt;{{ name }}&lt;/h1&gt;\n &lt;p&gt;{{ address }}&lt;/p&gt;\n &lt;div ng-controller=\"ChildCtrl\"&gt;\n &lt;h1&gt;{{ title }}&lt;/h1&gt;\n &lt;input type=\"text\" ng-model=\"$parent.address\" /&gt;\n&lt;/div&gt;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>Expressions in AngularJS are used to bind application data to HTML. The expressions are resolved by Angular and the result is returned back to where the expression is written. <br>\n\tname<br>\n\taddress<br>\n\ttitle</li>\n\t<li>Expressions in AngularJS are used to differentiate application data and HTML. The expressions are resolved by Angular and the result is returned back to where the expression is written. <br>\n\tng-controller<br>\n\tng-model</li>\n\t<li>Expressions in AngularJS are used to bind application data to HTML. The expressions are resolved by JavaScript as Angular cannot resolve expressions and the result is returned back to where the expression is written. <br>\n\tname<br>\n\taddress<br>\n\ttitle</li>\n\t<li>Expressions in AngularJS are used to bind application data to HTML. The expressions are compiled by Angular and the result is returned back to where the expression is written. <br>\n\tng-controller<br>\n\tng-model</li>\n</ol>","a":[{"id":1654021,"option":"1","correct":true},{"id":1654022,"option":"2","correct":false},{"id":1654023,"option":"3","correct":false},{"id":1654024,"option":"4","correct":false}]},{"q":"<p>You are developing an app using Angular JS. You have written the code-snippet provided alongside. A directive, known as ng-disabled, has been used in the code snippet. What is the purpose of the directive ng-disabled here? What kind of function does it perform primarily?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!doctype html&gt; \n&lt;html ng-app&gt; \n &lt;head&gt; \n &lt;title&gt;My Angular App&lt;/title&gt; \n &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js\"&gt;&lt;/script&gt; \n&lt;/head&gt; \n &lt;body&gt; \n &lt;div ng-app=\"\" ng-init=\"Switch=true\"&gt; \n &lt;p&gt; \n &lt;input type=\"checkbox\" ng-model=\"Switch\" /&gt; \n &lt;/p&gt; \n &lt;p&gt; \n &lt;button ng-disabled=\"Switch\"&gt;Submit&lt;/button&gt; \n &lt;/p&gt; \n &lt;/div&gt; \n&lt;/body&gt; \n &lt;/html&gt;</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>In the given code-snippet, we have a checkbox and a button. If the checkbox is selected, the button is disabled. But, if we uncheck the checkbox then the button is enabled.<br>\n\tng- disabled directive is used to enable or disable HTML elements.</li>\n\t<li>In the given code-snippet we have a checkbox and a button. If the checkbox is not selected the button is disabled, but if we check the checkbox then the button is enabled.<br>\n\tng- disabled directive is used to enable or disable HTML elements.</li>\n\t<li>The button is enabled alternatively.<br>\n\tng- disabled directive is used to enable or disable HTML elements.</li>\n\t<li>In the given code-snippet we have a checkbox and a button. If the checkbox is selected, the button is disabled. But, if we uncheck the checkbox then the button is enabled.<br>\n\tng- disabled directive is used to only disable the HTML elements.</li>\n</ol>","a":[{"id":1654017,"option":"1","correct":true},{"id":1654018,"option":"2","correct":false},{"id":1654019,"option":"3","correct":false},{"id":1654020,"option":"4","correct":false}]},{"q":"<p>You are building an application in angular. You have to use the ng-repeat directive in your code. You have written the code given alongside.<br>\nWhat does this code represent?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;table class=\"table table-bordered\"&gt; \n &lt;tr ng-repeat=\"empin empDetails\"&gt; \n &lt;td&gt;{{emp.name}}&lt;/td&gt; \n &lt;td&gt;{{emp.salary}}&lt;/td&gt; \n &lt;/tr&gt; \n&lt;/table&gt;</code></pre>\n\n<p> </p>","a":[{"id":1654013,"option":"The above code is the basic way to use ng-repeat.","correct":false},{"id":1654014,"option":"Its the way to use the directive ng-repeat. Here, it helps to use the expressions listed in <td> tag repeatedly.","correct":false},{"id":1654015,"option":"Its the way to use ng-repeat with expressions. Here, it helps to use the expressions listed in <td> tag repeatedly.","correct":true},{"id":1654016,"option":"This code will give an error.","correct":false}]},{"q":"<p>You are coding in Angular. You are required to work with the two directives: ng-click and ng-include. There are two code sections that you have coded using ng-include and ng-click. What are the functions performed by ng-include and ng-click?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>I. &lt;button ng-click=\"count = count ++\"&gt;Click&lt;/button&gt;\n\nII. &lt;div ng-app = \"\" ng-controller = \"interviewController\"&gt;\n &lt;div ng-include = \"'first.htm'\"&gt;&lt;/div&gt;\n &lt;div ng-include = \"'phases.htm'\"&gt;&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>Ng-click directives can be used in a scenario when you have to click on the button or want to perform any operation.<br>\n\tNg-include includes all the modules that are to be used.</li>\n\t<li>Ng-click directives can be used in a scenario when you have to click on the button or want to perform any operation.<br>\n\tNg-include in AngularJS helps you to embed HTML pages within a single HTML page.</li>\n\t<li>Ng-click directives can be used in a scenario when you have to click on a dropdown menu.<br>\n\tNg-include in AngularJS helps you to embed HTML pages within a single HTML.</li>\n\t<li>Ng-click directives can be used in a scenario when you have to click on a dropdown menu.<br>\n\tNg-include includes all the modules that are to be used.</li>\n</ol>","a":[{"id":1654009,"option":"1","correct":false},{"id":1654010,"option":"2","correct":true},{"id":1654011,"option":"3","correct":false},{"id":1654012,"option":"4","correct":false}]},{"q":"<p>Suppose you are building an Angular app and you need to use directives during the process. A directive is something that introduces new syntax. Which of the following options is NOT a directive?</p>","a":[{"id":1654005,"option":"ng-model","correct":false},{"id":1654006,"option":"ng-App","correct":false},{"id":1654007,"option":"ng-serve","correct":false},{"id":1654008,"option":"ng-rebound","correct":true}]},{"q":"<p>You are creating an app using Angular. You have declared a directive in the code given alongside (<em>1<sup>st</sup></em> code section). You have built another directive which is given just below the <em>1<sup>st</sup></em> code.<br>\nWhat kind of scope has been used in the first code section? What is the output of the second code section?</p>\n\n<p><strong>Code 1</strong></p>\n\n<pre class=\"prettyprint\"><code>directive('testDirective', function() {\n return {\n scope: {},\n link: function(myScopeVar, elem,attr) {\n console.log(scope)\n }}\n})\n})</code></pre>\n\n<p><strong>Code 2</strong></p>\n\n<pre class=\"prettyprint\"><code> app.controller(‘myController’,function(newScope)\n{\n})</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>In the first code section, a directive with an isolated scope is declared. The second code section, when executed will give an error.</li>\n\t<li>In the first code section, a directive with a $scope is declared. In the second code section, something must be declared as a heading or text. Otherwise, the code will not display anything.</li>\n\t<li>In the first code section, a directive with an isolated scope is declared. The second code section will output new scope.</li>\n\t<li>In the first code section, a directive with an isolated scope is used. The second code section will not display anything.</li>\n</ol>","a":[{"id":1654001,"option":"1","correct":true},{"id":1654002,"option":"2","correct":false},{"id":1654003,"option":"3","correct":false},{"id":1654004,"option":"4","correct":false}]},{"q":"<p>You have created an Angular app. You want to implement lazy loading in your app. Which module from the following do you have to import in order to implement lazy loading?</p>","a":[{"id":1654109,"option":"NgModule","correct":true},{"id":1654110,"option":"ngModule","correct":false},{"id":1654111,"option":"ngmodule","correct":false},{"id":1654112,"option":"NgApp","correct":false}]},{"q":"<p>You have used validator functions in your Angular app. You have also designed a reactive form. The reactive forms are using the validator functions. Which of the given validator functions are NOT used by the reactive forms?</p>","a":[{"id":1654101,"option":"Sync validator","correct":false},{"id":1654102,"option":"Async validator","correct":false},{"id":1654103,"option":"Both I and II","correct":false},{"id":1654104,"option":"Group validators","correct":true}]},{"q":"<p>You are creating an app in Angular JS. You have written the code given alongside. What will happen when the checkbox is checked?</p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\"&gt;&lt;/script&gt;\n&lt;div ng-app=\"\"&gt;\n&lt;input type = \"checkbox\" ng-model = \"hidebutton\"&gt;Hide Button\n&lt;button ng-hide = \"hidebutton\"&gt;Click Here!&lt;/button&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p> </p>","a":[{"id":1654073,"option":"The button 'Click here!' will get hidden.","correct":true},{"id":1654074,"option":"The button 'Click here!' will appear.","correct":false},{"id":1654075,"option":"The button 'Click here!' will be disabled.","correct":false},{"id":1654076,"option":"The code will give an error.","correct":false}]},{"q":"<p>In AngularJS, if you are working on various event handlers, then which of these statements about the following directive are correct:</p>\n\n<p><strong>Directive</strong></p>\n\n<pre class=\"prettyprint\"><code>ngOn</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The ngOn directive adds an event listener to a DOM element through <strong>angular.element().on()</strong> and evaluates an expression when an event is fired.</li>\n\t<li>This directive attaches a controller class to the view. </li>\n\t<li>\n\t<p>This directive allows adding listeners for arbitrary events by including the event name in the attribute.</p>\n\t</li>\n</ol>","a":[{"id":1582642,"option":"1 and 2","correct":false},{"id":1582643,"option":"2 and 3","correct":false},{"id":1582644,"option":"1 and 3","correct":true},{"id":1582645,"option":"None of these","correct":false}]},{"q":"<p>In AngularJS, you are working on event handling. You have implemented the below code that can show the password entered by the user in the text field on clicking the button named <strong>Show password </strong>as an alert box. If you are required to implement the below code, then which of the following statements about the directives in this code are correct:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body ng-app=\"myHackApp\" &gt;\n&lt;h1&gt;Event handling at HackerEarth: &lt;/h1&gt;\n    &lt;div ng-controller=\"myHackController\"&gt;\n        Enter Password: &lt;input type=\"password\" ng-model=\"password\"/&gt;&lt;br /&gt;\n        &lt;button ng-click=\"MyHackMessage(password)\"&gt;Show password&lt;/button\n    &lt;/div&gt;\n    &lt;script&gt;\n        var myHackApp = angular.module('myHackApp', []);\n        myHackApp.controller(\"myHackController\", function ($scope, $window) {\n            $scope.MyHackMessage = function (myhackvalue) {\n\t\t\t\talert(myhackvalue)\n            }\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The ng-model directive is used to call a <strong>MyHackMessage()</strong> function with the 'password' parameter when a user clicks a button.</li>\n\t<li>The <strong>MyHackMessage()</strong> function is attached to a $scope object in <strong>myHackController</strong>, so it will be accessible from button click as button comes under <strong>myHackController</strong>.</li>\n\t<li>A 'password' is a model property defined using the ng-model directive in the input box.</li>\n</ol>","a":[{"id":1582638,"option":"1 and 2","correct":false},{"id":1582639,"option":"2 and 3","correct":true},{"id":1582640,"option":"1 and 3","correct":false},{"id":1582641,"option":"All of these","correct":false}]},{"q":"<p>In AngularJS, which of these sequences of the life cycle of scope is correct?</p>","a":[{"id":388678,"option":"Creation -> Watcher registration -> Model mutation -> Mutation observation -> Scope destruction","correct":true},{"id":388679,"option":"Creation ->  Model mutation -> Watcher registration -> Mutation observation -> Scope destruction","correct":false},{"id":388680,"option":"Creation ->  Model mutation -> Watcher registration -> Scope destruction -> Mutation observation","correct":false},{"id":388681,"option":"Creation ->  Model mutation -> Scope destruction ->Mutation observation -> Watcher registration ","correct":false}]},{"q":"<p>When is $scope used in AngularJS?</p>","a":[{"id":536982,"option":"While defining a controller","correct":true},{"id":536983,"option":"While creating a link function for the custom directive","correct":false},{"id":536984,"option":"Both A and B","correct":false},{"id":536985,"option":"None of these","correct":false}]},{"q":"<p>In Angular, which of the following is used create a new instance of the <strong>Map</strong> datatype?</p>","a":[{"id":608769,"option":"map();","correct":false},{"id":608770,"option":"new map();","correct":false},{"id":608771,"option":"m = new map();","correct":false},{"id":608772,"option":"let m = new map();","correct":true}]},{"q":"<p>Which of the following statements about AngularJS is incorrect?</p>","a":[{"id":608709,"option":"Functions can be declared inside the ng-init directive.","correct":true},{"id":608710,"option":"The behavior of Angular expressions and ng-bind directives is the same. ","correct":false},{"id":608711,"option":"A regular expression cannot be created in an Angular expression.","correct":false},{"id":608712,"option":"None of these","correct":false}]},{"q":"<p>Which of the following syntaxes is used to declare a template reference variable as <strong>phonenumber</strong> using an input text box?</p>","a":[{"id":616099,"option":"<input type=\"text\" ref-phonenumber>","correct":true},{"id":616100,"option":"<input #phonenumber placeholder=\"Phone number\">","correct":false},{"id":616101,"option":"Both of these","correct":false},{"id":616102,"option":"None of these","correct":false}]},{"q":"<p>Which of the following syntaxes of chain pipe will you use to display the month output as JUL assuming that today is 15th July 2018?</p>","a":[{"id":616459,"option":"{{uppercase | today | date | slice:0:4}}","correct":false},{"id":616460,"option":"{{today |  uppercase | date | slice:0:4}}","correct":false},{"id":616461,"option":"{{ slice:0:4 | uppercase | date | today}}","correct":false},{"id":616462,"option":"{{today | date | uppercase | slice:0:4}}","correct":true}]},{"q":"<p>In AngularJS, if you are required to check whether the text nodes and the element attributes contain interpolation markup with embedded expressions, then which of the following calls the <strong>$interpolation</strong> service in this scenario?</p>","a":[{"id":60407,"option":"Interpreter","correct":false},{"id":60408,"option":"Parser","correct":false},{"id":60409,"option":"Linker","correct":false},{"id":60410,"option":"Compiler","correct":true}]},{"q":"<p>Which of these terms best defines the following AngularJS code:</p>\n\n<pre class=\"prettyprint\"><code>declare module “myModule” {\n   export function toDo(value: string): string;\n}\n</code></pre>","a":[{"id":388646,"option":"Typescript","correct":true},{"id":388647,"option":"Function","correct":false},{"id":388648,"option":"Pipe","correct":false},{"id":388649,"option":"ECMA","correct":false}]},{"q":"<p>In AngularJS, if you are required to bind your data to HTML by using the expressions, then which of the following braces is used to perform this action?</p>","a":[{"id":388714,"option":"{ }","correct":false},{"id":388715,"option":"{{ }}","correct":true},{"id":388716,"option":"[( )}","correct":false},{"id":388717,"option":"{[ ]}","correct":false}]},{"q":"<p>Based on which of the following in an application, the AngularJS <strong>UI</strong> router changes application views?</p>","a":[{"id":60527,"option":"State ","correct":true},{"id":60528,"option":"Function ","correct":false},{"id":60529,"option":"Attributes ","correct":false},{"id":60530,"option":"ID","correct":false}]},{"q":"<p>In AngularJS, which of the following is used to implement a Single Page Applications (SPA)?</p>","a":[{"id":60347,"option":"Routes ","correct":true},{"id":60348,"option":"Locations ","correct":false},{"id":60349,"option":"Directives ","correct":false},{"id":60350,"option":"All of these","correct":false}]},{"q":"<p>What is the number of scopes allowed in an AngularJS Application?</p>","a":[{"id":388436,"option":"0","correct":false},{"id":388437,"option":"1","correct":false},{"id":388438,"option":"2","correct":false},{"id":388439,"option":"Multiple number of child scopes","correct":true}]},{"q":"<p>Determine the state of the following AngularJS code if you compile it:</p>\n\n<pre class=\"prettyprint\"><code>app.config(function ($routeProvider) {\n   $routeProvider\n      .when('/inbox', {\n         templateUrl: 'views/inbox.html',\n         controller: 'InboxCtrl',\n         controllerAs: 'inbox'\n      })\n      .when('/inbox/email/:id', {\n         templateUrl: 'views/email.html',\n         controller: 'EmailCtrl',\n         controllerAs: 'email'\n      })\n      .otherwise({\n         redirectTo: '/inbox'\n        });\n    });</code></pre>\n\n<p> </p>","a":[{"id":612431,"option":"No error","correct":true},{"id":612432,"option":"Runtime error","correct":false},{"id":617397,"option":"Compilation error","correct":false},{"id":617398,"option":"Warning","correct":false}]},{"q":"<p>What does the following AngularJS code represent: </p>\n\n<pre class=\"prettyprint\"><code>let addNumbers = function(...nums: number[]) {\n    let p;\n    let sum: number = 0;\n\n    for (p = 0; p &lt; nums.length; p++) {\n        sum = sum + nums[p];\n    }\n\n    return sum;\n}\n</code></pre>","a":[{"id":388666,"option":"Reset parameter","correct":true},{"id":388667,"option":"Optional parameter","correct":false},{"id":388668,"option":"Normal","correct":false},{"id":388669,"option":"Lambda","correct":false}]},{"q":"<p>Which of these types of functions is related to the following AngularJS  code:</p>\n\n<pre class=\"prettyprint\"><code>function subtractNumber(number1: number, number2: number): number {\n    return number1 + number2;\n}\n</code></pre>","a":[{"id":388662,"option":"Named","correct":true},{"id":388663,"option":"Normal","correct":false},{"id":388664,"option":"Optional","correct":false},{"id":388665,"option":"Lambda","correct":false}]},{"q":"<p>In AngularJS, which of the following callbacks is used to know the contents of <em>ngView</em>?</p>","a":[{"id":388722,"option":"$viewContentLoaded","correct":true},{"id":388723,"option":"$viewLoaded ","correct":false},{"id":388724,"option":"$onLoaded","correct":false},{"id":388725,"option":"$onViewLoaded","correct":false}]},{"q":"<p>In Angularjs, which of the following characters is used for directives with filters?</p>","a":[{"id":60275,"option":"Pipe","correct":true},{"id":60276,"option":"Underscore","correct":false},{"id":60277,"option":"Hash ","correct":false},{"id":60278,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is not a filter in AngularJS?</p>","a":[{"id":60279,"option":"orderBy ","correct":false},{"id":60280,"option":"filter ","correct":false},{"id":60281,"option":"limitFor","correct":true},{"id":60282,"option":"uppercase","correct":false}]},{"q":"<p>Which of the following directives is used to initialize AngularJS?</p>","a":[{"id":60471,"option":"ng-start","correct":false},{"id":60472,"option":"ng-begin","correct":false},{"id":60473,"option":"ng-trigger","correct":false},{"id":60474,"option":"ng-init","correct":true}]},{"q":"<p>In AngularJS, if you are required to process the expressions, then which of the following services is used to perform this action?</p>","a":[{"id":60499,"option":"$expr","correct":false},{"id":60500,"option":"$init-getexp","correct":false},{"id":60501,"option":"$evaluate","correct":false},{"id":60502,"option":"$parse","correct":true}]},{"q":"<p>How many objects are atleast created by the <strong>$injector, </strong>when an AngularJS application is bootstrapped?</p>","a":[{"id":60539,"option":"1","correct":true},{"id":60540,"option":"2","correct":false},{"id":60541,"option":"3","correct":false},{"id":60542,"option":"4","correct":false}]},{"q":"<p>If a strict type check is enabled, then what is the output of the following AngularJScode:</p>\n\n<pre class=\"prettyprint\"><code>var firstName:string|null, lastName:string|undefined ;\n\nfirstName=null;\nlastName=undefined;</code></pre>\n\n<p> </p>","a":[{"id":644310,"option":"Returns an error because the type 'undefined' cannot be assigned to the type 'string'","correct":false},{"id":644311,"option":"Returns an error because the type 'null' cannot be assigned to the type 'string'","correct":false},{"id":644312,"option":"Returns an error because the type 'null' or 'undefined' cannot be assigned to a variable","correct":false},{"id":644313,"option":"No error","correct":true}]},{"q":"<p>What is the output of the following AngularJS code:</p>\n\n<pre class=\"prettyprint\"><code>var = \"hackerearth\";\n{{var | slice:3:-3}}</code></pre>\n\n<p> </p>","a":[{"id":642811,"option":"kerearth","correct":false},{"id":642812,"option":"earth","correct":false},{"id":642813,"option":"kerea","correct":true},{"id":642814,"option":"kerear","correct":false}]}]