[{"q":"<p><strong>Scenario</strong>: You need to create a database in SQLite for your web application.<br>\n<strong>Problem Statement:</strong> How will you create an 'inventory' database with id, name, quantity, and price fields?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>import sqlite3\nconn = sqlite3.create_databse('inventory.db')\nc = conn('inventory.db')\nc.query(CREATE TABLE products(id INTEGER, name TEXT, quantity INTEGER, price REAL))\nconn.execute()\nprint(\"db is created\")\nconn.close()</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>import sqlite3\nconn = sqlite3.connect('inventory.db')\nc = conn.cursor()\nc.execute('''CREATE TABLE products(id INTEGER, name TEXT, quantity INTEGER, price REAL)''')\nconn.commit()\nprint(\"db is created\")\nconn.close()</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>import sqlite3\nconn = sqlite3.create('inventory.db')\nc = cursor.connect(inventory)\nc.run(''CREATE TABLE products(id INTEGER, name VARTEXT, quantity INTEGER, price REAL)'')\nconn.commit()\nprint(\"db is created\")\nconn.close()</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>import sqlite3\nconn = sqlite3.connect('inventory.db')\nc = cursor(inventory)\nc.execute('''CREATE TABLE products(id INTEGER, name TEXT, quantity INTEGER, price FLOAT)''')\nc.commit()\nprint(\"db is created\")\nconn.close()</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1757892,"option":"1","correct":false},{"id":1757893,"option":"2","correct":true},{"id":1757894,"option":"3","correct":false},{"id":1757895,"option":"4","correct":false}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>.&nbsp;</strong>Flask can make use of the <em>SQLite3</em> module of python to create the database web applications. How can you connect a database named \"mydatabase.db\" with SQLite3?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>connect = sqlite3.start(\"mydatabase.db\")  </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>con = sqlite3.start(connect, \"mydatabase.db\")  </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>con = connect(sqlite3, \"mydatabase.db\")  </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>con = sqlite3.connect(\"mydatabase.db\")  </code></pre>\n\t</li>\n</ol>","a":[{"id":1740249,"option":"1","correct":false},{"id":1740250,"option":"2","correct":false},{"id":1740251,"option":"3","correct":false},{"id":1740252,"option":"4","correct":true}]},{"q":"<p>You are trying to connect your Laravel application with an SQLite database. You are given a table named <em>employee</em>. If you are required to execute the following PHP framework with the respect to the table, then determine its result:</p>\n\n<p><strong>Table: employee</strong></p>\n\n<table border=\"1\" style=\"width: 129px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 34px;\"><strong>id</strong></td>\n\t\t\t<td style=\"text-align: center; width: 23px;\"><strong>name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 40px;\"><strong>salary</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 34px;\">101</td>\n\t\t\t<td style=\"text-align: center; width: 23px;\">ABC</td>\n\t\t\t<td style=\"text-align: center; width: 40px;\">10000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 34px;\">102</td>\n\t\t\t<td style=\"text-align: center; width: 23px;\">XYZ</td>\n\t\t\t<td style=\"text-align: center; width: 40px;\">20000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 34px;\">103</td>\n\t\t\t<td style=\"text-align: center; width: 23px;\">ADC</td>\n\t\t\t<td style=\"text-align: center; width: 40px;\">25000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 34px;\">104</td>\n\t\t\t<td style=\"text-align: center; width: 23px;\">LMN</td>\n\t\t\t<td style=\"text-align: center; width: 40px;\">15000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>Route::get('/sample',function(){  \n$update=DB::update('update employee set name=\"PQR\" where id=?',[103]);\necho $update;\necho \"&lt;br/&gt;\";\n$details=DB::select('select * from employee where name LIKE \"A%\" ');  \nforeach($details as $temp)  \n{  \n    echo $temp-&gt;id;  \n    echo \"&lt;br/&gt;\";  \n    echo $temp-&gt;salary;\n}  \n}); </code></pre>\n\n<p><strong>Results</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>101\n10000</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>True\n101\n10000</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>False\n101\n10000</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>True\n101\n10000\n103\n25000</code></pre>\n\n<p> </p>","a":[{"id":1604550,"option":"1","correct":false},{"id":1604551,"option":"2","correct":true},{"id":1604552,"option":"3","correct":false},{"id":1604553,"option":"4","correct":false}]},{"q":"<p>In Android, which of the following classes represents a statement that can be executed against a database?</p>","a":[{"id":30846,"option":"SQLiteClosable","correct":false},{"id":30847,"option":"SQLiteOpenHelper\t","correct":false},{"id":30848,"option":"SQLiteProgram","correct":false},{"id":30849,"option":"SQLiteStatement","correct":true}]},{"q":"<p>In Android, which of the following classes is used to read the resulting rows?</p>","a":[{"id":30842,"option":"SQLiteClosable","correct":false},{"id":30843,"option":"SQLiteOpenHelper\t","correct":false},{"id":30844,"option":"SQLiteProgram","correct":false},{"id":30845,"option":"SQLiteQuery","correct":true}]},{"q":"<p>In Android, where is the data loaded from if the <strong>GUI</strong> layer does not request the data from the internet?</p>","a":[{"id":30674,"option":"Adapter\r\n  ","correct":false},{"id":30675,"option":"Cookies\r\n\r\n  ","correct":false},{"id":30676,"option":"SQLite \r\n  ","correct":true},{"id":30677,"option":"None of these\r\n  ","correct":false}]},{"q":"<p>In Android, which of the following is created using a database and contains a property that can be closed?</p>","a":[{"id":30834,"option":"SQLiteClosable\r\n ","correct":true},{"id":30835,"option":"SQLiteOpenHelper\t\r\n ","correct":false},{"id":30836,"option":"SQLiteProgram\r\n ","correct":false},{"id":30837,"option":"SQLiteCursor\r\n ","correct":false}]},{"q":"<p>In Android, which of the following is used to periodically update the local database?</p>","a":[{"id":30678,"option":"Context\r\n ","correct":false},{"id":30679,"option":"DataBaseHelper\r\n ","correct":false},{"id":30680,"option":"Service\r\n ","correct":true},{"id":30681,"option":"Query\r\n ","correct":false}]},{"q":"<p>In Android, which of the following exceptions is thrown when the database is full?</p>","a":[{"id":30878,"option":"SQLiteBlobTooBigException\r\n","correct":false},{"id":30879,"option":"SQLiteCantOpenDatabaseException\r\n","correct":false},{"id":30880,"option":"SQLiteConstraintException\r\n","correct":false},{"id":30881,"option":"SQLiteFullException\r\n       ","correct":true}]},{"q":"<p>In Android, which of the following exceptions is thrown when a cursor contains stale data and must be required before being used again?</p>","a":[{"id":30474,"option":"SQLiteCantOpenDatabaseException ","correct":false},{"id":30475,"option":"Observable<T>   ","correct":false},{"id":30476,"option":"Observable<>   ","correct":false},{"id":38026,"option":"StaleDataException","correct":true}]},{"q":"<p>In Android, which of the following classes allows the returning of subclasses of a cursor when calling a query ?</p>","a":[{"id":30858,"option":"SQLiteClosable","correct":false},{"id":30859,"option":"SQLiteOpenHelper\t","correct":false},{"id":30860,"option":"SQLiteCursorDriver ","correct":false},{"id":30861,"option":"SQLiteDatabase.CursorFactory ","correct":true}]},{"q":"<p>In Android, which of the following exceptions is thrown to indicate that there was an error with SQL parsing or execution?</p>","a":[{"id":30870,"option":"SQLiteBlobTooBigException\r\n   ","correct":false},{"id":30871,"option":"SQLiteCantOpenDatabaseException\r\n   ","correct":false},{"id":30872,"option":"SQLiteConstraintException\r\n   ","correct":false},{"id":30873,"option":"SQLiteException\r\n   ","correct":true}]},{"q":"<p>In Android, which of the following is used to load the data that is provided by a content provider?</p>","a":[{"id":30602,"option":"Loader\r\n","correct":false},{"id":30603,"option":"CursorLoader\r\n","correct":true},{"id":30604,"option":"AsyncTaskLoader\r\n","correct":false},{"id":30605,"option":"All of these\r\n","correct":false}]},{"q":"<p>You are using the <strong>DatabaseUtils.InsertHelper</strong> method in Android. Which of the following should you use to avoid the class being deprecated?</p>","a":[{"id":30466,"option":"SQLiteBlobTooBigException\r\n","correct":false},{"id":30467,"option":"SQLiteCantOpenDatabaseException\r\n","correct":false},{"id":30468,"option":"SQLiteConstraintException\r\n","correct":false},{"id":30469,"option":"SQLiteStatement\r\n","correct":true}]},{"q":"<p style=\"margin-left: 0in; margin-right: 0in;\">In Android, which of these methods correctly describes the condition of the loop that is inserted in the following code:</p>\n\n<pre class=\"prettyprint\"><code>class Book{\n\n}...\n\n List&lt;Book&gt; books = new LinkedList&lt;Book&gt;();\n    String query =………;\n\n\t\tSQLiteDatabase db = this.getWritableDatabase();\n\t\t Cursor cursor = db.rawQuery(query, null);\n          Book book=null;\n   if (cursor.moveToFirst()) {\n\t\t\tdo {\n\t\t\t\tbook = new Book();\n\t\t\t\tbook.setId(Integer.parseInt(cursor.getString(0)));\n\t\t\t\tbook.setTitle(cursor.getString(1));\n\t\t\t\tbook.setAuthor(cursor.getString(2));\n\n\t\t\t\tbooks.add(book);\n\t\t\t} while (……);\n\t\t}\n</code></pre>\n\n<p> </p>","a":[{"id":606432,"option":"cursor.move()","correct":false},{"id":606433,"option":"cursor.moveToNext()","correct":true},{"id":606434,"option":"cursor.isBeforeFirst()","correct":false},{"id":606435,"option":"None of these","correct":false}]},{"q":"<p>In Android, which of the following interfaces helps in providing random read-write access to a result that is returned by a database query?</p>","a":[{"id":30434,"option":"CrossProcessCursor\r\n   ","correct":false},{"id":30435,"option":"Cursor\r\n   ","correct":true},{"id":30436,"option":"DatabaseErrorHandler\r\n   ","correct":false},{"id":30437,"option":"ErrorHandler   ","correct":false}]},{"q":"<p>Which of the following exceptions is thrown when a cursor is out of bounds in Android?</p>","a":[{"id":30478,"option":"SQLiteBlobTooBigException\r\n ","correct":false},{"id":30479,"option":"SQLiteCantOpenDatabaseException\r\n ","correct":false},{"id":30480,"option":"Observable<T>\r\n ","correct":false},{"id":30481,"option":"CursorIndexOutOfBoundsException\r\n ","correct":true}]},{"q":"<p>In Android, which of the following classes is used to manage the database creation and version management?</p>","a":[{"id":30854,"option":"SQLiteClosable\r\n","correct":false},{"id":30855,"option":"SQLiteOpenHelper\t\r\n","correct":true},{"id":30856,"option":"SQLiteProgram\r\n","correct":false},{"id":30857,"option":"SQLiteQueryBuilder\r\n","correct":false}]}]