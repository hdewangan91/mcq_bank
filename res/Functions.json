[{"q":"<p>What is the output of the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>For input1 = 5 and input2 = 5\n\nfunction(input1, input2)\n   if(input1&lt;input2)\n      return function(input2, input1)\n   else if(input2 != 0)\n      return (input1 * function(input1, input2 - 1))\n   else\n      return 0\n</code></pre>","a":[{"id":1668375,"option":"1255","correct":false},{"id":1668376,"option":"625","correct":false},{"id":1668377,"option":"3125","correct":true},{"id":1668378,"option":"125","correct":false}]},{"q":"<p>Consider the Javascript code snippet given below. Which of the following syntaxes can be used in the missing lines of codes L1, L2, L3, and L4 to produce the output as specified in the code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>var operations= (\n    function()\n    {\n        var privateOperations= 0;\n        function ChangingEvent(val) \n        {\n            privateOperations+= val;\n            \n        }\n        return {\n            increment: function() \n            {\n                ChangingEvent(1);\n                \n            },\n            decrement: function() \n            {\n                ChangingEvent(-1);\n                \n            },\n            value: function() \n            {\n                return privateOperations;\n                \n            }\n        };\n    }\n    )\n    (  );\n\nL1 // Output is 0.\nL2\nL3\nconsole.log(operations.value()); // Output is 2.\nL4\nconsole.log(operations.value()); // Output is 1.</code></pre>\n\n<p><strong>Syntaxes:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>L1 : console.log(operations.value());\nL2 : operations.decrement();\nL3 : operations.decrement();\nL4 : operations.increment(); </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>L1 : operations.decrement();\nL2 : console.log(operations.value());\nL3 : operations.increment();\nL4 : operations.increment();</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>L1 : console.log(operations.value());\nL2 : operations.increment();\nL3 : operations.increment();\nL4 : operations.decrement(); </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>L1 : operations.increment();\nL2 : console.log(operations.value());\nL3 : operations.decrement();\nL4 : operations.decrement();</code></pre>\n\t</li>\n</ol>","a":[{"id":1420462,"option":"1","correct":false},{"id":1420463,"option":"2","correct":false},{"id":1420464,"option":"3","correct":true},{"id":1420465,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following Javascript code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>(function () \n{\n    try \n    {\n        throw new Error(\"hackerearth\");\n    } \n    catch (h1) \n    {\n        var h1 = 31, h2 = 33;\n        console.log(h2);\n    }\n    console.log(h1);\n    console.log(h2);\n})();</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\nundefined\n33</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\n31\n33</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\nundefined\nundefined</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>The code gives a run-time error</code></pre>\n\t</li>\n</ol>","a":[{"id":1420437,"option":"1","correct":true},{"id":1420438,"option":"2","correct":false},{"id":1420439,"option":"3","correct":false},{"id":1420440,"option":"4","correct":false}]},{"q":"<p>John has written the follwoing C# code to convert a decimal number into a binary number. Then which of the following syntax can be used in place of //Code comment line to complete the code snippet given below?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\nclass DeciToBinaryRecursion\n{\n    public static void Main(string[] args)\n    {\n        int number;\n        DecimalToBinaryConversion db = new DecimalToBinaryConversion ();\n        Console.Write(\" Input a decimal number : \");\n        number = int.Parse(Console.ReadLine());\n        Console.Write(\" The binary equivalent of {0} is : \", number );\n        db.deciToBinaryFunc(number );\n        Console.Write(\"\\n\");\n    }\n}\n\npublic class DecimalToBinaryConversion \n{\n    public int deciToBinaryFunc(int number )\n    {\n        int result;\n        if (number != 0)\n        {\n            //Code\n            Console.Write(result);\n            return 0;\n        }\n        else\n        { \n            return 0; \n            \n        } \n    } \n}</code></pre>\n\n<p><strong>Syntax:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>result= (number / 2) + 10 * deciToBinaryFunc(number % 2);</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>result= (number % 2) + 10 * deciToBinaryFunc(number / 2);</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>result= (number % 2) - 10 / deciToBinaryFunc(number / 2);</code></pre>\n\t</li>\n</ol>","a":[{"id":1419327,"option":"1","correct":false},{"id":1419328,"option":"2","correct":true},{"id":1419329,"option":"3","correct":false},{"id":1419330,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def meth1(x)\n  count=0\n  i=0\n  while i&lt;=x\n    if i%2!=0 and i%3==0\n      count-=1\n    else\n      count+=1\n    end\n    i+=1\n  end\n  return count\nend\n\nx=15\nputs meth1(x)</code></pre>","a":[{"id":1770855,"option":"12","correct":false},{"id":1770856,"option":"6","correct":false},{"id":1770857,"option":"8","correct":false},{"id":1770858,"option":"10","correct":true}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def meth1(a)\n  if a==0\n    return 1\n  else\n    if a%2!=0\n      return (a+3)*meth1(a-1)\n    else\n      return (a-1)*meth1(a-3)\n    end\n  end\nend\n\nx=4\nres=meth1(x)\nputs res</code></pre>","a":[{"id":1770851,"option":"12","correct":true},{"id":1770852,"option":"16","correct":false},{"id":1770853,"option":"8","correct":false},{"id":1770854,"option":"10","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def meth1(a)\n  if a==0\n    return 1\n  else\n    if a%2==0\n      return 5*(a-1)*meth1(a-3)\n    else\n      return (a)*meth1(a-1)\n    end\n  end\nend\n\nx=8\nres=meth1(x)\nputs res</code></pre>","a":[{"id":1770847,"option":"1045","correct":false},{"id":1770848,"option":"3565","correct":false},{"id":1770849,"option":"2625","correct":true},{"id":1770850,"option":"2555","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def meth1(x)\n  if x&lt;3\n    return x\n  end\n  if x&gt;=3 and x&lt;10\n    return x-1\n  end\n  temp=1\n  while x/temp&gt;9\n    temp=temp*10\n  end\n  temp1=x/temp\n  if temp1!=3\n    return meth1(temp1)*meth1(temp-1)+meth1(temp1)+meth1(x%temp)\n  else\n    return meth1(temp1*temp-1)\n  end\nend\n\nx=846\nres=meth1(x)\nputs res</code></pre>","a":[{"id":1770843,"option":"385","correct":false},{"id":1770844,"option":"599","correct":true},{"id":1770845,"option":"Error","correct":false},{"id":1770846,"option":"790","correct":false}]},{"q":"<p>What is the output of the given Ruby code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def func1(x)\n  temp=0\n  i=1\n  while i&lt;=x\n    temp=temp+func2(i)\n    i+=1\n  end\n  return temp\nend\n\ndef func2(x)\n  if x&lt;=0\n    return 0\n  else\n    if x%2==0\n      return 0+func2(x/2)\n    else\n      return 1+func2(x/2)\n    end\n  end\nend\n\nx=4\nres=func1(x)\nputs res</code></pre>","a":[{"id":1770839,"option":"4","correct":false},{"id":1770840,"option":"3","correct":false},{"id":1770841,"option":"6","correct":false},{"id":1770842,"option":"5","correct":true}]},{"q":"<p>What is the output to the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#import &lt;Foundation/Foundation.h&gt;\n\nint main (int argc, const char * argv[])\n{\n    @autoreleasepool {\n        float answer;\n\n        answer = multiply( 10,35 );\n    }\n    return 0;\n}\n\nfloat multiply (int g, int l)\n{\n        return g * l;\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1769379,"option":"Compilation error","correct":true},{"id":1769380,"option":"350","correct":false},{"id":1769381,"option":"30","correct":false},{"id":1769382,"option":"Syntax error","correct":false}]},{"q":"<p>What is the output to the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#import &lt;Foundation/Foundation.h&gt;\n\nvoid d (int);\n\nint main (int argc, const char * argv[])\n{\n    {\n        int s;\n\n        for (s=0; s&lt;5; s++)\n        {\n                d (s );\n        }\n\n   }\n   return 0;\n}\n\nvoid d (int s)\n{\n        int y = 0;\n\n        y += s;\n\n        NSLog (@\"y + s = %i\", y);\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>y + s = 0<br>\n&nbsp;y + s= 1<br>\n&nbsp;y + s= 2<br>\n&nbsp;y + s= 3<br>\n&nbsp;y + s= 4</p>\n\n<p><strong>2.</strong></p>\n\n<p>No output</p>\n\n<p><strong>3.</strong></p>\n\n<p>y + s = 1<br>\n&nbsp;y + s= 2<br>\n&nbsp;y + s= 3<br>\n&nbsp;y + s= 4<br>\n&nbsp;y + s= 5</p>\n\n<p><strong>4.</strong></p>\n\n<p>Compilation error</p>","a":[{"id":1769355,"option":"1","correct":true},{"id":1769356,"option":"2","correct":false},{"id":1769357,"option":"3","correct":false},{"id":1769358,"option":"4","correct":false}]},{"q":"<p>What is the output to the following code:</p>\n\n<p>'<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#import &lt;Foundation/Foundation.h&gt;\n@interface SampleClass:NSObject\n- (int)max:(int)numberone andNum2:(int)numbertwo;\n@end\n@implementation SampleClass\n- (int)max:(int)numberone andNum2:(int)numbertwo {\n int output;\n    if (numberone &gt; numbertwo) {\n      output = numberone;\n   } else {\n      output = numbertwo;\n   }\n \n   return output; \n}\n@end\nint main () {\n    int i = 45;\n   int j = 60;\n   int m;\n   \n   SampleClass *sampleClass = [[SampleClass alloc]init];\n  m = [sampleClass max:i andNum2:j];\n  NSLog(@\"Max value is : %d\\n\", m );\n   return 0;\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1769339,"option":"Min value is:45","correct":false},{"id":1769340,"option":"Max value is : 60","correct":true},{"id":1769341,"option":"No output","correct":false},{"id":1769342,"option":"Syntax error","correct":false}]},{"q":"<p>What is the output of the given code snippet:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>fun main(args: Array&lt;String&gt;) {\n    val x: Int = 578\n    val res=func(x)\n    print(res)\n}\nfun func(x:Int):Int{\n    if(x&lt;3){\n      return x\n    }\n    if(x&gt;=3 &amp;&amp; x&lt;10){\n      return x-1\n    }\n    var temp=1\n    while(x/temp&gt;9){\n      temp=temp*10\n    }\n    var temp1:Int=x/temp\n    if(temp1!=3){\n      return func(temp1)*func(temp-1)+func(temp1)+func(x%temp)\n    }\n    else{\n      return func(temp1*temp-1)\n    }\n}</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1747274,"option":"394","correct":false},{"id":1747275,"option":"385","correct":true},{"id":1747276,"option":"7","correct":false},{"id":1747277,"option":"Error","correct":false}]},{"q":"<p>You were asked to write a Kotlin program to find all the combinations of numbers say 1, 2, 3 to sum up and get given sum. The given sum is 5 then the combinations are:<br>\n<em>{ [ 1, 1, 1, 1, 1 ], [ 1, 1, 1, 2 ], [ 1, 1, 2, 1 ], [ 1, 1, 3 ], [1, 2, 1, 1], [1, 2, 2], [1, 3, 1], [2, 1, 1, 1],&nbsp;[2, 1, 2], [2, 2, 1], [2, 3], [3, 1, 1], [3, 2] }</em></p>\n\n<p>You have written the following code but the function \"combinations\" is incomplete so the code doesn't produce the desired output</p>\n\n<pre class=\"prettyprint\"><code>import java.util.Arrays\nfun main(){\n   val arr=Array&lt;Int&gt;(100, { i -&gt; 0 })\n   for(i in 0..99){\n     arr[i]=0\n   }\n   val n=5\n   combinations(arr,n,0)\n}\nfun combinations(arr:Array&lt;Int&gt;,k:Int,i:Int){\n   //code\n}</code></pre>\n\n<p>Identify the correct code snippet for function \"combinations\" to get the desired output by resolving errors in the given code.</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>fun combinations(arr:Array&lt;Int&gt;,k:Int,i:Int){\n   var max:Int=4\n   if(k==0){\n     for(j in 0..i-1){\n       print(arr[i])\n       print(\" \") }\n     println() }\n   else if(k&gt;0){\n     for(j in 1..max){\n       arr[i]=j\n       combinations(arr,n-j,max+1) }\n   }\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>fun combinations(arr:Array&lt;Int&gt;,k:Int,i:Int){\n   var max:Int=3\n   if(k==0){\n     for(j in 0..i-1){\n       print(arr[j])\n       print(\" \")  }\n     println() }\n   else if(k&gt;0){\n     for(j in 1..max){\n       arr[i]=j\n       combinations(arr,k-i,j+1) }\n   }\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>fun combinations(arr:Array&lt;Int&gt;,k:Int,i:Int){\n   var max:Int=4\n   if(k==0){\n     for(j in 0..i-1){\n       print(arr[j])\n       print(\" \")\n     }\n     println()\n   }\n   else if(k&gt;0){\n     for(j in 1..max){\n       arr[i]=k\n       combinations(arr,max-j,i+1)\n     }\n   }\n}</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>fun combinations(arr:Array&lt;Int&gt;,k:Int,i:Int){\n   var max:Int=3\n   if(k==0){\n     for(j in 0..i-1){\n       print(arr[j])\n       print(\" \") }\n     println() }\n   else if(k&gt;0){\n     for(j in 1..max){\n       arr[i]=j\n       combinations(arr,k-j,i+1) }\n   }\n}</code></pre>\n\t</li>\n</ol>","a":[{"id":1747270,"option":"1","correct":false},{"id":1747271,"option":"2","correct":false},{"id":1747272,"option":"3","correct":false},{"id":1747273,"option":"4","correct":true}]},{"q":"<p>You are given the following function in Kotlin:</p>\n\n<pre class=\"prettyprint\"><code>var total = 0\narr.reduced { it &gt; 0 }.forEach {\n    total += it }\nprint(total)</code></pre>\n\n<p>The function is to find the sum of all elements that are greater than 0 in an array \"arr\". But, the code is giving an error. Identify the correct code for the above mentioned task.</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>var total = 0\narr.filter { it &gt; 0 }.forEach {\n    total += it  }\nprint(total)  </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>var total = 0\narr.sum { it &gt; 0 }.forEach {\n    total += it }\nprint(total)  </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>var total = 0\narr.total { it &gt; 0 }.forEach {\n    total += it  }\nprint(total)  </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>var total = 0\narr.closure { it &gt; 0 }.forEach {\n    total += it  }\nprint(total)  </code></pre>\n\t</li>\n</ol>","a":[{"id":1747266,"option":"1","correct":true},{"id":1747267,"option":"2","correct":false},{"id":1747268,"option":"3","correct":false},{"id":1747269,"option":"4","correct":false}]},{"q":"<p>What is the output of the given code snippet:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>fun main(){\n    val stringPlus: (String, String) -&gt; String = String::plus\n    val intPlus: Int.(Int) -&gt; Int = Int::plus\n    \n    println(stringPlus.invoke(\"Alice\", \"Smith\"))\n    println(stringPlus(\"Alice, \", \"Smith\"))\n    \n    println(intPlus.invoke(3, 14))\n    println(intPlus(4, 12))\n    println(12.intPlus(5))\n    println(1.plus(2))]\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Alice Smith\nAlice, Smith\n314\n16\n17\n12</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>AliceSmith\nAlice, Smith\n17\n16\n17\n12</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>AliceSmith\nAlice, Smith\n17\n16\n17\n3</code></pre>\n\t</li>\n</ol>","a":[{"id":1747262,"option":"1","correct":false},{"id":1747263,"option":"2","correct":false},{"id":1747264,"option":"3","correct":true},{"id":1747265,"option":"Error","correct":false}]},{"q":"<p>What is the output of the given code snippet:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import java.util.Arrays\nfun main(){\n   val arr=arrayOf&lt;Int&gt;(5, 3, 6, 2, 4, -1, 0, -7)\n   val k=2\n   func(arr,k)\n}\nfun func(arr:Array&lt;Int&gt;,k:Int){\n   val n=arr.size\n   var t:Int\n   for(i in 0..k-1){\n     t=arr[0]\n     for(j in 0..n-2)\n        arr[j]=arr[j+1]\n     arr[n-1]=t\n   }\n   for(i in 0..n-1){\n     print(arr[i])\n     print(\" \")\n   }\n}</code></pre>","a":[{"id":1747258,"option":"2 4 -1 0 -7 5 3 6","correct":false},{"id":1747259,"option":"6 2 4 -1 0 -7 5 3 ","correct":true},{"id":1747260,"option":"-7 0 5 3 6 2 4 -1","correct":false},{"id":1747261,"option":"-1 -7 0 5 3 6 2 4 ","correct":false}]},{"q":"<p>What is the output for the following code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>func test(num: Int) -&gt; Bool {\n    if num % 2 == 0 || num % 5 == 0 {\n    return true\n    } else {\n    return false\n    }\n}\nprint(test(num: 42))</code></pre>\n\n<p> </p>","a":[{"id":1656685,"option":"42","correct":false},{"id":1656686,"option":"-1","correct":false},{"id":1656687,"option":"0","correct":false},{"id":1656688,"option":"1","correct":true}]},{"q":"<p>What is the output of the following code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>func calcDecrement(forDecrement total: Int) -&gt; () -&gt; Int {\n    var overall = 0\n    func Result() -&gt; Int {\n    overall -= total\n    return overall\n    }\n    return Result\n}\n\nlet dec = calcDecrement(forDecrement: 20)\nprint(dec())</code></pre>\n\n<p> </p>","a":[{"id":1656681,"option":"20","correct":false},{"id":1656682,"option":"0","correct":false},{"id":1656683,"option":"-20","correct":true},{"id":1656684,"option":"10","correct":false}]},{"q":"<p>What is the output of the following Swift code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>func revstring(string: String) -&gt; String\n{\n    var value = \"\"\n    msg=string\n    for c in msg {\n    value = String(c) + value\n    }\n    msg=value\n    return value\n}\nvar msg=\"swift\"\nlet value = revstring(string:\"Swift!\")\nprint(value)\nprint(msg)</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>!tfiwS\nswift</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>!tfiwS\n!tfiwS</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>tfiws\nswift</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>Error</code></pre>\n\n<p> </p>","a":[{"id":1656653,"option":"1","correct":false},{"id":1656654,"option":"2","correct":true},{"id":1656655,"option":"3","correct":false},{"id":1656656,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Swift code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>func function(a: Int) {\nvar Number=0, Temp=0, Reminder=0, Reverse = 0;\nNumber=a;\nTemp = Number;\nwhile ( Temp &gt; 0)\n{\nReminder = Temp % 10\nReverse = Reverse * 10 + Reminder\nTemp = Temp / 10\n}\nprint(Reverse);\nif ( Number == Reverse ){\nprint(\"Yes\");\n}\nelse{\nprint(\"No\");\n}\n}\nfunction(a:1011);</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>1101\nNo</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>1001\nYes</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>1001\nNo</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>1101\nYes</code></pre>","a":[{"id":1656649,"option":"1","correct":true},{"id":1656650,"option":"2","correct":false},{"id":1656651,"option":"1001\r\nNo","correct":false},{"id":1656652,"option":"1101\r\nYes","correct":false}]},{"q":"<p>You have implemented the following code</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>func Multiply(_ x:Int, y:Int) -&gt; Int {\nreturn x*y\n}</code></pre>\n\n<p>How will you call the function when <em>x = 5</em> and <em>y = 6</em>?</p>","a":[{"id":1656469,"option":"Multiply(5,6)","correct":false},{"id":1656470,"option":"Multiply(5, y:6)","correct":true},{"id":1656471,"option":"Multiply(x:5, y:6)","correct":false},{"id":1656472,"option":"Multiply(x, y)","correct":false}]},{"q":"<p>You have a collection 'purchase_orders' with the documents as given below in a database 'myshop'. You need to find the names of all products that were sold out as well as to find out the total amount spent on each item by all the customers.</p>\n\n<p><strong>Collection:</strong> purchase_orders<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c4\"), \"item\" : \"Oximeter\", \"price\" : 50, \"customer_name\" : \"Alice\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c5\"), \"item\" : \"Sanitizer\", \"price\" : 20, \"customer_name\" : \"Jeff\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c6\"), \"item\" : \"Mask\", \"price\" : 10, \"customer_name\" : \"Kristen\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c7\"), \"item\" : \"Sanitizer\", \"price\" : 20, \"customer_name\" : \"Eric\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c8\"), \"item\" : \"Thermometer\", \"price\" : 30, \"customer_name\" : \"Jack\" }</p>\n\n<p>How will you write the queries to perform the given operations on a collection myshop.purchase_orders?</p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>&gt; use myshop\n&gt; db.purchase_orders.distinct(\"item\")\n&gt; db.purchase_orders.aggregate( [ \n {$match:{}},\n {$group:{_id:\"$item\",amount:{$sum:\"$price\"}} } \n ] )</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>&gt; use myshop\n&gt; db.purchase_orders.aggregate($distinct:{\"item\"})\n&gt; db.purchase_orders.aggregate( [ \n {$match:{_id:\"$item\"}},\n {$group:{amount:{$sum:\"$price\"}} } \n ] )</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>&gt; use myshop\n&gt; db.purchase_orders.distinct(\"item\")\n&gt; db.purchase_orders.aggregate( [ \n {$match:{distinct(\"customer_name\")}},\n {$group:{\"$item\",amount:{$sum:\"$price\"}} } \n ] )</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>&gt; use myshop\n&gt; db.purchase_orders.distinct(\"customer_name\")\n&gt; db.purchase_orders.aggregate( [ \n {$match:{amount:{$sum:\"$price\"}}},\n {$group:{_id:\"$item\"} } \n ] )</code></pre>\n\n<p> </p>","a":[{"id":1652485,"option":"1","correct":true},{"id":1652486,"option":"2","correct":false},{"id":1652487,"option":"3","correct":false},{"id":1652488,"option":"4","correct":false}]},{"q":"<p>You have a collection 'purchase_orders' with the documents as given below in a database 'myshop'.<br>\n<strong>Collection</strong>: purchase_orders<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c4\"), \"item\" : \"Oximeter\", \"price\" : 50, \"customer_name\" : \"Alice\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c5\"), \"item\" : \"Sanitizer\", \"price\" : 20, \"customer_name\" : \"Jeff\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c6\"), \"item\" : \"Mask\", \"price\" : 10, \"customer_name\" : \"Kristen\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c7\"), \"item\" : \"Sanitizer\", \"price\" : 20, \"customer_name\" : \"Eric\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c8\"), \"item\" : \"Thermometer\", \"price\" : 30, \"customer_name\" : \"Jack\" }</p>\n\n<p>How will you write a query to find out how many sanitizers were sold?</p>","a":[{"id":1652481,"option":"db.purchase_orders.find({$count:{\"item\":\"Sanitizer\"}})","correct":false},{"id":1652482,"option":"db.purchase_orders.aggregate().count{\"item\":\"Sanitizer\"})","correct":false},{"id":1652483,"option":"db.purchase_orders.count({\"item\":\"Sanitizer\"})","correct":true},{"id":1652484,"option":"db.purchase_orders.count({\"Sanitizer\"})","correct":false}]},{"q":"<p>You have a collection 'purchase_orders' with the documents as given below in a database 'myshop'.<br>\n<strong>Collection</strong>: purchase_orders<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c4\"), \"item\" : \"Oximeter\", \"price\" : 50, \"customer_name\" : \"Alice\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c5\"), \"item\" : \"Sanitizer\", \"price\" : 20, \"customer_name\" : \"Jeff\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c6\"), \"item\" : \"Mask\", \"price\" : 10, \"customer_name\" : \"Kristen\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c7\"), \"item\" : \"Sanitizer\", \"price\" : 20, \"customer_name\" : \"Eric\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c8\"), \"item\" : \"Thermometer\", \"price\" : 30, \"customer_name\" : \"Jack\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c8\"), \"item\" : \"Mask\", \"price\" : 10, \"customer_name\" : \"Alice\" }<br>\n{ \"_id\" : ObjectId(\"60cb177c1c3423c6cd1188c8\"), \"item\" : \"Thermometer\", \"price\" : 30, \"customer_name\" : \"Jeff\" }<br>\n<br>\nWrite a query to find out the names of items and amount spent by the customers 'Alice' and 'Jeff' and arrange the results in descending order.</p>\n\n<p><strong>Query</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>db.purchase_orders.aggregate([\n{$match:{{$icustomer_name:[ {\"Alice\"}$or{\"Jeff\"} ]}}}, \n{$group:{_id:\"$item\", amount:{$total:\"$price\"}} sort:desc }\n])</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>db.purchase_orders.aggregate([\n{$match:{customer_name:{$like:[\"Alice\", \"Jeff\"]}}}, \n{$group:{_id:\"$item\", amount:{$sum:\"$price\"}}},\n{$sort:{$price:desc}} \n])</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>db.purchase_orders.aggregate([\n{$match:{customer_name:{$between:[\"Alice\", \"Jeff\"]}}},\n{$group:{_id:\"$item\", amount:{$sum:\"$price\"}}},\n{$sort:{$group:-1}} \n])</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>db.purchase_orders.aggregate([\n{$match:{customer_name:{$in:[\"Alice\", \"Jeff\"]}}},\n{$group:{_id:\"$item\", amount:{$sum:\"$price\"}}},\n{$sort:{amount:-1}} \n])</code></pre>\n\n<p> </p>","a":[{"id":1653073,"option":"1","correct":false},{"id":1653074,"option":"2","correct":false},{"id":1653075,"option":"3","correct":false},{"id":1653076,"option":"4","correct":true}]},{"q":"<p>In <strong>C#</strong>, a derived class wants to provide a custom implementation of the area method in order to use it to calculate the value for the area of the sphere with the given values.<br>\nWhich of the following keywords are used in the derived class in the following given scenario?</p>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>public Shape(double a, double b)\n{\n    this.a = a;\n    this.b = b;\n    \n}\npublic virtual double Area()\n{\n    return a * b;\n    \n}</code></pre>\n\n<p> </p>","a":[{"id":1419372,"option":"Override","correct":true},{"id":1419373,"option":"abstract","correct":false},{"id":1419374,"option":"const","correct":false},{"id":1419375,"option":"static","correct":false}]},{"q":"<p>What will be the output for the following C++ code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass test \n{\t\n\tint a;\n\tint b;\n\t\t\n\tpublic:\n\ttest(int A, int B)\n\t: a(B)\n\t, b(A)\n\t{\n\t\t    \n\t}\n\t\n\tvoid modify()\n\t{\n\t    int *t = &amp;a;\n\t    int *s = &amp;b;\n\t    \n\t    a = a + *s;\n\t    b = *t - b;\n\t}\n\t\n\tvoid display() \n\t{ \n\t    cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b; \n\t    \n\t}\n};\n\ntest func(int a, int b)\n{\n\t\n\treturn { a, b };\n}\n\nint main()\n{\n\ttest t = func(21, 22);\n\tt.modify();\n\tt.display();\n\treturn 0;\n}</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>43 22</code></pre>\n\n<p><br>\n2.</p>\n\n<pre class=\"prettyprint\"><code>21 22\n</code></pre>\n\n<p><br>\n3.</p>\n\n<pre class=\"prettyprint\"><code>22 43</code></pre>\n\n<p> </p>","a":[{"id":1488755,"option":"1","correct":true},{"id":1488756,"option":"2","correct":false},{"id":1488757,"option":"3","correct":false},{"id":1488758,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements is correct if you execute the following C++ code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\n \ntemplate &lt;typename T&gt;\nstruct func \n{\n   void x() \n   { \n       cout &lt;&lt; \"hi\" &lt;&lt; endl; \n       \n   }\n   void y() \n   { \n       cout &lt;&lt; \"hello\" &lt;&lt; endl; \n       \n   }\n};\n\ntemplate &lt;&gt;\nvoid func&lt;int&gt;::x()\n{ \n   cout &lt;&lt; \"hello world\" &lt;&lt; endl; \n}\nint main() \n{\n   func&lt;int&gt; t;\n   t.x();         \n   t.y();         \n}</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong><br>\n </p>\n\n<p>1. The code produces the following output-</p>\n\n<pre class=\"prettyprint\"><code>hi\nhello</code></pre>\n\n<p> </p>\n\n<p>2. The code produces the following output-</p>\n\n<pre class=\"prettyprint\"><code>hello world\nhello</code></pre>\n\n<p> <br>\n<br>\n3. The code produces the following output-</p>\n\n<pre class=\"prettyprint\"><code>hello world\nhi   \nhello</code></pre>\n\n<p><br>\n<br>\n4. The code does not give any runtime error</p>","a":[{"id":1488439,"option":"1 and 4","correct":false},{"id":1488440,"option":"2 and 4","correct":true},{"id":1488441,"option":"3 and 4","correct":false},{"id":1488442,"option":"None of these","correct":false}]},{"q":"<p>What will be the output for the following C++ code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass F\n{\n    \n};\n  \nclass S : public F\n{\n    \n};\n\ntemplate&lt;typename X, typename Y&gt;\nclass check\n{\n    class F { };\n    static F find( ... ); \n    \n    class T { F f[2]; };\n    static T find( Y* );\n    \n    public:\n    enum \n    { \n        m = sizeof(T) == sizeof(find(static_cast&lt;X*&gt;(0)))\n        \n    };\n    \n};\n\ntemplate &lt;class Q, class R&gt; \n\nbool checkIf() \n{\n    return check&lt;Q, R&gt;::m;\n}\n\n\nint main()\n{\n    \n    check &lt;class F, class S&gt; t (F,S);\n    cout &lt;&lt; checkIf&lt;class F, class S&gt;() &lt;&lt;endl;\n    return 0;\n    \n}</code></pre>\n\n<p> </p>","a":[{"id":1488095,"option":"0","correct":true},{"id":1488096,"option":"1","correct":false},{"id":1488097,"option":"NULL","correct":false},{"id":1488098,"option":"cannot determine the output","correct":false}]},{"q":"<p>You have a C# code given below having a missing line of code (YYY). Now, which of the given statements is correct if the code is executed using the following syntaxes consecutively in place of YYY?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\npublic class Hack\n{\n    public static int hackOpr(int[] Array)\n    {\n        int max = Array[0] * Array[1];\n        for (int x = 1; x &lt;= Array.Length - 2; x++)\n        { \n            YYY \n            \n        }\n        return max ;\n }\n public static void Main()\n {\n     Console.WriteLine(hackOpr(new int[] {1, -3, 4, -5, 1}));\n     Console.WriteLine(hackOpr(new int[] {1 , 3, 4, 5, 2}));\n     Console.WriteLine(hackOpr(new int[] {1 , 3, -4, 5, 2}));\n     Console.WriteLine(hackOpr(new int[] {1 , 0, -4, 0, 2})); \n     \n } \n    \n}</code></pre>\n\n<p><br>\n<br>\n<strong>Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>max = Math.Max(max , Array[x] / Array[x + 1]);\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>max = Math.Max(max , Array[x] * Array[x - 1]);</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>max = Math.Max(max , Array[x] * Array[x + 1]);</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>max = Math.Max(max , Array[x] / Array[x - 1]);</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Syntax 1 gives an output and a runtime error</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Syntax 2 gives an output and does not throw any error</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Syntax 3 gives an output and does not throw any error</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Syntax 4 gives an output and throws a runtime error</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419337,"option":"1 and 3","correct":false},{"id":1419338,"option":"2 and 4","correct":false},{"id":1419339,"option":"1 and 4","correct":false},{"id":1419340,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following C# code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\nclass Hack\n{\n    static void hack(ref int h)\n    {\n        h = h* h* h;\n    }\n    \n    static void Main(string[] args)\n    {\n        int h= 15;\n        hack(ref h);\n        Console.WriteLine(h);\n    }\n    \n}</code></pre>\n\n<p> </p>","a":[{"id":1419262,"option":"225","correct":false},{"id":1419263,"option":"30","correct":false},{"id":1419264,"option":"3375","correct":true},{"id":1419265,"option":"0","correct":false}]},{"q":"<p>In C#, you have defined a method \"DemoMethod\" as shown below. Which of the following method calls will throw an error in the given scenario? <br>\n<br>\n<em>Note</em>: Assume <strong>opt </strong>as the reference variable to call the method \"DemoMethod\"<br>\n </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>public void DemoMethod(int required, int optInt = default(int), string description = \"Description\")\n{\n    Console.WriteLine(\"{0}: {1} + {2} = {3}\", description, required, optInt, required + optInt);\n}</code></pre>\n\n<p><br>\n<br>\n </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>opt.DemoMethod(12, description: \"Addition with zero:\");\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>opt.DemoMethod(12, 10);\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>opt.DemoMethod(12 ,10 , description: \"Addition with zero:\");</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419507,"option":"Only 1","correct":false},{"id":1419508,"option":"Only 2","correct":false},{"id":1419509,"option":"Only 3","correct":false},{"id":1419510,"option":"Both 1 and 2","correct":true}]},{"q":"<p>What is the output of the following C# code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Hack\n{\n    static void Main(string[] args)\n        {\n            if (hack1() &amp;&amp; hack2())\n            {\n                Console.WriteLine(\"Hey\");\n            }\n        }\n\t static bool hack1()\n        {\n            Console.WriteLine(\"Hi\");\n            return false ;\n        }\n\n       static bool hack2()\n        {\n            Console.WriteLine(\"Hello\");\n            return true;\n        }\n        \n}\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\nHello</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hi\nHello\nHey</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419462,"option":"1","correct":true},{"id":1419463,"option":"2","correct":false},{"id":1419464,"option":"3","correct":false},{"id":1419465,"option":"The code gives a compile time error","correct":false}]},{"q":"<p>What will be the output of the C# code given below?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Hack\n{\n    static void hackA(string hack_stringA)\n    {\n        hack_stringA = \"Hi\";\n    }\n    static void hackB(ref string hack_stringB)\n    {\n        hack_stringB = \"Hello\";\n    }\n    static void hackC(out string hack_stringC)\n    {\n        hack_stringC = \"Hey\";\n    }\n\tstatic void Main(string[] args)\n    {\n        string hackerearth;\n        hackC(out hackerearth);\n        Console.WriteLine(hackerearth);\n\n        hackB(ref hackerearth);\n        Console.WriteLine(hackerearth);\n\n        hackA(hackerearth);\n        Console.WriteLine(hackerearth);\n\n    }\n\n}\n</code></pre>\n\n<p><br>\n<br>\n<strong>Output</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hey\nHello\nHi\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hey\nHey\nHello\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hey\nHello\nHello\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419047,"option":"1","correct":false},{"id":1419048,"option":"2","correct":false},{"id":1419049,"option":"3","correct":true},{"id":1419050,"option":"None of these","correct":false}]},{"q":"<p>What is the output for the following C# code snippet?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System; \n \nclass Demo\n{ \n    public delegate void demo_delegate(int a, int b); \n    public static void example(int a, int b) \n    { \n        Console.WriteLine(a - b); \n        \n    } \n    static public void Main() \n    { \n        demo_delegate obj = example; \n        obj(10, 20); \n        \n    } \n}</code></pre>\n\n<p> </p>","a":[{"id":1419292,"option":"10","correct":false},{"id":1419293,"option":"20","correct":false},{"id":1419294,"option":"-10","correct":true},{"id":1419295,"option":"0","correct":false}]},{"q":"<p>What is the output of the following C# code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Program\n{\n    public static void Main()\n    {\n        dynamic emp= new Employee();\n        emp.DisplayEmployeeinfo(101, \"James\");\n        emp.DisplayEmployeeinfo(\"101\");\n        emp.hackster();\n        \n    }\n}\npublic class Employee\n{\n    public void DisplayEmployeeinfo(int id)\n    {\n        Console.WriteLine(\"Employee Dummy data\");\n        \n    }\n    public void hackster()\n    {\n        Console.WriteLine(\"Happy Coding\");\n        \n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":1419217,"option":"Code throws Run-time Error","correct":true},{"id":1419218,"option":"Code throws Compile-Time Error","correct":false},{"id":1419219,"option":"Code throws Linker Error","correct":false},{"id":1419220,"option":"None of these","correct":false}]},{"q":"<p>Which of the following C# code snippets throws an error when executed?<br>\n<br>\n<strong>Code Snippets:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>using System;\nnamespace DemoClass\n{ \n    abstract class Dog\n    { \n        public void Call() \n        { \n            Console.WriteLine(\"Call Method\"); \n            \n        } \n        \n        abstract void Breed(); \n        \n    } \n    class Program \n    { \n        static void Main(string[] args) \n        { \n            \n        } \n        \n    } \n}</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>using System;\nnamespace DemoClass \n{ \n    abstract class Dog \n    { \n        public void Call() \n        { \n            Console.WriteLine(\"Call Method\"); \n            \n        } \n        \n        public abstract void Breed(); \n        \n    } \n    class Program \n    { \n        static void Main(string[] args) \n        { \n            \n        } \n        \n    } \n}</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419637,"option":"1","correct":true},{"id":1419638,"option":"2","correct":false},{"id":1419639,"option":"Both 1 and 2","correct":false},{"id":1419640,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the C# code snippet given below?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\nnamespace MyApplication\n{ \n    interface FirstInterface\n    { \n        void FirstMethod(); \n        \n    }\n    interface SecondInterface\n    { \n        void SecondMethod(); \n        \n    }\n    class Demo : FirstInterface, SecondInterface\n    { \n        public void FirstMethod()\n        { \n            Console.WriteLine(\"First piece of code\"); \n            \n        }\n        public void SecondMethod()\n        { \n            Console.WriteLine(\"Second piece of code\"); \n            \n        }\n        \n    }\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Demo myObj = new Demo();\n            myObj.FirstMethod();\n            myObj.SecondMethod(); \n            \n        } \n        \n    } \n    \n}</code></pre>\n\n<p> </p>\n\n<p><strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Second piece of code\nFirst piece of code\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>First piece of code\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>First piece of code\nSecond piece of code\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Second piece of code</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419102,"option":"1","correct":false},{"id":1419103,"option":"2","correct":false},{"id":1419104,"option":"3","correct":true},{"id":1419105,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following C# code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Hack&lt;T&gt; \n{\n\t\n\tprivate T hack_data;\n\t\n\tpublic T hack_value\n\t{\n\t\t\n\t\tget\n\t\t{\n\t\t\treturn this.hack_data;\n\t\t}\n\t\tset\n\t\t{\n\t\t\tthis.hack_data = value;\n\t\t}\n\t}\n}\n\nclass hack \n{\n    static void hack_print(string str) \n\t{ \n\t    Console.WriteLine(str); \n\t    \n\t} \n    static void Main(string[] args)\n    {\n        Hack&lt;float&gt; y = new Hack&lt;float&gt;();\n\t\ty.hack_value = 8.0F;\n\t\t\n\t\tHack&lt;string&gt; x = new Hack&lt;string&gt;();\n\t\tx.hack_value = \"Hello Hackerearth\";\n\t\t\n\t\tConsole.WriteLine(y.hack_value);\n\t\thack_print(\"Hello World\");\n\t\tConsole.WriteLine(x.hack_value);\n\t}\n\t\n}\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>8.0\nHello World\nHello Hackerearth</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>7.9\nHello Hackerearth\nHello World</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>8\nHello World\nHello Hackerearth</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Hello World\n8.00\nHello Hackerearth</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419007,"option":"1","correct":false},{"id":1419008,"option":"2","correct":false},{"id":1419009,"option":"3","correct":true},{"id":1419010,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following C# code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System; \n \nclass Demo\n{ \n    public delegate void demo_delegate(int a, int b); \n    \n    public static void example(int a, int b) \n    { \n        Console.WriteLine(a - b); \n        \n    }\n    static public void Main() \n    { \n        demo_delegate obj = example; \n        obj(10, 20); \n        \n    }    \n}</code></pre>\n\n<p> </p>","a":[{"id":1418962,"option":"10","correct":false},{"id":1418963,"option":"20","correct":false},{"id":1418964,"option":"-10","correct":true},{"id":1418965,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the C# code snippet given below?<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\npublic class Hack\n{\n    static void Main(string[] args)\n    {\n        int number= 8;\n        NoMethod(number);\n        Console.WriteLine(number);\n        FirstMethod(ref number);\n        Console.WriteLine(number);\n        \n    }\n    static void NoMethod(int value)\n    {\n        value+= 46;\n        Console.WriteLine(value);\n        \n    }\n    static void FirstMethod(ref int value)\n    {\n        value+= 46;\n        Console.WriteLine(value);\n        \n    }\n}\n</code></pre>\n\n<p><br>\n<br>\n<strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>54\n8\n54\n8</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>54\n8\n54\n54</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>8\n46\n46\n46</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>8\n8\n8\n8</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1419187,"option":"1","correct":false},{"id":1419188,"option":"2","correct":true},{"id":1419189,"option":"3","correct":false},{"id":1419190,"option":"4","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var sum = (x, y) =&gt; x + y;\nconsole.log(sum.call(null, 20, 30));\nconsole.log(sum.apply(null, [20, 30]));\nvar xyz = sum.bind(null, 20, 30);\nconsole.log(xyz());</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong> </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\n50\nError                                                                                            </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\n50\n50</code></pre>\n\t                                                                                                                                  </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>null\nnull\nnull </code></pre>\n\t                                                                                                                                                                                                   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\nnull\n50</code></pre>\n\t                                                                                                                                                                                      </li>\n</ol>","a":[{"id":1420427,"option":"1","correct":false},{"id":1420428,"option":"2","correct":true},{"id":1420429,"option":"3","correct":false},{"id":1420430,"option":"4","correct":false}]},{"q":"<p>In Azure functions, you are working on triggers and binding definitions. Determine the direction value of a trigger that you are required to include in the JSON file of your function.</p>","a":[{"id":1340971,"option":"in","correct":true},{"id":1340972,"option":"out","correct":false},{"id":1340973,"option":"inout","correct":false},{"id":1340974,"option":"It depends on the input and the output bindings.","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>import functools\n@functools.lru_cache()\ndef fibonacci(n):\n    if n &lt; 4:\n        return n\n    return fibonacci(n - 1) + fibonacci(n - 2)\nres = fibonacci(10)\nprint(res)\n</code></pre>\n\n<p> </p>","a":[{"id":1122009,"option":"55","correct":false},{"id":1122010,"option":"89","correct":true},{"id":1122011,"option":"-55","correct":false},{"id":1122012,"option":"17","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def main_list(sample_list):\n    def Compute():\n        return sum([i for i in sample_list if isinstance(i, float)])\n    result = Compute()\n    final_list.append(result)\n    return final_list\nsample_list = [1000, 1010.90, 3450, 7809.23]\nfinal_list=[]\nprint(main_list(final_list))\n</code></pre>\n\n<p> </p>","a":[{"id":1122049,"option":"[4456]","correct":false},{"id":1122050,"option":"[13270.13]","correct":false},{"id":1122051,"option":"[ ]","correct":false},{"id":1122052,"option":"[0]","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class StudentData:\n    def __init__(self, name, score):\n        self.name = name\n        self.score = score\n    @property\n    def getScore(self):\n        return self.name + self.score \n    @getScore.setter\n    def getScore(self, n):\n        name, rand, marks = n.split(' ')\n        self.name = name\n        self.score = score\nst = StudentData(\"Bob\", \"20\")\nprint(st.getScore, sep=',')\n</code></pre>\n\n<p> </p>","a":[{"id":1122053,"option":"Bob, 20","correct":false},{"id":1122054,"option":",Bob20","correct":false},{"id":1122055,"option":"Bob20","correct":true},{"id":1122056,"option":"AttributeError","correct":false}]},{"q":"<p>In Spark Streaming, which of these statements about the following function are correct:</p>\n\n<p><strong>Function</strong></p>\n\n<pre class=\"prettyprint\"><code>groupByKeyAndWindow(windowDuration, slideDuration, [numTasks])</code></pre>\n\n<p><strong>Statement</strong></p>\n\n<ol>\n\t<li>When it is called on a DStream of (K, V) pairs, it returns a new DStream of (K, Seq[V]) pairs.</li>\n\t<li>The values for each key in the existing DStream pair are aggregated using a normal function.</li>\n\t<li>By default, it uses Spark's default number of parallel tasks to perform the grouping.</li>\n\t<li>You can pass only one numTasks argument to set a different number of tasks</li>\n</ol>\n\n<p> </p>","a":[{"id":1166913,"option":"1 and 2","correct":false},{"id":1166914,"option":"1 and 3","correct":true},{"id":1166915,"option":"1, 2, and 3","correct":false},{"id":1166916,"option":"2, 3, and 4","correct":false}]},{"q":"<p>Which line in the <strong>C#</strong> code snippet given below will produce an error?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;  // line 1\n\nclass Sample  // line 2\n{ \n    public static int BinaryEquivalent(int num)  // line 3\n    { \n        if (num== 0)  // line 4\n        { \n            return 0;  // line 5  \n        }\n        else  // line 6\n        { \n            int bit = 0;  // line 7\n            bit = (num / 2) + 10 * BinaryEquivalent(num % 2);  // line 8\n            Console.Write(bit);  // line 9\n            return 0;  // line 10\n        } \n    }\n    public static void Main()  // line 11\n    { \n        int n = 0;  // line 12\n        Console.Write(\"Enter the number: \");  // line 13\n        n = int.Parse(Console.ReadLine());  // line 14\n        BinaryEquivalent(n);  // line 15\n        Console.WriteLine();  // line 16\n    } \n}</code></pre>","a":[{"id":1419252,"option":"Line 7","correct":false},{"id":1419253,"option":"Line 4","correct":false},{"id":1419254,"option":"Line 5","correct":false},{"id":1419255,"option":"Line 8","correct":true}]},{"q":"<p>The following Python 3 code:</p>\n\n<ul>\n\t<li>Denotes a list of candies\n\t<ul>\n\t\t<li>The list of tuples represents the type of candy and its quantity. For example in (2, 1), '2' represents the type of candy, and '1' represents the quantity of that specific type.</li>\n\t</ul>\n\t</li>\n\t<li>Has a class named <strong>shop</strong></li>\n</ul>\n\n<p>If you are required to pay an extra charge on the purchase of any of the types of candies, determine the charge for each type based on the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>class shop:\n    charges = 10\n    def candy_count(self, candies):\n        result = {} \n        for i, j in candies: \n            result.setdefault(j, []).append(i) \n        return result\n         \n    def candy_count_result(self,a):\n        return a*shop.charges\n    \nobj1 = shop()\ntry:\n    candies = [(2, 1), (1, 1), (4, 4), (5, 6), (7, 5), (6, 4)] \n    a = obj1.candy_count(candies) \n    b = obj1.candy_count_result(a)\n    print(a)\nexcept Exception as e:\n    print(e)</code></pre>\n\n<p> </p>","a":[{"id":1207695,"option":"{10: [2, 1], 40: [2, 6], 60: [2], 50: [7]}","correct":false},{"id":1207696,"option":"{1: [2, 1], 4: [4, 6], 5: [7], 6: [5]}","correct":false},{"id":1207697,"option":"An exception is raised because of unsupported operand type(s).","correct":true},{"id":1207698,"option":"SyntaxError","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def Generator1(n):\n    for i in range(n):\n        yield i\ndef Generator2(x, y):\n    for j in range(x, y):\n        yield j\ndef Generator3(n, m):\n    yield from Generator1(n)\n    yield from Generator2(n, m+3)\nprint(tuple(Generator2(4, 10)))\n</code></pre>\n\n<p> </p>","a":[{"id":1121929,"option":"(4, 5, 6, 7, 8, 9)","correct":true},{"id":1121930,"option":"(4, 7, 10, 13, 16, 19)","correct":false},{"id":1121931,"option":"(4, 5, 6, 7, 8, 9, 10)","correct":false},{"id":1121932,"option":"TypeError","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def Num(x):\n    n = 0\n    while n &lt;= x:\n        yield n\n        n += 1 \nS = sum(Num(10))\nprint(S)\n</code></pre>\n\n<p> </p>","a":[{"id":1121877,"option":"45","correct":false},{"id":1121878,"option":"55","correct":true},{"id":1121879,"option":"40","correct":false},{"id":1121880,"option":"50","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def decorator(prog):\n    def func(x):\n        result = prog(x)\n        print(result)\n    return func\n@decorator\ndef program_result(i):\n    return i + 1\nprogram_result(10)\n</code></pre>\n\n<p> </p>","a":[{"id":1122017,"option":"10","correct":false},{"id":1122018,"option":"9","correct":false},{"id":1122019,"option":"11","correct":true},{"id":1122020,"option":"12","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>from math import sin, cos, pi\ndef decorProg(f):\n    def function(x):\n        res = int(f(x))\n        print(res)\n    return function\nsin = decorProg(cos)\nfor f in [sin, cos]:\n    f(pi)\n</code></pre>\n\n<p> </p>","a":[{"id":1122021,"option":"1","correct":false},{"id":1122022,"option":"0","correct":false},{"id":1122023,"option":"-1","correct":true},{"id":1122024,"option":"2","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def MainProg(x, y, z): \n    def ProgF(f): \n        def ProgS(*args, **kwargs):  \n            x + y \n            return z*(x+y)\n            f(*args, **kwargs)\n        return ProgS \n    return ProgF \ndef output(*args): \n    for n in args: \n        i = n+1\n        j = i+1\n        print(i+n+j)\nprint(MainProg(12, 15, 10)(output)() )</code></pre>\n\n<p> </p>","a":[{"id":1122045,"option":"27","correct":false},{"id":1122046,"option":"270","correct":true},{"id":1122047,"option":"37","correct":false},{"id":1122048,"option":"TypeError","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def mul(f): \n    def Cal(*args, **kwargs): \n        result = f(*args, **kwargs) \n        return result \n    return Cal \n@mul\ndef mul(a, b): \n    return a * b  \nprint(mul(3, b = 6)) \n</code></pre>\n\n<p> </p>","a":[{"id":1121945,"option":"9","correct":false},{"id":1121946,"option":"18","correct":true},{"id":1121947,"option":"TypeError","correct":false},{"id":1121948,"option":"None","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def Task(p, i):\n    i = iter(i)\n    for x in i:\n        if not p(x):\n            yield x\n            break\n    for x in i:\n        yield x\na = Task(lambda x: x&lt;5, [4,-2, 0, 1, 3, -1, 10, 33])\nfor i in range(2):\n    print(next(a), end=' ')\n</code></pre>\n\n<p> </p>","a":[{"id":1121937,"option":"10 33","correct":true},{"id":1121938,"option":"43865","correct":false},{"id":1121939,"option":"33 10 4 -2","correct":false},{"id":1121940,"option":"StopIteration","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def MainProgram(iterable, x):\n    sample = tuple(iterable)\n    n = len(sample)\n    if not n and x:\n        return\n    indices = [1] * x\n    yield tuple(sample[i] for i in indices)\n    while True:\n        for i in reversed(range(x)):\n            if indices[i] != n - 1:\n                break\n        else:\n            return\n        indices[i:] = [indices[i] + 1] * (x - i)\n        yield tuple(sample[i] for i in indices)\na = MainProgram('PYTHON', 3) \nprint(next(a))\n</code></pre>\n\n<p> </p>","a":[{"id":1121933,"option":"(‘P’, ‘P’, ‘P’)","correct":false},{"id":1121934,"option":"(‘P’, ‘Y’, ‘T’)","correct":false},{"id":1121935,"option":"(‘Y’, ‘Y’, ‘Y’)","correct":true},{"id":1121936,"option":"((‘P’, ‘Y’, ‘T’), (‘P’, ‘Y’, ‘T’), (‘P’, ‘Y’, ‘T’))","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>import itertools\ndef MainProg(items):\n    n = len(items)\n    count = 0\n    if n==0: yield []\n    else:\n        for i in range(len(items)):\n            for cc in MainProg(items[:i]+items[i+3:]):\n                yield [items[i]]+cc\n                count += 1\nfor i in MainProg(list(\"red\")): print(''.join(i) + \", \", end=\"\")\nresult = MainProg(['t','a','n'])\nnext(result)\nprint(next(result))  \n</code></pre>\n\n<p> </p>","a":[{"id":1121925,"option":"r, er, dr, der, ['t']","correct":false},{"id":1121926,"option":"r, er, dr, der, ['a', 't']","correct":true},{"id":1121927,"option":"r, er, dr, der, ['n', 'a', 't']","correct":false},{"id":1121928,"option":"StopIteration","correct":false}]},{"q":"<p>You are given the following Python 3 code. Determine the output.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def sample(arr, lens, n): \n    m = 2\n    for i in range(lens):  \n        m = (m * (arr[i] % n)) % n \n      \n    return m % n \narr = [ 10, 110, 2, 2.5, 5, 4 ] \nlens = len(arr) \nn = 11\nprint(sample(arr, lens, n)) </code></pre>\n\n<p> </p>","a":[{"id":730025,"option":"9.0","correct":false},{"id":730026,"option":"0.0","correct":true},{"id":730027,"option":"3.2","correct":false},{"id":730028,"option":"4.5","correct":false}]},{"q":"<p>Consider the C# code snippet given below. Which of the following methods produces the output as follows?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>class Oven \n{ \n    public void DescribeOven() \n    { \n        System.Console.WriteLine(\"Used to bake cake and confectioneries\"); \n        ShowDetails(); \n        \n    } \n    public virtual void ShowDetails() \n    { \n        System.Console.WriteLine(\"Standard settings and temperature\"); \n        \n    }\n    \n} \n \nclass MicrowaveOven : Oven \n{ \n    public new void ShowDetails() \n    { \n        System.Console.WriteLine(\"Used to reheat food\"); \n        \n    } \n} \n \nclass OtgOven : Oven \n{ \n    public override void ShowDetails() \n    { \n        System.Console.WriteLine(\"Used to bake, toast and grill food\"); \n        \n    } \n}</code></pre>\n\n<p> </p>\n\n<p><strong>Output- </strong></p>\n\n<pre class=\"prettyprint\"><code>Used to bake cake and confectioneries\nStandard settings and temperature\n----------\nUsed to bake cake and confectioneries\nStandard settings and temperature\n----------\nUsed to bake cake and confectioneries\nUsed to bake, toast and grill food\n----------\n</code></pre>\n\n<p><br>\n </p>\n\n<p><strong>Methods:</strong></p>\n\n<p>1. </p>\n\n<pre class=\"prettyprint\"><code>public static void TestOvens() \n{ \nOven oven1 = new Oven(); \noven1.DescribeOven(); \nSystem.Console.WriteLine(\"----------\"); \n\nMicrowaveOven oven2 = new MicrowaveOven(); \noven2.DescribeOven(); \nSystem.Console.WriteLine(\"----------\"); \n\nOtgOven otg3 = new OtgOven(); \notg3.DescribeOven(); \nSystem.Console.WriteLine(\"----------\"); \n}</code></pre>\n\n<p> </p>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>public static void TestOvens() \n{ \n\nvar ovens = new List&lt;Oven&gt; \n{ \n    new Oven(), \n    new MicrowaveOven(), \n    new OtgOven() \n    \n}; \n\nforeach(var oven in ovens) \n{ \n    oven.DescribeOven(); \n    System.Console.WriteLine(\"----------\"); \n\n} \n}</code></pre>\n\n<p> </p>","a":[{"id":1419537,"option":"1","correct":false},{"id":1419538,"option":"2","correct":false},{"id":1419539,"option":" 1 and 2","correct":true},{"id":1419540,"option":"None of these","correct":false}]},{"q":"<p>Which of the following syntaxes can be used in place of XXX and YYY in the Javascript code given below to produce the output as follows?<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function fun1(y, z) \n{\n    return this.p + this.q + y + z;\n}\n\nvar add = {p: 10, q: 20}; \nXXX\nYYY</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>100\n140</code></pre>\n\n<p><br>\n<strong>Syntaxes</strong><br>\n<br>\n1. XXX - fun1.call(add, 30, 40); <br>\n    YYY - fun1.bind(add, [50, 60]);</p>\n\n<p>2. XXX - add.call(fun1, 30, 40);<br>\n    YYY - add.apply(fun1, 50, 60);</p>\n\n<p>3. XXX - fun1.call(add, 30, 40);<br>\n    YYY - fun1.apply(add, [50, 60]);</p>\n\n<p>4. XXX - fun1.call(add, 30, 40);<br>\n    YYY - fun1.bind(add, 50, 60);</p>","a":[{"id":1420527,"option":"1","correct":false},{"id":1420528,"option":"2","correct":false},{"id":1420529,"option":"3","correct":true},{"id":1420530,"option":"4","correct":false}]},{"q":"<p>Which line in the C# code snippet given below gives an error?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;  // line 1\nabstract class AreaClass   // line 2\n{ \n    abstract public int Area(); // line 3\n    \n} \nclass Circle: AreaClass  // line 4\n{ \n    int radius = 0;   // line 5\n    public Circle(int r)  // line 6\n    { \n        radius = r;   // line 7\n        \n    } \n    public override int Area()   // line 8\n    { \n        return 3.14 * radius * radius;   // line 9\n        \n    } \n    \n} \nclass MainClass  // line 10\n{ \n    public static void Main()   // line 11\n    { \n        Circle c = new Circle(7);   // line 12\n        Console.WriteLine(\"Area = \" + c.Area()); // line 13\n        \n    } \n    \n}</code></pre>\n\n<p> </p>","a":[{"id":1419107,"option":"Line 3","correct":false},{"id":1419108,"option":"Line 9","correct":true},{"id":1419109,"option":"Line 2","correct":false},{"id":1419110,"option":"Line 7","correct":false}]},{"q":"<p>Consider the Javascript code snippet given below.</p>\n\n<p>The prototype of the object ex is abc and you want to change it to xyz.</p>\n\n<p>Which of the following syntaxes will you use so that the code produces the output as follows?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>let abc = {\n    getX() \n    {\n        return \"Yup\";\n    }\n    \n};\n\nlet xyz = {\n    getX() \n    {\n        return \"Nope\";\n    }\n};\nlet ex = Object.create(abc);</code></pre>\n\n<p><br>\n<strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>Nope\ntrue</code></pre>\n\n<p> </p>\n\n<p><strong>Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Object.setPrototypeOf(ex, xyz);\nconsole.log(ex.getX());\nconsole.log(Object.getPrototypeOf(ex) === xyz);                                                                                                                            </code></pre>\n\t   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Object.changePrototypeOf(ex, abc, xyz);\nconsole.log(ex.getX()); \nconsole.log(Object.getPrototypeOf(abc) === xyz);                                                                                                                          </code></pre>\n\t    </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Object.setPrototypeOf(ex, abc, xyz);\nconsole.log(xyz.getX()); console.log(Object.getPrototypeOf(abc) === xyz);                                                                                    </code></pre>\n\t   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Object.setPrototypeOf(ex, xyz);\nconsole.log(ex.getX()); console.log(Object.getPrototypeOf(ex) === abc);</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420487,"option":"1","correct":true},{"id":1420488,"option":"2","correct":false},{"id":1420489,"option":"3","correct":false},{"id":1420490,"option":"4","correct":false}]},{"q":"<p>Determine the output of the following Javascript code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var hack1 = 89;\n\nfunction hack_function()\n{\n    var hack2 = 56;\n    var hack3 = function()\n    {\n        console.log(hack2); \n        \n    }\n    \n    var hack4 = function()\n    {\n        console.log(hack1); \n        \n    }\n    \n    hack3();\n    hack4();\n}\n\n\nhack_function();\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>56<br>\n\t89<br>\n\t </li>\n\t<li>56<br>\n\tundefined<br>\n\t </li>\n\t<li>undefined<br>\n\t89<br>\n\t </li>\n\t<li>undefined<br>\n\tundefined</li>\n</ol>","a":[{"id":1420607,"option":"2","correct":false},{"id":1420608,"option":"3","correct":false},{"id":1420609,"option":"4","correct":false},{"id":1420610,"option":"1","correct":true}]},{"q":"<p>What will be the output of the following Javascript code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>let hack = 5;\nfunction hack_Opr1()\n{\n    var hack = 1;\n    \n    function hack_Opr2()\n    {\n        hack = hack + 10;\n        var hack = 51;\n        console.log(hack);\n    }\n    hack_Opr2();\n}\nhack_Opr1();</code></pre>\n\n<p> </p>","a":[{"id":1420547,"option":"61","correct":false},{"id":1420548,"option":"11","correct":false},{"id":1420549,"option":"51","correct":true},{"id":1420550,"option":"15","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def MainProgram(n):\n    looping = False\n    while not looping:\n        try:\n            item = iter(n)\n            looping = True\n        except StopIteration:\n            looping = True\n    for i in n:\n        print(i, end = ' ')\nn = {4, 7, 0, 3}\nprint(MainProgram(n))\n</code></pre>\n\n<p> </p>","a":[{"id":1121901,"option":"[4, 7, 0, 3] None  ","correct":false},{"id":1121902,"option":"0 3 4 7 None","correct":true},{"id":1121903,"option":"4 7 0 3 None","correct":false},{"id":1121904,"option":"None ","correct":false}]},{"q":"<p>What output will lines 1, 2, and 3 produce when the Javascript code snippet given below is executed?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function seq()\n{\n    let i = 0;\n    return function()\n    {\n        return i++;        \n    };\n}\n\nlet seq1 = seq();\nlet seq2 = seq();\n\nalert( seq1() ); // 1\nalert( seq1() ); // 2 \nalert( seq2() ); // 3</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0 \n2. 0 \n3. 1</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0 \n2. 1 \n3. 0</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0 \n2. 1 \n3. 1</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0 \n2. 1 \n3. 2</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420507,"option":"1","correct":false},{"id":1420508,"option":"2","correct":true},{"id":1420509,"option":"3","correct":false},{"id":1420510,"option":"4","correct":false}]},{"q":"<p>Consider the following Python 3 code. What will you replace the missing expressions X, Y, and Z with to obtain the provided result:<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>def MainProgram(f):\n    def Create(old_value):\n        def new_value(*args, **kwds):\n            X \n        Y  \n    Z\n        \n@MainProgram(5) \ndef return_value(n):\n    return n\nres = return_value(5) \nprint(res)\n</code></pre>\n\n<p><strong>Result</strong></p>\n\n<pre class=\"prettyprint\"><code>25</code></pre>\n\n<p><strong>Missing expressions</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>        return f * old_value(*args, **kwds) \n    return new_value \nreturn Create</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>return f * old_value(*args, **kwds) \n    return new_value \nreturn Create</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>        return new_value\n    return f * old_value(*args, **kwds) \nreturn Create</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>return Create(*args, **kwds) \n        return f * new_value \n    return old_value </code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1122037,"option":"1","correct":true},{"id":1122038,"option":"2","correct":false},{"id":1122039,"option":"3","correct":false},{"id":1122040,"option":"4","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def cycle(i):\n    sample = []\n    for element in i:\n        yield element\n        sample.append(element)\n        print(sample)\n    while sample:\n        for element in sample:\n              yield element\na = cycle({10, -3, 70, 27, 'ABC'})\nfor n in a:\n    print(n, end=' ')\n    break\n</code></pre>\n\n<p> </p>","a":[{"id":1121921,"option":"27","correct":false},{"id":1121922,"option":"10 -3 70 27  ‘ABC’","correct":false},{"id":1121923,"option":"-3","correct":false},{"id":1121924,"option":"None of these","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def Filter1(nums):\n    for num in nums:\n        if num % 2 == 0:\n            yield num\ndef Filter2(nums):\n    for num in nums:\n        yield num * 3\ndef Filter3(nums):\n    for num in nums:\n        yield num\nnums = [0, -1, -4, -9, -16, -25, -36, -49]\nresult = Filter3(Filter2(Filter1(nums)))\nfor num in result:\n    print(num, end=' ')\n</code></pre>\n\n<p> </p>","a":[{"id":1121917,"option":"0 -12 -48 -108 ","correct":true},{"id":1121918,"option":"0 -48 -12 -108 ","correct":false},{"id":1121919,"option":"12 -48 0 -108 ","correct":false},{"id":1121920,"option":"TypeError ","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def Fun(x):\n    while(x!=0):\n        if x % 3 == 0:\n            yield x\n        x-=1\nfor i in Fun(9):\n    print(i, end=' ')\n</code></pre>\n\n<p> </p>","a":[{"id":1121873,"option":"8 4 2  ","correct":false},{"id":1121874,"option":"3 6 9  ","correct":false},{"id":1121875,"option":"9 6 3","correct":true},{"id":1121876,"option":"9 6 4 2","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def MainProg(f): \n    m = {} \n    def InnerProg(num): \n        if num not in m:          \n            m[num] = f(num) \n        return m[num]  \n    return InnerProg     \n@MainProg\ndef Cal(num): \n    if num == 0: \n        return 1\n    else: \n        return num**2*Cal(num-1) \nprint(Cal(3))\n</code></pre>\n\n<p> </p>","a":[{"id":1122033,"option":"172","correct":false},{"id":1122034,"option":"81","correct":false},{"id":1122035,"option":"36","correct":true},{"id":1122036,"option":"RecursionError","correct":false}]},{"q":"<p>Predict the correct values of lines A, B, and C in the Javascript code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function add(x = 11, y = 31)\n{\n    console.log(x+y);    \n}\n\nadd(5, null); //A\nadd(5); //B\nadd(5, undefined); //C</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong> </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A. 36\nB. 36\nC. 5</code></pre>\n\t                                                                                                                                                                                                   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A. 5 \nB. 5\nC. 5</code></pre>\n\t                                                                                                                                                                                                   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A. 36 \nB. 5\nC. 36 </code></pre>\n\t                                                                                                                                                                                                </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A. 5\nB. 36\nC. 36</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420432,"option":"1","correct":false},{"id":1420433,"option":"2","correct":false},{"id":1420434,"option":"3","correct":false},{"id":1420435,"option":"4","correct":true}]},{"q":"<p>Determine the output of the Javascript code snippet given below.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var add = {\n    sum: function() \n    { \n        return this.x + this.y + this.z; \n        \n    }\n    \n};\nvar par = Object.done(add);\npar.x = 3;\npar.y = 6; par.z = 9\n\nconsole.log(par.sum());</code></pre>\n\n<p> </p>","a":[{"id":1420517,"option":"Error","correct":true},{"id":1420518,"option":"18","correct":false},{"id":1420519,"option":"null","correct":false},{"id":1420520,"option":"0","correct":false}]},{"q":"<p>In Javascript, you are creating a generator function as shown in the code snippet given below. At which of the encoded places given in the code snippet can you use the <strong>yield</strong> keyword such that an error is not produced?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function *createIterator(a)\n{\n    XXXX\n    a.forEach(function(a) {\n        YYYY\n    }\nZZZZ);\n}</code></pre>\n\n<p> </p>\n\n<ol>\n\t<li>XXXX<br>\n\t </li>\n\t<li>YYYY<br>\n\t </li>\n\t<li>ZZZZ</li>\n</ol>","a":[{"id":1420482,"option":"only 1","correct":true},{"id":1420483,"option":"1 and 2","correct":false},{"id":1420484,"option":"only 3","correct":false},{"id":1420485,"option":"2 and 3","correct":false}]},{"q":"<p>What will be the output of the following Javascript code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var hack = {\n    hacker:  \"Bob\",\n    hack_Opr: function()\n    {\n        console.log(this.hacker);\n        \n    }\n        \n}\n        \nvar hack_Opr = hack.hack_Opr;\n        \nvar h2 = {\n    hacker:\"Alice\", \n    hack_Opr\n    \n};\n\nh2.hack_Opr();\n</code></pre>\n\n<p> </p>","a":[{"id":1420537,"option":"The code gives a runtime error","correct":false},{"id":1420538,"option":"Bob","correct":false},{"id":1420539,"option":"Alice","correct":true},{"id":1420540,"option":"None of these","correct":false}]},{"q":"<p>Determine the output of the C# code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>using System;\n\nclass Hackerearth\n{\n    static void hack_func(ref int[] h)\n    {\n        for (int hack_itr = 0; hack_itr &lt; h.Length; hack_itr=hack_itr+2)\n        {\n            h[hack_itr] = h[hack_itr] + 15;\n        }\n        Console.WriteLine(string.Join(\",\", h));\n    }\n    \n    static void Main(string[] args)\n    { \n        int[] hack = new int[] {5,8,4,7,9 };\n        hack_func(ref hack );\n    }\n}</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>20,23,19,22,24</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>5,8,4,7,9</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>20,8,19,7,24</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>5,23,4,22,9</code></pre>\n\t</li>\n</ol>","a":[{"id":1419257,"option":"1","correct":false},{"id":1419258,"option":"2","correct":false},{"id":1419259,"option":"3","correct":true},{"id":1419260,"option":"4","correct":false}]},{"q":"<p>Which of the following syntaxes&nbsp;can be used in place of XXX and YYY in the given Javascript code snippet to produce output as 30?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>XXX\n\nfunction sum( YYY ) \n{\n    return a + b;\n} \nconsole.log(sum(10));</code></pre>\n\n<p><strong>Syntaxes</strong></p>\n\n<p>1.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>XXX -&gt; \n\nfunction val(x)\n{      \n    return x + 10;\n}\n\n\nYYY -&gt; \na, b = val(a)</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code> XXX -&gt; \n\nfunction val()\n{\n  return x++;\n}\n    \n\nYYY -&gt; \na, b = val()</code></pre>\n\n<p>3.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>XXX -&gt;\n\nfunction val(x)\n{\n    return x++;\n}\n\n\nYYY -&gt; \na, b = val(a)</code></pre>\n\n<p>4.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>XXX -&gt; \n\nfunction val(x)\n{\n    return x + 10;\n}\n\n\nYYY -&gt; \na, b = a</code></pre>","a":[{"id":1420592,"option":"1","correct":true},{"id":1420593,"option":"2","correct":false},{"id":1420594,"option":"3","correct":false},{"id":1420595,"option":"4","correct":false}]},{"q":"<p>If you give the provided input to the following Python 3 code. Determine the output.</p>\n\n<p><strong>Input</strong></p>\n\n<pre class=\"prettyprint\"><code>0 0 2 0 0 1</code></pre>\n\n<p><strong>Code</strong> </p>\n\n<pre class=\"prettyprint\"><code>l = list(map(int,input().split()))\ndef ds(a,b): return (l[a]-l[b])**2 + (l[a+1]-l[b+1])**2\ndef ch():\n    a=ds(0,2)\n    b=ds(2,4)\n    c=ds(4,0)\n    if a*b*c==0: return 0\n    return a+b==c or b+c==a or c+a==b\ns=ch()\nfor i in range(6):\n    for j in [1,-1]:\n        l[i]+=j\n        if s==0: s = 2*ch()\n        l[i]-=j\nprint([\"YOU\",\"ME\",\"SS\"][s])</code></pre>\n\n<p> </p>","a":[{"id":730492,"option":"YOU","correct":false},{"id":730493,"option":"ME","correct":true},{"id":730494,"option":"SS","correct":false},{"id":730495,"option":"TypeError","correct":false}]},{"q":"<p>In Azure functions, you are working with durable functions. You have executed multiple functions in parallel and then waited for all the executed functions to be finished. </p>\n\n<p>Which of the following application patterns of the durable functions is performed in this scenario?</p>","a":[{"id":1340959,"option":"Function chaining application pattern ","correct":false},{"id":1340960,"option":"Fan out/fan in application pattern","correct":true},{"id":1340961,"option":"Monitoring application pattern","correct":false},{"id":1340962,"option":"Async HTTP APIs pattern","correct":false}]},{"q":"<p>What is the output of the following Python code:</p>\n\n<pre class=\"prettyprint\"><code>from copy import copy\nclass sample:\n  pass\n\na = sample()\na.lst = [1, 2, 3]\na.str = 'hacker'\nb = copy(a)\na.lst.append('earth')\na.str = 'Python'\nprint b.str</code></pre>","a":[{"id":150651,"option":"[1,2,3]","correct":false},{"id":150652,"option":"hacker","correct":true},{"id":150653,"option":"earth","correct":false},{"id":150654,"option":"hacker earth","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def MainCount(f):\n    def progFirst(*args, **kwargs):\n        progFirst.calls += 1\n        return f(*args, **kwargs)\n    progFirst.calls = 0\n    return progFirst\n@MainCount\ndef progSecond(i):\n    return i + 1\n@MainCount\ndef Count(i= 0, j = 1):\n    return i*j + 1\nprint(progSecond.calls)\nfor n in range(5):\n    progSecond(n)\nCount(j = 0, i = 1)\nprint(Count.calls)\n</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\n0</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0\n1</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1\n1</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0\n0</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1122025,"option":"1","correct":false},{"id":1122026,"option":"2","correct":true},{"id":1122027,"option":"3","correct":false},{"id":1122028,"option":"4","correct":false}]}]