[{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>var x = 7, y = 9;\n[x, y] = [y, x]; </code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>This code swaps the values of x and y.<br>\n\t </li>\n\t<li>This code does not throw an error.<br>\n\t </li>\n\t<li>Values of x and y remain unchanged.</li>\n</ol>","a":[{"id":1468120,"option":"2 and 3","correct":false},{"id":1468121,"option":"1 and 2","correct":true},{"id":1468122,"option":"only 2","correct":false},{"id":1468123,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>function myFunction(...params) {\nreturn params;\n}\nvar x = myFunction(8,90,11);\nconsole.log(x);</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong><br>\n </p>\n\n<ol>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>[ 8, 90, 11 ]\n</code></pre>\n\t<br>\n\t </li>\n\t<li>This code does not throw an error.<br>\n\t<br>\n\t </li>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>8 90 11</code></pre>\n\t </li>\n</ol>","a":[{"id":1467969,"option":"2 and 3 ","correct":false},{"id":1467970,"option":"1 and 2","correct":true},{"id":1467971,"option":"only 2","correct":false},{"id":1467972,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>async function myFunction() {\n  return await Promise.resolve('Hi');\n}\nvar x = myFunction();\nconsole.log(x);</code></pre>\n\n<p><br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>This code prints -\n\t<pre class=\"prettyprint\"><code>Promise { &lt;pending&gt; }</code></pre>\n\t</li>\n\t<li>This code does not throw any runtime error<br>\n\t </li>\n\t<li>This code prints -\n\t<pre class=\"prettyprint\"><code>Promise { &lt;resolved&gt;: 'Hi' } </code></pre>\n\t<br>\n\t </li>\n</ol>","a":[{"id":1467957,"option":"2 and 3","correct":false},{"id":1467958,"option":"1 and 2","correct":true},{"id":1467959,"option":"only 2","correct":false},{"id":1467960,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>function myFunction()\n{\n    let x = this ? class y { } : class z { };\n    console.log(typeof x + \",\" + typeof z );  \n    \n}\nmyFunction();\n</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>function,undefined</code></pre>\n\t</li>\n\t<li>This code does not throw an error.<br>\n\t </li>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>function,function</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1467953,"option":"1 and 2","correct":true},{"id":1467954,"option":"2 and 3","correct":false},{"id":1467955,"option":"only 2","correct":false},{"id":1467956,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>(function() \n{\n    if (false) \n    {\n        let x = {\n            y() =&gt; 1 \n            \n        };\n        \n    }\n    console.log(typeof x);\n})()</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>This code throws an error.<br>\n\t </li>\n\t<li>This code executes successfully.<br>\n\t </li>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>object\n</code></pre>\n\t </li>\n</ol>","a":[{"id":1467949,"option":"1","correct":true},{"id":1467950,"option":"2 and 3","correct":false},{"id":1467951,"option":"2","correct":false},{"id":1467952,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>var x = 'hi';\nfunction myFunction()\n{\n    console.log(x);\n    var x = 'hello';\n}\nmyFunction();\n</code></pre>\n\n<p><br>\n<br>\n<br>\n<strong>Statement:</strong></p>\n\n<ol>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>hi</code></pre>\n\t<br>\n\t </li>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>hello</code></pre>\n\t<br>\n\t </li>\n\t<li>This code does not throw any runtime error.                                                                                                                                               </li>\n</ol>","a":[{"id":1467945,"option":"1 and 2","correct":false},{"id":1467946,"option":"2 and 3","correct":false},{"id":1467947,"option":"only 3","correct":true},{"id":1467948,"option":"All of these","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var sum = (x, y) =&gt; x + y;\nconsole.log(sum.call(null, 20, 30));\nconsole.log(sum.apply(null, [20, 30]));\nvar xyz = sum.bind(null, 20, 30);\nconsole.log(xyz());</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong> </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\n50\nError                                                                                            </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\n50\n50</code></pre>\n\t                                                                                                                                  </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>null\nnull\nnull </code></pre>\n\t                                                                                                                                                                                                   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\nnull\n50</code></pre>\n\t                                                                                                                                                                                      </li>\n</ol>","a":[{"id":1420427,"option":"1","correct":false},{"id":1420428,"option":"2","correct":true},{"id":1420429,"option":"3","correct":false},{"id":1420430,"option":"4","correct":false}]},{"q":"<p>If a strict type check is enabled, then what is the output of the following AngularJScode:</p>\n\n<pre class=\"prettyprint\"><code>var firstName:string|null, lastName:string|undefined ;\n\nfirstName=null;\nlastName=undefined;</code></pre>\n\n<p> </p>","a":[{"id":644310,"option":"Returns an error because the type 'undefined' cannot be assigned to the type 'string'","correct":false},{"id":644311,"option":"Returns an error because the type 'null' cannot be assigned to the type 'string'","correct":false},{"id":644312,"option":"Returns an error because the type 'null' or 'undefined' cannot be assigned to a variable","correct":false},{"id":644313,"option":"No error","correct":true}]}]