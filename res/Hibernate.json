[{"q":"<p>You are working on a project using hibernate and making use of collections mappings in it. Which type of collection is used when you want to&nbsp;<em>sort</em><strong> </strong>the&nbsp;attribute and set it to either a comparator or natural ordering.</p>","a":[{"id":1747699,"option":"java.util.collection","correct":false},{"id":1747700,"option":"java.util.Map","correct":false},{"id":1747701,"option":"java.util.SortedSet","correct":true},{"id":1747702,"option":"java.util.SortedMap","correct":false}]},{"q":"<p>While working on a project on hibernate using mapping, Bob came across the term hibernate inheritance mapping. There are several inheritance strategies but one of them was defined as follows:</p>\n\n<p>- A single table is required to map the whole hierarchy&nbsp;<br>\n- An extra column is added to identify the class<br>\n- Nullable values are stored in the table</p>\n\n<p>Which of these is the correct option that satisfies the above properties?</p>","a":[{"id":1747593,"option":"Table per hierarchy ","correct":true},{"id":1747594,"option":"Table per concrete class","correct":false},{"id":1747595,"option":"Table per subclass","correct":false},{"id":1747596,"option":"Table per superclass","correct":false}]},{"q":"<p>You are working on hibernate using sessions. There are certain methods used in hibernate. Which among the following&nbsp;determines the manner in which this session can interact with the second-level cache and also cancel the session of the current query?</p>\n\n<ol>\n\t<li>setCacheMode &amp; cancelQuery</li>\n\t<li>isDefaultReadOnly &amp; close</li>\n\t<li>getSessionFactory &amp; isOpen</li>\n\t<li>setFlushMode &amp; close</li>\n</ol>","a":[{"id":1746706,"option":"1","correct":true},{"id":1746707,"option":"2","correct":false},{"id":1746708,"option":"3","correct":false},{"id":1746709,"option":"4","correct":false}]},{"q":"<p>Bob while working on hibernate using sessions came across instances of mapped entity classes. Instances exist in various states but which among the following instances has a representation in the database, an identifier value, and is associated with a Session?</p>","a":[{"id":1746551,"option":"transient","correct":false},{"id":1746552,"option":"persistent","correct":true},{"id":1746553,"option":"session","correct":false},{"id":1746554,"option":"detached","correct":false}]},{"q":"<p>You are working on a project using hibernate. While using sessions, you came across certain interface methods. Which among the following methods would you use to remove a persistent instance from the datastore?</p>\n\n<p>&nbsp;</p>","a":[{"id":1746517,"option":"void cancelQuery()","correct":false},{"id":1746518,"option":"void clear()","correct":false},{"id":1746519,"option":"void delete()","correct":true},{"id":1746520,"option":"Connection close()","correct":false}]},{"q":"<p>You are working on hibernate using batch processing. You have come across a term i.e.<em><strong> </strong></em><em>StatelessSession </em>Interface. Which among the following given options best describes the given term?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>It&nbsp;has no persistence context associated with it and does not provide many of the higher-level life cycle semantics</li>\n\t<li>It does not implement transactional write-behind or automatic dirty checking</li>\n\t<li>It is&nbsp;vulnerable to data aliasing effects</li>\n\t<li>All of the above</li>\n</ol>","a":[{"id":1740620,"option":"1","correct":false},{"id":1740621,"option":"2","correct":false},{"id":1740622,"option":"3","correct":false},{"id":1740623,"option":"4","correct":true}]},{"q":"<p>You are working on Hibernate using batch processing. You are facing the OutOfMemoryException because of newly inserted instances in the session-level cache. You have enabled JDBC batching and in order to achieve the optimal performance, you need to set the batch size with a reasonable number. Which of the following is correct for the given scenario?</p>","a":[{"id":1740612,"option":"hibernate.jdbc.batch_size 20","correct":true},{"id":1740613,"option":"hibernate.batch_size 30","correct":false},{"id":1740614,"option":"hibernate.jdbc.batch_size 5","correct":false},{"id":1740615,"option":"hibernate.jdbc.size 35","correct":false}]},{"q":"<p>You working on a project using hibernate. You want to declare an embedded component and also override its column mapping. Which of the given options best describe the use of annotations for&nbsp;column mapping of an embedded object for a particular entity?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>@Entity\npublic class Hackereath implements Serializable{\n    @Embedded\n    @AttributeOverrides( {\n            @AttributeOverride(name=\"hack\", column = @Column(name=\"emphack\") ),\n            @AttributeOverride(name=\"name\", column = @Column(name=\"employeeid\") )\n    } )\n}          </code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>@Entity\npublic class Hackereath implements Serializable{\n    @Embedded( {\n            @AttributeOverride(name=\"hack\", column = @Column(name=\"emphack\") ),\n            @AttributeOverride(name=\"name\", column = @Column(name=\"employeeid\") )\n    } )\n}          </code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>@Entity\npublic class Hackereath implements Serializable{\n    @AttributeOverrides( {\n            @AttributeOverride(name=\"hack\", column = @Column(name=\"emphack\") ),\n            @AttributeOverride(name=\"name\", column = @Column(name=\"employeeid\") )\n    } )\n}          </code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>@Entity\npublic class Hackereath implements Serializable{ \n   @AttributeOverride(name=\"hack\", column = @Column(name=\"emphack\") ),\n   @AttributeOverride(name=\"name\", column = @Column(name=\"employeeid\") )\n}          </code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1740397,"option":"1","correct":true},{"id":1740398,"option":"2","correct":false},{"id":1740399,"option":"3","correct":false},{"id":1740400,"option":"4","correct":false}]},{"q":"<p>You are working on hibernate using annotations. You have come across <em>@Entity</em> annotation and want to make use of it in your project. Which of these given options best describes the&nbsp;<em>@Entity</em> annotation?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>It will denote the class as an entity bean</li>\n\t<li>It is contained in javax.persistence package</li>\n\t<li>It must have a no-argument constructor that is visible with at least protected scope.</li>\n\t<li>All of the above&nbsp;</li>\n</ol>","a":[{"id":1740385,"option":"1","correct":false},{"id":1740386,"option":"2","correct":false},{"id":1740387,"option":"3","correct":false},{"id":1740388,"option":"4","correct":true}]},{"q":"<p>You are working on hibernate using annotations. While working with JPA you need to import them from a certain package. Which package is that?</p>","a":[{"id":1740381,"option":"javax.persistence","correct":true},{"id":1740382,"option":"java.annotation","correct":false},{"id":1740383,"option":"javax.annotation","correct":false},{"id":1740384,"option":"java.persistence","correct":false}]},{"q":"<p>Bob is working on Hibernate using the Architecture framework. He wants to create a session object using an interface that is present in org.hibernate<strong> </strong>package. Which among the following is the asked interface?</p>","a":[{"id":1738617,"option":"Session Factory","correct":true},{"id":1738618,"option":"Configuration","correct":false},{"id":1738619,"option":"Transaction","correct":false},{"id":1738620,"option":"Query","correct":false}]},{"q":"<p>While working on a project on Hibernate using the Architecture framework you want to read both&nbsp;configuration files and mapping files. In which package is the configuration class present?</p>","a":[{"id":1738613,"option":"org.hibernate.cfg package","correct":true},{"id":1738614,"option":"org.hibernate package","correct":false},{"id":1738615,"option":"org.hibernate.configuration package","correct":false},{"id":1738616,"option":"org.configuration package","correct":false}]},{"q":"<p>You are working on a Hibernate project using Hibernate Query Language. Hibernate uses aggregate functions for the evaluation of various queries. Which among the following is the correct syntax for the use of aggregate function?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>select avg(hack.employee), sum(hack.employee), max(hack.employee), count(hack)\nfrom Hackerearth hack</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>select agg(hack.employee), sum(hack.employee), maxi(hack.employee), count(hack)\nfrom Hackerearth hack</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>select average(hack.employee), sum(hack.employee), maximum(hack.employee), count(hack)\nfrom Hackerearth hack</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>select agg_avg(hack.employee), agg_sumsum(hack.employee), agg_max(hack.employee), agg_count(hack)\nfrom Hackerearth hack</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1738569,"option":"1","correct":true},{"id":1738570,"option":"2","correct":false},{"id":1738571,"option":"3","correct":false},{"id":1738572,"option":"4","correct":false}]},{"q":"<p>You are working on a Hibernate project using Hibernate Query Language. You are confused about the syntax of queries. Which among the following is incorrect?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>select is same as SELECT</li>\n\t<li>join is same as Join</li>\n\t<li>hackerearth.org is same as hackereath.Org</li>\n\t<li>FROM hack is same as From hack</li>\n</ol>","a":[{"id":1738557,"option":"1","correct":false},{"id":1738558,"option":"2","correct":false},{"id":1738559,"option":"3","correct":true},{"id":1738560,"option":"4","correct":false}]},{"q":"<p>You are working on a Hibernate project using Hibernate Query Language. Hibernate uses order by clause. Which among the following options is the correct syntax of the order by clause.</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>from Hackerearth hack\norder by hack.name asc, hack.weight desc, hack.birthdate</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>from Hackerearth hack\nhack.name asc, hack.weight desc, hack.birthdate order by</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>order by hack.name asc, hack.weight desc, hack.birthdate\nfrom Hackerearth hack\n</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>from order by hack.name asc, hack.weight desc, hack.birthdate</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1738553,"option":"1","correct":true},{"id":1738554,"option":"2","correct":false},{"id":1738555,"option":"3","correct":false},{"id":1738556,"option":"4","correct":false}]},{"q":"<p>Bob while working on a project on Hibernate using caching came across concurrency strategies that act as a mediator. Which concurrency strategy should Bob use if he doesn't want to change the data and use it for reference only?</p>","a":[{"id":1738609,"option":"Transactional","correct":false},{"id":1738610,"option":"Read-Write","correct":false},{"id":1738611,"option":"Nonstrict-Read-Write","correct":false},{"id":1738612,"option":"Read-only","correct":true}]},{"q":"<p>You are working on a Hibernate project using Caching. In order to use the query cache, you must first activate it using the property in the configuration file. Which among the given options is that property?</p>\n\n<p>&nbsp;</p>","a":[{"id":1738577,"option":"hibernate.cache.use_query_cache","correct":true},{"id":1738578,"option":"hibernate.cache.query_cache","correct":false},{"id":1738579,"option":"hibernate.cache.use_cache","correct":false},{"id":1738580,"option":"hibernate.query_cache","correct":false}]},{"q":"<p>In Hibernate, you are working on a project using Native SQL. HIbernate&nbsp;uses ResultSetMetadata to deduce the actual order and types of the returned scalar values. To avoid the use of ResultSetMetadata, which of the options you can likely choose?</p>","a":[{"id":1733509,"option":"list()","correct":false},{"id":1733510,"option":"addScalar()","correct":true},{"id":1733511,"option":"addlist()","correct":false},{"id":1733512,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, you are working on native SQL. You are required to write a query&nbsp;to get entity objects from a native SQL query. Then in this scenario, which of the following options is correct?</p>","a":[{"id":1733505,"option":"sess.createSQLQuery(\"SELECT * FROM STUDENTS\").addEntity(Student.class);\r\n","correct":true},{"id":1733506,"option":"sess.createSQLQuery(\"SELECT * FROM STUDENTS\")\r\n","correct":false},{"id":1733507,"option":"sess.createSQLQuery.addEntity(\"SELECT * FROM STUDENTS\")\r\n","correct":false},{"id":1733508,"option":"sess.createSQLQuery.addEntity(Student.class);","correct":false}]},{"q":"<p>In Hibernate, you are working on native SQL. You are required to write a SQL query to get a list of scalars values of student name, id, and subject. Then in this scenario which of the following options is correct?</p>","a":[{"id":1733501,"option":"sess.createSQLQuery(\"SELECT  Name, Id, Subject FROM Student\").list();\r\n","correct":true},{"id":1733502,"option":"sess.createSQLQuery(\"SELECT  Name, Id, Subject FROM Student\")\r\n","correct":false},{"id":1733503,"option":"sess.createSQLQuery.list(\"SELECT  Name, Id, Subject FROM Student\").list();\r\n","correct":false},{"id":1733504,"option":"None of these","correct":false}]},{"q":"<p>You are working on a student portal using Spring Boot, and you have a SQL database named <em><strong>student_data</strong> </em> that contains information about the students. In order to initialize the <strong><em>student_data</em></strong> database so that it can be used with the web application, you are using Spring Data JPA and have created a repository file named <strong><em>StudentRepository</em></strong> to access the data. Now if you have imported the <em><strong>spring.jpa.hibernate.ddl-auto </strong></em>dependency then which of the following statements is correct?<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>Possible property values of <em><strong>spring.jpa.hibernate.ddl-auto</strong> </em>dependency can be none, validate, update, and create-drop.<br>\n\t </li>\n\t<li>Using the following code in the <strong><em>StudentRepository</em></strong> file we can use the generic CRUD methods-\n\t<pre class=\"prettyprint\"><code>public interface StudentRepository extends JpaRepository&lt; &gt; { … }</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Using the following code in the <strong><em>StudentRepository</em></strong> file we can use the generic CRUD methods-</p>\n\n\t<pre class=\"prettyprint\"><code>public class StudentRepository extends JpaRepository&lt; &gt; { … }</code></pre>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1558238,"option":"1 and 3","correct":false},{"id":1558239,"option":"1 and 2","correct":true},{"id":1558240,"option":"only 1","correct":false},{"id":1558241,"option":"All of these","correct":false}]},{"q":"<p>Ben was working on Hibernate SessionFactory. And he wanted to get the DB related property details, but he doesn't know where he can find them. In this scenario if are asked to help Ben then which of the following statements would you suggest to Ben?</p>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>We can get the DB related property details from the hibernate.cfg.xml file.</li>\n\t<li>We can get the DB related property details from the hibernate.properties file.</li>\n</ol>\n\n<p> </p>","a":[{"id":1580963,"option":"only 1","correct":false},{"id":1580964,"option":"only 2","correct":false},{"id":1580965,"option":"Both 1 and 2","correct":true},{"id":1580966,"option":"None of these","correct":false}]},{"q":"<p>Bob was working on <strong>Hibernate</strong>. He wants to create a SessionFactory object using the <strong>Transaction</strong> object. But he was unable to create. If you are asked to help Bob then which of the following objects would you suggest Bob in this scenario such that Bob creates the SessionFactory object:</p>\n\n<p><strong>Objects</strong></p>\n\n<ol>\n\t<li>Configuration</li>\n\t<li>SessionFactory</li>\n\t<li>Session</li>\n</ol>","a":[{"id":1580959,"option":"only 1","correct":true},{"id":1580960,"option":"only 2","correct":false},{"id":1580961,"option":"only 3","correct":false},{"id":1580962,"option":"Both 2 and 3","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to begin a session and return the associated <strong>transaction</strong> object?</p>","a":[{"id":48778,"option":"Session.beginTransaction  ","correct":true},{"id":48779,"option":"Session.gotobeginTransaction  ","correct":false},{"id":48780,"option":"Session.startTransaction  ","correct":false},{"id":48781,"option":"Session.gotoTransaction  ","correct":false}]},{"q":"<p>In Hibernate, which of the following terms is defined as the process of a single table hosting all the instances of a class hierarchy?</p>","a":[{"id":48686,"option":"Joined subclass strategy  ","correct":false},{"id":48687,"option":"Single table per class hierarchy strategy ","correct":true},{"id":48688,"option":"Joined strategy ","correct":false},{"id":48689,"option":"Join","correct":false}]},{"q":"<p>In Hibernate, what is the use of <strong>embeddable</strong> classes?</p>","a":[{"id":48630,"option":"Embeddable class can be used as the primary key","correct":true},{"id":48631,"option":"Embeddable class can be used as LSA","correct":false},{"id":48632,"option":"Embeddable class can be used as BSA ","correct":false},{"id":48633,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following clauses is added when a user wants to display the results in a descending order?</p>","a":[{"id":48586,"option":"DESC with Order By clause ","correct":true},{"id":48587,"option":"?<>ASC? with Order by Clause ","correct":false},{"id":48588,"option":"?ASC? with Order by Clause","correct":false},{"id":48589,"option":"None of these","correct":false}]},{"q":"<p>Which of the following elements is used to map the <strong>java.util.Collection</strong> property in Hibernate?</p>","a":[{"id":599186,"option":"<set>","correct":false},{"id":599187,"option":"<list>","correct":false},{"id":599188,"option":"<map>","correct":false},{"id":599189,"option":"None of these","correct":true}]},{"q":"<p>Which of the following annotations is used to create the Hibernate<strong> </strong>application?</p>","a":[{"id":583320,"option":"@Id","correct":false},{"id":583321,"option":"@Table","correct":false},{"id":583322,"option":"@Entity","correct":false},{"id":583323,"option":"All of these","correct":true}]},{"q":"<p>Which of the following cache providers is used by an application that does not support a Hibernate query? </p>","a":[{"id":583304,"option":"warmCache","correct":true},{"id":583305,"option":"OSCache","correct":false},{"id":583306,"option":"JBoss Cache","correct":false},{"id":583307,"option":"All of these","correct":false}]},{"q":"<p>In Hibernate, which of the following methods is used to update the state of an instance from the underlying database?</p>","a":[{"id":583296,"option":"Session.store()","correct":false},{"id":583297,"option":"Session.keep()","correct":false},{"id":583298,"option":"Session.update()","correct":true},{"id":583299,"option":"Session.load()","correct":false}]},{"q":"<p>In Hibernate, which of the following methods is not an interceptor interface?</p>","a":[{"id":583288,"option":"instantiate()","correct":false},{"id":583289,"option":"preFlush()","correct":false},{"id":583290,"option":"isSaved()","correct":true},{"id":583291,"option":"onLoad()","correct":false}]},{"q":"<p>In Hibernate, which of the following files will you update when you make any change in a database or table?</p>","a":[{"id":583284,"option":"CFG","correct":false},{"id":583285,"option":"XML","correct":true},{"id":583286,"option":"Properties","correct":false},{"id":583287,"option":"Java","correct":false}]},{"q":"<p>Which of the following technologies is supported by Hibernate?</p>","a":[{"id":583280,"option":"J2EE","correct":true},{"id":583281,"option":"Oracle","correct":false},{"id":583282,"option":"Docker","correct":false},{"id":583283,"option":"None of these","correct":false}]},{"q":"<p>Which of the following objects is created initially in a Hibernate application?</p>","a":[{"id":583276,"option":"Session ","correct":false},{"id":583277,"option":"Query ","correct":false},{"id":583278,"option":"Configuration ","correct":true},{"id":583279,"option":"Criteria ","correct":false}]},{"q":"<p>In Hibernate, if you connect to a database, then which of the following database objects is created?</p>","a":[{"id":583272,"option":"SessionFactory ","correct":false},{"id":583273,"option":"Session ","correct":true},{"id":583274,"option":"Criteria ","correct":false},{"id":583275,"option":"Query ","correct":false}]},{"q":"<p>In Hibernate, which of the following properties will you configure when a database is used along with the application server and Java Naming and Directory Interface API?</p>","a":[{"id":583260,"option":"hibernate.connection.datasource","correct":true},{"id":583261,"option":"hibernate.connection.pool_size","correct":false},{"id":583262,"option":"hibernate.connection.url","correct":false},{"id":583263,"option":"hibernate.connection.driver_class","correct":false}]},{"q":"<p>In Hibernate, which of the following is not a session interface method?</p>","a":[{"id":583252,"option":"boolean isAlive()","correct":true},{"id":583253,"option":"void update(Object object)","correct":false},{"id":583254,"option":"boolean saveorUpdate()","correct":false},{"id":583255,"option":"serializable save(Object object)","correct":false}]},{"q":"<p>In Hibernate, which of the following is required to design a <strong>Persistent </strong>class?</p>\n\n<p> </p>","a":[{"id":583244,"option":"Index attribute","correct":false},{"id":583245,"option":"JavaBeans compliant code","correct":false},{"id":583246,"option":"Both of these","correct":true},{"id":583247,"option":"None of these","correct":false}]},{"q":"<p>Which of the following Hibernate O/R mapping techniques contains the mapping description of the <strong>java.util.SortedMap </strong>property?</p>","a":[{"id":583236,"option":"Collection mapping","correct":true},{"id":583237,"option":"Association mapping","correct":false},{"id":583238,"option":"Component mapping","correct":false},{"id":583239,"option":"Binary and large object mapping","correct":false}]},{"q":"<p>In Hibernate, which of the following collection mapping types is used to initialize the <strong>java.util.HashMap</strong> class?</p>","a":[{"id":583232,"option":"java.util.SortedMap","correct":false},{"id":583233,"option":"java.util.SortedSet","correct":false},{"id":583234,"option":"java.util.Set","correct":false},{"id":583235,"option":"java.util.Map","correct":true}]},{"q":"<p>In Hibernate, how many methods are available in an interceptor interface?</p>","a":[{"id":583220,"option":"Six","correct":false},{"id":583221,"option":"Nine","correct":true},{"id":583222,"option":"Seven","correct":false},{"id":583223,"option":"Five","correct":false}]},{"q":"<p>Which of the following cache providers uses clustered invalidation but does not support the Hibernate<strong> </strong>query cache?</p>","a":[{"id":583030,"option":"warmCache","correct":true},{"id":583031,"option":"JBossCache","correct":false},{"id":583032,"option":"OSCache","correct":false},{"id":583033,"option":"EHCache","correct":false}]},{"q":"<p>In Hibernate, which of the following elements is used to represent the <strong>one-to-many</strong> relationship?</p>","a":[{"id":583014,"option":"<one-to-many>","correct":true},{"id":583015,"option":"<one-many>","correct":false},{"id":583016,"option":"<OneToMany>","correct":false},{"id":583017,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following methods is used to reload the state of an instance from an underlying database?</p>","a":[{"id":583010,"option":"Session.reload()","correct":false},{"id":583011,"option":"Session.refresh()","correct":true},{"id":583012,"option":"Session.get()","correct":false},{"id":583013,"option":"Session.retrieve()","correct":false}]},{"q":"<p style=\"margin-left: 40px; text-align: justify;\">In Hibernate, which of the following statements about the <strong>hibernate</strong><strong>.dialect</strong><strong> </strong>property is correct:</p>\n\n<ol>\n\t<li style=\"text-align: justify;\">It generates an appropriate SQL code for the database.</li>\n\t<li style=\"text-align: justify;\">It generates an appropriate Java code for the database.</li>\n</ol>","a":[{"id":582882,"option":"1","correct":true},{"id":582883,"option":"2","correct":false},{"id":582884,"option":"Both of these","correct":false},{"id":582885,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is a key component in Hibernate?</p>","a":[{"id":582878,"option":"Configuration","correct":false},{"id":582879,"option":"Query","correct":false},{"id":582880,"option":"Transaction ","correct":false},{"id":582881,"option":"All of these","correct":true}]},{"q":"<p>In Java, which of the following properties is required to configure a database in a stand-alone application?</p>","a":[{"id":582874,"option":"hibernate.connection.driver_class","correct":true},{"id":582875,"option":"hibernate.connection","correct":false},{"id":582876,"option":"driver_class.hibernate.connection","correct":false},{"id":582877,"option":"All of these","correct":false}]},{"q":"<p>Which of the following packages needs to be installed before installing <strong>Hibernate</strong> on your system?</p>","a":[{"id":582826,"option":"dom4j","correct":false},{"id":582827,"option":"Xerces","correct":false},{"id":582828,"option":"log4j","correct":false},{"id":582829,"option":"All of these","correct":true}]},{"q":"<p>Which of the following APIs allows you to integrate Hibernate with J2EE and application servers?</p>","a":[{"id":582818,"option":"JDBC","correct":false},{"id":582819,"option":"Java Naming and Directory Interface (JNDI))","correct":true},{"id":582820,"option":"Swagger","correct":false},{"id":582821,"option":"All of these","correct":false}]},{"q":"<p>In Hibernate, which of the following needs to be overridden for putting the instances of a persistent class in a set?</p>","a":[{"id":48542,"option":"override hashCode()  ","correct":false},{"id":48543,"option":"override equals() ","correct":false},{"id":48544,"option":"Both of these","correct":true},{"id":48545,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to configure the <strong>driver class</strong> of a database?</p>","a":[{"id":48492,"option":"hibernate.connection.driver_class  ","correct":true},{"id":48493,"option":"hibernate.connection.db_driver","correct":false},{"id":48494,"option":"hibernate.connection.sql_driver","correct":false},{"id":48495,"option":"hibernate.connection.driver","correct":false}]},{"q":"<p>In Hibernate, how many types of association mapping are there?</p>","a":[{"id":50804,"option":"1","correct":false},{"id":50805,"option":"2","correct":false},{"id":50806,"option":"3","correct":false},{"id":50807,"option":"4","correct":true}]},{"q":"<p>In Hibernate, which of the following is used for joining tables in <strong>collection mapping</strong>?</p>","a":[{"id":50744,"option":"@JoinColumns","correct":false},{"id":50745,"option":"@joinTable","correct":false},{"id":50746,"option":"@joinColumns","correct":false},{"id":50747,"option":"@JoinTable","correct":true}]},{"q":"<p>Which of the following companies was the first to implement Hibernate?</p>","a":[{"id":50708,"option":"Sun","correct":false},{"id":50709,"option":"Microsoft","correct":false},{"id":50710,"option":"RedHat","correct":true},{"id":50711,"option":"Linux","correct":false}]},{"q":"<p>In Hibernate, which of the following is not an <strong>aggregate</strong> function?</p>","a":[{"id":48326,"option":"count","correct":false},{"id":48327,"option":"avg","correct":false},{"id":48328,"option":"add","correct":true},{"id":48329,"option":"max","correct":false}]},{"q":"<p>In Hibernate, which of the following helps enable a <strong>query cache</strong>?</p>","a":[{"id":48270,"option":"hibernate.cache.use_query_cache=true ","correct":true},{"id":48271,"option":"hibernate.cache.query_cache=true ","correct":false},{"id":48272,"option":"hibernate.cache.use_query_cache=yes ","correct":false},{"id":48273,"option":"hibernate.cache.query_cache=yes ","correct":false}]},{"q":"<p>In Hibernate, which of the following is considered a <strong>root level</strong> element?</p>","a":[{"id":48166,"option":"<session-mapping> ","correct":false},{"id":48167,"option":"<hibernate-mapping> ","correct":true},{"id":48168,"option":"<sessionfactory-mapping> ","correct":false},{"id":48169,"option":"<jsp-mapping> ","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to achieve <strong>optimistic</strong> <strong>locking</strong>?</p>","a":[{"id":48538,"option":"@Versio ","correct":true},{"id":48539,"option":"@Lock ","correct":false},{"id":48540,"option":"Both of these","correct":false},{"id":48541,"option":"None of these ","correct":false}]},{"q":"<p>In Hibernate, which of the following annotations is used to create timestamp mappings?</p>","a":[{"id":50820,"option":"@Temporal()","correct":false},{"id":50821,"option":"@Temporal(TemporalType.TIMESTAMP)","correct":true},{"id":50822,"option":"@Temporal(TemporalType.Timestamp)","correct":false},{"id":50823,"option":"@Temporal(TemporalType.TimeStamp)","correct":false}]},{"q":"<p>In Hibernate, which of the following contains a complete record of all the activities that affect the contents of a database, executed during a particular time period?</p>","a":[{"id":48302,"option":"Report writer","correct":false},{"id":48303,"option":"Query language","correct":false},{"id":48304,"option":"Data manipulation language","correct":false},{"id":48305,"option":"Transaction log","correct":true}]},{"q":"<p>In Hibernate, which of the following is the use of <strong>optimistic</strong> locking?</p>","a":[{"id":48550,"option":"For long transactions ","correct":true},{"id":48551,"option":"For short transactions ","correct":false},{"id":48552,"option":"Both of these","correct":false},{"id":48553,"option":"None of these\r\n","correct":false}]},{"q":"<p>In Hibernate, which of the following columns can participate in the <strong>GROUP BY</strong> clause?</p>","a":[{"id":48554,"option":"Bit","correct":false},{"id":48555,"option":"Text","correct":false},{"id":48556,"option":"Ntext","correct":false},{"id":48557,"option":"All of these","correct":true}]},{"q":"<p>In Hibernate, which of the following <strong>annotations</strong> lies at the <strong>class level</strong>?</p>","a":[{"id":43642,"option":"@Entity","correct":false},{"id":43643,"option":"@Id","correct":false},{"id":43644,"option":"@Table","correct":true},{"id":43645,"option":"None of these","correct":false}]},{"q":"<p>A transaction simply represents a unit of work, in such a case if one step fails the whole transaction fails. In Hibernate, which of the following terms defines this process?</p>","a":[{"id":49004,"option":"Atomicity\r\n ","correct":true},{"id":49005,"option":"Procedure ","correct":false},{"id":49006,"option":"Composite transaction ","correct":false},{"id":49007,"option":"Stored procedure","correct":false}]},{"q":"<p>In Hibernate, which of the following statements requests the user to enter a value ending with <strong>qpt</strong>?</p>","a":[{"id":48842,"option":"LIKE %qpt","correct":true},{"id":48843,"option":"LIKE *ton","correct":false},{"id":48844,"option":"LIKE ton$","correct":false},{"id":48845,"option":"LIKE ^.*ton$","correct":false}]},{"q":"<p>Which of these is recommended while creating a <strong>SessionFactory</strong> in Hibernate?</p>","a":[{"id":48522,"option":"Prototype  ","correct":false},{"id":48523,"option":"Singleton  ","correct":true},{"id":48524,"option":"All of these","correct":false},{"id":48525,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following annotations is used to explicitly specify the name of the column?</p>","a":[{"id":48964,"option":"name attribute of @Column ","correct":true},{"id":48965,"option":"name attribute of @Table ","correct":false},{"id":48966,"option":"name attribute of @Row ","correct":false},{"id":48967,"option":"name attribute of @key","correct":false}]},{"q":"<p>In Hibernate, which of the following provides methods to add <strong>criteria</strong>?</p>","a":[{"id":48992,"option":"HCQL ","correct":true},{"id":48993,"option":"HQL ","correct":false},{"id":48994,"option":"SQL ","correct":false},{"id":48995,"option":"SQLITE","correct":false}]},{"q":"<p>In Hibernate, what is the correct full form of <strong>QBC</strong>?</p>","a":[{"id":48894,"option":"Query by call","correct":false},{"id":48895,"option":"Query by column","correct":false},{"id":48896,"option":"Query by criteria","correct":true},{"id":48897,"option":"Query by code","correct":false}]},{"q":"<p>Which of these is not available in Hibernate?</p>","a":[{"id":48874,"option":"Tables per concrete class","correct":false},{"id":48875,"option":"Table per class hierarchy","correct":false},{"id":48876,"option":"Table per subclass","correct":false},{"id":48877,"option":"Table per object","correct":true}]},{"q":"<p>In Hibernate, which of the following is the correct full form of <strong>POJO</strong>?</p>","a":[{"id":48870,"option":"Plane Old Java Objects","correct":false},{"id":48871,"option":"Particular Old Java Objects","correct":false},{"id":48872,"option":"Plain Open Java Objects","correct":false},{"id":48873,"option":"Plain Old Java Objects","correct":true}]},{"q":"<p>In Hibernate, which of the following is a correct extension of SQL?</p>","a":[{"id":48866,"option":"MySQL ","correct":false},{"id":48867,"option":"HQL ","correct":true},{"id":48868,"option":"MS SQL ","correct":false},{"id":48869,"option":"MYSQL","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to insert a row into the table?</p>","a":[{"id":48854,"option":"ADD","correct":false},{"id":48855,"option":"INSERT","correct":true},{"id":48856,"option":"UPDATE","correct":false},{"id":48857,"option":"ALTER","correct":false}]},{"q":"<p>In Hibernate, which of the following is supported by MySQL?</p>","a":[{"id":48810,"option":"SQL99 standard ","correct":true},{"id":48811,"option":"SQL9 standard ","correct":false},{"id":48812,"option":"SQL256 standard ","correct":false},{"id":48813,"option":"SQL259 standard ","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to inherit properties from superclasses?</p>","a":[{"id":48678,"option":"@MappedSuperclass  ","correct":true},{"id":48679,"option":"@MappedSubclass  ","correct":false},{"id":48680,"option":"@MappedSuperSuperclass ","correct":false},{"id":48681,"option":"@MappedSuper","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to map a date?</p>","a":[{"id":48666,"option":"@MapKey  ","correct":false},{"id":48667,"option":"@MapKeyTemporal  ","correct":true},{"id":48668,"option":"@Date ","correct":false},{"id":48669,"option":"@Time ","correct":false}]},{"q":"<p>In Hibernate, which of these is used to map an <strong>enum</strong>?</p>","a":[{"id":48654,"option":"@MapKeyEnumerated ","correct":true},{"id":48655,"option":"@MapKey ","correct":false},{"id":48656,"option":"@Map","correct":false},{"id":48657,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following can be different in an <strong>INSERT</strong> statement?</p>","a":[{"id":48646,"option":"The sequence of columns","correct":false},{"id":48647,"option":"The number of columns ","correct":false},{"id":48648,"option":"The values of columns ","correct":false},{"id":48649,"option":"All of these","correct":true}]},{"q":"<p>In Hibernate, which of the following is mandatory in an <strong>UPDATE</strong> statement?</p>","a":[{"id":48626,"option":"Column name ","correct":false},{"id":48627,"option":"Column value ","correct":false},{"id":48628,"option":"Both column name and column value ","correct":true},{"id":48629,"option":"Value","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to override the attributes from an <strong>embeddable</strong> class?</p>","a":[{"id":48622,"option":"@AttributeOverride  ","correct":true},{"id":48623,"option":"@AssociationOverride ","correct":false},{"id":48624,"option":"@OrderByOverride ","correct":false},{"id":48625,"option":"@HavingByOverride ","correct":false}]},{"q":"<p>In Hibernate, which of the following is the default order of the <strong>ORDER BY</strong> clause?</p>","a":[{"id":48582,"option":"Descending ","correct":false},{"id":48583,"option":"Ascending ","correct":true},{"id":48584,"option":"Random ","correct":false},{"id":48585,"option":"Based on the condition","correct":false}]},{"q":"<p>Which of the following supports the implementation of the second-level cache in Hibernate?</p>","a":[{"id":48980,"option":"EHCache ","correct":false},{"id":48981,"option":"SwarmCache ","correct":false},{"id":48982,"option":"OSCache ","correct":false},{"id":48983,"option":"All of these","correct":true}]},{"q":"<p>In Hibernate, what does <strong>HCQL</strong> stand for?</p>","a":[{"id":49000,"option":"Hibernate Criteria Query Language ","correct":true},{"id":49001,"option":"Hibernate Concept Queue Language ","correct":false},{"id":49002,"option":"Hibernate Criteria Queue Language ","correct":false},{"id":49003,"option":"Hibernate Concept Query Language ","correct":false}]},{"q":"<p>In Hibernate, which of the following helps in enabling the auto-commit feature in reference to JDBC pooled connections?</p>","a":[{"id":48506,"option":"hibernate.hbm2ddl.auto  ","correct":false},{"id":48507,"option":"hibernate.connection.autocommit  ","correct":true},{"id":48508,"option":"hibernate.hbm2ddl.auto ; hibernate.connection.autocommit  ","correct":false},{"id":48509,"option":"hibernate.connection.commit  ","correct":false}]},{"q":"<p>In Hibernate, which of the following schemes is used to create tables that are created as per class and are related by a foreign key?</p>","a":[{"id":49024,"option":"Table per Hierarchy","correct":false},{"id":49025,"option":"Table Per Concrete Class","correct":false},{"id":49026,"option":"Table Per Subclass","correct":true},{"id":49027,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of these provides tools for the development of distributed, web-based solutions?</p>","a":[{"id":48902,"option":"JVM","correct":false},{"id":48903,"option":"JMX","correct":true},{"id":48904,"option":"JRE","correct":false},{"id":48905,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following is used for mapping?</p>","a":[{"id":43404,"option":"XML","correct":false},{"id":43405,"option":"Annotations","correct":false},{"id":43406,"option":"Both of these","correct":true},{"id":43407,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following can be used with a where clause?</p>","a":[{"id":48570,"option":"IN operator ","correct":true},{"id":48571,"option":"INOUT operator ","correct":false},{"id":48572,"option":"OUTIN operator ","correct":false},{"id":48573,"option":"OUT operator ","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to modify the existing data in a database table?</p>","a":[{"id":48698,"option":"MODIFY","correct":false},{"id":48699,"option":"UPDATE","correct":true},{"id":48700,"option":"CHANGE","correct":false},{"id":48701,"option":"NEW","correct":false}]},{"q":"<p>In Hibernate, which of the following conditions is true for a <strong>WHERE</strong> clause?</p>","a":[{"id":48598,"option":"The condition that is to be met for the rows to be returned from the result. ","correct":true},{"id":48599,"option":"Boolean condition only ","correct":false},{"id":48600,"option":"Text condition only ","correct":false},{"id":48601,"option":"If condition only","correct":false}]},{"q":"<p>In Hibernate, assume that you have a SELECT statement with the following clauses: </p>\n<ul>\n<li><strong>GROUP BY</strong></li>\n<li><strong>WHERE</strong></li>\n<li><strong>HAVING</strong></li>\n</ul>\n<p>In this scenario, the <strong>WHERE</strong> conditions are applied before ____________ condition.</p>","a":[{"id":48742,"option":"HAVING","correct":true},{"id":48743,"option":"WHERE","correct":false},{"id":48744,"option":"NOW","correct":false},{"id":48745,"option":"None of these","correct":false}]},{"q":"<p>Which of the following about Hibernate is true?</p>","a":[{"id":48930,"option":"Hibernate does not require an application server to operate. ","correct":false},{"id":48931,"option":"Hibernate manipulates complex associations of objects of the database. ","correct":false},{"id":48932,"option":"Hibernate minimizes database access with smart fetching strategies. ","correct":false},{"id":48933,"option":"All of these","correct":true}]},{"q":"<p>In Hibernate, which of the following is used to get a new <strong>Session</strong> object that must be closed after it finishes its operations?</p>","a":[{"id":48262,"option":"SessionFactory.getSession();","correct":false},{"id":48263,"option":"SessionFactory.openSession();","correct":true},{"id":48264,"option":"SessionFactory.get();","correct":false},{"id":48265,"option":"(session)SessionFactory.getObject();","correct":false}]},{"q":"<p>In Hibernate, which of the following elements of <strong>hibernate-mapping</strong> is used to define specific mappings from Java classes to database tables?</p>","a":[{"id":43558,"option":"<class> ","correct":true},{"id":43559,"option":"<meta> ","correct":false},{"id":43560,"option":"<id> ","correct":false},{"id":43561,"option":"<generator>","correct":false}]},{"q":"<p>In Hibernate, which of the following can be used to help load an associated object at the same time as when its parent object is loaded?</p>","a":[{"id":48290,"option":"lazy=\"yes\"","correct":false},{"id":48291,"option":"lazy=\"false\"","correct":true},{"id":48292,"option":"lazy=\"true\"","correct":false},{"id":48293,"option":"lazy=\"no\"","correct":false}]},{"q":"<p>Which of the following <strong>hibernate mappings</strong> is correct?</p>\n\n<pre class=\"prettyprint\"><code>&lt;property name=\"prop1\" column=\"coln1\" type=\"string\" length=\"200\" optimistic-lock=\"false\" /&gt; \n&lt;property name=\"prop2\" column=\"coln2\" type=\"string\" length=\"500\"/&gt;\n</code></pre>","a":[{"id":48274,"option":" Only first  ","correct":false},{"id":48275,"option":"Only second  ","correct":false},{"id":48276,"option":"Both the statements are correct","correct":true},{"id":48277,"option":"None of the statements is correct","correct":false}]},{"q":"<p>What is <strong>addScalar()</strong> used for in the following Hibernate code:</p>\n\n<pre class=\"prettyprint\"><code>Double max = (Double) sess.createSQLQuery(\"select max(b.weight) as maxWeight from books b\")\n                        .addScalar(\"maxWeight\", Hibernate.DOUBLE);\n                        .uniqueResult();\n</code></pre>","a":[{"id":48174,"option":"To explicitly mention that 'maxWeight' will always be 'double'","correct":true},{"id":48175,"option":"To check if 'maxWeight' is double and if not, to throw an exception","correct":false},{"id":48176,"option":"To check if 'maxWeight' is double","correct":false},{"id":48177,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is not supported by Hibernate?</p>","a":[{"id":50716,"option":"HQL","correct":false},{"id":50717,"option":"QBC","correct":false},{"id":50718,"option":"QCE","correct":true},{"id":50719,"option":"QBE","correct":false}]},{"q":"<p>In Hibernate, which of the following about <strong>Session.delete() </strong>is true?</p>","a":[{"id":48298,"option":"It removes a persisted instance from the session cache.","correct":false},{"id":48299,"option":"It removes a persisted instance from the data store.","correct":true},{"id":48300,"option":"It removes a persisted instance from the Session Factory.","correct":false},{"id":48301,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to represent a <strong>many-to-one</strong> relationship?</p>","a":[{"id":48882,"option":"<many-to-one>\r\n","correct":true},{"id":48883,"option":"<many-one>","correct":false},{"id":48884,"option":"<ManyToOne>","correct":false},{"id":48885,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to insert data into a database?</p>","a":[{"id":48846,"option":"INSERT INTO","correct":true},{"id":48847,"option":"UPDATE","correct":false},{"id":48848,"option":"ADD","correct":false},{"id":48849,"option":"INSERT NEW","correct":false}]},{"q":"<p>In Hibernate, which of the following is used with <strong>GROUP BY</strong> to remove duplicates?</p>","a":[{"id":48432,"option":"Aggregates","correct":false},{"id":48433,"option":"Order by","correct":false},{"id":48434,"option":"Where clause ","correct":false},{"id":48435,"option":"Distinct root entity criteria","correct":true}]},{"q":"<p>In Hibernate, which of the following is not a correct <strong>fetching strategy</strong>?</p>","a":[{"id":48922,"option":"Dselect fetching","correct":true},{"id":48923,"option":"Subselect fetching","correct":false},{"id":48924,"option":"Select fetching","correct":false},{"id":48925,"option":"Join fetching","correct":false}]},{"q":"<p>Which of the following helps in the mapping of a table with respect to the Table per Concrete class?</p>","a":[{"id":49020,"option":"Union subclass element ","correct":false},{"id":49021,"option":"Self-creating the table for each class ","correct":false},{"id":49022,"option":"Union subclass element or by self-creating the table for each class ","correct":true},{"id":49023,"option":"Self-creating the row for each class","correct":false}]},{"q":"<p>In Hibernate, which of the following is an optional element that is used to create a class description, while defining hibernate mapping?</p>","a":[{"id":43562,"option":"<class>","correct":false},{"id":43563,"option":"<meta> ","correct":true},{"id":43564,"option":"<id>","correct":false},{"id":43565,"option":"<property>","correct":false}]},{"q":"<p>In Hibernate, which of the following commands creates a new instance of a query for a given SQL string?</p>","a":[{"id":48694,"option":"Session.createSQLQuery ","correct":true},{"id":48695,"option":"Session.addSQLQuery\r\n ","correct":false},{"id":48696,"option":"Session.updateSQLQuery ","correct":false},{"id":48697,"option":"Session.updateQuery ","correct":false}]},{"q":"<p>In Hibernate, which of the following mapping elements maps the unique <strong>ID</strong> attribute of a class to the <strong>primary key</strong> of a database table?</p>","a":[{"id":43566,"option":"<property>","correct":false},{"id":43567,"option":"<generator>","correct":false},{"id":43568,"option":"<id>","correct":true},{"id":43569,"option":"<meta> ","correct":false}]},{"q":"<p>Which of the following is useful for the table concrete class for superclass?</p>","a":[{"id":50796,"option":"@Inheritance(strategy=InheritanceType.Table_Per_Class)","correct":false},{"id":50797,"option":"@Inheritance(strategy=InheritanceType.TABLE_PER_CLASS)","correct":true},{"id":50798,"option":"@Inheritance(strategy=InheritanceType.SINGLE_TABLE)","correct":false},{"id":50799,"option":"@Inheritance(strategy=InheritanceType.Single_Table)","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to specify the number of rows to be fetched in a <strong>select</strong> query?</p>","a":[{"id":48496,"option":"hibernate.jdbc.fetch_size ","correct":true},{"id":48497,"option":"hibernate.jdbc.batch_size ","correct":false},{"id":48498,"option":"Both of these","correct":false},{"id":48499,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following is the correct substitution for <code>xxx</code> in the code given below:</p>\n\n<pre class=\"prettyprint\"><code>&lt;property name=\"current_session_context_class\"&gt;xxx&lt;/property&gt; \n</code></pre>","a":[{"id":48338,"option":"OSCache","correct":false},{"id":48339,"option":"EHCache","correct":false},{"id":48340,"option":"Thread","correct":true},{"id":48341,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following is a default annotation for the property?</p>","a":[{"id":48566,"option":"@Transient  ","correct":false},{"id":48567,"option":"@Basic  ","correct":true},{"id":48568,"option":"@Default","correct":false},{"id":48569,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following is used to persist collections that are of <strong>embeddable</strong> type?</p>","a":[{"id":48662,"option":"@OneToMany  ","correct":false},{"id":48663,"option":"@ElementCollection  ","correct":true},{"id":48664,"option":"@Persistent ","correct":false},{"id":48665,"option":"@ManyToMany  ","correct":false}]},{"q":"<p>In Hibernate, which of the following is not the correct state of an instance present in mapped entity classes?</p>","a":[{"id":583256,"option":"Transient","correct":false},{"id":583257,"option":"Active","correct":true},{"id":583258,"option":"Persistent","correct":false},{"id":583259,"option":"Detached","correct":false}]},{"q":"<p>In Hibernate, which of the following classes depends on the life cycle of owning entity classes?</p>\n\n<p> </p>","a":[{"id":583228,"option":"Transient ","correct":false},{"id":583229,"option":"Detached ","correct":false},{"id":583230,"option":"Component ","correct":true},{"id":583231,"option":"Persistent ","correct":false}]},{"q":"<p>In Hibernate, which of the following exceptions will be thrown by the following code:</p>\n\n<pre class=\"prettyprint\"><code>@Id\n@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"StudentSeq\")\n@Column(name = \"admission_no\", updatable = false, nullable = false)\nprivate Long admission_no;</code></pre>\n\n<p> </p>","a":[{"id":583216,"option":"org.hibernate.AnnotationException: Unknown Id.generator","correct":true},{"id":583217,"option":"QuerySyntaxException: Table is not mapped","correct":false},{"id":583218,"option":"OptimisticLockException","correct":false},{"id":583219,"option":"LazyInitializationException","correct":false}]},{"q":"<p>In Java, which of the following statements about the advantages of a Hibernate tool is correct:</p>\n\n<ol>\n\t<li>It provides simple querying of data.</li>\n\t<li>It requires an application server to operate.</li>\n\t<li>It is used to map Java classes to database tables using XML files without writing code.</li>\n</ol>","a":[{"id":582802,"option":"2 and 3","correct":false},{"id":582803,"option":"1 and 3","correct":true},{"id":582804,"option":"1 and 2","correct":false},{"id":582805,"option":"All of these","correct":false}]},{"q":"<p>In Hibernate, which of the following options is managed by a <strong>EntityTuplizer</strong>?</p>","a":[{"id":48534,"option":"Component ","correct":false},{"id":48535,"option":"Entity ","correct":true},{"id":48536,"option":"Both of these","correct":false},{"id":48537,"option":"None of these","correct":false}]},{"q":"<p>Which of the following scenarios is the best example for the usefulness of a read-write concurrency strategy in Hibernate?</p>","a":[{"id":48746,"option":"Use it for reference data only","correct":false},{"id":48747,"option":"Use this strategy for read-mostly data where it is critical to prevent stale data in concurrent transactions. ","correct":false},{"id":48748,"option":"Use this strategy if data hardly ever changes and a small likelihood of stale data is not of critical concern. ","correct":true},{"id":48749,"option":"Use it for value only","correct":false}]},{"q":"<p>In Hibernate, which element, within the <strong>id</strong> element, is used to automatically generate <strong>primary key</strong> values?</p>","a":[{"id":43570,"option":"  <class>  ","correct":false},{"id":43571,"option":" <meta>  ","correct":false},{"id":43572,"option":" <property> ","correct":false},{"id":43573,"option":" <generator> ","correct":true}]},{"q":"<p>Which of these supports polymorphism?</p>","a":[{"id":48910,"option":"Hibernate ","correct":true},{"id":48911,"option":"ORM ","correct":false},{"id":48912,"option":"Hibernate and ORM","correct":false},{"id":48913,"option":"Spring","correct":false}]},{"q":"<p>Which of the following is used by default in Hibernate?</p>","a":[{"id":48562,"option":"PersisterClassProvider.false  ","correct":false},{"id":48563,"option":"PersisterClassProvider.true ","correct":true},{"id":48564,"option":"PersisterClassProvider ","correct":false},{"id":48565,"option":"PersisterClassProvider.null","correct":false}]},{"q":"<p>Which of the following features is provided by the <strong>Template</strong> class in Hibernate?</p>","a":[{"id":48960,"option":"create Configuration ","correct":false},{"id":48961,"option":"BuildSessionFactory ","correct":false},{"id":48962,"option":"Session ","correct":false},{"id":48963,"option":"All of these","correct":true}]},{"q":"<p>In Hibernate, which of these is called to start a <strong>transaction</strong>?</p>","a":[{"id":43638,"option":"sessionFactory.beginTransaction()","correct":false},{"id":43639,"option":"session.beginTransaction()","correct":true},{"id":43640,"option":"sessionFactory.startTransaction() ","correct":false},{"id":43641,"option":"session.startTransaction()","correct":false}]},{"q":"<p>In Hibernate, which of the following is specified in the parent class?</p>","a":[{"id":49016,"option":"@Inheritance(strategy=InheritanceType.JOINED)\r\n ","correct":true},{"id":49017,"option":"@Inheritance(strategy=InheritanceType.UNJOINED)  ","correct":false},{"id":49018,"option":"@Inheritance(strategy=InheritanceType.BRAKED) ","correct":false},{"id":49019,"option":"inheritance(strategy=InheritanceType.BRAKED) ","correct":false}]},{"q":"<p>Which of the following attributes are used by <strong>@Column </strong>annotation in the Hibernate application? </p>","a":[{"id":583316,"option":"nullable","correct":false},{"id":583317,"option":"length ","correct":false},{"id":583318,"option":"unique ","correct":false},{"id":583319,"option":"All of these","correct":true}]},{"q":"<p>In Hibernate, which of the following methods is used to detect if an object has changed while updating an operation?</p>","a":[{"id":583300,"option":"findDirty()","correct":false},{"id":583301,"option":"onDelete()","correct":false},{"id":583302,"option":"onFlushDirty()","correct":true},{"id":583303,"option":"All of these","correct":false}]},{"q":"<p>Which of these is not an <strong>object-relational</strong> mapping technique in Hibernate?</p>","a":[{"id":583240,"option":"Association mapping","correct":false},{"id":583241,"option":"Component mapping","correct":false},{"id":583242,"option":"Core mapping","correct":true},{"id":583243,"option":"Collection mapping","correct":false}]},{"q":"<p>In Hibernate, which of the following is not used for mapping?</p>","a":[{"id":48878,"option":"Many-to-many association","correct":false},{"id":48879,"option":"One-to-many association","correct":false},{"id":48880,"option":"One-to-one association","correct":false},{"id":48881,"option":"None of these","correct":true}]},{"q":"<p>Which of these is mandatory in Hibernate?</p>","a":[{"id":48938,"option":"First-level caching ","correct":true},{"id":48939,"option":"<generator>","correct":false},{"id":48940,"option":"@Column","correct":false},{"id":48941,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following is considered as the <strong>first-level</strong> cache?</p>","a":[{"id":48738,"option":"Session based cache\r\n ","correct":true},{"id":48739,"option":"SessionFactory based cache","correct":false},{"id":48740,"option":"Session and SessionFactory based cache\r\n ","correct":false},{"id":48741,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following methods throws an exception when no matching rows exist in the database?</p>","a":[{"id":48428,"option":"Session.load(); ","correct":true},{"id":48429,"option":"Session.get(); ","correct":false},{"id":48430,"option":"Session.fetch(); ","correct":false},{"id":48431,"option":"None of these","correct":false}]},{"q":"<p>In Java, which of the following database engines is supported by a Hibernate tool?</p>","a":[{"id":582810,"option":"Informix Dynamic Server","correct":true},{"id":582811,"option":"Kubernetes","correct":false},{"id":582812,"option":"vCore","correct":false},{"id":582813,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is useful for the table concrete class for subclass?</p>","a":[{"id":50800,"option":"@DiscriminatorValue(value=\"\")","correct":false},{"id":50801,"option":"@DiscriminatorValue()","correct":false},{"id":50802,"option":"@Inheritance(strategy=InheritanceType.Joined)","correct":false},{"id":50803,"option":"None of these","correct":true}]},{"q":"<p>Which of the following concurrency strategies is compatible with the <strong>JBoss Cache</strong> provider?</p>","a":[{"id":583332,"option":"TransactionalRead Only","correct":true},{"id":583333,"option":"Nonstrict-read-writeRead Only","correct":false},{"id":583334,"option":"Read-writeTransactional","correct":false},{"id":583335,"option":"Nonstrict-read-writeRead-write","correct":false}]},{"q":"<p>Which of the following elements is used to map java.util.Collection property in Hibernate?</p>","a":[{"id":582890,"option":"<set>","correct":false},{"id":582891,"option":"<list>","correct":false},{"id":582892,"option":"<map>","correct":false},{"id":582893,"option":"None of these","correct":true}]},{"q":"<p>Which of the following statements about the benefits of the Java Database Connectivity interface are correct:</p>\n\n<ol>\n\t<li>Error-free and efficient SQL processing</li>\n\t<li>A simple syntax that is easy to learn</li>\n\t<li>Queries are DBMS-specific in nature</li>\n</ol>","a":[{"id":582798,"option":"1 and 2","correct":true},{"id":582799,"option":"1 and 3","correct":false},{"id":582800,"option":"All of these","correct":false},{"id":582801,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following can be used in a single query?</p>","a":[{"id":48574,"option":"ASC","correct":false},{"id":48575,"option":"DESC","correct":false},{"id":48576,"option":"Both of these","correct":true},{"id":48577,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, which of the following controls <strong>MySQL Access Security?</strong></p>","a":[{"id":48750,"option":"The ID used by the user to log into the server and the privileges set up for that account","correct":false},{"id":48751,"option":"The MySQL login account and the privilege ","correct":true},{"id":48754,"option":"The normal login security is sufficient for MySQL, and it does not have any extra controls of its own","correct":false},{"id":48756,"option":"A table of valid IP addresses and the privileges set up for each IP address","correct":false}]},{"q":"<p>In Hibernate, which of the following platforms supports the implementation of MySQL?</p>","a":[{"id":48862,"option":"Linux and Mac OS-X only","correct":false},{"id":48863,"option":"Any operating system ","correct":false},{"id":48864,"option":"Unix, Linux, Windows, and others","correct":true},{"id":48865,"option":"Unix and Linux only","correct":false}]}]