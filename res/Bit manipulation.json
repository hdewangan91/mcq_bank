[{"q":"<p>In Data structures, what is the time complexity of the following code:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>int hack_count(int n){\n int x[n], y[n];\n x[0] = y[0] = 1;\n for (int i = 1; i &lt; n; i++){\n   x[i] = x[i - 1] + y[i - 1];\n   y[i] = x[i - 1];\n }\n return (1 &lt;&lt; n) - x[n - 1] - y[n - 1];\n}</code></pre>","a":[{"id":1668575,"option":"O(n)","correct":true},{"id":1668576,"option":"O(log n)","correct":false},{"id":1668577,"option":"O(n*n)","correct":false},{"id":1668578,"option":"O(n log n)","correct":false}]},{"q":"<p>In data structures, what is the time complexity of the following code:</p>\n\n<pre class=\"prettyprint\"><code>int hacker_no(int n)\n  int p = 1, ans = 0\n  while (n)\n   p = p*5\n   if (n &amp; 1)\n\tans += p\n   n &gt;&gt;= 1; \n return ans\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1668559,"option":"O(log n)","correct":true},{"id":1668560,"option":"O(n)","correct":false},{"id":1668561,"option":"O(n log n)","correct":false},{"id":1668562,"option":"O(n*n)","correct":false}]},{"q":"<p>In data structures, if the <strong>hacker</strong> function is called with&nbsp;<span class=\"mathjax-latex\">\\(parameter\\ 3\\ge hacker(3)\\)</span>, then determine the time complexity of the following code:</p>\n\n<pre class=\"prettyprint\"><code>int hackSetBits(int i)\n  unsigned int c = 0\n\twhile (i) \n\t  i &amp;= (i - 1)\n\t  c++\n\treturn c\nint hackconvert(int j)\n   int count = 0\n   j--\n   while (j &gt; 0) \n\tj = j &gt;&gt; 1\n\tcount++\n   return count\nbool hacker(int n)\n  for (int x = n - hackconvert(n); x &lt; n; x++)\n\tif (x + hackSetBits(x) == n)\n\t return false\n\treturn true\n</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1668555,"option":"O(log n)","correct":false},{"id":1668556,"option":"O(logn * logn)","correct":true},{"id":1668557,"option":"O(n)","correct":false},{"id":1668558,"option":"O(n^2)","correct":false}]},{"q":"<p>What will be the output of the following C++ code if -</p>\n\n<ol>\n\t<li>a=10, b=9 </li>\n\t<li>a=5, b=6    </li>\n\t<li>a=14, b=16  </li>\n\t<li>a=3, b=4  </li>\n</ol>\n\n<p><br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\n\n\nint main()\n{\n    unsigned char a, b;\n    \n    a = a &amp; b;\n    b = b | a;\n    a = a ^ b;\n    b = b&lt;&lt;1;\n    a = a&lt;&lt;1;\n    \n    unsigned  ans = a &amp;  b;\n    \n    cout &lt;&lt; ans ;\n    \n    return 0;\n}</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 2    2. 4    3. 32   4. 8</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 3    2. 6    3. 16   4. 6</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0    2. 8    3. 4   4. 4</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 2    2. 12    3. 24   4. 2</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1487664,"option":"1","correct":true},{"id":1487665,"option":"2","correct":false},{"id":1487666,"option":"3","correct":false},{"id":1487667,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following C code snippet if -</p>\n\n<ol>\n\t<li>n=5, i=2, j=3, x=6  </li>\n\t<li>n=7, i=3, j=2, x=4   </li>\n\t<li>n=13, i=2, j=3, x=8 </li>\n\t<li>n=9, i=3, j=2, x=8  </li>\n</ol>\n\n<p><br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\n\nint l_shift(int a, int b)\n{\n  return a&lt;&lt;b;\n}\n\nint and_opr(int a, int b)\n{\n  return a &amp; b;\n}\n\nint nega_opr(int a)\n{\n  return ~a;\n}\n\nvoid main() \n{\n    unsigned n;\n    \n    int i, j;\n    \n    unsigned x;\n    \n    unsigned t = l_shift(1U,j) - 1U;\n    \n    unsigned temp= and_opr((and_opr(n, l_shift(t,i))), nega_opr(l_shift(x,i)));\n\n    printf(\"%d\", nega_opr(temp));\n\n}\n\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output -</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. -5   2. -1   3. -13   4. -9</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. -5   2. -11   3. -11   4. -8</code></pre>\n\n\t<p><br>\n\t<br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. -3   2. -6   3. -10   4. -7</code></pre>\n\n\t<p><br>\n\t<br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. -2   2. -7   3. -15   4. -10</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1487660,"option":"1","correct":true},{"id":1487661,"option":"2","correct":false},{"id":1487662,"option":"3","correct":false},{"id":1487663,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following C code if -</p>\n\n<ol>\n\t<li>n=5, i=2, j=3, x=6   </li>\n\t<li>n=7, i=3, j=2, x=4   </li>\n\t<li>n=13, i=2, j=3, x=10 </li>\n\t<li>n=9, i=3, j=2, x=11 </li>\n</ol>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main() \n{\n    unsigned n;\n    int i, j;\n    unsigned x;\n    \n    unsigned t = (1U &lt;&lt; j) - 1U;\n    unsigned ans= (n &amp; (t &lt;&lt; i)) | (x &lt;&lt; i);\n\n    printf(\"%d\", ans);\n\n}\n\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<p>1. </p>\n\n<pre class=\"prettyprint\"><code>1. 32   2. 44   3. 88   4. 28</code></pre>\n\n<ol>\n</ol>\n\n<p> </p>\n\n<p>2.  </p>\n\n<pre class=\"prettyprint\"><code>1. 28   2. 32   3. 44   4. 88</code></pre>\n\n<p> </p>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>1. 88   2. 44   3. 28  4. 32</code></pre>\n\n<p> </p>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>1. 28   2. 88   3. 32  4. 44</code></pre>\n\n<p> </p>","a":[{"id":1487388,"option":"1","correct":false},{"id":1487389,"option":"2","correct":true},{"id":1487390,"option":"3","correct":false},{"id":1487391,"option":"4","correct":false}]}]