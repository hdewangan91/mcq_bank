[{"q":"<p>Which of the following options is not an identifier in Scala?</p>","a":[{"id":652655,"option":"Operator identifiers","correct":false},{"id":652656,"option":"Literal identifiers","correct":false},{"id":652657,"option":"Alpha numeric identifiers","correct":false},{"id":652658,"option":"Character identifiers","correct":true}]},{"q":"<p>Which of the following options is not a literal in Scala?</p>","a":[{"id":652651,"option":"Symbol literals","correct":false},{"id":652652,"option":"Character literals","correct":false},{"id":652653,"option":"Mixed literals","correct":true},{"id":652654,"option":"Boolean literals","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>def output(a:Int):Int=a*7\nval outputCopy=output _\nprintln(outputCopy(-1))\n</code></pre>\n\n<p> </p>","a":[{"id":652639,"option":"-7","correct":true},{"id":652640,"option":"-1","correct":false},{"id":652641,"option":"7","correct":false},{"id":652642,"option":"Error","correct":false}]},{"q":"<p>What is the output of the following Scala program:</p>\n\n<pre class=\"prettyprint\"><code>val languages=Map(\"1\"-&gt;\"java\", \"2\"-&gt;\"scala\", \"1\"-&gt;\"python\")\nprintln(languages(\"1\"))\n</code></pre>\n\n<p> </p>","a":[{"id":652635,"option":"1","correct":false},{"id":652636,"option":"java","correct":false},{"id":652637,"option":"scala","correct":false},{"id":652638,"option":"python","correct":true}]},{"q":"<p>What is the output of the following Scala program:</p>\n\n<pre class=\"prettyprint\"><code>case class Languages(coding: String, total: Int)\nval prog= new Languages(\"Scala\", 6)\nprintln(prog.toString)\n</code></pre>\n\n<p> </p>","a":[{"id":652631,"option":"“Scala”","correct":false},{"id":652632,"option":"Languages(Scala, 6)","correct":true},{"id":652633,"option":"Scala, 6","correct":false},{"id":652634,"option":"It raises an exception.","correct":false}]},{"q":"<p>What is the output of the following Scala program:</p>\n\n<pre class=\"prettyprint\"><code>\n  var lang= List(\"archery\", \"badminton\", \"baseball\", \"chess\", \"bowling\")\n  println(lang.filter {(w: String) =&gt;\n  w.take(1) == \"b\"\n  }.reduceLeft{(a: String, b: String) =&gt;\n  s\"$a $b\"\n  })\n\n</code></pre>\n\n<p> </p>","a":[{"id":652623,"option":"archery badminton baseball chess bowling","correct":false},{"id":652624,"option":"badminton baseball bowling","correct":true},{"id":652625,"option":"archery adminton aseall chess owling","correct":false},{"id":652626,"option":"adminton aseall owling","correct":false}]},{"q":"<p>What is the output of the following Scala program:</p>\n\n<pre class=\"prettyprint\"><code>val variable=collection.mutable.Buffer(\"Program\")\n    variable+=65\n    println(variable)\n</code></pre>\n\n<p> </p>","a":[{"id":652615,"option":"ArrayBuffer(Program, 65)","correct":false},{"id":652616,"option":"ArrayBuffer(Program)","correct":false},{"id":652617,"option":"ArrayBuffer(65)","correct":false},{"id":652618,"option":"The code throws an error.","correct":true}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>\n  def Medal(times: Int): Int = {\n    s\"I won ${times.toString} medals in the competition\"\n             }\n  println(Medal(5))\n</code></pre>\n\n<p> </p>","a":[{"id":649977,"option":"I won 5 medals in the competition","correct":false},{"id":649978,"option":"I won medals in the competition","correct":false},{"id":649979,"option":"5","correct":false},{"id":649980,"option":"Compilation error","correct":true}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>\n  trait Passion {\n    def passion = {\n                \"passionate\"\n                  }\n                }\n\n  trait Code {\n    def code = {\n                \"coding\"\n               }\n             }\n\n  object Programmer extends Passion with Code\n             {\n    def describe = {\n               s\"I am $passion about $code\"\n                   }\n             }\n\n  println(Programmer.describe)\n</code></pre>\n\n<p> </p>","a":[{"id":649973,"option":"I am passion about code","correct":false},{"id":649974,"option":"I am about","correct":false},{"id":649975,"option":"I am passionate about coding","correct":true},{"id":649976,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>\n   trait A {\n             var aaa = \"Scala\" \n           }\n\n   trait B {\n             var aaa = \"Programming\"\n           }\n\n   object Output extends A with B\n   println(Output.aaa)\n</code></pre>\n\n<p> </p>","a":[{"id":649967,"option":"Scala","correct":false},{"id":649968,"option":"Programming","correct":false},{"id":649969,"option":"ScalaProgamming","correct":false},{"id":649970,"option":"Compilation Error","correct":true}]},{"q":"<p>What is the output of the following Scala program:</p>\n\n<pre class=\"prettyprint\"><code>\n     var Test = List(2, -4, 11)\n       println {\n                  Test.foldLeft(0) \n                    { \n                       (memo: Int, num: Int) =&gt;\n                       memo + num\n                    }\n               }</code></pre>\n\n<p> </p>","a":[{"id":646879,"option":"0","correct":false},{"id":646880,"option":"9","correct":false},{"id":646881,"option":"Compilation error","correct":true},{"id":646882,"option":"Runtime error ","correct":false}]},{"q":"<p>In Scala, which of these options is equivalent to the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>import java.util.List\nimport java.util.ArrayList\n</code></pre>","a":[{"id":407849,"option":"import java.util.{List, ArrayList}","correct":true},{"id":407850,"option":"Import java.(list_ArrayList) ","correct":false},{"id":407851,"option":"Import java.(list_ArrayList) ","correct":false},{"id":407852,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>object Demo \n{\n   def main(args: Array[String]) \n{\n            println(matchTest(\"1\"))\n            println(matchTest(\"test\"))\n            println(matchTest(2))\n    }\n\n   def matchTest(x: Any): Any = x match \n{\n      case 1 =&gt; \"one\"\n      case \"two\" =&gt; 2\n      case y: Int =&gt; \"scala.Int\"\n      case _ =&gt; \"many\"\n}\n}\n</code></pre>","a":[{"id":407694,"option":"2\r\nmany\r\none","correct":false},{"id":407695,"option":"many\r\nmany\r\nscala.int","correct":true},{"id":407696,"option":"many\r\nmany\r\none","correct":false},{"id":407697,"option":"two\r\nmany\r\nscala.int\r\n","correct":false}]},{"q":"<p>In Scala, which of the following is the technique to transform a function that takes multiple parameters into a chain of functions, each taking a single parameter?</p>","a":[{"id":407881,"option":"Currying","correct":true},{"id":407882,"option":"Lazy evaluation","correct":false},{"id":407883,"option":"Closure","correct":false},{"id":407884,"option":"None of these","correct":false}]},{"q":"<p>In Scala, which of the following statements about the packages is correct:</p>\n\n<ol>\n\t<li>A package can contain classes, objects, traits, and definitions of functions or variables.</li>\n\t<li>A package is accessed with the usage of qualifiers.</li>\n\t<li>The visibility cannot be extended to an enclosing package.</li>\n\t<li>In the background, the package object gets compiled into a JVM class.</li>\n</ol>","a":[{"id":407829,"option":"1 and 2","correct":false},{"id":407830,"option":"2 and 4","correct":true},{"id":407831,"option":"1 and 3","correct":false},{"id":407832,"option":"All of these","correct":false}]},{"q":"<p>In Scala, which of the following is the correct sequences to start an actor object:</p>\n\n<ol>\n\t<li>Subclass the API <strong>scala.actors.Actor</strong></li>\n\t<li>Implement the <strong>start()</strong> method</li>\n\t<li>Implement the <strong>act()</strong> method</li>\n</ol>","a":[{"id":407686,"option":"1 -> 2 -> 3","correct":false},{"id":407687,"option":"2 -> 1 -> 3","correct":false},{"id":407688,"option":"3 -> 1 -> 2","correct":false},{"id":407689,"option":"1 -> 3 -> 2","correct":true}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>import Array._\nobject Demo \n{\n   def main(args: Array[String]) \n    {\n    var myMatrix = ofDim[Int](3,3) \n    for (i &lt;- 0 to 2) {\n    for ( j &lt;- 0 to 2) {\n    myMatrix(i)(j) = i;\n    }\n}\nfor (i &lt;- 0 to 2) \n{\nfor ( j &lt;- 0 to 2) \n{\nprint(\" \" + myMatrix(i)(j));\n}\nprintln();\n}\n}\n}\n</code></pre>","a":[{"id":407358,"option":"0 0 0\r\n 1 1 1\r\n 2 2 2","correct":true},{"id":407359,"option":"0 1 2\r\n 0 1 2 \r\n0 1 2","correct":false},{"id":407360,"option":"2 1 0\r\n2 1 0\r\n2 1 0","correct":false},{"id":407361,"option":"2 2 2\r\n1 1 1\r\n0 0 0","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>  class Point(xc: Int, yc: Int) {\n  var x: Int = xc\n  var y: Int = yc\n  def move(dx: Int, dy: Int) {\n    x = x + dx\n    y = y + dy\n  }\n  override def toString(): String = \"(\" + x + \", \" + y + \")\";\n}\n\nobject Classes {\n  def main(args: Array[String]) {\n  val pt = new Point(1, 2)\n  println(pt)\n  pt.move(10, 10)\n  println(pt)\n  }\n}\n</code></pre>","a":[{"id":407354,"option":"(11, 12)","correct":false},{"id":407355,"option":"(1, 2)\r\n(11, 12)","correct":true},{"id":407356,"option":"(1, 2)","correct":false},{"id":407357,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Scala code: </p>\n<pre class=\"prettyprint\"><code>val column1 = elem(\"Hi\") above elem(\"***\")\nval column2 = elem(\"***\") above elem(\"there\")\ncolumn1 beside column2\n</code></pre>","a":[{"id":407853,"option":"Hi ***\r\n*** there","correct":true},{"id":407854,"option":"Hi\r\nThere","correct":false},{"id":407855,"option":"***\r\n***","correct":false},{"id":407856,"option":"“Hi” *** “There” ***","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>val code = collection.mutable.Buffer(\"pig\", \"scala\")\ncode(1) = \"hive\"\nprintln(code)</code></pre>\n\n<p> </p>","a":[{"id":649985,"option":"pig, hive","correct":false},{"id":649986,"option":"ArrayBuffer(pig, scala)","correct":false},{"id":649987,"option":"ArrayBuffer(pig, hive)","correct":true},{"id":649988,"option":"ArrayBuffer(hive, scala)","correct":false}]},{"q":"<p>In Scala, which of the following options takes a function that works on the nested lists and then concatenates the results back together?</p>","a":[{"id":407941,"option":"flatten","correct":false},{"id":407942,"option":"flatMap","correct":true},{"id":407943,"option":"foldLeft","correct":false},{"id":407944,"option":"foldRight","correct":false}]},{"q":"<p>Which of the following functions is a <strong>high-order</strong> function in Scala?</p>","a":[{"id":652659,"option":"filter","correct":false},{"id":652660,"option":"map","correct":false},{"id":652661,"option":"flatmap","correct":false},{"id":652662,"option":"All of these","correct":true}]},{"q":"<p>Which of the following objects represents the end of a list in Scala?</p>","a":[{"id":652643,"option":"Nil","correct":true},{"id":652644,"option":"Null","correct":false},{"id":652645,"option":"None","correct":false},{"id":652646,"option":"Nothing","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>\n    var languages=List(\"Java\", \"Python\", \"Scala\")\n    println{\n      languages.reduceLeft[String] { (a: String, b: String)=&gt;\n      s\"$a, $b\"\n           }\n          }\n</code></pre>\n\n<p> </p>","a":[{"id":652619,"option":"“$a, $b”","correct":false},{"id":652620,"option":"(“Java”, “Python”, “Scala”)","correct":false},{"id":652621,"option":"“Java”, “Java” “Python”, “Scala\"","correct":false},{"id":652622,"option":"Java, Python, Scala","correct":true}]},{"q":"<p>Which of the following statements about Scala is correct?</p>","a":[{"id":407702,"option":"Scala has no switch statement","correct":false},{"id":407703,"option":"Scala set does not contain any duplicate elements","correct":false},{"id":407704,"option":"Both of these","correct":true},{"id":407705,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>object Test {\n   def main(args: Array[String]) {\n      var z = 36;\n      while( true ){\n         println( \"Value of z: \" + a );\n      }\n   }\n}\n</code></pre>","a":[{"id":407746,"option":"36 is printed infinite times","correct":false},{"id":407747,"option":"Run-time error","correct":false},{"id":407748,"option":"Compilation Error","correct":true},{"id":407749,"option":"Prints z","correct":false}]},{"q":"<p>Which of the following types best describes the language Scala?</p>","a":[{"id":407933,"option":"Statically-typed","correct":true},{"id":407934,"option":"Dynamically-typed","correct":false},{"id":407935,"option":"Both of these","correct":false},{"id":407936,"option":"None of these ","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>object Program {\n\n    def compose[P,Q,R](f: Q =&gt; R, g: P =&gt; Q): P =&gt; R = {\n        b =&gt; f(g(b))\n    }    \n\n    def main(args: Array[String]) = {\n        val double = (b:Int) =&gt; b * b\n        val toString = (b:Int) =&gt; \"new value \" + b\n        val c = compose(toString, double)\n        println(\"original value 2\",c(2))\n    }\n}\n</code></pre>","a":[{"id":407877,"option":"(original value 2,new value 4)","correct":true},{"id":407878,"option":"(original value 2,new value 2)","correct":false},{"id":407879,"option":"(original value 2, 4)","correct":false},{"id":407880,"option":"(original value 2, 2)","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>import scala.util.matching.Regex\nobject Demo \n{\n   def main(args: Array[String]) \n    {\n   val pattern = new Regex(\"abl[ae]\\\\d+\")\n   val str = \"abla2e is able1 and cool\"\n   println((pattern findAllIn str).mkString(\",\"))\n   }\n}\n</code></pre>","a":[{"id":407362,"option":"abla,able1","correct":false},{"id":407363,"option":"abla2,able1","correct":true},{"id":407364,"option":"able1,abla2","correct":false},{"id":407365,"option":"Compilation error","correct":false}]},{"q":"<p>Which of the following objects wraps another object in Scala?</p>","a":[{"id":652647,"option":"Traits","correct":false},{"id":652648,"option":"Currying","correct":false},{"id":652649,"option":"Monad","correct":true},{"id":652650,"option":"None of these","correct":false}]},{"q":"<p>In Scala, which of these will replace all digits with the letter ‘x’ in the following code:</p>\n\n<pre class=\"prettyprint\"><code>val a= \"(988) 843-4444\"\n</code></pre>\n\n<p> </p>","a":[{"id":652627,"option":"a.replace(“[0-9]”, “x”)","correct":false},{"id":652628,"option":"a.replaceAll(“x”, ”[0-9]”)","correct":false},{"id":652629,"option":" a.replace(“x”, “[0-9]”)","correct":false},{"id":652630,"option":"a.replaceAll(\"[0-9]\", \"x\")","correct":true}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>\n  class A \n      {\n        var a:Int=777\n      }\n  object B extends App\n      {\n        var e=new A()\n        e.a=99\n        println(e.a)\n      }\n\n</code></pre>\n\n<p> </p>","a":[{"id":649989,"option":"777","correct":false},{"id":649990,"option":"99","correct":true},{"id":649991,"option":"77799","correct":false},{"id":649992,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>  object Output {\n    def speak(something: String)(implicit good: String) = {\n      println(s\"$something $good\")\n                  }\n                }\n\n  implicit val good = \"programming\"\n  println \n      {\n        Output.speak(\"I love\")\n      }\n  println \n      {\n        Output.speak(\"Scala is\")(\"my favourite\")\n      } \n\n</code></pre>\n\n<p> </p>","a":[{"id":649981,"option":"I love \r\n()\r\nScala is my favourite\r\n()","correct":false},{"id":649982,"option":"Programming I love\r\n()\r\nScala is my favourite\r\n()","correct":false},{"id":649983,"option":"I love programming\r\n()\r\nScala is my favourite\r\n()","correct":true},{"id":649984,"option":"Compilation error","correct":false}]},{"q":"<p>In Scala, which of the following statements about the operation <strong>import scala.collection.mutable</strong> is true?</p>","a":[{"id":407682,"option":"It is used to import the mutable collections","correct":false},{"id":407683,"option":"It is used to collect the mutable data","correct":false},{"id":407684,"option":"It is used to access the mutable collections","correct":true},{"id":407685,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>object Program1 {\n def main(args: Array[String]) {\n val t = new Tuple2(\"Hey!\", \"There\")\n\n println(\"Answer: \" + t.swap )\n }\n}\n</code></pre>","a":[{"id":407953,"option":"Answer: (There, Hey!)","correct":true},{"id":407954,"option":"Answer; Hey, There!","correct":false},{"id":407955,"option":"Compilation error","correct":false},{"id":407956,"option":"Run-time error","correct":false}]},{"q":"<p>In Scala, which of the following annotations allows the users to access multiple threads?</p>","a":[{"id":407690,"option":"@serializable","correct":false},{"id":407691,"option":"@transient","correct":false},{"id":407692,"option":"@volatile","correct":true},{"id":407693,"option":"@deprecated","correct":false}]},{"q":"<p>What is the operator used in the following Scala code called?</p>\n\n<pre class=\"prettyprint\"><code>val oneTwoThree = 1 :: twoThree\n</code></pre>","a":[{"id":407845,"option":"Infix","correct":false},{"id":407846,"option":"Cons","correct":true},{"id":407847,"option":"Zip ","correct":false},{"id":407848,"option":"None of these","correct":false}]},{"q":"<p>In Scala, which of the following statements about <strong>blocks</strong> is incorrect?</p>","a":[{"id":407730,"option":"Blocks are considered as expressions","correct":false},{"id":407731,"option":"The definitions inside a block is also visible outside the block","correct":true},{"id":407732,"option":"The definitions inside a block shadows definitions of the same names outside the block","correct":false},{"id":407733,"option":"None of these","correct":false}]},{"q":"<p>In Scala, which of the following methods is used to prepend an element to a list?</p>","a":[{"id":407945,"option":"def +(elem: A): List[A]","correct":true},{"id":407946,"option":"def init: List[A]","correct":false},{"id":407947,"option":"def toBuffer[B >: A]: Buffer[B]","correct":false},{"id":407948,"option":"def toString(): String","correct":false}]},{"q":"<p>In Scala, which of the following statements about the <strong>process control</strong> is correct:</p>\n\n<ol>\n\t<li>The <strong>sys.process</strong> package contains an implicit conversion from strings to the <strong>ProcessBuilder</strong> objects</li>\n\t<li>The <strong>!</strong> operator does not execute the <strong>ProcessBuilder</strong> object</li>\n\t<li>The <strong>scala.sys.process</strong> package provides utilities to interact with shell programs</li>\n</ol>","a":[{"id":411441,"option":"1 and 2","correct":false},{"id":411442,"option":"1 and 3","correct":true},{"id":411443,"option":"2 and 3","correct":false},{"id":411444,"option":"2","correct":false}]},{"q":"<p>What is the output of the following Scala code: </p>\n<pre class=\"prettyprint\"><code>import scala.collection.immutable._  \nobject Program{  \n    def main(args:Array[String]){  \n        var numbers = BitSet(2,4,7,5,8,0)  \n        numbers.foreach((element:Int) =&gt; println(element))  \n    }  \n} \n</code></pre>","a":[{"id":407861,"option":"0\r\n2\r\n4\r\n5\r\n7\r\n8\r\n","correct":true},{"id":407862,"option":"2 4 7 5 8 0","correct":false},{"id":407863,"option":"0 2 4 5 7 8","correct":false},{"id":407864,"option":"8\r\n7 \r\n5 \r\n4 \r\n2 \r\n0\r\n","correct":false}]},{"q":"<p>Which of the following is automatically imported by any Scala program?</p>","a":[{"id":407738,"option":"Package scala","correct":false},{"id":407739,"option":"java.lang","correct":false},{"id":407740,"option":"scala.Predef","correct":false},{"id":407741,"option":"All of these","correct":true}]},{"q":"<p>Which of the following is the latest version of Scala?</p>","a":[{"id":407873,"option":"2.13.0","correct":true},{"id":407874,"option":"2.14.2","correct":false},{"id":407875,"option":"2.12.0","correct":false},{"id":407876,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>object Demo \n{\n    def main(args: Array[String]) \n{\n        val x = Demo(7)\n        println(x)\n        x match \n      {\n         case Demo(num) =&gt; println(x+\" is bigger two times than \"+num)         \n         case _ =&gt; println(\"I cannot calculate\")\n                       }\n        }\n    def apply(x: Int) = x*4\n   def unapply(z: Int): Option[Int] = if (z%2==0) Some(z/2) else None\n}\n</code></pre>","a":[{"id":407662,"option":"28","correct":false},{"id":407663,"option":"I cannot calculate","correct":false},{"id":407664,"option":"28 is bigger two times than 14","correct":false},{"id":407665,"option":"28\r\n28 is bigger two times than 14","correct":true}]},{"q":"<p>In Scala, which of the following constructors is used to create a pattern instead of the <strong>r() </strong>function?</p>","a":[{"id":407957,"option":"Regex","correct":true},{"id":407958,"option":"findAllIn( ) ","correct":false},{"id":407959,"option":"findFirstIn()","correct":false},{"id":407960,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>object Demo {\n   def main(args: Array[String]) {\n      println (\"Apply method : \" + apply(\"Bob\", \"gmail.com\"));\n      println (\"Unapply method : \" + unapply(\"John@gmail.com\"));\n      println (\"Unapply method : \" + unapply(\"Tara\"));\n   }\n   def apply(user: String, domain: String) = {\n      user +\"@\"+ domain\n   }\n   def unapply(str: String): Option[(String, String)] = {\n      val parts = str split \"@\"     \n      if (parts.length == 2){\n         Some(parts(0), parts(1)) \n      } else {\n         None\n      }\n   }\n}\n</code></pre>","a":[{"id":407366,"option":"Apply method : Bob@gmail.com\r\nUnapply method : Some((John@gmail.com))\r\nUnapply method : None","correct":false},{"id":407367,"option":"Apply method : Bob@gmail.com\r\nUnapply method : Some((John,gmail.com))\r\nUnapply method : Tara","correct":false},{"id":407368,"option":"Apply method : Bob@gmail.com\r\nUnapply method : Some((John,gmail.com))\r\nUnapply method : None","correct":true},{"id":407369,"option":"Apply method : Bob@gmail.com\r\nUnapply method : ((John,gmail.com))\r\nUnapply method : None","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>class Example \n{\n     public static void main(String[] args) \n{\n     char[] matrix = new char[] {'H', 'e', 'l', 'l', 'o'};\n     System.out.println(matrix);\n     for(int i = 0; i &lt;= matrix.length; ++i) \n{\n     System.out.println(matrix[i]);\n}\n}\n}\n</code></pre>","a":[{"id":407378,"option":"Hello","correct":false},{"id":407379,"option":"Run-time error","correct":false},{"id":407380,"option":"It throws an exception called “java.lang.ArrayIndexOutOfBoundsException”","correct":true},{"id":407381,"option":"A matrix of size n * n","correct":false}]},{"q":"<p>In Scala, which of the following functions removes the first element that matches a predicate function?</p>","a":[{"id":407937,"option":"zip","correct":false},{"id":407938,"option":"drop","correct":false},{"id":407939,"option":"dropWhile","correct":true},{"id":407940,"option":"None of these","correct":false}]},{"q":"<p>In Scala, a class can extend another class, but why a case class cannot extend another case class?</p>","a":[{"id":407710,"option":"It is not possible to correctly implement their equality","correct":true},{"id":407711,"option":"It throws an exception","correct":false},{"id":407712,"option":"It is syntactically incorrect","correct":false},{"id":407713,"option":"All of these","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n<pre class=\"prettyprint\"><code>object Main \n{\n  def main(args: Array[String]) \n     {\n       try {\n                val elems = args map Integer.parseInt\n                println(\"The sum of my arguments is: \" + elems.foldLeft(0) (_ + _))\n           } \n      catch {\n                case e: NumberFormatException =&gt; \n            println(\"Usage: Scala Main &lt;n1&gt; &lt;n2&gt; ... \")\n              }\n          }\n  }\n</code></pre>","a":[{"id":407346,"option":"The sum of my arguments is : 0","correct":true},{"id":407347,"option":"The sum of my arguments is : ( 0 )","correct":false},{"id":407348,"option":"The sum of my arguments is : 1","correct":false},{"id":407349,"option":"Compilation error","correct":false}]},{"q":"<p>In Scala, which of the following characters is reserved for compiler-generated identifiers and should not be used in source programs?</p>","a":[{"id":407714,"option":"= =","correct":false},{"id":407715,"option":"*","correct":false},{"id":407716,"option":"$","correct":true},{"id":407717,"option":"_","correct":false}]},{"q":"<p>In Scala, which of the following objects is used to provide <strong>trampoline</strong> support?</p>","a":[{"id":407654,"option":"scala.util.control.TailCalls","correct":true},{"id":407655,"option":"scala.util.control.Trampoline","correct":false},{"id":407656,"option":"scala.util.control.TailRec","correct":false},{"id":407657,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>object Program{  \n    def main(args:Array[String]){  \n        val stream = 001 #:: 020 #:: 085 #:: Stream.empty  \n        println(Stream)  \n    }  \n} \n</code></pre>","a":[{"id":407833,"option":"Stream(100, ?)","correct":false},{"id":407834,"option":"It returns scala.collection.immutable.Stream","correct":true},{"id":407835,"option":"stream(100, ?)","correct":false},{"id":407836,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Scala code:</p>\n\n<pre class=\"prettyprint\"><code>trait Equal \n{\n   def isEqual(x: Any): Boolean\n   def isNotEqual(x: Any): Boolean = !isEqual(x)\n}\n\nclass Point(xc: Int, yc: Int) extends Equal \n{\n   var x: Int = xc\n   var y: Int = yc\n   def isEqual(obj: Any) = obj.isInstanceOf[Point] &amp;&amp; obj.asInstanceOf[Point].x == y\n}\n\nobject Demo \n{\n   def main(args: Array[String]) \n{\n            val p1 = new Point(2, 3)\n            val p2 = new Point(2, 4)\n            val p3 = new Point(3, 3)\n\n            println(p1.isNotEqual(p3))\n            println(p1.isNotEqual(p1))\n            println(p1.isNotEqual(p2))\n           }\n}\n</code></pre>","a":[{"id":407666,"option":"true\r\ntrue\r\ntrue\r\n","correct":false},{"id":407667,"option":"true\r\nfalse\r\nfalse","correct":false},{"id":407668,"option":"true\r\nfalse\r\ntrue","correct":false},{"id":407669,"option":"false\r\ntrue\r\ntrue","correct":true}]},{"q":"<p>In Scala, which of the following methods is automatically executed when the <strong>executor</strong> object is compared by using the <strong>match</strong> statement?</p>","a":[{"id":407658,"option":"apply","correct":false},{"id":407659,"option":"unapply","correct":true},{"id":407660,"option":"Both of these","correct":false},{"id":407661,"option":"None of these","correct":false}]},{"q":"<p>In Scala, which of the following statements about the operation <strong>xs mkString (pre, sep, post)</strong> is true:</p>\n\n<ol>\n\t<li>It takes three arguments.</li>\n\t<li>A prefix string <strong>pre</strong> should be displayed in front of all the elements on which this operation is performed.</li>\n\t<li>A separator string <strong>sep</strong> should be displayed between the successive elements on which this operation is performed.</li>\n</ol>","a":[{"id":407678,"option":"1 and 2","correct":false},{"id":407679,"option":"2 and 3","correct":true},{"id":407680,"option":"1 and 3","correct":false},{"id":407681,"option":"None of these","correct":false}]},{"q":"<p>In Scala, which of the following statements about the <strong>setter</strong> and the <strong>getter</strong> methods is correct?</p>","a":[{"id":407722,"option":"If the field is declared as private then the getter is protected and setter is private","correct":false},{"id":407723,"option":"If the user does not want any getter or setter, the field is declared as private","correct":true},{"id":407724,"option":"If the field is a val, only a setter is generated\r\n","correct":false},{"id":407725,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about Scala is false?</p>\n\n<p> </p>","a":[{"id":407706,"option":"A variable defined as def can only override another variable defined as def","correct":false},{"id":407707,"option":"A variable defined as val can only override another variable initialized as val or a parameterless variable defined as def","correct":false},{"id":407708,"option":"A variables defined as var can only override an abstract variable defined as var","correct":false},{"id":407709,"option":"None of these ","correct":true}]}]