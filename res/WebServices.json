[{"q":"<p>Tara is working on various components of the web services. She wants to understand the information exchange in decentralized and distributed environments. She also wants to describe how to interface with XML-based services. For this, she has implemented an XML-based protocol named <strong>Web Services Descriptive Language (WSDL)</strong>. Now, which of the following WSDL elements represents the concrete protocol and data formats for the operations and messages defined for a particular port type</p>","a":[{"id":1581791,"option":"Operation","correct":false},{"id":1581792,"option":"Port","correct":false},{"id":1581793,"option":"Service","correct":false},{"id":1581794,"option":"Binding","correct":true}]},{"q":"In Bootstrap 4, you are working on components. Which of the following utility classes is used to obtain alerts in the form of web links?","a":[{"id":1150751,"option":"alert-link","correct":true},{"id":1150752,"option":"Alert-onlink","correct":false},{"id":1150753,"option":"Alert-href","correct":false},{"id":1150754,"option":"None of these","correct":false}]},{"q":"In Bootstrap 4, you are working on the grid system. If you are required to construct the grid system for a device that has a small screen, then which of the following statements about the rules of this grid system are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. The rows are used to create the vertical groups of the columns.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. Content must be placed within the columns and the columns must be immediate children of the rows.<br>&nbsp;&nbsp;&nbsp;&nbsp;3. Columns must create the gutter width by using the padding technique.","a":[{"id":1150747,"option":"1 and 2","correct":false},{"id":1150748,"option":"2 and 3","correct":true},{"id":1150749,"option":"1 and 3","correct":false},{"id":1150750,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, you are working on flex utilities. Which of the following utilities is used on the flexbox containers to change the alignment of the flex items on the cross axis?","a":[{"id":1150711,"option":"align-content","correct":false},{"id":1150712,"option":"align-self","correct":false},{"id":1150713,"option":"align-items","correct":true},{"id":1150714,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, if you are working on content, then which of the following statements about the responsive flex classes are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. The .flex-sm-row-reverse class is used to display flex items vertically and right aligned on a small-sized screen.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. The .justify-content-xl-center class is used to display the flex items at the center of the flex container on an extra large-sized screen.<br>&nbsp;&nbsp;&nbsp;&nbsp;3. The .d-xs-inline-flex class is used to create an inline flex container for an extra small-sized screen.","a":[{"id":1150723,"option":"1 and 2","correct":false},{"id":1150724,"option":"2 and 3","correct":true},{"id":1150725,"option":"1 and 3","correct":false},{"id":1150726,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, you are working on content. Which of the following elements is used to specify content with a specific image?","a":[{"id":1150699,"option":"<img>","correct":false},{"id":1150700,"option":"<data>","correct":false},{"id":1150701,"option":"<figure>","correct":true},{"id":1150702,"option":"<collapse>","correct":false}]},{"q":"In Bootstrap 4, you are working on content. Which of the following precompiled files includes the content part in them?","a":[{"id":1150695,"option":"bootstrap.min.css","correct":true},{"id":1150696,"option":"bootstrap-grid.min.css","correct":false},{"id":1150697,"option":"bootstrap-reboot.min.css","correct":false},{"id":1150698,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, you are working on content. If you are required to display an inline code on your web page, then which of the following elements is used to perform this task?","a":[{"id":1150703,"option":"<code>","correct":true},{"id":1150704,"option":"<inline>","correct":false},{"id":1150705,"option":"<pre>","correct":false},{"id":1150706,"option":"<xml>","correct":false}]},{"q":"In Bootstrap 4, you are working on utilities. If you are required to include red color to the border of your input text box, then which of the following utility classes is used to perform this task?","a":[{"id":1150675,"option":".border-red","correct":false},{"id":1150676,"option":".border-danger","correct":true},{"id":1150677,"option":".border-warning","correct":false},{"id":1150678,"option":".border-abort","correct":false}]},{"q":"In Bootstrap 4, you are working on utilities. If you are required to place your button exactly at the center of your screen with respect to your marginal alignments, then which of the following classes is used to perform this task?","a":[{"id":1150671,"option":".mx-auto","correct":true},{"id":1150672,"option":".my-auto","correct":false},{"id":1150673,"option":".mx-my-auto","correct":false},{"id":1150674,"option":"None of these","correct":false}]},{"q":"In Bootstrap 4, you are working on the collapse component. Which of the following statements about the collapsable attributes are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. The data-toggle=\"collapse\" attribute is used to control the collapsable content.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. The data-target=\"#id\" attribute is used to connect the collapsable content by using the ID of the collapsable region.<br>&nbsp;&nbsp;&nbsp;&nbsp;3. The data-parent and data-child attributes are used to close all the collapsable elements under a specific parent when one collapsible element is displayed.","a":[{"id":1150663,"option":"1 and 2","correct":true},{"id":1150664,"option":"2 and 3","correct":false},{"id":1150665,"option":"1 and 3","correct":false},{"id":1150666,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, which of the following statements about badges are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. They are used to determine the type of information that is used for building any website.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. They are constructed by using the .badge class and the .badge-secondary contextual class.<br>&nbsp;&nbsp;&nbsp;&nbsp;3. They are implemented within the <span> elements in a Bootstrap script.","a":[{"id":1150647,"option":"1 and 2","correct":false},{"id":1150648,"option":"2 and 3","correct":true},{"id":1150649,"option":"1 and 3","correct":false},{"id":1150650,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, you are working on components. Which of the following components is used to display the hierarchy-based information for a specific website?","a":[{"id":1150643,"option":"Breadcrumb ","correct":true},{"id":1150644,"option":"Carousel ","correct":false},{"id":1150645,"option":"Collapse ","correct":false},{"id":1150646,"option":"Forms ","correct":false}]},{"q":"<p>What is the output of the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>String json = \"{\\\"name\\\": \\\"Bob\\\", \\\"id\\\": \\\"1124\\\"}\";\n\n......\nJsonObject jsonObject = new JsonParser().parse(json).getAsJsonObject();\nSystem.out.println(jsonObject.get(\"name\"));</code></pre>","a":[{"id":640283,"option":"Bob","correct":false},{"id":640284,"option":"Compilation error","correct":false},{"id":640285,"option":"\"Bob\"","correct":true},{"id":640286,"option":"Null","correct":false}]},{"q":"<p>In the following JSON code, which of these lines will throw an error:</p>\n\n<pre class=\"prettyprint\"><code>String file=....\nJSONObject json = new JSONObject();\n....\nSystem.out.println(json); \nFileWriter jsonFileWriter = new FileWriter(....);\n jsonFileWriter.write(json.toJSONString());\n jsonFileWriter.flush();\n jsonFileWriter.close();\n\n</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":640295,"option":"jsonFileWriter.write(json.JSONString())","correct":false},{"id":640296,"option":"jsonFileWriter.write(file);","correct":false},{"id":640297,"option":"No error","correct":true},{"id":640298,"option":"jsonFileWriter.flush(json)","correct":false}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{ \"type\": \"number\", \"multipleOf\": 1.0 }</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":640374,"option":"42","correct":false},{"id":640375,"option":"42.0","correct":false},{"id":640376,"option":"3.1415692","correct":true},{"id":640377,"option":"All are correct","correct":false}]},{"q":"<p>What are NaN, Infinity, and -Infinity serialized to in JSON?</p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":641203,"option":"Infinity","correct":false},{"id":641204,"option":"Undefined","correct":false},{"id":641205,"option":"NaN","correct":false},{"id":641206,"option":"Null","correct":true}]},{"q":"<p>Which of the following statements about the JSON method is true:</p>\n\n<ol>\n\t<li> It customizes the stringification behavior.</li>\n\t<li> It allows an object to determine its own JSON representation.</li>\n\t<li> It is internally called by JSON.stringify().</li>\n</ol>","a":[{"id":643685,"option":"1 and 2","correct":false},{"id":643686,"option":"1 and 3","correct":false},{"id":643687,"option":"All of these","correct":true},{"id":643688,"option":"None of these","correct":false}]},{"q":"<p>Which of these lines can cause an error in the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>.....\nJSONObject jsonObject = new JSONObject(.....);\n...\nJSONObject object = jsonObject.getJSONObject(.......); /**Line A**/\n...\nString attr1 = object.getString(....);    /**Line B**/\n...\nJSONObject obj = object.getJSONObject(....);\n...\nJSONArray sub = obj.JSONArray(...);  /**Line C**/\n.....</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":643520,"option":"Line A","correct":false},{"id":643521,"option":"Line B","correct":false},{"id":643522,"option":"Line C","correct":true},{"id":643523,"option":"No error","correct":false}]},{"q":"<p>Which of these statements serializes the car object into JSON structure:</p>\n\n<pre class=\"prettyprint\"><code>.....\nclass Car{\n}\n.......\n   Car car = new Car();\ncar.Brand = \"Hyundai\";\ncar.Name = “Verna”;\ncar.Color = “Red”;\n...\nString json =(____________);\n\n</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":643512,"option":"JsonConvert.SerializeObject<Car>()","correct":false},{"id":643513,"option":"JsonConvert.SerializeObject(car)","correct":true},{"id":643514,"option":"Json.parse.SERIALIZE(this)","correct":false},{"id":643515,"option":"None of these","correct":false}]},{"q":"<p>Which of the following benefits does JSON have over XML?</p>","a":[{"id":642524,"option":"JSON allows poor formatting","correct":false},{"id":642525,"option":"JSON can be written poorly and still be parsed","correct":false},{"id":642526,"option":"JSON does not need to be stored in a file to be sent remotely","correct":false},{"id":642527,"option":"JSON has less markup requirements and therefore is lighter than XML","correct":true}]},{"q":"<p>Which of the following is the MIME type of JSON?</p>","a":[{"id":642516,"option":"application/x-json","correct":false},{"id":642517,"option":"text/json","correct":false},{"id":642518,"option":"application/javascript","correct":false},{"id":642519,"option":"application/json","correct":true}]},{"q":"<p>Which of the following options best completes the following code to parse JSON in JQuery:</p>\n\n<pre class=\"prettyprint\"><code>var json = ‘{“name”: “John 99”, “Description “: “Learn and Achive\"}\n\nobj = (_____________);\n</code></pre>\n\n<p> </p>","a":[{"id":641211,"option":"$.JSONparser(json)","correct":false},{"id":641212,"option":"$.parse(json)","correct":false},{"id":641213,"option":"$.getJSON(json)","correct":false},{"id":641214,"option":"$.parseJSON(json)","correct":true}]},{"q":"<p>Which of the following strings serializes only the enumerable properties of an object?</p>","a":[{"id":641199,"option":"JSON.Parse()","correct":false},{"id":641200,"option":"JSON.Objectify()","correct":false},{"id":641201,"option":"JSON.Null()","correct":false},{"id":641202,"option":"JSON.Stringify()","correct":true}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"number\",\n\"minimum\": 0,\n\"exclusiveMaximum\": 100\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":641194,"option":"0","correct":false},{"id":641195,"option":"10","correct":false},{"id":641196,"option":"99","correct":false},{"id":641197,"option":"100","correct":true}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{ \"not\": { \"type\": \"string\" } }</code></pre>\n\n<p> </p>","a":[{"id":641190,"option":"42","correct":false},{"id":641191,"option":"{ \"key\": \"value\" }","correct":false},{"id":641192,"option":"\"I am a string\"","correct":true},{"id":641193,"option":"None of these","correct":false}]},{"q":"<p>Which of the following data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"object\",\n\"minProperties\": 2,\n\"maxProperties\": 3\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":641126,"option":"{ \"a\": 0, \"b\": 1 }","correct":false},{"id":641127,"option":"{ \"a\": 0, \"b\": 1, \"c\": 2 }","correct":false},{"id":641128,"option":"{ }","correct":true},{"id":641129,"option":"All of these","correct":false}]},{"q":"<p>Which of these statements will you use to complete the following JSON code to execute the URL:</p>\n\n<pre class=\"prettyprint\"><code>protected JSONObject doInBackground(String... args) {\n    \t\tJSONParser jParser = new JSONParser();\n              .......\n    String url=........\n    \t\tJSONObject json = (________);\n  \t\treturn json;\n    \t}</code></pre>\n\n<p> </p>","a":[{"id":641118,"option":"JSONParser.parser(url)","correct":false},{"id":641119,"option":"JSON.parse(url)","correct":false},{"id":641120,"option":"jParser.JSONFormat(url)","correct":false},{"id":641121,"option":"jParser.getJSONFromUrl(url)","correct":true}]},{"q":"<p>Which of the following functions will convert a JSON string into a JavaScript object?</p>","a":[{"id":640819,"option":"JSON.stringify()","correct":false},{"id":640820,"option":"JSON.exchange()","correct":false},{"id":640821,"option":"JSON.parse()","correct":true},{"id":640822,"option":"JSON.toString()","correct":false}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"object\",\n\"properties\": {\n\"number\": { \"type\": \"number\" },\n\"street_name\": { \"type\": \"string\" },\n\"street_type\": { \"type\": \"string\",\n\"enum\": [\"Street\", \"Avenue\", \"Boulevard\"]\n}\n}\n}</code></pre>\n\n<p> </p>","a":[{"id":640659,"option":"{ \"number\": 1600, \"street_name\": \"Pennsylvania\" }","correct":false},{"id":640660,"option":"{  }","correct":false},{"id":640661,"option":"{ \"number\": \"1600\", \"street_name\": \"Pennsylvania\", \"street_type\": \"Avenue\" }","correct":true},{"id":640662,"option":"{ \"number\": 1600, \"street_name\": \"Pennsylvania\", \"street_type\": \"Avenue\" }","correct":false}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"object\",\n\"patternProperties\": {\n\"^S_\": { \"type\": \"string\" },\n\"^I_\": { \"type\": \"integer\" }\n},\n\"additionalProperties\": false\n}</code></pre>\n\n<p> </p>","a":[{"id":640655,"option":"{ \"S_25\": \"This is a string\" }","correct":false},{"id":640656,"option":"{ \"I_0\": 42 }","correct":false},{"id":640657,"option":"{ \"S_0\": \"This is not a string\" }","correct":false},{"id":640658,"option":"{ \"I_42\": \"This is a string\" }","correct":true}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"array\",\n\"items\": [\n{\n\"type\": \"number\"\n},\n{\n\"type\": \"string\"\n},\n{\n\"type\": \"string\",\n\"enum\": [\"Street\", \"Avenue\", \"Boulevard\"]\n},\n{\n\"type\": \"string\",\n\"enum\": [\"NW\", \"NE\", \"SW\", \"SE\"]\n}\n]\n}</code></pre>\n\n<p> </p>","a":[{"id":640451,"option":"[1600, \"Pennsylvania\", \"Avenue\", \"NW\"]","correct":false},{"id":640452,"option":"[10, \"Downing\", \"Street\"]","correct":false},{"id":640453,"option":"[1600, \"Pennsylvania\", \"Avenue\", \"NW\", \"Washington\"]","correct":false},{"id":640454,"option":"[24, \"Sussex\", \"Drivi\"]","correct":true}]},{"q":"<p>What is the output of the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;...&lt;/title&gt;\n&lt;script language = \"javascript\" &gt;\n\nvar JSONObj = { \"name\" : \"JSON\", \"year\" : 2018 };\ndocument.write(\"&lt;br&gt;\");\ndocument.write(\"&lt;h3&gt;Website Name = \"+JSONObj.name+\"&lt;/h3&gt;\");\ndocument.write(\"&lt;h3&gt;Year = \"+JSONObj.year+\"&lt;/h3&gt;\");\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p> </p>","a":[{"id":640663,"option":"Run-time error","correct":false},{"id":640664,"option":"Compilation time error","correct":false},{"id":640665,"option":"Website Name = JSON","correct":false},{"id":640666,"option":"Website Name = JSON and Year = 2018","correct":true}]},{"q":"<p>Which of the following statements will convert a JSON array to comma-delimited text in the following code:</p>\n\n<pre class=\"prettyprint\"><code>....\nJSONArray ja = new JSONArray(\"[\\\"England\\\",\\\"USA\\\",\\\"India\\\"]\");\nString cdt = ....;\n....\n</code></pre>\n\n<p> </p>","a":[{"id":640675,"option":"JSONArray.parse(ja)","correct":false},{"id":640676,"option":"ja.toString()","correct":false},{"id":640677,"option":"CDL.rowToString(ja)","correct":true},{"id":640678,"option":"CDL.ToString(ja)","correct":false}]},{"q":"<p>Which of these formats cannot be used for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"string\",\n\"pattern\": \"^(\\\\([0-9]{3}\\\\))?[0-9]{3}-[0-9]{4}$\"\n}</code></pre>\n\n<p> </p>","a":[{"id":640370,"option":"\"555-1212\"","correct":false},{"id":640371,"option":"\"(888)555-1212\"","correct":false},{"id":640372,"option":"\"(888)555-1212 ext. 532\"","correct":true},{"id":640373,"option":"All are correct","correct":false}]},{"q":"In Bootstrap 4, you are working on the grid system. You have spanned 6 columns as a fixed-width layout in a small screen-sized device by using the provided class. If you are required to convert your layout to a full-width layout, then which of these statements in this scenario are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;<pre class=\"prettyprint\"><code><br>&nbsp;&nbsp;&nbsp;&nbsp;.col-sm-6<br>&nbsp;&nbsp;&nbsp;&nbsp;</code></pre>","a":[{"id":1150743,"option":"The .container class should be converted to the .container-full class.","correct":false},{"id":1150744,"option":"The .container class should be converted to the .container-fluid class.","correct":true},{"id":1150745,"option":"The .container class should be converted to the .container-full-width class.","correct":false},{"id":1150746,"option":"A fixed-width layout cannot be converted to the full-width layout once it is defined for a particular view.","correct":false}]},{"q":"<p>Which of the following methods will throw an IOException?</p>","a":[{"id":627782,"option":"addRequestProperty","correct":false},{"id":627783,"option":"getRequestProperties","correct":false},{"id":627784,"option":"setContentHandlerFactory","correct":false},{"id":627785,"option":"guessContentTypeFromStream","correct":true}]},{"q":"<p>What will be the return type of the following JAVA function:</p>\n\n<blockquote>\n<p>public _________ handleResponse(HttpResponse xxxxx) </p>\n</blockquote>","a":[{"id":626658,"option":"Int","correct":false},{"id":626659,"option":"Object","correct":false},{"id":626660,"option":"ResponseHandler","correct":false},{"id":626661,"option":"String","correct":true}]},{"q":"<p>In Java API, which of the following methods will throw <strong>ProtocolException</strong>?</p>","a":[{"id":628905,"option":"getResponseCode","correct":false},{"id":628906,"option":"getPermission","correct":false},{"id":628907,"option":"setRequestMethod","correct":true},{"id":628908,"option":"disconnect","correct":false}]},{"q":"<p>Which of these statements completes the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>data.txt:\n\n[{\n  \"name\": \"John\",\n  \"role\": \"Chief Justice\",\n  \"city\": \"New Delhi\"\n}\n]\n.....\n\nbyte[] mapData = Files.readAllBytes(Paths.get(\"data.txt\"));\nMap&lt;String,String&gt; map = new HashMap&lt;String, String&gt;();\n\nObjectMapper objectMapper = new ObjectMapper();\nmap = (_______);\n.........</code></pre>\n\n<p> </p>","a":[{"id":642540,"option":"objectMapper.getValue(mapData, HashMap.class)","correct":false},{"id":642541,"option":"objectMapper.readValue(mapData, new Reference<HashMap<String,String>>() {})","correct":false},{"id":642542,"option":"objectMapper.typeReference(mapData, HashMap.class)","correct":false},{"id":642543,"option":"objectMapper.readValue(mapData, HashMap.class)","correct":true}]},{"q":"<p>Which of these lines will cause an error in the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>\nString JSONContent = '{\"recordId\":\"APP3445AOPDDG148\"}';\n\nJSONParser parser =\n\nJSON.createParser(JSONContent);    /**Line A**/\n\nparser.nextToken();   /**Line B**/\n\nparser.nextValue();\n\nint record = parser.getIdValue();    /**Line C**/</code></pre>\n\n<p> </p>","a":[{"id":643306,"option":"Line A","correct":false},{"id":643307,"option":"Line B","correct":false},{"id":643308,"option":"Line C","correct":true},{"id":643309,"option":"No error","correct":false}]},{"q":"<p>Which of the following statements will convert the cookie string to a JSON object in this code:</p>\n\n<pre class=\"prettyprint\"><code>{\n......\n\nString cookie = \"username=John Boltan; expires=Thu, 18 nov 2017 12:00:00 UTC; path=/\";\nJSONObject cookieJO =......;\n}\n.....\n</code></pre>\n\n<p> </p>","a":[{"id":640671,"option":"JSON.Convert(cookie)","correct":false},{"id":640672,"option":"new JSONObject(cookie)","correct":false},{"id":640673,"option":"Cookie.toJSONObject(cookie)","correct":true},{"id":640674,"option":"Cookie.JSON(cookie)","correct":false}]},{"q":"In Bootstrap 4, you are working on the grid system. Determine the gutter width of a device that has an extra-large screen.","a":[{"id":1150739,"option":"30px","correct":true},{"id":1150740,"option":"90px","correct":false},{"id":1150741,"option":"270px","correct":false},{"id":1150742,"option":"1080px","correct":false}]},{"q":"In Bootstrap 4, you are working on utilities. If you are required to embed a video to your web page by using the Embed utility, then which of the following elements is used to perform this task?","a":[{"id":1150679,"option":"<a>","correct":false},{"id":1150680,"option":"<href>","correct":false},{"id":1150681,"option":"<iframe>","correct":true},{"id":1150682,"option":"<video>","correct":false}]},{"q":"<p>Which of these REST codes is represented by the following statement: </p>\n\n<blockquote>\n<p>A conflicting change has been detected during an attempt to modify a resource and any further information will be provided in the response body.</p>\n</blockquote>","a":[{"id":626870,"option":"401","correct":false},{"id":626871,"option":"201","correct":false},{"id":626872,"option":"409","correct":true},{"id":626873,"option":"204","correct":false}]},{"q":"<p>Which of these types of REST methods is explained by the following statement: </p>\n\n<pre class=\"prettyprint\"><code>Sending ..... request to URL :  https://selfsolve.apple.com/wcResults.do\nParameters : sn=C02G8416DRJM&amp;cn=&amp;locale=&amp;caller=&amp;num=12345\nResponse Code : 200\nApple product detail...</code></pre>\n\n<p> </p>","a":[{"id":627778,"option":"POST","correct":true},{"id":627779,"option":"PUT","correct":false},{"id":627780,"option":"OPTIONS","correct":false},{"id":627781,"option":"GET","correct":false}]},{"q":"<p>Which of these REST methods is appropriate for the following RESTful web services code:</p>\n\n<pre class=\"prettyprint\"><code>@Path(\"books\")\npublic class Example {\n \n    @...\n    @Produces(....)\n    @Path(\"/{id}\")\n    public Response allbooks(@PathParam(\"id\") String bookId){\n    return Response.status(200)\n               .entity(\"Book id is : \" + bookId).build();\n    }\n     \n}</code></pre>","a":[{"id":623743,"option":"Put","correct":false},{"id":623744,"option":"Get","correct":true},{"id":623745,"option":"Post","correct":false},{"id":623746,"option":"Patch","correct":false}]},{"q":"<p>In web services, which of these error messages is displayed if the response code greater than or equal to <strong>300</strong> and the response body is consumed?</p>","a":[{"id":626654,"option":"HttpException","correct":false},{"id":626655,"option":"Exception","correct":false},{"id":626656,"option":"HttpResponseException","correct":true},{"id":626657,"option":"Bad connection","correct":false}]},{"q":"<p>Which of these lines in the following REST API web service contains errors:</p>\n\n<pre class=\"prettyprint\"><code>\n@Path(\"/persons\")\npublic class per_service \n{\n\n@GET\n@Path(\"/get\")\npublic Response getper(HttpHeaders headers).../**Line B**/\n {\n\nString per = headers.getRequestHeader(\"person-agent\").get(0);\n\nreturn Response.status(200)\n.entity(\"getPerson as:\" + per).build(); .../**Line C**/\n\n }\n</code></pre>\n\n<p> </p>","a":[{"id":624886,"option":"Line B","correct":true},{"id":624887,"option":"Response.status(>200)","correct":false},{"id":624888,"option":"Line C","correct":false},{"id":624889,"option":"No error","correct":false}]},{"q":"<p>Which of these types of values is returned by the following JAVA function:</p>\n\n<pre class=\"prettyprint\"><code>getAsJsonPrimitive(String xxxx)</code></pre>\n\n<p> </p>","a":[{"id":627265,"option":"JsonElement","correct":false},{"id":627266,"option":"boolean","correct":false},{"id":627267,"option":"JsonPrimitive","correct":true},{"id":627268,"option":"JsonArray","correct":false}]},{"q":"<p>Which of these requests can be sent using a tool called fiddler when testing Rest web services?</p>","a":[{"id":624094,"option":"Get and Post","correct":false},{"id":624095,"option":"Patch and Get","correct":false},{"id":624096,"option":"Post and Put","correct":true},{"id":624097,"option":"Options and Get","correct":false}]},{"q":"<p>Which of these Rest methods is defined by the following web service code:</p>\n\n<pre class=\"prettyprint\"><code>@Path(\"books\")\npublic class Example {\n     \n  @_____\n  @Produces(MediaType.TEXT_PLAIN)\n  @Consumes(MediaType.TEXT_PLAIN)\n  @Path(\"/{id}\")\n  public Response getbooks(@PathParam(\"id\") String bookid,String bookname){\n    return Response.status(200)\n     .entity(\"Book id and name :\" + bookid +\" \"+  bookname).build();\n    }\n     \n}</code></pre>\n\n<p> </p>","a":[{"id":626550,"option":"POST","correct":false},{"id":626551,"option":"GET","correct":false},{"id":626552,"option":"DELETE","correct":false},{"id":626553,"option":"PUT","correct":true}]},{"q":"<p>Which of these classes or interfaces has the method <strong>sslContext(SSLContext xxx)</strong>?</p>\n\n<p> </p>","a":[{"id":621883,"option":"Client","correct":false},{"id":621884,"option":"javax.ws.rs.Consumes","correct":false},{"id":621885,"option":"ClientBuilder","correct":true},{"id":621886,"option":"Configurable<ClientBuilder>","correct":false}]},{"q":"<p>In web services, which of these methods is used to apply configuration on a device in the following statement:</p>\n\n<p>HTTP _________ /devices/{id.}/configurations </p>\n\n<p> </p>","a":[{"id":626750,"option":"POST","correct":false},{"id":626751,"option":"PATCH","correct":false},{"id":626752,"option":"DELETE","correct":false},{"id":626753,"option":"PUT","correct":true}]},{"q":"<p>Which of these strings completes the following web service code:</p>\n\n<pre class=\"prettyprint\"><code>URL obj = new URL(....);\n\t\tHttpsURLConnection con = (HttpsURLConnection) obj.openConnection();\n\n\t\tcon.setRequestMethod(\"POST\");\n   .....\n    ......\n           con.(______)(true);</code></pre>\n\n<p> </p>","a":[{"id":627774,"option":"setIfModifiedSince","correct":false},{"id":627775,"option":"getDoInput","correct":false},{"id":627776,"option":"guessContentTypeFromStream","correct":false},{"id":627777,"option":"setDoOutput","correct":true}]},{"q":"<p>Which of these options specifies the value of 'json' in the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>......\nvar days = {}; \ndays[‘Monday’] = true; days[‘Wednesday’] = true;\n days[‘Sunday’] = false;\n var json = JSON.stringify({x: days});\n.....\n....\n}</code></pre>\n\n<p> </p>","a":[{"id":642528,"option":"{“day”:{“Monday”:”true”,”Wednesday”:”true”,”Sunday”:”false”}}","correct":false},{"id":642529,"option":"{“x”:[“Monday”:true,”Wednesday”:true,”Sunday”:false]}","correct":false},{"id":642530,"option":"{“day”:{“Monday”:true,”Wednesday”:true,”Sunday”:false}}","correct":false},{"id":642531,"option":"{“x”:{“Monday”:true,”Wednesday”:true,”Sunday”:false}}","correct":true}]},{"q":"<p>Which of these is used to initialize the <strong>WebResource</strong> class object in the following RESTful API code:</p>\n\n<pre class=\"prettyprint\"><code>....\n private static final String BASE_URI = \"http://localhost:8083/Restful-web-service\";\n private static final String PATH_NAME = \"/PostExampleService/empInfo\";\nprivate static void post\n{\nClientConfig config = new DefaultClientConfig();\n        Client client = Client.create(config);\n        WebResource resource =(....);\n        WebResource nameResource = resource.path(\"rest\").path(PATH_NAME);\n......\n}\n</code></pre>\n\n<pre> </pre>","a":[{"id":622889,"option":"WebResource.resource(Base_URI)","correct":false},{"id":622890,"option":"client.resource(PATH_NAME)","correct":false},{"id":622891,"option":"client.resource(BASE_URI)","correct":true},{"id":622892,"option":"client.path(BASE_URI)","correct":false}]},{"q":"<p>Which of these REST methods is appropriate for the following RESTful code:</p>\n\n<pre class=\"prettyprint\"><code>http://localhost:8080/tttRest/vx1/participants/participant?name=new_participant</code></pre>\n\n<p> </p>","a":[{"id":627269,"option":"Post","correct":false},{"id":627270,"option":"Put","correct":false},{"id":627271,"option":"Delete","correct":true},{"id":627272,"option":"Get","correct":false}]},{"q":"<p>What is the output of the following RESTful web service code:</p>\n\n<pre class=\"prettyprint\"><code>....\n{\nString s=\"{\\\"name\\\":\\\"John\\\",\\\"salary\\\":600000.0,\\\"age\\\":25}\";  \n    Object obj=JSONValue.parse(s);  \n    JSONObject jsonObject = (JSONObject) obj;  \n  \n    String n = (String) jsonObject.get(\"name\");  \n    double s = (Double) jsonObject.get(\"salary\");  \n    long a = (Long) jsonObject.get(\"age\");  \n    System.out.println(n+\" \"+s+\" \"+a);  \n}\n....</code></pre>\n\n<p> </p>","a":[{"id":622893,"option":"John600000.025","correct":false},{"id":622894,"option":"John  600000.0  25","correct":true},{"id":622895,"option":"Runtime error","correct":false},{"id":622896,"option":"Syntax error","correct":false}]},{"q":"<p>What is the output of the following RESTful web service code assuming that it includes a working <strong>UserService</strong> class?</p>\n\n<pre class=\"prettyprint\"><code> ....\nclass Web{ \nprivate String REST_SERVICE_URL = \"http://localhost:8080/UserManagement/rest/UserService/users\";\n private static final String SUCCESS_RESULT=\"&lt;result&gt;success&lt;/result&gt;\";\n    .....\nprivate void adduser(){\n      Form form = new Form();\n      form.param(\"id\", \"2\");\n      form.param(\"name\", \"suresh\");\n      form.param(\"profession\", \"CFO\");\n      String callResult = client\n         .target(REST_SERVICE_URL)\n         .request(MediaType.APPLICATION_XML)\n         .post(Entity.entity(form,\n            MediaType.APPLICATION_FORM_URLENCODED_TYPE),\n            String.class);\n      String result = \"Pass\";\n      if(!SUCCESS_RESULT.equals(callResult)){\n         result = \"fail\";\n      }\n\n      System.out.println(\"Test case name: testAddUser, Result: \" + result );\n   }\n     .....\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":622813,"option":"Compilation error","correct":false},{"id":622814,"option":"Compiles correctly without any output","correct":false},{"id":622847,"option":"Compiles correctly with some output","correct":true},{"id":622848,"option":"None of these","correct":false}]},{"q":"In Bootstrap 4, you are working on flex items. If you are required to implement the .justify-content class to align the flex items, then which of the following classes are valid in this scenario:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. justify-content-top<br>&nbsp;&nbsp;&nbsp;&nbsp;2. justify-content-start<br>&nbsp;&nbsp;&nbsp;&nbsp;3. justify-content-bottom<br>&nbsp;&nbsp;&nbsp;&nbsp;4. justify-content-end","a":[{"id":1150719,"option":"1 and 2","correct":false},{"id":1150720,"option":"3 and 4","correct":false},{"id":1150721,"option":"1 and 3","correct":false},{"id":1150722,"option":"2 and 4","correct":true}]},{"q":"In Bootstrap 4, you are working on flex utilities. Which of the following utilities is used on the flexbox containers to change the alignment of the flex items on the main axis?","a":[{"id":1150707,"option":"align-content","correct":false},{"id":1150708,"option":"content-center","correct":false},{"id":1150709,"option":"justify-content","correct":true},{"id":1150710,"option":"None of these","correct":false}]},{"q":"In Bootstrap 4, you are working on utilities. If you are required to control the visibility of various elements of your website, then which of the following statements about the visibility classes are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. The .visible class is used to show the particular elements of a website.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. The .invisible class is used to hide the particular elements of a website.","a":[{"id":1150691,"option":"1","correct":false},{"id":1150692,"option":"2","correct":false},{"id":1150693,"option":"Both of these","correct":true},{"id":1150694,"option":"None of these","correct":false}]},{"q":"<p>Which of these methods completes line <strong>A </strong>in the following REST code:</p>\n\n<pre class=\"prettyprint\"><code>.......\nHttpClient httpclient = new DefaultHttpClient();\n                HttpPost httppost = new HttpPost(....);\n                 \n                try {\n                    List&lt;NameValuePair&gt; valuePairs = new ArrayList&lt;NameValuePair&gt;();\n                       valuePairs.add(.....);\n                       valuePairs.add(.....);\n\n                       httppost.__________(new UrlEncodedFormEntity(valuePairs));  /*Line A*/\n                       httpclient.execute(httppost);\n             ......\n}</code></pre>\n\n<p> </p>","a":[{"id":628909,"option":"setPath","correct":false},{"id":628910,"option":"setCollections","correct":false},{"id":628911,"option":"setParams","correct":false},{"id":628912,"option":"setEntity","correct":true}]},{"q":"<p>Which of these methods initializes the instance of the <strong>HttpEntity</strong> class in the following RESTful web service code:</p>\n\n<pre class=\"prettyprint\"><code>  String ip = \"http://10.0.2.2/webservice/select\";\n    ..... \n     .....\nprivate void webCall() {\n\t\t.......\n\t\ttry {\n\t\t\tHttpClient httpClient = new DefaultHttpClient();\n\t\t\tHttpPost httpPost = new HttpPost(ip);\n\t\t\tHttpResponse response = httpClient.execute(httpPost);\n\t\t\tHttpEntity entity = .......;\n\t\t\tInputStream is = entity.getContent();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tLog.e(\"Webservice 1\", e.toString());\n\t\t}</code></pre>\n\n<p> </p>","a":[{"id":623021,"option":"response.setEntity()","correct":false},{"id":623022,"option":"HttpEntity.entity()","correct":false},{"id":623023,"option":"response.getEntity()","correct":true},{"id":623024,"option":"HttpEntity.getEntity()","correct":false}]},{"q":"<p>Which of these methods is appropriate for initializing the <strong>JSONObject</strong> instance in the following RESTful web service code: </p>\n\n<pre class=\"prettyprint\"><code>JSONArray jarr = new JSONArray(....);\n                    for (int i = 0; i &lt; jarr.length(); i++) {\n                        JSONObject obj = (......);\n                       ....\n}</code></pre>\n\n<p> </p>","a":[{"id":627245,"option":"jArr.JSONObject()","correct":false},{"id":627246,"option":"jArr.getJSONObject(i)","correct":true},{"id":627247,"option":"jArr.JSONobject(i)","correct":false},{"id":627248,"option":"JSONArray.response(i)","correct":false}]},{"q":"<p>In Java API, which of these strings completes the following web service code:</p>\n\n<pre class=\"prettyprint\"><code>URL obj = new URL(....);\n\t\tHttpURLConnection con = (HttpURLConnection) obj.openConnection();\n\n\t\tcon.setRequestMethod(\"GET\");\n\n\t\tcon.__________(\"User-Agent\", USER_AGENT);\n</code></pre>\n\n<p> </p>","a":[{"id":627770,"option":"setContentHandlerFactory","correct":false},{"id":627771,"option":"getRequestProperty","correct":false},{"id":627772,"option":"setRequestProperty","correct":true},{"id":627773,"option":"setUseCaches","correct":false}]},{"q":"<p>Which of the following is a disadvantage of a layered system in REST?</p>","a":[{"id":59856,"option":"Added overhead and latency to the processing of data ","correct":true},{"id":59857,"option":"Portability of code is reduced","correct":false},{"id":59858,"option":"Hard in terms of maintenance ","correct":false},{"id":59859,"option":"Visibility of communication between components is reduced\r\n ","correct":false}]},{"q":"<p>What is the value of <em>obj</em> in the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>var obj = JSON.parse(‘{“fruit”: “Apple”}’,\n function(k, v) { if (v == “Apple”) \n\nreturn “Orange” \n\nelse return v; });</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":642520,"option":"{ “fruit” : “Apple”}","correct":false},{"id":642521,"option":"{“Orange”}","correct":false},{"id":642522,"option":"{“Apple”}","correct":false},{"id":642523,"option":"{ “fruit” : “Orange”}","correct":true}]},{"q":"<p>In REST API web services, which of these methods is used to remove configuration on a device in the following statement:</p>\n\n<blockquote>\n<p>HTTP ________ /devices/{id}/configurations/{id}   </p>\n</blockquote>","a":[{"id":626754,"option":"POST","correct":false},{"id":626755,"option":"DELETE","correct":true},{"id":626756,"option":"OPTIONS","correct":false},{"id":626757,"option":"PUT","correct":false}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"number\",\n\"minimum\": 0,\n\"maximum\": 100,\n\"exclusiveMaximum\": true\n}</code></pre>\n\n<p> </p>","a":[{"id":640443,"option":"0","correct":false},{"id":640444,"option":"10","correct":false},{"id":640445,"option":"99","correct":false},{"id":640446,"option":"100","correct":true}]},{"q":"<p>Which of these lines in the following JSON code throws an error:</p>\n\n<pre class=\"prettyprint\"><code>String file=......\nJSONParser parser = new JSONParser();\n try { \n.......\nSystem.out.println(\"Reading JSON file.... \");\n FileReader fileReader = new FileReader(....); \nJSONObject json = (JSONObject) parser.parse(); \n\nString title = (String) json.get(\"title\");\n String author = ......\n ......\n\n</code></pre>\n\n<p> </p>","a":[{"id":640291,"option":"JSONParser.create()","correct":false},{"id":640292,"option":"No error","correct":false},{"id":640293,"option":"parser.parse(file)","correct":false},{"id":640294,"option":"parser.parse(fileReader)","correct":true}]},{"q":"<p>Which of the following inferences can be made about the process from the following REST statement:</p>\n\n<pre class=\"prettyprint\"><code>GET /products?filters[status_id]=1&amp;filters[category_id]=23&amp;filter[features][id]=5</code></pre>\n\n<p> </p>","a":[{"id":628875,"option":"Sorting","correct":false},{"id":628876,"option":"Searching","correct":false},{"id":628877,"option":"Field Selection","correct":false},{"id":628878,"option":"Filtering","correct":true}]},{"q":"<p>In web services, what will the following Rest API statement return:</p>\n\n<pre class=\"prettyprint\"><code>GET https://www.googleapis.com/gmail/v1/users/me/messages?q=\"in:sent after:2014/01/01 before:2014/01/30\"</code></pre>\n\n<p> </p>","a":[{"id":621339,"option":"Error 409","correct":false},{"id":621340,"option":"Returns null","correct":false},{"id":621341,"option":"Messages sent between 1/1/2014 and 1/30/2014","correct":true},{"id":621342,"option":"None of these","correct":false}]},{"q":"<p>Which of the following inferences can be made about the process from the following REST statement:</p>\n\n<pre class=\"prettyprint\"><code>GET /products?page=3&amp;per_page=50</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":628901,"option":"Filtering","correct":false},{"id":628902,"option":"Searching","correct":false},{"id":628903,"option":"Field Selection","correct":false},{"id":628904,"option":"Pagination","correct":true}]},{"q":"<p>Which of these REST codes is represented by the following statement:</p>\n\n<blockquote>\n<p>The data format of the request body specified in the Content-Type header is not supported by the target resource.</p>\n</blockquote>","a":[{"id":626862,"option":"401","correct":false},{"id":626863,"option":"303","correct":false},{"id":626864,"option":"409","correct":false},{"id":626865,"option":"415","correct":true}]},{"q":"<p>Which of these statements about RESTful web services is true:</p>\n\n<ol>\n\t<li>REST allows a greater variety of data formats.</li>\n\t<li>REST is the protocol that is often used for major services such as Yahoo, eBay, Amazon, and Google.</li>\n\t<li>REST is generally faster and uses less bandwidth.</li>\n\t<li>REST provides superior performance, particularly through caching information that is not altered and not dynamic.</li>\n</ol>","a":[{"id":626762,"option":"2 and 4","correct":false},{"id":626763,"option":"2","correct":false},{"id":626764,"option":"2, 3, and 4","correct":false},{"id":626765,"option":"All of these","correct":true}]},{"q":"<p>Which of the following statements indicates the limitations of JSONP?</p>\n\n<ol>\n\t<li>As all the JSONP calls are made by including a &lt;script&gt; tag and the request made is confined only to GET method.</li>\n\t<li>It can also be used for POST or PUT request.</li>\n\t<li>It can never be used for read-only services and APIs.</li>\n</ol>\n\n<p> </p>","a":[{"id":643516,"option":"Only 1","correct":true},{"id":643517,"option":"2 and 3","correct":false},{"id":643518,"option":"1 and 3","correct":false},{"id":643519,"option":"All of these","correct":false}]},{"q":"<p>Which of the following statements initializes map to a JSON object in this code:</p>\n\n<pre class=\"prettyprint\"><code>....\nMap&lt;String, String&gt; map = new HashMap&lt;&gt;();\nmap.put(\"name\", \"Jammy\");\nmap.put(\"age\", \"30\");\nmap.put(\"city\", \"Florida\");\nJSONObject jo = .....;\n.....\n</code></pre>\n\n<p> </p>","a":[{"id":640679,"option":"new JSONObject().set(map)","correct":false},{"id":640680,"option":"MAP.parse(map)","correct":false},{"id":640681,"option":"JSONObject.put(map)","correct":false},{"id":640682,"option":"new JSONObject(map)","correct":true}]},{"q":"<p>Which of these is an ordered collection of values that resembles Java’s native vector<em> </em>implementation?</p>","a":[{"id":640797,"option":"JSONObject","correct":false},{"id":640798,"option":"JSONArray","correct":true},{"id":640799,"option":"JSONTokener","correct":false},{"id":640800,"option":"CDL","correct":false}]},{"q":"<p>Which of the following are the features of JSON programming:</p>\n\n<ol>\n\t<li>It is a lightweight standard for exchange of information.</li>\n\t<li>It is independent of the hosting server.</li>\n\t<li>Used in a mobile application.</li>\n\t<li>It is independent of language.</li>\n</ol>","a":[{"id":640815,"option":"1 and 4","correct":false},{"id":640816,"option":"2 and 4","correct":false},{"id":640817,"option":"1, 2, and 4","correct":false},{"id":640818,"option":"All of these","correct":true}]},{"q":"<p>Identify the <strong>client initialization</strong> statement in the following RESTful web service code:</p>\n\n<pre class=\"prettyprint\"><code>public class RESTfulJerseyClient {\n\tprivate static final String webServiceURI = \"http://localhost:8080/RESTful_Hello_World\";\n\tpublic static void main(String[] args) {\n\t\tClientConfig clientConfig = new ClientConfig();\n\t\tClient client = ......;\n\t\tURI serviceURI = UriBuilder.fromUri(webServiceURI).build();\n\t\tWebTarget webTarget = ....;\n     .......\n     .....\n}</code></pre>\n\n<p> </p>","a":[{"id":621803,"option":"ClientBuilder.newClient(clientConfig)","correct":true},{"id":621804,"option":"ClientBuilder.newBuilder(clientConfig)","correct":false},{"id":621805,"option":"Builder.build()","correct":false},{"id":621806,"option":"ClientBuilder.newClient()","correct":false}]},{"q":"<p>Which of these return statements is appropriate for the following RESTful web service code:</p>\n\n<pre class=\"prettyprint\"><code>\n@Path(\"/image\")\npublic class Iservice {\n\n\tprivate final String FILE_PATH = \"....\";\n\n\t@GET\n\t@Path(\"/get\")\n\t@Produces(...)\n\tpublic Response getfile() {\n\n\t\tFile file = new File(FILE_PATH);\n\n\t\tResponseBuilder response = Response.ok((Object) file);\n\t\tresponse.header(\"Content-Disposition\",\n\t\t\t\"attachment; filename=image_from_server.png\");\n\t\t\n     return (.....);\n\n\t}\n\n}</code></pre>\n\n<p> </p>","a":[{"id":623794,"option":"response.set()","correct":false},{"id":623795,"option":"Response.build()","correct":false},{"id":623796,"option":"Response.return()","correct":false},{"id":623797,"option":"response.build()","correct":true}]},{"q":"<p>What is the output of the following RESTful web service statement:</p>\n\n<pre class=\"prettyprint\"><code>GET /customers?sort=value1, value2</code></pre>\n\n<p><strong> </strong></p>","a":[{"id":621223,"option":"Retrieves parameters with the given values","correct":false},{"id":621224,"option":"Sorts parameters with a list of comma-separated fields","correct":true},{"id":621225,"option":"Executes a simple query","correct":false},{"id":621226,"option":"Sorts the given values","correct":false}]},{"q":"<p>In web services, which of the following statements is correct:</p>\n\n<ol>\n\t<li>GET requests can be bookmarked whereas PATCH requests cannot be bookmarked.</li>\n\t<li>GET requests can be bookmarked whereas POST requests cannot be bookmarked.</li>\n\t<li>POST requests can be bookmarked whereas DELETE requests cannot be bookmarked.</li>\n\t<li>GET requests can be bookmarked whereas PUT requests cannot be bookmarked.</li>\n</ol>","a":[{"id":627714,"option":"1","correct":false},{"id":627715,"option":"2","correct":true},{"id":627716,"option":"3","correct":false},{"id":627717,"option":"4","correct":false}]},{"q":"<p>Which of these return statements is available in the following RESTful web service code:</p>\n\n<pre class=\"prettyprint\"><code>public class RestTask extends AsyncTask&lt;HttpUriRequest, Void, String&gt;\n{\n    ....\n    public static final String HTTP_RESPONSE = \"httpResponse\";\n ......\n\n@Override\n    protected String doInBackground(HttpUriRequest... params)\n    {\n        try\n        {\n            HttpUriRequest request = params[0];\n            HttpResponse serverResponse = mClient.execute(request);\n            BasicResponseHandler handler = new BasicResponseHandler();\n            return ......;\n        }\n        catch (Exception e)\n        {\n            // TODO handle this properly\n            e.printStackTrace();\n            ...\n        }\n    }\n\n     ....\n    .......\n}</code></pre>\n\n<p> </p>","a":[{"id":621743,"option":"handleResponse(serverResponse)","correct":false},{"id":621744,"option":"BasicResponseHandler.response(serverResponse)","correct":false},{"id":621745,"option":"handler.response(serverResponse)","correct":false},{"id":621746,"option":"handler.handleResponse(serverResponse)","correct":true}]},{"q":"In Bootstrap 4, you are working on the grid system. If the width of a screen is 1100px, then which of the following devices contains the suitable grid system according to the screen width:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. Laptop<br>&nbsp;&nbsp;&nbsp;&nbsp;2. Desktop<br>&nbsp;&nbsp;&nbsp;&nbsp;3. Tablet","a":[{"id":1150731,"option":"1","correct":true},{"id":1150732,"option":"2","correct":false},{"id":1150733,"option":"3","correct":false},{"id":1150734,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, you are working on the grid system. Which of the following devices has the grid behavior included horizontally in all scenarios?","a":[{"id":1150735,"option":"Extra-small sized device","correct":true},{"id":1150736,"option":"Small-sized device","correct":false},{"id":1150737,"option":"Large-sized device","correct":false},{"id":1150738,"option":"Extra-large sized device","correct":false}]},{"q":"In Bootstrap 4, you are working on content. Which of the statements about the tabular classes are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. The .table-dark class is used to implement a black-colored background to the table.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. The .thead-light class is used to implement a white-colored background to the header of the table.<br>&nbsp;&nbsp;&nbsp;&nbsp;3. The .table-striped class is used to implement the stripes on the rows of the table.","a":[{"id":1150715,"option":"1 and 2","correct":false},{"id":1150716,"option":"2 and 3","correct":true},{"id":1150717,"option":"1 and 3","correct":false},{"id":1150718,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, you are working on utilities. Which of the following statements about breakpoints with respect to various screen widths are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. If the screen width is 578px, then the respective breakpoint is xs.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. If the screen width is 768px, then the respective breakpoint is md.<br>&nbsp;&nbsp;&nbsp;&nbsp;3. If the screen width is 998px, then the respective breakpoint is lg.<br>&nbsp;&nbsp;&nbsp;&nbsp;4. If the screen width is 1208px, then the respective breakpoint is xl.","a":[{"id":1150687,"option":"1, 2, and 3","correct":false},{"id":1150688,"option":"2, 3, and 4","correct":true},{"id":1150689,"option":"1, 3, and 4","correct":false},{"id":1150690,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, you are working on utilities. If you are required to print an image with a large round border radius, then which of the following classes is used to perform this task?","a":[{"id":1150667,"option":"rounded-lg","correct":true},{"id":1150668,"option":"rounded-large","correct":false},{"id":1150669,"option":"border-rounded-lg","correct":false},{"id":1150670,"option":"border-rounded-large","correct":false}]},{"q":"In Bootstrap 4, you are working on progress bar components. If you are required to build your own progress bar with the following properties, then which of these syntaxes are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. Progress region of height 32px<br>&nbsp;&nbsp;&nbsp;&nbsp;2. Progress region of width  24px<br>&nbsp;&nbsp;&nbsp;&nbsp;3. Progress bar of height 64px<br>&nbsp;&nbsp;&nbsp;&nbsp;4. Progress bar of width 56px<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;1. <pre class=\"prettyprint\"><code><div class=\"progress\" style:\"height:1rem; width: 0.75rem;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div class = \"progress-bar\" style:\"height:2rem; width:1.75rem;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;</div></code></pre><br>&nbsp;&nbsp;&nbsp;&nbsp;2. <pre class=\"prettyprint\"><code><div class=\"progress\" style:\"height:2rem; width: 1.5rem;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div class = \"progress-bar\" style:\"height:4rem; width:3.5rem;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;</div></code></pre><br>&nbsp;&nbsp;&nbsp;&nbsp;3. <pre class=\"prettyprint\"><code><div class=\"progress\" style:\"height:4rem; width: 3rem;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<div class = \"progress-bar\" style:\"height:8rem; width:7rem;\"><br>&nbsp;&nbsp;&nbsp;&nbsp;</div></code></pre>","a":[{"id":1150651,"option":"1","correct":false},{"id":1150652,"option":"2","correct":false},{"id":1150653,"option":"3","correct":true},{"id":1150654,"option":"None of these","correct":false}]},{"q":"In Bootstrap 4, you are working on the spinner component. Which of the following statements about the spinner classes are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. The spinner-border and text-warning classes are used to create an orange-colored spinner.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. The spinner-grow and text-info classes are used to create a light blue-colored growing spinner.<br>&nbsp;&nbsp;&nbsp;&nbsp;3. The spinner-grow and spinner-grow-sm classes are used to create a smaller spinner.","a":[{"id":1150659,"option":"1 and 2","correct":false},{"id":1150660,"option":"2 and 3","correct":true},{"id":1150661,"option":"1 and 3","correct":false},{"id":1150662,"option":"All of these","correct":false}]},{"q":"<p>Which of these lines contain errors in the following RESTful web services code:</p>\n\n<pre class=\"prettyprint\"><code>public class RestWebServicesDemo extends Activity {  \n\n\n    String URL = \"http://open.api.ebay.com/.....\";  \n    String result = \"\";  \n    String deviceId = \"*****\" ;  \n\n         \n\n    public void callservice(String endpoint){  \n\n  HttpClient httpclient = new DefaultHttpClient(); .../**Line A**/ \n\n        HttpGet request = new HttpGet(....);\n\n        request.addHeader(...);  \n\n  ResponseHandler&lt;String&gt; handler = new BasicResponseHandler(); .../**Line B**/ \n\n        try {  \n\n            result = httpclient.execute(request, handler);  \n\n        } catch (...) {  \n\n            e.printStackTrace();  \n\n        } catch (...) {  \n\n            e.printStackTrace();  \n\n        }  \n\n  httpclient.getConnectionManager().shutdown();  .../**Line C**/\n\n        Log.i(tag, result);  \n\n    }\n}</code></pre>","a":[{"id":623739,"option":"Line A","correct":false},{"id":623740,"option":"Line B","correct":false},{"id":623741,"option":"Line C","correct":false},{"id":623742,"option":"No errors","correct":true}]},{"q":"<p>Which of the following statements about the statelessness of RESTful web services is correct:</p>\n\n<ol>\n\t<li>These services simplify an application design.</li>\n\t<li>These services treat each method request independently.</li>\n\t<li>These services work seamlessly with HTTP protocols.</li>\n\t<li>HTTP is not a statelessness protocol.</li>\n</ol>","a":[{"id":613793,"option":"1, 2, and 3","correct":true},{"id":613794,"option":"1 and 4","correct":false},{"id":613795,"option":"1 and 3","correct":false},{"id":942232,"option":"All of these","correct":false}]},{"q":"<p>In JSON, which of the following statements will not throw an error?</p>","a":[{"id":642536,"option":"JSON.parse(”)","correct":false},{"id":642537,"option":"JSON.parse()","correct":false},{"id":642538,"option":"JSON.parse(null)","correct":true},{"id":642539,"option":"JSON.parse({})","correct":false}]},{"q":"<p>In JSON, which of these classes contains the following method:</p>\n\n<pre class=\"prettyprint\"><code>\"toJsonObject(String sourceHttpHeader)\"</code></pre>\n\n<p> </p>","a":[{"id":640683,"option":"JSONArray","correct":false},{"id":640684,"option":"CDL","correct":false},{"id":640685,"option":"HTTP","correct":true},{"id":640686,"option":"COOKIE","correct":false}]},{"q":"<p>What is the output of the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>public class User {\n    int id;\n    String name;\n}\n......\nString json = \"{\\\"name\\\": \\\"John\\\", \\\"id\\\": \\\"1134\\\"}\";\n....\nUser usr = new Gson().fromJson(json, User.class);\nSystem.out.println(usr.id+\" \"+usr.name);\n</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":640271,"option":"1134  null","correct":false},{"id":640272,"option":"null  null","correct":false},{"id":640273,"option":"Syntax error","correct":false},{"id":640274,"option":"1134  John","correct":true}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"array\",\n\"items\": {\n\"type\": \"number\"\n}\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":640447,"option":"[1, 2, 3, 4, 5]","correct":false},{"id":640448,"option":"[ ]","correct":false},{"id":640449,"option":"[1, 2, \"3\", 4, 5]","correct":true},{"id":640450,"option":"All are correct","correct":false}]},{"q":"<p>Which of these is represented by the following Rest API code:</p>\n\n<pre class=\"prettyprint\"><code>{\n      \"servlet-name\": \"cofaxTools\",\n      \"servlet-class\": \"org.cofax.cms.CofaxToolsServlet\",\n      \"init-param\": {\n        \"templatePath\": \"toolstemplates/\",\n        \"dataLog\": 1,\n        \"dataLogLocation\": \"/usr/local/tomcat/logs/dataLog.log\",\n        \"dataLogMaxSize\": \"\",\n        \"removePageCache\": \"/content/admin/remove?cache=pages&amp;id=\",\n        \"removeTemplateCache\": \"/content/admin/remove?cache=templates&amp;id=\",\n        \"fileTransferFolder\": \"/usr/local/tomcat/webapps/content/fileTransferFolder\",\n        \"adminGroupID\": 4,\n        \"betaServer\": true}}],\n  \"servlet-mapping\": {\n    \"cofaxCDS\": \"/\",\n    \"cofaxEmail\": \"/cofaxutil/aemail/*\",\n    \"cofaxAdmin\": \"/admin/*\",\n    \"fileServlet\": \"/static/*\",\n    \"cofaxTools\": \"/tools/*\"},\n...\n}</code></pre>\n\n<p> </p>","a":[{"id":622897,"option":"XML","correct":false},{"id":622898,"option":"HTML","correct":false},{"id":622899,"option":"JSON","correct":true},{"id":622900,"option":"UML","correct":false}]},{"q":"<p>Which of the following REST methods are almost identical to each other?</p>","a":[{"id":627710,"option":"GET and PUT","correct":false},{"id":627711,"option":"POST and DELETE","correct":false},{"id":627712,"option":"POST and HEAD","correct":false},{"id":627713,"option":"GET and HEAD","correct":true}]},{"q":"<p>What is the return statement in the following Java code:</p>\n\n<pre class=\"prettyprint\"><code>\n private String method(String url, String js) throws IOException\n {\n\n   RequestBody body = RequestBody.create(JSON,js);\n\n    Request request = new Request.Builder()\n\n                    .url(url)\n\n                    .post(...)\n\n                    .build();\n\n    Response response = client.newCall(request).execute();\n\n     return (......);\n\n  }\n</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":623853,"option":"Response.return()","correct":false},{"id":623854,"option":"response.tostring()","correct":false},{"id":623855,"option":"Response.get()","correct":false},{"id":623856,"option":"response.body().string()","correct":true}]},{"q":"<p>Which of these lines can cause an error in the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>        Connection conn=null;\n        conn=DriverManager.getConnection(....);\n        ResultSet rs=null;\n        .....\n         .........\n        JSONArray list = new JSONArray();\n        rs=stm1.executeQuery(...);\n        while(rs.next())\n        {\n            JSONObject obj=new JSONObject();    /**Line A**/\n            obj.put(\"parent\", rs.getString(.....));    /**Line B**/\n            obj.....;\n              ....\n             ......\n            list.add(obj);  /**Line C**/\n         }</code></pre>\n\n<p> </p>","a":[{"id":643578,"option":"Line A","correct":false},{"id":643579,"option":"Line B","correct":false},{"id":643580,"option":"Line C","correct":false},{"id":643581,"option":"No error","correct":true}]},{"q":"<p>Which of the following statements are the limitations of JSON:</p>\n\n<ol>\n\t<li>The complex data including several nested or hierarchical structures affects human readability.</li>\n\t<li>JSON does not support multimedia formats such as rich text or images.</li>\n\t<li>JSON is not suitable for handling very complex large data.</li>\n\t<li>It does not support comments.</li>\n</ol>\n\n<p> </p>","a":[{"id":643508,"option":"2 and 4","correct":false},{"id":643509,"option":"Only 4","correct":false},{"id":643510,"option":"1, 3, and 4","correct":false},{"id":643511,"option":"All of these","correct":true}]},{"q":"<p>Which of these options initializes the node object in the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>JsonFactory f = new MappingJsonFactory();\n    JsonParser jp = f.createJsonParser(....);\n  .........\nwhile (jp.nextToken() !=.....) {\n            \n   JsonNode node = (_____________);\n           \n            System.out.println(\"field1: \" + node.get(\"field1\").getValueAsText()); \n                System.out.println(\"field2: \" + node.get(\"field2\").getValueAsText());\n                 ........\n          }\n        } else {\n         .........\n          jp.skipChildren();\n        }</code></pre>\n\n<p> </p>","a":[{"id":643314,"option":"jp.getText()","correct":false},{"id":643315,"option":"jp.getBlobValue()","correct":false},{"id":643316,"option":"jp.readValueAsTree()","correct":true},{"id":643317,"option":"None of these","correct":false}]},{"q":"<p>Which of these statements completes the 'if' condition in the following JSON code:</p>\n\n<pre class=\"prettyprint\"><code>......\nJsonFactory f = new MappingJsonFactory();\n    JsonParser jp = f.createJsonParser(....);\n.......\n    \n   JsonToken current = jp.nextToken();\n    if (current !=(_____)) \n{\n      System.out.println(\"Error_error: root....: quiting.\");\n      return;\n    }</code></pre>\n\n<p> </p>","a":[{"id":643286,"option":"JsonToken.END_OBJECT","correct":false},{"id":643287,"option":"JsonParser.NEXT_OBJECT","correct":false},{"id":643288,"option":"JsonToken.START_OBJECT","correct":true},{"id":643289,"option":"None of these","correct":false}]},{"q":"<p>Which of these<em> </em>is an unordered collection of key and value pairs that resembles native map implementations of Java?</p>","a":[{"id":640687,"option":"JSONArray","correct":false},{"id":640688,"option":"JSONObject","correct":true},{"id":640689,"option":"JSONTokener","correct":false},{"id":640690,"option":"None of these","correct":false}]},{"q":"<p>In the following RESTful web service code, which of these will you use to replace Line B with so that the code processes the JSON object:</p>\n\n<pre class=\"prettyprint\"><code>\n   .....\n\nJsonReader jsonReader = new JsonReader(....);\n  ...\n\n/**Line B**/\n...\nwhile (jsonReader.hasNext()) \n{ \n    String key = jsonReader.nextName(); \n    if (key.equals(\"organization_url\")) \n{ \n       \n        String value = jsonReader.nextString();\n         \n      .....                 \n        break; \n    }\n else {\n\n        jsonReader.skipValue(); \n\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":621235,"option":"jsonReader.startObject()","correct":false},{"id":621236,"option":"jsonReader.beginArray()","correct":false},{"id":621237,"option":"jsonReader.peek()","correct":false},{"id":621238,"option":"jsonReader.beginObject()","correct":true}]},{"q":"<p>Identify the <strong>WebTarget</strong><strong> initialization</strong> statement in the following RESTful web service code:</p>\n\n<pre class=\"prettyprint\"><code>public class RESTfulJerseyClient {\n\tprivate static final String webServiceURI = \"http://localhost:8080/RESTful_Hello_World\";\n\tpublic static void main(String[] args) {\n\t\tClientConfig clientConfig = new ClientConfig();\n\t\tClient client = .......;\n\t\tURI serviceURI = UriBuilder.fromUri(webServiceURI).build();\n\t\tWebTarget webTarget = .....;\n        .....\n}\n....\n}</code></pre>\n\n<p>'''</p>\n\n<p> </p>","a":[{"id":621807,"option":"client.service()","correct":false},{"id":621808,"option":"client.target(serviceURI)","correct":true},{"id":621809,"option":"WebTarget.target(serviceURI)","correct":false},{"id":621810,"option":"Webtarget.startService(ServiceURI)","correct":false}]},{"q":"<p style=\"text-align: justify;\">Which of the following statements about RESTful web services is true:</p>\n\n<ol>\n\t<li>Facebook, Twitter, and Google expose their functionality in the form of RESTful web services.</li>\n\t<li>With the help of RESTful services web applications can reside in different environments, some on Windows and others on Linux.</li>\n\t<li>It makes sense for web services to be programmed on REST-based architecture to make the best use of cloud-based services.</li>\n</ol>","a":[{"id":621991,"option":"2 and 3","correct":false},{"id":621992,"option":"1 and 2","correct":false},{"id":621993,"option":"1 and 3","correct":false},{"id":621994,"option":"All of these","correct":true}]},{"q":"<p>In RESTful API and services, which of the following web service operations is nullipotent:</p>\n\n<ol>\n\t<li>Put</li>\n\t<li>Get</li>\n\t<li>Post</li>\n\t<li>Patch</li>\n</ol>","a":[{"id":621227,"option":"1","correct":false},{"id":621228,"option":"2","correct":true},{"id":621229,"option":"2 and 3","correct":false},{"id":621230,"option":"4","correct":false}]},{"q":"<p>Which of these REST methods is appropriate for the following RESTful response code:</p>\n\n<pre class=\"prettyprint\"><code>HTTP/1.1 200 OK\nContent-Type: application/xml\n \n&lt;configuration id=\"9977\"&gt;\n    &lt;link rel=\"...\" href=\"/configurations/9977\" /&gt;\n    &lt;content&gt;&lt;![CDATA[. updated content here .]]&gt;&lt;/content&gt;\n    &lt;status&gt;active&lt;/status&gt;\n    &lt;link  rel=\"....\" href=\".....\" /&gt;\n&lt;/configuration&gt;</code></pre>\n\n<p> </p>","a":[{"id":626758,"option":"Get","correct":false},{"id":626759,"option":"Post","correct":false},{"id":626760,"option":"Put","correct":true},{"id":626761,"option":"Delete","correct":false}]},{"q":"In Bootstrap 4, which of the following statements about utilities are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. The clearfix utility is used to clear the floated content in the container.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. The close icon is used to dismiss the content with respect to its session ID.","a":[{"id":1150683,"option":"1","correct":true},{"id":1150684,"option":"2","correct":false},{"id":1150685,"option":"Both of these","correct":false},{"id":1150686,"option":"None of these","correct":false}]},{"q":"<p>According to the definition, which of the following best describes the use of the <strong>GET</strong> method in a RESTful API?</p>","a":[{"id":59908,"option":"Listing of the URIs and other details of the collection's members","correct":true},{"id":59909,"option":"Replacement of the entire collection with another collection","correct":false},{"id":59910,"option":"Creation of a new entry in the collection","correct":false},{"id":59911,"option":"Deletion of the entire collection","correct":false}]},{"q":"<p>In RESTful web services, which of these methods will you use to retrieve all the books from the server?</p>","a":[{"id":626650,"option":"GET /books/123","correct":false},{"id":626651,"option":"PUT /books/123","correct":false},{"id":626652,"option":"GET /books","correct":true},{"id":626653,"option":"POST /books/","correct":false}]},{"q":"<p>Which of these REST methods will you use to update a resource partially in the following statement:</p>\n\n<blockquote>\n<p>_________ /tickets/12/messages/5</p>\n</blockquote>","a":[{"id":628871,"option":"POST","correct":false},{"id":628872,"option":"GET","correct":false},{"id":628873,"option":"PATCH","correct":true},{"id":628874,"option":"OPTIONS","correct":false}]},{"q":"<p>Which of the following structural parameters are used to build JSON?</p>","a":[{"id":642532,"option":"A collection of object/item pairs, and an ordered list of pairs, or array.","correct":false},{"id":642533,"option":"A collection of name/value objects, and an ordered list of objects, or array.","correct":false},{"id":642534,"option":"A collection of name/value pairs, and an ordered list of values, or array.","correct":true},{"id":642535,"option":"A collection of native-value pairs, and an ordered list of arrays, or values.","correct":false}]},{"q":"<p>Which of the following exceptions is thrown if an invalid string is parsed in JSON?</p>","a":[{"id":641215,"option":"ArrayOutOfBoundException","correct":false},{"id":641216,"option":"SyntaxError","correct":true},{"id":641217,"option":"Both SyntaxError and ArrayOutOfBoundException","correct":false},{"id":641218,"option":"None of these","correct":false}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>.....\n{\n\"type\": \"string\",\n\"enum\": [\"red\", \"amber\", \"green\", null,\"42\"]\n}</code></pre>\n\n<p> </p>","a":[{"id":641186,"option":"\"red\"","correct":false},{"id":641187,"option":"\"green\"","correct":false},{"id":641188,"option":"\"42\"","correct":false},{"id":641189,"option":"null","correct":true}]},{"q":"<p>Which of the following statements about arrays in JSON is true:</p>\n\n<ol>\n\t<li>List validation is defined as a sequence of arbitrary length where each item matches the same schema.</li>\n\t<li>Tuple validation is defined as a sequence of fixed length where each item may have a different schema.</li>\n</ol>","a":[{"id":641182,"option":"None of these","correct":false},{"id":641183,"option":"1","correct":false},{"id":641184,"option":"2","correct":false},{"id":641185,"option":"Both of these","correct":true}]},{"q":"<p>Which of the following data  cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{\n\"type\": \"object\",\n\"properties\": {\n\"name\": { \"type\": \"string\" },\n\"email\": { \"type\": \"string\" },\n\"address\": { \"type\": \"string\" },\n\"telephone\": { \"type\": \"string\" }\n},\n\"required\": [\"name\", \"email\"]\n}</code></pre>\n\n<p> </p>","a":[{"id":641122,"option":"{\r\n\"name\": \"William Shakespeare\",\r\n\"email\": \"bill@stratford-upon-avon.co.uk\"\r\n}","correct":false},{"id":641123,"option":"{\r\n\"name\": \"William Shakespeare\",\r\n\"email\": \"bill@stratford-upon-avon.co.uk\",\r\n\"address\": \r\n\"authorship\":\r\n}","correct":false},{"id":641124,"option":"{\r\n\"name\": \"William Shakespeare\",\r\n\"address\": \"Henley Street, England\",\r\n}","correct":true},{"id":641125,"option":"All of these","correct":false}]},{"q":"<p>Which of these data cannot be considered for the following JSON schema:</p>\n\n<pre class=\"prettyprint\"><code>{ \"type\": \"number\" }\n</code></pre>\n\n<p> </p>","a":[{"id":640378,"option":"-12","correct":false},{"id":640379,"option":"2.99792458e8","correct":false},{"id":640380,"option":"42","correct":false},{"id":640381,"option":"\"42\"","correct":true}]},{"q":"<p>Which of the following initializes the JSON object in the following code:</p>\n\n<pre class=\"prettyprint\"><code>\nString strJson=\"{ \\\"login\\\".......\n.......\nJSONObject  jsonRootObject = new JSONObject(strJson);  \n               \n   JSONArray jsonArray = jsonRootObject.optJSONArray(\"login\");                 \n                    for(int i=0; i &lt; jsonArray.length(); i++){  \n                        JSONObject jsonObject = .......;  \n}\n.....</code></pre>\n\n<p> </p>","a":[{"id":640801,"option":"JSONObject .getObject(i)","correct":false},{"id":640802,"option":"JSONArray.getArray(i)","correct":false},{"id":640803,"option":"jsonArray.getJSONObject(i)","correct":true},{"id":640804,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following RESTful web service code:</p>\n\n<pre class=\"prettyprint\"><code>@Path(\"/helloworld\")\npublic class HelloWorld {\n\t@GET\n\t@Produces(MediaType.TEXT_XML)\n\tpublic String Hello() {\n\t\treturn \"Hello World!\";\n\t}\n....\n}</code></pre>\n\n<p> </p>","a":[{"id":621987,"option":"TEXT_XML","correct":true},{"id":621988,"option":"TEXT_HTML","correct":false},{"id":621989,"option":"NULL","correct":false},{"id":621990,"option":"TEXT_PLAIN","correct":false}]},{"q":"<p>In the following RESTful web service code, which of these will you use to replace Line A with so that the code sends data to the server:</p>\n\n<pre class=\"prettyprint\"><code>   .....\n\n  AsyncTask.execute(new Runnable() {\n    @Override\n    public void run() {\n\n        URL Endpoint = new URL(\"https://httpbin.org/post\");\nHttpsURLConnection myConnection\n        = (HttpsURLConnection) Endpoint.(...)();\n \n            /**Line A**/\n         \n  ......\n    }\n});</code></pre>\n\n<p> </p>","a":[{"id":621231,"option":"myConnection.connect(\"POST\")","correct":false},{"id":621232,"option":"myConnection.getServerCertificates()","correct":false},{"id":621233,"option":"myConnection.setRequestMethod(\"POST\")","correct":true},{"id":621234,"option":"No statement required","correct":false}]},{"q":"<p>What is the output of the following RESTful web service statement:</p>\n\n<pre class=\"prettyprint\"><code>PUT/customers/5</code></pre>\n\n<p> </p>","a":[{"id":621219,"option":"Retrieves the customer API endpoint with the ID 5","correct":false},{"id":621220,"option":"Transmits the customer API endpoint with the ID 5","correct":false},{"id":621221,"option":"Updates the customer API endpoint with ID 5","correct":true},{"id":621222,"option":"None of these","correct":false}]},{"q":"<p>In Bootstrap 4, you are working on the grid system. Which of the following statements about the grid system classes are correct:<br>\n    1. The .col-xs class is used to determine the grid system of an extra-small sized device.<br>\n    2. The .col-xl class is used to determine the grid system of an extra-large sized device.<br>\n    3. The .col-sm class is used to determine the grid system of a small-sized device.<br>\n    4. The .col-md class is used to determine the grid system of a medium-sized device.</p>","a":[{"id":1150727,"option":"1, 2, and 3","correct":false},{"id":1150728,"option":"2, 3, and 4","correct":false},{"id":1150729,"option":"1, 3, and 4","correct":true},{"id":1150730,"option":"All of these","correct":false}]},{"q":"In Bootstrap 4, you are working on components. Which of the following statements about the  cards component are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;1. The .card-content class is used to maintain content of the card component.<br>&nbsp;&nbsp;&nbsp;&nbsp;2. The .card-header class is used to include the header to the content.<br>&nbsp;&nbsp;&nbsp;&nbsp;3. The .list-group-flush class is used to create the list of the content.","a":[{"id":1150655,"option":"1 and 2","correct":false},{"id":1150656,"option":"2 and 3","correct":true},{"id":1150657,"option":"1 and 3","correct":false},{"id":1150658,"option":"All of these","correct":false}]},{"q":"<p>In REST APIs, which of the following RESTful HTTP methods is used to fetch <strong>read-only</strong> queries?</p>","a":[{"id":60036,"option":"POST","correct":false},{"id":60037,"option":"GET","correct":true},{"id":60038,"option":"PUT","correct":false},{"id":60039,"option":"DELETE","correct":false}]}]