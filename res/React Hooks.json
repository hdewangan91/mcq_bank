[{"q":"<p>With the help of useEffect and useState hooks in your react app, you have written the code given alongside. But, there is a small chunk of code that is missing. In the code, the useEffect fetches a list of React articles from the API. Select the correct option from the codes given to fill in the code snippet.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nfunction DataDisp() {\n const [data, setData] = useState({ hits: [] });\n setData(result.data);\n }, []);\n\n return (\n &lt;ul&gt;\n {data.hits.map(item =&gt; (\n &lt;li key={item.objectID}&gt;\n &lt;a href={item.url}&gt;{item.title}&lt;/a&gt;\n &lt;/li&gt;\n ))}\n &lt;/ul&gt;\n );\n}\n\nexport default DataDisp;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<pre class=\"prettyprint\"><code>useEffect(async () =&gt; {\n const result = await axios(\n 'http://api.hackerearth.com/api/v1/search?query=react',\n );\n\n setData(result.data);\n }, []);</code></pre>\n\n<p><strong>2.</strong></p>\n\n<pre class=\"prettyprint\"><code>useEffect(await () =&gt; {\n const result = await axios(\n 'http://api.hackerearth.com/api/v1/search?query=react',\n );\n\n setData(result.data);\n }, []);</code></pre>\n\n<p><strong>3.</strong></p>\n\n<pre class=\"prettyprint\"><code>useEffect(async () =&gt; {\n const result = async axios(\n 'http://api.hackerearth.com/api/v1/search?query=react',\n );\n\n setData(result.data);\n }, []);</code></pre>\n\n<p><strong>4.</strong></p>\n\n<pre class=\"prettyprint\"><code>useState(async () =&gt; {\n const result = await axios(\n 'http://api.hackerearth.com/api/v1/search?query=react',\n );\n\n setData(result.data);\n }, []);</code></pre>\n\n<p>Â </p>","a":[{"id":1653169,"option":"1","correct":true},{"id":1653170,"option":"2","correct":false},{"id":1653171,"option":"3","correct":false},{"id":1653172,"option":"4","correct":false}]},{"q":"<p>You have written the code given alongside. What kind of approach have you used in the following code? What is the output of the code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>import React, { useState } from 'react';\n\nfunction Counter() {\n const [count, setCount] = useState(0);\n\n return (\n &lt;div&gt;\n &lt;p&gt;Current count is: {count} &lt;/p&gt;\n &lt;button onClick={() =&gt; setCount(count + 1)}&gt;+&lt;/button&gt;\n &lt;/div&gt;\n );\n}</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>Here we have used useState hook, wherein we have created the setCount variable which will be incremented each time we click the '+' button.</p>\n\n<p><strong>2.</strong></p>\n\n<p>Here we have used useState hook, wherein we have created a new state variable-setCount which will be incremented every time we click the '+' button.</p>\n\n<p><strong>3.</strong></p>\n\n<p>Here we have used useState hook, wherein we have created a new state variable-count which will be incremented every time we click the '+' button.</p>\n\n<p><strong>4.</strong></p>\n\n<p>This code will result in an error.</p>","a":[{"id":1653165,"option":"1","correct":false},{"id":1653166,"option":"2","correct":false},{"id":1653167,"option":"3","correct":true},{"id":1653168,"option":"4","correct":false}]},{"q":"<p>You are creating a React app. You have written the code given alongside for the same. But, your colleague, on seeing the code, does not understand why the '0' have been passed to useState hook. Explain to your colleague the use of useState(0) hook by choosing from the options given.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>...\nconst [count, setCounter] = useState(0);\nconst [moreStuff, setMoreStuff] = useState(...);\n...\n\nconst setCount = () =&gt; {\n setCounter(count + 1);\n setMoreStuff(...);\n ...\n};</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>useState is one of build-in react hooks. useState(0) returns a 0 where the first parameter count is the current state of the counter and setCounter is the method that will allow us to update the counter's state.</p>\n\n<p><strong>2.</strong></p>\n\n<p>useState is one of build-in react functions. useState(0) returns a tuple where the first parameter count is the current state of the counter and setCounter is the method that will allow us to update the counter's state.</p>\n\n<p><strong>3.</strong></p>\n\n<p>useState is one of build-in react hooks. useState(0) returns a tuple where the first parameter count is the current state of the counter and setCounter is the method that will allow us to update the counter's state.</p>\n\n<p><strong>4.</strong></p>\n\n<p>useState is one of user-made react hooks. useState(0) returns a tuple where the first parameter count is the current state of the counter and setCounter is the method that will allow us to update the counter's state.</p>","a":[{"id":1653161,"option":"1","correct":false},{"id":1653162,"option":"2","correct":false},{"id":1653163,"option":"3","correct":true},{"id":1653164,"option":"4","correct":false}]}]