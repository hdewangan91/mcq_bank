[{"q":"<p>You have successfully finished building an application. You now decide that you want your class in a form to be executed from any location on the system. You have the following options to choose from to create such an executable form:</p>\n\n<ol>\n\t<li><em>./gradlew bootRun</em></li>\n\t<li><em>./mvnw build package</em></li>\n\t<li><em>./gradlew build</em></li>\n\t<li><em>./mvnw spring-boot:run</em></li>\n</ol>\n\n<p>Choose one to accomplish the mention task?</p>","a":[{"id":1655665,"option":"1","correct":false},{"id":1655666,"option":"2","correct":false},{"id":1655667,"option":"3","correct":true},{"id":1655668,"option":"4","correct":false}]},{"q":"<p>Suppose you are working on Spring data applications.<strong> </strong>In “Mydb” database, there are two tables. Let it be X and Y. In X, there are <em>4</em> columns i.e.;<strong> </strong>xid, xname, date, place. In<strong> </strong>Y, there are <em>5</em> columns i.e.; yid, name, date, place, xid. Here, xid and yid are primary keys and xid in Y is the foreign key of xid in X. So, for each xid in X, there can be any number of rows in Y. Based on this understanding, answer the following questions.</p>\n\n<ol>\n\t<li>Does the xid in Y table allow only unique values?</li>\n\t<li>Does the xid in X table allow null values?</li>\n</ol>","a":[{"id":1655649,"option":"1.False \r\n2.True","correct":false},{"id":1655650,"option":"1.False \r\n2.False","correct":false},{"id":1655651,"option":"1.True \r\n2.False","correct":true},{"id":1655652,"option":"1.True \r\n2.True","correct":false}]},{"q":"<p>Suppose you are new to Spring data applications. You want to start it with basics. First, you started understanding <em>JPQL methods</em> and how to write queries. Based on the understanding, answer the methods whose functions are mentioned below and tell if the statements are true or false.</p>\n\n<ol>\n\t<li><em>The method that helps to execute JPQL queries with the name. </em></li>\n\t<li><em>The method that helps to perform update or delete operations. </em></li>\n\t<li><em>JPQL is a platform-dependent language</em></li>\n</ol>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1655645,"option":"1.createQuery() \r\n2.executeQuery() \r\n3.True","correct":false},{"id":1655646,"option":"1.createNamedQuery()\r\n2. executeUpdate() \r\n3.True","correct":false},{"id":1655647,"option":"1.createNamedQuery() \r\n2.executeQuery() \r\n3.False","correct":false},{"id":1655648,"option":"1.createNamedQuery() \r\n2.executeUpdate()\r\n3. False","correct":true}]},{"q":"<p>You were given a task to work on JPQL and provided a relational database. You have to work on<strong> </strong><em>“Student” table</em> which has <em>4</em> columns. The names of columns are<em><strong> studid, name, branch, address.</strong></em> From the above info, answer the below questions by picking up the correct answer.</p>\n\n<p><em>(i). Write a JPQL query using query annotation to get the names of all the students whose studid is in between 20 to 40 from the table “Student”. </em></p>\n\n<p><em>(ii). Which method is used in spring boot application to run this query?</em></p>\n\n<p><em>Select one of the following options:</em></p>\n\n<p><em>1. (i) SELECT name FROM Student where studid BETWEEN 20 and 40 </em></p>\n\n<p><em>    (ii) createQuery()</em></p>\n\n<p><em>2. (i) @Query(\"SELECT name FROM Student where studid BETWEEN 20 and 40”) </em></p>\n\n<p><em>    (ii) createQuery()</em></p>\n\n<p><em>3. (i) @Query(\"SELECT name FROM Student where studid BETWEEN 20 and 40”)</em></p>\n\n<p><em>    (ii) Query()</em></p>\n\n<p><em>4. (i) SELECT name FROM Student where studid BETWEEN 20 and 40 </em></p>\n\n<p><em>    (ii) Query()</em></p>","a":[{"id":1655641,"option":"1","correct":false},{"id":1655642,"option":"2","correct":true},{"id":1655643,"option":"3","correct":false},{"id":1655644,"option":"4","correct":false}]},{"q":"<p>Suppose you are working on spring data applications. You were asked to work on getting data from the storage. For this, you need to use <em>JPQL</em> (Java Persistence Query Language). There is a table called<strong> </strong><em>“Project”</em>. Columns available in that table are<em><strong> projectname, projectno, duration</strong></em>. From the above info, your task is to write a query to get the <em>project name</em> of all the projects from the table “Project”. Choose the correct query from the below options.</p>\n\n<p><em>1. @Query(\"SELECT projectname FROM Project”)</em></p>\n\n<p><em>2. @Query(\"SELECT projectno FROM Project”)</em></p>\n\n<p><em>3. @Query(\"SELECT duration FROM Project”)</em></p>\n\n<p><em>4. @Query(\"SELECT project FROM Project”)</em></p>","a":[{"id":1655637,"option":"1","correct":true},{"id":1655638,"option":"2","correct":false},{"id":1655639,"option":"3","correct":false},{"id":1655640,"option":"4","correct":false}]},{"q":"<p>You are working on a student portal using Spring Boot, and you have a SQL database named <em><strong>student_data</strong> </em> that contains information about the students. In order to initialize the <strong><em>student_data</em></strong> database so that it can be used with the web application, you are using Spring Data JPA and have created a repository file named <strong><em>StudentRepository</em></strong> to access the data. Now if you have imported the <em><strong>spring.jpa.hibernate.ddl-auto </strong></em>dependency then which of the following statements is correct?<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>Possible property values of <em><strong>spring.jpa.hibernate.ddl-auto</strong> </em>dependency can be none, validate, update, and create-drop.<br>\n\t </li>\n\t<li>Using the following code in the <strong><em>StudentRepository</em></strong> file we can use the generic CRUD methods-\n\t<pre class=\"prettyprint\"><code>public interface StudentRepository extends JpaRepository&lt; &gt; { … }</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Using the following code in the <strong><em>StudentRepository</em></strong> file we can use the generic CRUD methods-</p>\n\n\t<pre class=\"prettyprint\"><code>public class StudentRepository extends JpaRepository&lt; &gt; { … }</code></pre>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1558238,"option":"1 and 3","correct":false},{"id":1558239,"option":"1 and 2","correct":true},{"id":1558240,"option":"only 1","correct":false},{"id":1558241,"option":"All of these","correct":false}]},{"q":"<p>In Spring Boot, you are working on Spring Data JPA. Now, if you are required to create JPA repositories then which of the following statements is correct?<br>\n<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The Spring Data JPA repositories support can be activated using an annotation through JavaConfig<br>\n\t </li>\n\t<li>Spring Data JPA repositories can be configured using an XML namespace<br>\n\t </li>\n\t<li>The <em>entity-manager-factory-ref </em>JPA-specific attribute is usually used if multiple <strong>EntityManagerFactory</strong> beans are used within the application</li>\n</ol>","a":[{"id":1557872,"option":"1 and 2","correct":false},{"id":1557873,"option":"2 and 3","correct":false},{"id":1557874,"option":"1 and 3","correct":false},{"id":1557875,"option":"All of these","correct":true}]},{"q":"<p>In Java, you are working on Java Persistence API. Now if you have used the following method of the <strong>EntityManager</strong> interface then which of the following statements is correct?<br>\n<br>\n<strong>Method:</strong></p>\n\n<pre class=\"prettyprint\"><code>void persist(Object entity)</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>The given method is used to merge the state of an entity into the current persistence context<br>\n\t.</li>\n\t<li>The given method throws an exception if the entity already exists.<br>\n\t </li>\n\t<li>The given method throws an exception if there is no transaction when invoked on a container-managed entity manager that is of type PersistenceContextType.TRANSACTION</li>\n</ol>","a":[{"id":666731,"option":"1 and 2","correct":false},{"id":666732,"option":"2 and 3","correct":true},{"id":666733,"option":"1 and 3","correct":false},{"id":666734,"option":"All of these","correct":false}]}]