[{"q":"<p>Ben is working on SQL. He has been assigned with the task where he is provided with data of class and sections behave as rows in the table, he needs to find the maximum difference between the number of boys and the number of girls for a particular section from the table. Then which of the following query will be correct for the above-given scenario in the CLASS table?</p>\n\n<p><strong>Input format</strong></p>\n\n<p>The&nbsp;<em>CLASS</em>&nbsp;table is described as follows:</p>\n\n<table border=\"1\" style=\"width: 299px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 154px;\"><strong>FIELD</strong></td>\n\t\t\t<td style=\"width: 130px;\"><strong>TYPE</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 154px;\">CLASS_SECTION</td>\n\t\t\t<td style=\"width: 130px;\">VARCHAR</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 154px;\">NO_OF_BOYS</td>\n\t\t\t<td style=\"width: 130px;\">NUMBER</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 154px;\">NO_OF_GIRLS</td>\n\t\t\t<td style=\"width: 130px;\">NUMBER</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 154px;\">TOTAL_STUDENTS</td>\n\t\t\t<td style=\"width: 130px;\">\n\t\t\t<p>NUMBER</p>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT MAX(NO_OF_BOYS) - MIN(NO_OF_GIRLS) AS DIFF \nFROM CLASS;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT MAX(NO_OF_BOYS - NO_OF_GIRLS) AS DIFF \nFROM CLASS;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT MAX(AVG(NO_OF_BOYS) - AVG(NO_OF_GIRLS)) AS DIFF \nFROM CLASS;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT MAX(AVG(NO_OF_BOYS)) - MIN(AVG(NO_OF_GIRLS)) AS DIFF \nFROM CLASS;</code></pre>","a":[{"id":1705801,"option":"1","correct":false},{"id":1705802,"option":"2","correct":true},{"id":1705803,"option":"3","correct":false},{"id":1705804,"option":"4","correct":false}]},{"q":"<p>Write a query to print the employee names&nbsp;from the EMPLOYEE table having an even ID number and that ID number should be greater than or equal to 1 and less than or equal to 10. Duplicates need to be excluded.<br>\nThe EMPLOYEE<strong>&nbsp;</strong>table is as follows:</p>\n\n<table border=\"1\" style=\"width: 312px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 144px;\"><strong>FIELD</strong></td>\n\t\t\t<td style=\"width: 153px;\"><strong>TYPE</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 144px;\">ID</td>\n\t\t\t<td style=\"width: 153px;\">NUMBER</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 144px;\">NAME</td>\n\t\t\t<td style=\"width: 153px;\">VARCHAR</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 144px;\">DESIGNATION</td>\n\t\t\t<td style=\"width: 153px;\">VARCHAR</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT DISTINCT(NAME) FROM EMPLOYEE WHERE (ID%2)=0 AND (ID BETWEEN 1 AND 10);</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT NAME FROM EMPLOYEE WHERE (ID%2)=0 AND ID&gt;1 AND ID&lt;10;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT DISTINCT(NAME) FROM EMPLOYEE WHERE (ID%2)=0 AND (ID BETWEEN 0 AND 11);</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT NAME FROM EMPLOYEE WHERE (ID%2)=0 AND (ID BETWEEN 0 AND 11);</code></pre>","a":[{"id":1701336,"option":"1","correct":true},{"id":1701337,"option":"2","correct":false},{"id":1701338,"option":"3","correct":false},{"id":1701339,"option":"4","correct":false}]},{"q":"<p>Consider the tables given alongside. Write a query to get a list of bookreviewer names, book title and stars in an order where bookreviewer names come first, the book title second, and lastly the number of stars assigned to the book.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE bookreviewer(\n rev_id int,\n rev_name varchar(30),\n PRIMARY KEY(rev_id)\n );\n\nCREATE TABLE books(\n book_id int,\n book_title varchar(30),\n year_published int,\n book_lang varchar(30),\n PRIMARY KEY(book_id)\n );\n\nCREATE TABLE review(\n book_id int,\n rev_id int,\n stars float,\n reviewcount int,\n FOREIGN KEY(rev_id) REFERENCES bookreviewer(rev_id),\n FOREIGN KEY(book_id) REFERENCES books(book_id)\n );</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT rev_name, book_title, stars\nFROM books\nINNER JOIN review ON books.book_id = review.book_id\nINNER JOIN bookreviewer ON bookreviewer.rev_id = review.rev_id\nWHERE rev_name IS NOT NULL\nORDER BY rev_name, book_title, stars;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT rev_name, book_title, stars\nFROM books \nNATURAL JOIN review \nNATURAL JOIN bookreviewer\nWHERE rev_name IS NOT NULL\nORDER BY rev_name, book_title, stars;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT rev_name, book_title, stars\nFROM books, review, bookreviewer\nWHERE books.book_id = review.book_id \nAND bookreviewer.rev_id = review.rev_id AND rev_name IS NOT NULL\nORDER BY rev_name, book_title, stars;</code></pre>\n\t</li>\n\t<li>\n\t<p>All of 1, 2 and 3</p>\n\t</li>\n</ol>","a":[{"id":1619041,"option":"1","correct":false},{"id":1619042,"option":"2","correct":false},{"id":1619043,"option":"3","correct":false},{"id":1619044,"option":"4","correct":true}]},{"q":"<p>Write a query to output&nbsp;the list of employee&nbsp;names from <em>EMPLOYEE</em><strong>&nbsp;</strong>that do not start with vowels. Your result cannot contain duplicates.</p>\n\n<p>The <em>EMPLOYEE</em><strong> </strong>table is described as follows:</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>FIELD</strong></td>\n\t\t\t<td><strong>TYPE</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>ID</td>\n\t\t\t<td>NUMBER</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>NAME</td>\n\t\t\t<td>VARCHAR</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>DESIGNATION</td>\n\t\t\t<td>VARCHAR</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT DISTINCT(NAME) FROM EMPLOYEE\nWHERE LEFT(NAME,1) NOT IN ('A','E','I','O','U');</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT NAME FROM EMPLOYEE WHERE\nLEFT(NAME,1) NOT IN ('A','E','I','O','U');</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT DISTINCT(NAME) FROM EMPLOYEE\nWHERE RIGHT(NAME,1) NOT IN ('A','E','I','O','U');</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT DISTINCT(NAME) FROM EMPLOYEE\nWHERE RIGHT(NAME,1) NOT IN ('A','E','I','O');</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1701356,"option":"1","correct":true},{"id":1701357,"option":"2","correct":false},{"id":1701358,"option":"3","correct":false},{"id":1701359,"option":"4","correct":false}]},{"q":"<p>Bob is working on Table <em>Employee</em> in SQL. It contains the Salary of the employee and He wants to increase the salary of employee whose salary is over <em>20,000</em> by <em>3% </em>and all others by <em>5%</em>. Then which of the following query in this scenario are correct:</p>\n\n<p><strong>Table: Employee</strong></p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>Name</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>ID</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Salary</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">25000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Lisa</td>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">30000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">John</td>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">20000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t\t<td style=\"text-align: center;\">5</td>\n\t\t\t<td style=\"text-align: center;\">18000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>UPDATE Employee\n   SET Salary = Salary * 0.03\n   WHERE Salary &gt; 20000;\nUPDATE Employee\n   SET Salary  = Salary * 0.05\n   WHERE Salary &lt;= 20000;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>UPDATE Employee\n   SET Salary = Salary * 1.03\n   WHERE Salary &gt; 20000;\nUPDATE Employee\n   SET Salary  = Salary * 1.05\n   WHERE Salary &lt;= 20000;</code></pre>\n\t</li>\n</ol>","a":[{"id":1655401,"option":"1","correct":false},{"id":1655402,"option":"2","correct":true},{"id":1655403,"option":"All of the above","correct":false},{"id":1655404,"option":"None of these","correct":false}]},{"q":"<p>Write a query to print all the columns from the Employee table having location_id as 1810190.</p>\n\n<p>The <em>EMPLOYEE </em>table is described below:</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 208px;\"><strong>FIELD</strong></td>\n\t\t\t<td style=\"width: 277px;\"><strong>TYPE</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 208px;\">ID</td>\n\t\t\t<td style=\"width: 277px;\">NUMBER</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 208px;\">NAME</td>\n\t\t\t<td style=\"width: 277px;\">VARCHAR(17)</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 208px;\">LOCATION_ID</td>\n\t\t\t<td style=\"width: 277px;\">NUMBER</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 208px;\">DESIGNATION</td>\n\t\t\t<td style=\"width: 277px;\">VARCHAR</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 208px;\">TIME</td>\n\t\t\t<td style=\"width: 277px;\">NUMBER</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM EMPLOYEE WHERE LOCATION_ID = 1810190;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT LOCATION_ID FROM EMPLOYEE WHERE LOCATION_ID=1810190;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM EMPLOYEE WHERE LOCATION_ID = \"1810190\";</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT ALL FROM EMPLOYEE WHERE LOCATION_ID = 1810190;</code></pre>","a":[{"id":1701320,"option":"1","correct":true},{"id":1701321,"option":"2","correct":false},{"id":1701322,"option":"3","correct":false},{"id":1701323,"option":"4","correct":false}]},{"q":"<p>Which of the following is not a DDL command?</p>\n\n<ol>\n\t<li>UPDATE</li>\n\t<li>TRUNCATE</li>\n\t<li>ALTER</li>\n\t<li>ALL OF THE ABOVE</li>\n</ol>","a":[{"id":1709344,"option":"1","correct":true},{"id":1709345,"option":"2","correct":false},{"id":1709346,"option":"3","correct":false},{"id":1709347,"option":"4","correct":false}]},{"q":"<p>What is the output of the given SQL statement?</p>\n\n<pre class=\"prettyprint\"><code>SELECT SUBSTR('hackerearth', INSTR('123321324','4', 3, 1), 3) FROM HACK_TABLE;</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>31</li>\n\t<li>rth</li>\n\t<li>earth</li>\n\t<li>hacker</li>\n</ol>","a":[{"id":1709488,"option":"1","correct":false},{"id":1709489,"option":"2","correct":true},{"id":1709490,"option":"3","correct":false},{"id":1709491,"option":"4","correct":false}]},{"q":"<p>Table hacker_employee has 10 records. It has a non-NULL SALARY column which is also unique. Hence, what will the given SQL statement return?</p>\n\n<pre class=\"prettyprint\"><code>SELECT COUNT(*) FROM Hacker_Employee WHERE SALARY &gt; ANY (SELECT SALARY FROM Hacker_Employee);</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1709496,"option":"10","correct":false},{"id":1709497,"option":"8","correct":false},{"id":1709498,"option":"3","correct":false},{"id":1709499,"option":"9","correct":true}]},{"q":"<p>While working with SQL you want to output your result in a certain order, but you often forget to mention in which order. So by default, in which order does MySQL sort your output</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>ASCENDING</li>\n\t<li>DESCENDING</li>\n\t<li>NO SORTING</li>\n\t<li>NONE OF THE ABOVE</li>\n</ol>","a":[{"id":1709504,"option":"1","correct":true},{"id":1709505,"option":"2","correct":false},{"id":1709506,"option":"3","correct":false},{"id":1709507,"option":"4","correct":false}]},{"q":"<p>You are given a table <em>HACK_EMP</em>, and you wish to add one more column to it. Which among the given <em>SQL</em> query can be used to add column SALARY to the HACK_EMP table?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>ALTER TABLE HACK_EMP ADD SALARY</li>\n\t<li>ALTER TABLE HACK_EMP ADD COLUMN SALARY</li>\n\t<li>MODIFY TABLE HACK_EMP ADD SALARY</li>\n\t<li>MODIFY TABLE HACK_EMP ADD COLUMN SALARY</li>\n</ol>","a":[{"id":1709512,"option":"1","correct":true},{"id":1709513,"option":"2","correct":false},{"id":1709514,"option":"3","correct":false},{"id":1709515,"option":"4","correct":false}]},{"q":"<p>Bob is given a project on SQL and he has to make use of TCL commands. Unfortunately, he is unable to distinguish between various commands of SQL. Can you help him find which of these come under the category of TCL commands?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>UPDATE and TRUNCATE</li>\n\t<li>SELECT and INSERT</li>\n\t<li>ALTER and MODIFY</li>\n\t<li>COMMIT and SET TRANSACTION</li>\n</ol>\n\n<p>&nbsp;</p>","a":[{"id":1709508,"option":"1","correct":false},{"id":1709509,"option":"2","correct":false},{"id":1709510,"option":"3","correct":false},{"id":1709511,"option":"4","correct":true}]},{"q":"<p>Bob is working on a project on SQL. He came across the concept of AS clause but did not know its use. Can you help Bob in choosing the correct option from the following that best describes the purpose of the SQL AS clause?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>The AS SQL clause is used to change the name of a column in the result set or to assign a name to a derived column</li>\n\t<li>The AS clause is used with the JOIN clause only</li>\n\t<li>The AS clause defines a search condition</li>\n\t<li>All of the above</li>\n</ol>","a":[{"id":1709500,"option":"1","correct":true},{"id":1709501,"option":"2","correct":false},{"id":1709502,"option":"3","correct":false},{"id":1709503,"option":"4","correct":false}]},{"q":"<p>Bob was working on a <em>SQL</em><strong> </strong>project. He wanted to add a row into the database but was confused about the various options. Can you help Bob in creating&nbsp;a row in the database?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>ADD</li>\n\t<li>INSERT</li>\n\t<li>MAKE</li>\n\t<li>CREATE</li>\n</ol>","a":[{"id":1706124,"option":"1","correct":false},{"id":1706125,"option":"2","correct":true},{"id":1706126,"option":"3","correct":false},{"id":1706127,"option":"4","correct":false}]},{"q":"<p>Which SQL command is used to remove all rows from a table?</p>\n\n<ol>\n\t<li>DELETE</li>\n\t<li>DROP</li>\n\t<li>REMOVE</li>\n\t<li>TRUNCATE</li>\n</ol>","a":[{"id":1705985,"option":"1","correct":false},{"id":1705986,"option":"2","correct":false},{"id":1705987,"option":"3","correct":false},{"id":1705988,"option":"4","correct":true}]},{"q":"<p>Write a query to output the total number of IDs of employees&nbsp;in <em>EMPLOYEE</em><strong>&nbsp;</strong>where the profile is&nbsp;<em>Accounts</em>.</p>\n\n<p><strong>Input format</strong></p>\n\n<p>The&nbsp;<em>EMPLOYEE</em>&nbsp;table is described as follows:</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>FIELD</strong></td>\n\t\t\t<td><strong>TYPE</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>NAME</td>\n\t\t\t<td>VARCHAR</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>ID</td>\n\t\t\t<td>NUMBER</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>DESIGNATION</td>\n\t\t\t<td>VARCHAR</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT SUM(ID)\nFROM EMPLOYEE\nWHERE DESIGNATION= 'Accounts';</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT AVG(ID)\nFROM EMPLOYEE\nWHERE DESIGNATION= 'Accounts';</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT ID\nFROM EMPLOYEE\nWHERE DESIGNATION= 'Accounts';</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT SUM(ID)\nFROM EMPLOYEE</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1705765,"option":"1","correct":true},{"id":1705766,"option":"2","correct":false},{"id":1705767,"option":"3","correct":false},{"id":1705768,"option":"4","correct":false}]},{"q":"<p>Which operator performs pattern matching?</p>\n\n<ol>\n\t<li>BETWEEN operator</li>\n\t<li>LIKE&nbsp;operator</li>\n\t<li>EXISTS&nbsp;operator</li>\n\t<li>HAVING&nbsp;operator</li>\n</ol>","a":[{"id":1701312,"option":"1","correct":false},{"id":1701313,"option":"2","correct":true},{"id":1701314,"option":"3","correct":false},{"id":1701315,"option":"4","correct":false}]},{"q":"<p>Which of the following functions ignore NULL values?</p>\n\n<ol>\n\t<li>MAX</li>\n\t<li>COUNT</li>\n\t<li>SUM</li>\n\t<li>All of the above</li>\n</ol>\n\n<p>&nbsp;</p>","a":[{"id":1701344,"option":"1","correct":false},{"id":1701345,"option":"2","correct":false},{"id":1701346,"option":"3","correct":false},{"id":1701347,"option":"4","correct":true}]},{"q":"<p>Which among&nbsp;the following is not a SQL Server String Function?</p>\n\n<ol>\n\t<li>LEN</li>\n\t<li>LENGTH</li>\n\t<li>TRIM</li>\n\t<li>LTRIM</li>\n</ol>","a":[{"id":1701308,"option":"1","correct":false},{"id":1701309,"option":"2","correct":true},{"id":1701310,"option":"3","correct":false},{"id":1701311,"option":"4","correct":false}]},{"q":"<p>What will be the query to find&nbsp;the name of any employee in the table&nbsp;<em>Employee</em><strong>&nbsp;</strong>who has converted&nbsp;higher than 60&nbsp;clients? Order your output by the&nbsp;last three characters&nbsp;of each name. If two or more employees have names ending in the same last three characters (i.e.: Ashley, Berkley, etc.), sort them by ascending ID.</p>\n\n<p><strong>Table: Employee</strong></p>\n\n<table border=\"1\" style=\"width: 434px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 62px;\"><strong>ID</strong></td>\n\t\t\t<td style=\"text-align: center; width: 141px;\"><strong>NAME</strong></td>\n\t\t\t<td style=\"text-align: center; width: 211px;\"><strong>CONVERSION_NO</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 62px;\">1</td>\n\t\t\t<td style=\"text-align: center; width: 141px;\">ALICE</td>\n\t\t\t<td style=\"text-align: center; width: 211px;\">70</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 62px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 141px;\">BOB</td>\n\t\t\t<td style=\"text-align: center; width: 211px;\">65</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 62px;\">3</td>\n\t\t\t<td style=\"text-align: center; width: 141px;\">ANITA</td>\n\t\t\t<td style=\"text-align: center; width: 211px;\">60</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 62px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 141px;\">SMITH</td>\n\t\t\t<td style=\"text-align: center; width: 211px;\">50</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 62px;\">5</td>\n\t\t\t<td style=\"text-align: center; width: 141px;\">MIKE</td>\n\t\t\t<td style=\"text-align: center; width: 211px;\">80</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT NAME \nFROM STUDENTS \nWHERE CONVERSION_NO &gt; 60\nORDER BY RIGHT(NAME, 3), ID ASC;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT NAME\nFROM STUDENTS\nWHERE CONVERSION_NO &gt; 60\nORDER BY SUBSTRING(NAME,len(NAME)-2, 3),ID ASC;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1698354,"option":"1","correct":false},{"id":1698355,"option":"2","correct":false},{"id":1698356,"option":"All of the above","correct":true},{"id":1698357,"option":"None of these","correct":false}]},{"q":"<p>Alice is working on Table Student in SQL. She wants to give a temporary name <em>Roll_Id</em> to a column <em>Roll_No</em>, then which of the following option in this scenario is correct:</p>\n\n<p><strong>Options</strong></p>\n\n<p>1. </p>\n\n<pre class=\"prettyprint\"><code>SELECT Roll_No AS Roll_Id FROM Student ;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT Roll_No FROM Student AS Roll_Id ;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT FROM Student WHERE Roll_No AS Roll_Id ;</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1659897,"option":"1","correct":true},{"id":1659898,"option":"2","correct":false},{"id":1659899,"option":"3","correct":false},{"id":1659900,"option":"None of the above","correct":false}]},{"q":"<p>Bob is working on Table Student in <em>SQL</em>. He wants to create an Index named <em>Student_Index_Id</em> on column <em>Id</em> then which of the following option in this scenario is correct:</p>\n\n<p><strong>Table: Student</strong></p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Student (\n   Name varchar(255),\n   Roll int,\n   Id   int );\n</code></pre>\n\n<p><strong>Options</strong></p>\n\n<p>1. </p>\n\n<pre class=\"prettyprint\"><code>CREATE INDEX Student_Index_Id ON (Id);</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>CREATE INDEX Student_Index_Id ON Student(Id);</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>CREATE INDEX Student_Index_Id ON Student.Id;</code></pre>\n\n<p> </p>","a":[{"id":1659014,"option":"1","correct":false},{"id":1659015,"option":"2","correct":true},{"id":1659016,"option":"3","correct":false},{"id":1659017,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is not a <em>RANK </em>function in <em>SQL</em>?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1. ROW_NUMBER()</p>\n\n<p>2. COLUMN_NUMBER()</p>\n\n<p>3. NTILE()</p>\n\n<p>4. DENSE_RANK()</p>","a":[{"id":1659010,"option":"1","correct":false},{"id":1659011,"option":"2","correct":true},{"id":1659012,"option":"3","correct":false},{"id":1659013,"option":"4","correct":false}]},{"q":"<p>Alice is working on Table <em>Student</em> in SQL. It contains the <em>Name</em> and <em>Id</em> of Students and She wants to apply a query that returns the names in which \"s\" is in 3rd position. Then which of the following query in this scenario are correct:</p>\n\n<p><strong>Table: Student</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Alice</td>\n\t\t\t<td>1450</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Ben</td>\n\t\t\t<td>2321</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Lisa</td>\n\t\t\t<td>3102</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT Name FROM Student WHERE Name LIKE \"__s%\" ;\n</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT Name FROM Student WHERE Name LIKE \"  s%\" ;\n</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT Name FROM Student WHERE Name LIKE \"%__s\" ;\n</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT Name FROM Student WHERE Name LIKE \"%%s\" ;\n</code></pre>\n\n<p> </p>","a":[{"id":1657113,"option":"1","correct":true},{"id":1657114,"option":"2","correct":false},{"id":1657115,"option":"3","correct":false},{"id":1657116,"option":"4","correct":false}]},{"q":"<p>Mary is working on Table <em>Student</em> in SQL. It contains the <em>Name</em> and <em>Id</em> of Students and She wants to apply a query that returns the names starting with \"A\" and ending with \"a\". Then which of the following query in this scenario are correct:</p>\n\n<p><strong>Table: Student </strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Alice</td>\n\t\t\t<td>1450</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Ben</td>\n\t\t\t<td>2321</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Lisa</td>\n\t\t\t<td>3102</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>John</td>\n\t\t\t<td>4231</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Anita</td>\n\t\t\t<td>5563</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT Name FROM Student WHERE Name LIKE \"A%\" AND \"%a\" ;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT Name FROM Student WHERE Name LIKE \"A%a\" ;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT Name FROM Students WHERE Name LIKE \"A%\" AND Name LIKE \"%a\" ;</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1657069,"option":"1 and 2","correct":false},{"id":1657070,"option":"2 and 3","correct":true},{"id":1657071,"option":"1 and 3","correct":false},{"id":1657072,"option":"None of these","correct":false}]},{"q":"<p>Consider you have Table <em>Student</em><strong> </strong>and<strong> </strong><em>Teacher</em><strong>.</strong></p>\n\n<p><strong>Table: Student</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong> Name</strong></td>\n\t\t\t<td><strong>Credits</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>Jack</td>\n\t\t\t<td>2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Che-102</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>3</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Table: Teacher</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong> Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Mas-103</td>\n\t\t\t<td>1003</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM Student RIGHT JOIN Teacher ON  Student.Course = Teacher.Course;\n</code></pre>\n\n<p><strong> </strong>If you are required to execute the given <em>MySQL</em> query, then determine the output?</p>\n\n<p><strong>Outputs</strong></p>\n\n<p>1.</p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Credits</strong></td>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>Jack</td>\n\t\t\t<td>2</td>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>4</td>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t\t<td>Mas-103</td>\n\t\t\t<td>1003</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Credits</strong></td>\n\t\t\t<td><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>Jack</td>\n\t\t\t<td>2</td>\n\t\t\t<td>1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>4</td>\n\t\t\t<td>1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t\t<td>1003</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Credits</strong></td>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>Jack</td>\n\t\t\t<td>2</td>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>4</td>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t\t<td>Che-102</td>\n\t\t\t<td>1002</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>4.</p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong>Name</strong></td>\n\t\t\t<td><strong>Credits</strong></td>\n\t\t\t<td><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>Jack</td>\n\t\t\t<td>2</td>\n\t\t\t<td>1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>4</td>\n\t\t\t<td>1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>","a":[{"id":1653997,"option":"1","correct":true},{"id":1653998,"option":"2","correct":false},{"id":1653999,"option":"3","correct":false},{"id":1654000,"option":"4","correct":false}]},{"q":"<p>Consider you have Table <em>Student </em>and<strong> </strong><em>Teacher.</em></p>\n\n<p><strong>Table: Student</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong> Name</strong></td>\n\t\t\t<td><strong>Credits</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>Jack</td>\n\t\t\t<td>2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Che-102</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>3</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Table: Teacher</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><strong>Course</strong></td>\n\t\t\t<td><strong> Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Bio-101</td>\n\t\t\t<td>1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Phy-104</td>\n\t\t\t<td>1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Mas-103</td>\n\t\t\t<td>1003</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM Student LEFT OUTER JOIN Teacher ON  Student.Course = Teacher.Course;\n</code></pre>\n\n<p><strong> </strong>If you are required to execute the given <em>MySQL</em> query, then determine the output?</p>\n\n<p><strong>Outputs</strong></p>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Name</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Credits</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center;\">Jack</td>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center;\">1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Che-102</td>\n\t\t\t<td style=\"text-align: center;\">Mike</td>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">Che-102</td>\n\t\t\t<td style=\"text-align: center;\">1003</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 420px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 108px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 80px;\"><strong>Name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 98px;\"><strong>Credits</strong></td>\n\t\t\t<td style=\"text-align: center; width: 106px;\"><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 108px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 80px;\">Jack</td>\n\t\t\t<td style=\"text-align: center; width: 98px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 106px;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 108px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 80px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 98px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 106px;\">1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 108px;\">Che-102</td>\n\t\t\t<td style=\"text-align: center; width: 80px;\">Mike</td>\n\t\t\t<td style=\"text-align: center; width: 98px;\">3</td>\n\t\t\t<td style=\"text-align: center; width: 106px;\">NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Name</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Credits</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center;\">Jack</td>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center;\">1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Che-102</td>\n\t\t\t<td style=\"text-align: center;\">Mike</td>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">NULL</td>\n\t\t\t<td style=\"text-align: center;\">NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>4.</p>\n\n<table border=\"1\" style=\"width: 421px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 104px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 82px;\"><strong>Name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 100px;\"><strong>Credits</strong></td>\n\t\t\t<td style=\"text-align: center; width: 107px;\"><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 104px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 82px;\">Jack</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 107px;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 104px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 82px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 107px;\">1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 104px;\">Che-102</td>\n\t\t\t<td style=\"text-align: center; width: 82px;\">Mike</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">3</td>\n\t\t\t<td style=\"text-align: center; width: 107px;\">NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>","a":[{"id":1653993,"option":"1","correct":false},{"id":1653994,"option":"2","correct":false},{"id":1653995,"option":"3","correct":true},{"id":1653996,"option":"4","correct":false}]},{"q":"<p>Consider you have Table <em>Student</em><strong> </strong>and<strong> </strong><em>Teacher.</em></p>\n\n<p><strong>Table: Student</strong></p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 167px;\"><strong> Name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 223px;\"><strong>Credits</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 167px;\">Jack</td>\n\t\t\t<td style=\"text-align: center; width: 223px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 167px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 223px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\">Che-102</td>\n\t\t\t<td style=\"text-align: center; width: 167px;\">Mike</td>\n\t\t\t<td style=\"text-align: center; width: 223px;\">3</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Table: Teacher</strong></p>\n\n<table border=\"1\" style=\"width: 349px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 158px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 173px;\"><strong> Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 158px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 173px;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 158px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 173px;\">1004</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 158px;\">Mas-103</td>\n\t\t\t<td style=\"text-align: center; width: 173px;\">1003</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM Student INNER JOIN Teacher ON  Student.Course = Teacher.Course;\n</code></pre>\n\n<p><strong> </strong>If you are required to execute the given <em>MySQL</em> query, then determine the output?</p>\n\n<p><strong>Outputs</strong></p>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 524px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 97px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 91px;\"><strong>Name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 100px;\"><strong>Credits</strong></td>\n\t\t\t<td style=\"text-align: center; width: 102px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 100px;\"><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 97px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 91px;\">Jack</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 102px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 97px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 91px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 102px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">1004</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 202px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 91px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 93px;\"><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 91px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 93px;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 91px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 93px;\">1004</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 423px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 98px;\"><strong>Name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 102px;\"><strong>Credits</strong></td>\n\t\t\t<td style=\"text-align: center; width: 106px;\"><strong>Id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 98px;\">Jack</td>\n\t\t\t<td style=\"text-align: center; width: 102px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 106px;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 98px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 102px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 106px;\">1004</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>4.</p>\n\n<table border=\"1\" style=\"width: 308px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\"><strong>Course</strong></td>\n\t\t\t<td style=\"text-align: center; width: 95px;\"><strong> Name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 100px;\"><strong>Credits</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\">Bio-101</td>\n\t\t\t<td style=\"text-align: center; width: 95px;\">Jack</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 89px;\">Phy-104</td>\n\t\t\t<td style=\"text-align: center; width: 95px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 100px;\">4</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":1653989,"option":"1","correct":true},{"id":1653990,"option":"2","correct":false},{"id":1653991,"option":"3","correct":false},{"id":1653992,"option":"4","correct":false}]},{"q":"<p>A merge table operation needs to be performed between two tables. In the given context, select the checks that must be satisfied by the indexes used in these tables?</p>\n\n<p>1. Index part lengths must be equal</p>\n\n<p>2. Index part types must be equal</p>\n\n<p>3. Index part languages must be equal</p>\n\n<p>4. Verify whether index parts can be NULL.</p>\n\n<p><em>Note:</em> Assume that you are working on MySQL.</p>","a":[{"id":1619227,"option":"Only 1,2","correct":false},{"id":1619228,"option":"Only 2,3","correct":false},{"id":1619229,"option":"Only 2,3,4","correct":false},{"id":1619230,"option":"Only 1,2,3","correct":false},{"id":1619231,"option":"All 1,2,3,4","correct":true}]},{"q":"<p>You have a FULLTEXT query that takes only TOP N matching rows after sorting the rows in descending order and applying a LIMIT clause to it. Which of the following must be there in order to apply this optimization?</p>\n\n<p><em>Note:</em> Assume that you are working on MySQL.</p>","a":[{"id":1619219,"option":"WHERE clause","correct":false},{"id":1619220,"option":"A single ORDER BY clause in descending order","correct":true},{"id":1619221,"option":"WHERE clause and a single ORDER BY clause in descending order","correct":false},{"id":1619222,"option":"WHERE clause and a single ORDER BY clause in ascending order","correct":false}]},{"q":"<p>You want to bypass existing index key limits and execute fully covered, indexed, queries when working with Nonclustered indexes in SQL. What should you do to achieve this?</p>\n\n<p><em>Note:</em> Assume that you are working on MS/SQL server.</p>","a":[{"id":1619211,"option":"Add a nonkey columns to the leaf level of the nonclustered index","correct":true},{"id":1619212,"option":"Add a pointer from an index row in a nonclustered index","correct":false},{"id":1619213,"option":"Add a row locator to the leaf level of the nonclustered index","correct":false},{"id":1619214,"option":"Add a UNIQUE constraint on the table","correct":false}]},{"q":"<p>You are trying to enforce a PRIMARY KEY constraint on an existing table 'T1'. It is given that a clustered index already exists on the table 'T1'. What does the SQL server do in the given scenario?</p>\n\n<p><em>Note:</em> Assume that you are working on MS/SQL server.</p>","a":[{"id":1619207,"option":"It enforces the primary key using a nonclustered index.","correct":true},{"id":1619208,"option":"It throws an error","correct":false},{"id":1619209,"option":"It automatically created a automatically creates a nonclustered index","correct":false},{"id":1619210,"option":"Cannot be determined","correct":false}]},{"q":"<p>You have created three tables as shown alongside. You want to get a list of all delivery executives along with customer name, city, grade, order id, date, and order amount that satisfy the given conditions.</p>\n\n<p>1. Executive who works for one or more shipments.</p>\n\n<p>2. Customer has placed one or more orders. Which of these queries can be used to achieve this?</p>\n\n<pre class=\"prettyprint\"><code>Create TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission float,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );\n \nCREATE TABLE orders (\nord_id int,\nord_amt int,\nord_date date,\nexec_id int,\nshipment_id int,\nPRIMARY KEY(ord_id),\nFOREIGN KEY(exec_id) REFERENCES delivexec(exec_id),\nFOREIGN KEY(shipment_id) REFERENCES shipment(shipment_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Salesman\", \nc.ord_id, c.ord_date, c.ord_amt \nFROM shipment a \nRIGHT OUTER JOIN delivexec b \nON b.exec_id=a.exec_id \nRIGHT OUTER JOIN orders c \nON c.shipment_id=a.shipment_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Salesman\", \nc.ord_id, c.ord_date, c.ord_amt \nFROM shipment a \nRIGHT OUTER JOIN delivexec b \nON b.exec_id=a.exec_id \nLEFT OUTER JOIN orders c \nON c.shipment_id=a.shipment_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Salesman\", \nc.ord_id, c.ord_date, c.ord_amt \nFROM shipment a \nLEFT OUTER JOIN delivexec b \nON b.exec_id=a.exec_id \nLEFT OUTER JOIN orders c \nON c.shipment_id=a.shipment_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>None of these</p>\n\t</li>\n</ol>","a":[{"id":1619050,"option":"1","correct":true},{"id":1619051,"option":"2","correct":false},{"id":1619052,"option":"3","correct":false},{"id":1619053,"option":"4","correct":false}]},{"q":"<p>Consider the tables given alongside. You want to get a list of delivery executives who have been assigned to a shipment in a different city along with the following details:</p>\n\n<p>1. Name of customer</p>\n\n<p>2. Customer city</p>\n\n<p>3. Executive city</p>\n\n<p>4. Commission</p>\n\n<p>Which of these queries should you execute if you only want to get details of delivery executives with more than 12% percent commission?</p>\n\n<pre class=\"prettyprint\"><code>Create TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission float,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT b.cust_name AS \"Customer\", \nb.city, a.exec_name AS \"Delivery Executive\", a.city,a.commission \nFROM delivexec a \nINNER JOIN shipment b \nON a.exec_id =b.exec_id \nWHERE a.commission&gt;.12 \nAND a.city&lt;&gt;b.city;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT b.cust_name AS \"Customer\", \nb.city, a.exec_name AS \"Delivery Executive\", a.city,a.commission \nFROM delivexec a \nINNER JOIN shipment b \nON a.exec_id =b.exec_id \nWHERE a.commission&gt;.12 \nAND a.city!=b.city;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT b.cust_name AS \"Customer\", \nb.city, a.exec_name AS \"Delivery Executive\", a.city,a.commission \nFROM delivexec a \nINNER JOIN shipment b \nON a.exec_id =b.exec_id \nWHERE a.commission&gt;.12 \nAND a.city NOTEQUAL b.city;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Both 1 and 2</p>\n\t</li>\n</ol>","a":[{"id":1619036,"option":"1","correct":false},{"id":1619037,"option":"2","correct":false},{"id":1619038,"option":"3","correct":false},{"id":1619039,"option":"4","correct":true}]},{"q":"<p>You have created three tables as shown alongside. Write a SQL query statement to make a cartesian product between delivered and shipment i.e. each shipment will appear for all customers and vice versa for that shipment that belongs to a city. [<em>Note:</em> Records should be displayed in ascending order of the city of delivery executive]</p>\n\n<pre class=\"prettyprint\"><code>Create TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission float,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );\n \nCREATE TABLE orders (\nord_id int,\nord_amt int,\nord_date date,\nexec_id int,\nshipment_id int,\nPRIMARY KEY(ord_id),\nFOREIGN KEY(exec_id) REFERENCES delivexec(exec_id),\nFOREIGN KEY(shipment_id) REFERENCES shipment(shipment_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * \nFROM delivexec a \nCROSS JOIN shipment b \nWHERE a.city IS NOT NULL;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * \nFROM delivexec a \nCROSS JOIN shipment b \nWHERE a.city EXISTS;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * \nFROM delivexec a \nCROSS JOIN shipment b;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>None of these</p>\n\t</li>\n</ol>","a":[{"id":1619032,"option":"1","correct":true},{"id":1619033,"option":"2","correct":false},{"id":1619034,"option":"3","correct":false},{"id":1619035,"option":"4","correct":false}]},{"q":"<p>Consider the tables employees, departments, and locations tables given alongside Which of the following SQL query can be used to generate the name, department name, and city of all the employees who earn more than <em>25000</em>?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE employees(\nemp_id INT, NOT NULL, PRIMARY KEY,\nemp_name VARCHAR(50),\nsalary int,\nmgr_id int,\ndept_id int\n);\n\nCREATE TABLE departments(\ndept_id int NOT NULL, PRIMARY KEY,\ndept_name varchar(50),\nmgr_id,\nlocation_id int\n);\n\nCREATE TABLE locations(\nlocation_id int NOT NULL, PRIMARY KEY,\ncity varchar(30)\n);</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT emp_name, dept, city\nFROM employees e\nJOIN departments d\nUSING (dept_id)\nJOIN locations l\nUSING (location_id)\nWHERE salary &gt; 25000;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT emp_name, dept, city\nFROM employees e, departments d, locations l\nJOIN ON (e.dept= d.deptid)\nAND (d.location_id =l.location_id)\nAND salary &gt; 25000;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT emp_name, dept_name, city\nFROM employees e, departments d, locations l\nWHERE e.dept= d.dept\nAND d.location_id = l.location_id\nAND salary &gt; 25000;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Both 1 and 3</p>\n\t</li>\n</ol>","a":[{"id":1619027,"option":"1","correct":false},{"id":1619028,"option":"2","correct":false},{"id":1619029,"option":"3","correct":false},{"id":1619030,"option":"4","correct":true}]},{"q":"<p>Which of the following options are valid with respect to the queries given below?</p>\n\n<p>Q1</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM t1 WHERE NOT EXISTS (SELECT id FROM t2 WHERE t1.id=t2.id);</code></pre>\n\n<p>Q2</p>\n\n<pre class=\"prettyprint\"><code>SELECT table1.* FROM table1 LEFT JOIN table2 ON table1.id=table2.id WHERE table2.id IS NULL;</code></pre>\n\n<p> </p>","a":[{"id":1619023,"option":"Both Q1 and Q2 are optimised","correct":false},{"id":1619024,"option":"Only Q1 is optimised","correct":false},{"id":1619025,"option":"Only Q2 is optimised","correct":true},{"id":1619026,"option":"Neither Q1 nor Q2 is optimised","correct":false}]},{"q":"<p>You have created three tables as shown alongside. Now, you want to get a list of all delivery executives irrespective of the number of shipments they have been assigned to. Which of these queries can you use to achieve this?</p>\n\n<pre class=\"prettyprint\"><code>Create TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission float,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );\n \nCREATE TABLE orders (\nord_id int,\nord_amt int,\nord_date date,\nexec_id int,\nshipment_id int,\nPRIMARY KEY(ord_id),\nFOREIGN KEY(exec_id) REFERENCES delivexec(exec_id),\nFOREIGN KEY(shipment_id) REFERENCES shipment(shipment_id)\n);</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Delivery Executive\", b.city \nFROM delivexec b \nLEFT OUTER JOIN shipment a \nON b.exec_id=a.exec_id \nORDER BY b.exec_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Delivery Executive\", b.city \nFROM delivexec b \nRIGHT OUTER JOIN shipment a \nON b.exec_id=a.exec_id \nORDER BY b.exec_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>\"SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"\"Delivery Executive\"\", b.city \nFROM delivexec b \nFULL OUTER JOIN shipment a \nON b.exec_id=a.exec_id \nORDER BY b.exec_id;\"</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>All 1, 2, 3</p>\n\t</li>\n</ol>","a":[{"id":1619018,"option":"1","correct":true},{"id":1619019,"option":"2","correct":false},{"id":1619020,"option":"3","correct":false},{"id":1619021,"option":"4","correct":false}]},{"q":"<p>Consider the tables doctor and resident given below.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE `doctor` (\n `doc_id` int(11) NOT NULL AUTO_INCREMENT,\n `fname` varchar(255) NOT NULL,\n `lname` varchar(255) NOT NULL,\n PRIMARY KEY (`doc_id`)\n)\n\nCREATE TABLE `resident` (\n `res_id` int(11) NOT NULL AUTO_INCREMENT,\n `fname` varchar(255) NOT NULL,\n `lname` varchar(255) NOT NULL,\n `doc_id` int(11) DEFAULT NULL,\n PRIMARY KEY (`res_id`),\n KEY `doc_id` (`doc_id`),\n CONSTRAINT `res_ibfk_1` FOREIGN KEY (`doc_id`) REFERENCES `doctor` (`doc_id`)\n);\n\n</code></pre>\n\n<p>Which of the following query can you use to get the information on residents and their doctors, excluding residents who are not assigned to a doctor?</p>\n\n<p>[<em>Note</em>: Not all residents have a doctor, and not all doctors are assigned to residents]</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT r.fname AS resident_name, d.fname AS doctor_name\nFROM resident AS r\nINNER JOIN doctor AS d ON r.doc_id = d.doc_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT r.fname AS resident_name, d.fname AS doctor_name\nFROM resident AS r\nLEFT JOIN doctor AS d ON r.doc_id = d.doc_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT r.fname AS resident_name, d.fname AS doctor_name\nFROM resident AS r\nRIGHT JOIN resident AS a ON r.doc_id = d.doc_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Either 1 or 2</p>\n\t</li>\n</ol>","a":[{"id":1619013,"option":"1","correct":true},{"id":1619014,"option":"2","correct":false},{"id":1619015,"option":"3","correct":false},{"id":1619016,"option":"4","correct":false}]},{"q":"<p>Consider the tables stalls and menus given alongside. Which of these queries can you use to display the ID of the stalls that sell items A and B, but not C?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE stalls(\nid int, \nname char(10),\nPRIMARY KEY (id)\n);\n\nCREATE TABLE menus(\nmenu_id int,\nstalls_id int, \nitem char(10),\nPRIMARY KEY (menius_id),\nFOREIGN KEY(stalls_id) REFERENCES customers \n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT DISTINCT id, name\nFROM stalls s\nJOIN menus m\nON m.menu_id = .id\nWHERE customer_id IN (SELECT customer_id \n FROM orders \n WHERE product_name = 'A') \nAND customer_id IN (SELECT customer_id \n FROM orders \n WHERE product_name = 'B') \nAND customer_id NOT IN (SELECT customer_id \n FROM orders \n WHERE product_name = 'C');</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT DISTINCT id, name\nFROM orders o\nJOIN customers c\nON o.customer_id = c.id\nWHERE customer_id IN (SELECT customer_id \n FROM orders \n WHERE product_name = 'A' and 'B') \nAND customer_id NOT IN (SELECT customer_id \n FROM orders \n WHERE product_name = 'C');</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Either 1 or 2</p>\n\t</li>\n\t<li>\n\t<p>Neither 1 nor 2</p>\n\t</li>\n</ol>","a":[{"id":1619009,"option":"1","correct":true},{"id":1619010,"option":"2","correct":false},{"id":1619011,"option":"3","correct":false},{"id":1619012,"option":"4","correct":false}]},{"q":"<p>Consider the tables books and review given alongside. Write a query to find all the years which published a book that received a 3 or 4 rating.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE books(\n book_id int,\n book_title varchar(30),\n year_published int,\n book_lang varchar(30),\n PRIMARY KEY(book_id)\n );\n\nCREATE TABLE review(\n book_id int,\n rev_id int,\n stars float,\n reviewcount int,\n FOREIGN KEY(rev_id) REFERENCES bookreviewer(rev_id),\n FOREIGN KEY(book_id) REFERENCES books(book_id)\n );</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT DISTINCT year_published\nFROM books, review\nWHERE books.book_id = review.book_id \nAND stars IN (3, 4)\nORDER BY year_published;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT DISTINCT year_published\nFROM books\nINNER JOIN review \nON books.book_id = review.book_id\nWHERE stars IN (3, 4)\nORDER BY year_published;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Both 1 and 2</p>\n\t</li>\n\t<li>\n\t<p>Neither 1 nor 2</p>\n\t</li>\n</ol>","a":[{"id":1619005,"option":"1","correct":false},{"id":1619006,"option":"2","correct":false},{"id":1619007,"option":"3","correct":true},{"id":1619008,"option":"4","correct":false}]},{"q":"<p>Consider the tables bookreviewer and review given alongside. Write a query to list the names of all reviewers who have rated a book with a NULL value.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE bookreviewer(\n rev_id int,\n rev_name varchar(30),\n PRIMARY KEY(rev_id)\n );\n \nCREATE TABLE review(\n book_id int,\n rev_id int,\n stars float,\n reviewcount int,\n FOREIGN KEY(rev_id) REFERENCES bookreviewer(rev_id)\n );</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT rev_name\nFROM bookreviewer\nINNER JOIN review USING(rev_id)\nWHERE stars IS NULL;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT rev_name\nFROM bookreviewer\nLEFT JOIN review USING(rev_id)\nWHERE stars IS NULL;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT rev_name\nFROM bookreviewer\nRIGHT JOIN review USING(rev_id)\nWHERE stars IS NULL;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Both 1 and 3</p>\n\t</li>\n</ol>","a":[{"id":1619000,"option":"1","correct":false},{"id":1619001,"option":"2","correct":false},{"id":1619002,"option":"3","correct":false},{"id":1619003,"option":"4","correct":true}]},{"q":"<p>Which of the following SQL queries is valid with respect to LEFT OUTER JOIN?</p>\n\n<p>I.</p>\n\n<pre class=\"prettyprint\"><code>SELECT d.dept_id, d.dept_name FROM employees e, departments d WHERE e.dept_id = d.dept_id;</code></pre>\n\n<p>II.</p>\n\n<pre class=\"prettyprint\"><code> SELECT e.emp_name, d.dept_name FROM employees e LEFT OUTER JOIN departments d ON e.dept_id = d.dept_id;</code></pre>\n\n<p> </p>","a":[{"id":1618996,"option":"Only I","correct":false},{"id":1618997,"option":"Only II","correct":true},{"id":1618998,"option":"Both I and II","correct":false},{"id":1618999,"option":"Neither I nor II","correct":false}]},{"q":"<p>Consider the tables, Employees, and Departments given alongside. Which of the following SQL query will print the employee names, salary, and the department name for employees with designation as 'Designer'?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Employees (\nemp_id int NOT NULL PRIMARY KEY,\nemp_name, VARCHAR(30),\nemp_designation VARCHAR(30),\nemp_salary int\n);\nCREATE TABLE Departments(\ndept_id; int NOT NULL PRIMARY KEY,\nemp_id int;\ndept_name VARCHAR(30)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT e.emp_name, d.dept_name, e.emp_salary \nFROM Employees e \nJOIN Departments d \nON e.emp_id = d.emp_id \nHAVING e.emp_designation = 'Designer';</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT e.emp_name, d.dept_name, e.emp_salary \nFROM Employees e \nJOIN Departments d \nON e.emp_id = d.emp_id \nWHERE e.emp_designation = 'Designer';</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Both 1 and 2</p>\n\t</li>\n\t<li>\n\t<p>None of these</p>\n\t</li>\n</ol>","a":[{"id":1618992,"option":"1","correct":false},{"id":1618993,"option":"2","correct":true},{"id":1618994,"option":"3","correct":false},{"id":1618995,"option":"4","correct":false}]},{"q":"<p>Consider the tables, Employees, and EmployeeTitle given alongside. Which of the following SQL query(s) will print the details of the distinct employees who are managers?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Employees (\nemp_id int,\nemp_name VARCHAR(30),\ndept_name VARCHAR(30),\njoining_date date,\nPRIMARY KEY(emp_id)\n);\n\nCREATE TABLE EmployeeTitle(\nemp_ref_id int,\nemp_title VARCHAR(30),\nFOREIGN KEY(emp_ref_id) REFERENCES Employees(emp_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT UNIQUE Employees.emp_name, EmployeeTitle.emp_title \nFROM Employees \nLEFT JOIN EmployeeTitle \nON Employees.emp_id = EmployeeTitle.emp_ref_id \nWHERE emp_title IN ('Manager');</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT DISTINCT Employees.emp_name, EmployeeTitle.emp_title \nFROM Employees \nINNER JOIN EmployeeTitle \nON Employees.emp_id = EmployeeTitle.emp_ref_id \nAND emp_title IN ('Manager');</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Either 1 or 2</p>\n\t</li>\n\t<li>\n\t<p>Neither 1 nor 2</p>\n\t</li>\n</ol>","a":[{"id":1618988,"option":"1","correct":false},{"id":1618989,"option":"2","correct":false},{"id":1618990,"option":"3","correct":true},{"id":1618991,"option":"4","correct":false}]},{"q":"<p>Which of the following SQL queries is valid with respect to RIGHT OUTER JOIN in a MS/SQL server?</p>\n\n<p>I.</p>\n\n<pre class=\"prettyprint\"><code>SELECT r.resident_flats, a.apartment_names FROM apartments a RIGHT OUTER JOIN residents r ON r.resident_flat_id(+) = a.resident_flat_id;</code></pre>\n\n<p>II.</p>\n\n<pre class=\"prettyprint\"><code>SELECT a.apartment_id, a.apartment_names FROM residents r, apartments r WHERE a.apartment_id = r.apartment_id;</code></pre>\n\n<p> </p>","a":[{"id":1618984,"option":"Only I","correct":true},{"id":1618985,"option":"Only II","correct":false},{"id":1618986,"option":"Both I and II","correct":false},{"id":1618987,"option":"Neither I nor II","correct":false}]},{"q":"<p>You have created three tables as shown alongside. Now, you want to get a list of delivery executives who have been assigned at least one shipment. Which of these queries can you use to achieve this?</p>\n\n<pre class=\"prettyprint\"><code>Create TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission float,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );\n \nCREATE TABLE orders (\nord_id int,\nord_amt int,\nord_date date,\nexec_id int,\nshipment_id int,\nPRIMARY KEY(ord_id),\nFOREIGN KEY(exec_id) REFERENCES delivexec(exec_id),\nFOREIGN KEY(shipment_id) REFERENCES shipment(shipment_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Delivery Executive\", b.city \nFROM shipment a \nLEFT OUTER JOIN delivexec b \nON b.exec_id=a.exec_id \nORDER BY b.exec_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Delivery Executive\", b.city \nFROM shipment a \nRIGHT OUTER JOIN delivexec b \nON b.exec_id=a.exec_id \nORDER BY b.exec_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Delivery Executive\", b.city \nFROM shipment a \nFULL OUTER JOIN delivexec b \nON b.exec_id=a.exec_id \nORDER BY b.exec_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Either 1 or 2</p>\n\t</li>\n</ol>","a":[{"id":1618979,"option":"1","correct":true},{"id":1618980,"option":"2","correct":false},{"id":1618981,"option":"3","correct":false},{"id":1618982,"option":"4","correct":false}]},{"q":"<p>Consider the tables delivexec, shipment, and orders given alongside. Which of these queries should you execute to make a list in ascending order for shipments that hold a grade less than 2?</p>\n\n<pre class=\"prettyprint\"><code>Create TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission float,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );\n \nCREATE TABLE orders (\nord_id int,\nord_amt int,\nord_date date,\nexec_id int,\nshipment_id int,\nPRIMARY KEY(ord_id),\nFOREIGN KEY(exec_id) REFERENCES delivexec(exec_id),\nFOREIGN KEY(shipment_id) REFERENCES shipment(shipment_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Delivery Executive\", b.city \nFROM shipment a \nFULL JOIN delivexec b \nON a.exec_id=b.exec_id \nWHERE a.grade&lt;2 \nORDER BY a.shipment_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.cust_name,a.city,a.grade, \nb.exec_name AS \"Delivery Executive\", b.city \nFROM shipment a \nLEFT OUTER JOIN delivexec b \nON a.exec_id=b.exec_id \nWHERE a.grade&lt;2 \nORDER BY a.shipment_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Either 1 or 2</p>\n\t</li>\n\t<li>\n\t<p>None of these</p>\n\t</li>\n</ol>","a":[{"id":1618975,"option":"1","correct":false},{"id":1618976,"option":"2","correct":false},{"id":1618977,"option":"3","correct":true},{"id":1618978,"option":"4","correct":false}]},{"q":"<p>You want to retrieve details of patients in a particular hospital that have been assigned doctors with the name \"John\". Which of the queries given alongside can be used to do so?</p>\n\n<pre class=\"prettyprint\"><code>I. SELECT Doctor.doct_id, Patient.pat_id, Doctor.doct_name\nFROM Doctor, Patient\nWHERE Doctor.doct_id = Patient.doct_id\nAND Doctor.doct_name = \"John\";\n\nII. SELECT Doctor.doct_id, Patient.pat_id, Doctor.doct_name\nFROM Doctor JOIN Patient\n ON Doctor.doct_id = Patient.doct_id\nWHERE Doctor.doct_name = \"John\";</code></pre>\n\n<p> </p>","a":[{"id":1618971,"option":"Only I","correct":false},{"id":1618972,"option":"Only II\r\n","correct":false},{"id":1618973,"option":"Both I and II","correct":true},{"id":1618974,"option":"Neither I nor II","correct":false}]},{"q":"<p>Consider the tables, sales and product given below. Write a query to list the details of all products that acquired sales in the year 2015.</p>\n\n<pre class=\"prettyprint\"><code>Consider the following tables\nCreate TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission float,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );\n \nCREATE TABLE orders (\nord_id int,\nord_amt int,\nord_date date,\nexec_id int,\nshipment_id int,\nPRIMARY KEY(ord_id),\nFOREIGN KEY(exec_id) REFERENCES delivexec(exec_id),\nFOREIGN KEY(shipment_id) REFERENCES shipment(shipment_id)\n);\n</code></pre>\n\n<p>Which of the following queries is equivalent to the query given alongside?</p>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT cust_name, exec_name, ord_id, ord_date \nFROM delivexec, orders, shipment \nWHERE orders.exec_id = delivexec.exec_id \n AND orders.shipment_id = shipment.shipment_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT shipment.cust_name, delivexec.exec_name, orders.ord_id, orders.ord_date \nFROM orders \nINNER JOIN shipment\nON orders.shipment_id= shipment.shipment_id \nINNER JOIN delivexec \nON orders.exec_id = delivexec.exec_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT shipment.cust_name, delivexec.exec_name, orders.ord_id, orders.ord_date \nFROM orders \nINNER JOIN shipment\nON orders.shipment_id= shipment.shipment_id \nJOIN delivexec \nON orders.exec_id = delivexec.exec_id(+);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT shipment.cust_name, delivexec.exec_name, orders.ord_id, orders.ord_date \nFROM orders \nINNER JOIN shipment\nON orders.shipment_id= shipment.shipment_id \nINNER JOIN delivexec \nON orders.exec_id(+) = delivexec.exec_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1618967,"option":"1","correct":true},{"id":1618968,"option":"2","correct":false},{"id":1618969,"option":"3","correct":false},{"id":1618970,"option":"4","correct":false}]},{"q":"<p>Consider the tables, sales, and products given alongside. Write a query to list all the details of products regardless of whether they have made sales.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE product(\nproduct_id int PRIMARY KEY,\nprod_name\n);\n\nCREATE TABLE sales(\nsale_id int PRIMARY KEY,\nproduct_id int,\ndate timestamp,\nquantity int,\nprice int\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT product.product_name, sale_id, date, quantity, price \nFROM product \nRIGHT JOIN sales \nON product.product_id = sales.product_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT sale_id, date, quantity, price, product.product_name\nFROM sales\nWHERE product_id IN (SELECT product_id\n FROM product);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT product.product_name, sale_id, date, quantity, price \nFROM product \nLEFT JOIN sales \nON product.product_id = sales.product_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT sale_id, date, quantity, price, product.product_name \nFROM sales \nINNER JOIN product \nON sales.product_id = product.product_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1618963,"option":"1","correct":false},{"id":1618964,"option":"2","correct":false},{"id":1618965,"option":"3","correct":true},{"id":1618966,"option":"4","correct":false}]},{"q":"<p>Consider the table given alongside. Which of these queries can you execute to get the following details of an order?</p>\n\n<p>1. Order id</p>\n\n<p>2. Order amount</p>\n\n<p>3. Order date</p>\n\n<p>4. Delivery executive assigned</p>\n\n<p>5. Customer name</p>\n\n<p>6. Commission received by delivery executive</p>\n\n<pre class=\"prettyprint\"><code>Create TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission float,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );\n \nCREATE TABLE orders (\nord_id int,\nord_amt int,\nord_date date,\nexec_id int,\nshipment_id int,\nPRIMARY KEY(ord_id),\nFOREIGN KEY(exec_id) REFERENCES delivexec(exec_id),\nFOREIGN KEY(shipment_id) REFERENCES shipment(shipment_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.ord_id,a.ord_date,a.ord_amt,\nb.cust_name AS \"Customer\", \nc.exec_name AS \"Delivery Executive\", c.commission \nFROM orders a \nINNER JOIN shipment b \nON a.shipment_id=b.shipment_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.ord_id,a.ord_date,a.ord_amt,\nb.cust_name AS \"Customer\", \nc.exec_name AS \"Delivery Executive\", c.commission \nFROM orders a \nINNER JOIN shipment b \nON a.shipment_id=b.shipment_id \nINNER JOIN delivexec c \nON a.exec_id=c.exec_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT a.ord_id,a.ord_date,a.ord_amt,\nb.cust_name AS \"Customer\", \nc.exec_name AS \"Delivery Executive\", c.commission \nFROM orders a \nINNER JOIN delivexec c \nON a.exec_id=c.exec_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>None of these</p>\n\t</li>\n</ol>","a":[{"id":1618959,"option":"1","correct":false},{"id":1618960,"option":"2","correct":true},{"id":1618961,"option":"3","correct":false},{"id":1618962,"option":"4","correct":false}]},{"q":"<p>Which of the given SQL queries represent the implementation of EQUI-JOIN?</p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT artist.artist_id, album.artist_id, album_name, artist_name \nFROM artist, album \nWHERE artist.artist_id = album.artist_id(+);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT artist.artist_id, album.artist_id, album_name, artist_name \nFROM artist, album \nWHERE artist.artist_id(+) = album.artist_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT artist.artist_id, album.artist_id, album_name, artist_name \nFROM artist, album \nWHERE artist.artist_id = album.artist_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>None of these</p>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1618955,"option":"1","correct":false},{"id":1618956,"option":"2","correct":false},{"id":1618957,"option":"3","correct":true},{"id":1618958,"option":"4","correct":false}]},{"q":"<p>Consider the tables, employees, and managers given alongside Which of the following queries will retrieve all the records in the right table regardless of any of those records matching with the left table?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE managers(\nmanager_id int PRIMARY KEY,\nmgr_name varchar(30)\n);\n\nCREATE TABLE employees(\nemp_id int PRIMARY KEY,\nemp_name VARCHAR(30),\nmgr_id int,\nFOREIGN KEY(mgr_id) REFERENCES managers(mgr_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * from employees \nRIGHT INNER JOIN managers \nON employees.mgr_id = manager.manager_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * from employees \nLEFT OUTER JOIN managers \nON employees.mgr_id = manager.manager_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * from employees \nRIGHT OUTER JOIN managers \nON employees.mgr_id = manager.manager_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * from employees \nLEFT INNER JOIN managers \nON employees.mgr_id = manager.manager_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1618951,"option":"1","correct":false},{"id":1618952,"option":"2","correct":false},{"id":1618953,"option":"3","correct":true},{"id":1618954,"option":"4","correct":false}]},{"q":"<p>Consider the tables employees and managers given alongside. Which of these joins can you use to retrieve all records from both tables joining records from the left table, that match records from the right table?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE managers(\nmanager_id int PRIMARY KEY,\nmgr_name varchar(30)\n);\n\nCREATE TABLE employees(\nemp_id int PRIMARY KEY,\nemp_name VARCHAR(30),\nmgr_id int,\nFOREIGN KEY(mgr_id) REFERENCES managers(manager_id)\n);</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1618947,"option":"FULL OUTER JOIN","correct":false},{"id":1618948,"option":"FULL JOIN","correct":false},{"id":1618949,"option":"CARTESIAN JOIN","correct":false},{"id":1618950,"option":"Both 1 and 2","correct":true}]},{"q":"<p>Consider the tables given alongside. What can you do to get a list of employees along with the departments that they belong to?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE locations(\nlocation_id int,\ncity varchar(30),\nPRIMARY KEY(location_id)\n);\n\nCREATE TABLE departments(\ndept_id int,\ndept_name varchar(50),\nlocation_id int,\nPRIMARY KEY(dept_id),\nFOREIGN KEY(location_id) REFERENCES locations(location_id)\n);\n\nCREATE TABLE employees(\nemp_id INT,\nemp_name VARCHAR(50),\nsalary int,\ndept_id int,\nPRIMARY KEY(emp_id),\nFOREIGN KEY(dept_id) REFERENCES departments(dept_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT employees.emp_name AS \"Employee\", departments.dept_name\nFROM employees, departments\nWHERE employees.dept_id = departments.dept_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT employees.emp_name AS \"Employee\", departments.dept_name\nFROM employees\nJOIN departments\nON employees.dept_id = departments.dept_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Both 1 and 2</p>\n\t</li>\n\t<li>\n\t<p>Neither 1 nor 2</p>\n\t</li>\n</ol>","a":[{"id":1618943,"option":"1","correct":false},{"id":1618944,"option":"2","correct":false},{"id":1618945,"option":"3","correct":true},{"id":1618946,"option":"4","correct":false}]},{"q":"<p>You have two tables employee and department that have 10 records. In the given context, determine the type of join being used in the query given alongside.</p>\n\n<pre class=\"prettyprint\"><code>SELECT employee.emp_id, department.emp_id, name, dept_id \nFROM employee, department;</code></pre>\n\n<p> </p>","a":[{"id":1618939,"option":"Inner Join","correct":false},{"id":1618940,"option":"Outer Join","correct":false},{"id":1618941,"option":"Equi-Join","correct":false},{"id":1618942,"option":"Cartesian Join","correct":true}]},{"q":"<p>You have the tables sales and product given alongside. Which of these queries can be used to get the details of products that have acquired sales?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE product(\nproduct_id int,\nprod_name varchar(30),\nPRIMARY KEY(product_id)\n);\n\nCREATE TABLE sales(\nsale_id int,\nproduct_id int,\nsales_date date,\nquantity int,\nprice int,\nPRIMARY KEY(sale_id),\nFOREIGN KEY(product_id) REFERENCES product(product_id)\n);</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT sale_id, sales_date, quantity, price, product.prod_name \nFROM sales \nOUTER JOIN product \nON sales.product_id = product.product_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT sale_id, date, quantity, price, product.product_name\nFROM sales\nWHERE product_id IN (SELECT product_id\n FROM product);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT sale_id, sales_date, quantity, price, product.prod_name \nFROM sales \nINNER JOIN product \nON sales.product_id = product.product_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT sale_id, sales_date, quantity, price, product.prod_name \nFROM sales \nNATURAL JOIN product \nON sales.product_id = product.product_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1618935,"option":"1","correct":false},{"id":1618936,"option":"2","correct":false},{"id":1618937,"option":"3","correct":true},{"id":1618938,"option":"4","correct":false}]},{"q":"<p>You have two tables Shipment and Delivexec as shown alongside. You want to create a report using equi joins to display the name of the customer, the name of the delivery executive, and the city. Which of these queries can be used to achieve this?</p>\n\n<pre class=\"prettyprint\"><code>Create TABLE delivexec(\n exec_id int,\n exec_name varchar(30),\n city varchar(30),\n commission int,\n PRIMARY KEY(exec_id)\n );\n\nCreate TABLE shipment(\n shipment_id int,\n cust_name varchar(30),\n city varchar(30),\n grade int,\n exec_id int,\n PRIMARY KEY(shipment_id),\n FOREIGN KEY(exec_id) REFERENCES delivexec(exec_id)\n );</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT s.exec_name, d.city, d.cust_name \nFROM shipment s, delivexec d \nWHERE s.exec_id=d.exec_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT d.exec_name, s.city, s.cust_name \nFROM shipment s, delivexec d \nWHERE s.exec_id=d.exec_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>Either 1 or 2</p>\n\t</li>\n\t<li>\n\t<p>None of these</p>\n\t</li>\n</ol>","a":[{"id":1618931,"option":"1","correct":false},{"id":1618932,"option":"2","correct":true},{"id":1618933,"option":"3","correct":false},{"id":1618934,"option":"4","correct":false}]},{"q":"<p>You observe that the most recent implicit cursor added to your PL/SQL block can be referred as the SQL cursor which has certain attributes. Which of these attributes will return TRUE if an INSERT, UPDATE, or DELETE statement affected one or more rows?</p>","a":[{"id":1618927,"option":"%FOUND","correct":true},{"id":1618928,"option":"%NOTFOUND","correct":false},{"id":1618929,"option":"%ROWCOUNT","correct":false},{"id":1618930,"option":"%BULK_ROWCOUNT","correct":false}]},{"q":"<p>Consider the following sequence of operations: - Explicit cursor is defined in PL/SQL block - Opening the cursor - Fetching the data Which of the following statements will hold true while performing the mentioned operations?</p>\n\n<p>A. Rows in the cursor can be fetched to a PL/SQL record created in the PL/SQL Block.</p>\n\n<p>B. If records are used, they can have a different structure to that of the cursor.</p>\n\n<p>C. If the list of variables are used, the variables must be listed in the same order in the fetch statement as the columns in the cursor</p>","a":[{"id":1618922,"option":"B","correct":false},{"id":1618923,"option":"B,C","correct":false},{"id":1618924,"option":"C","correct":false},{"id":1618925,"option":"A,C","correct":true}]},{"q":"<p>You notice that the CURSOR_CLOSE_ON_COMMIT has been set to OFF when issuing a rollback on a cursor. What will happen as a result of this?</p>","a":[{"id":1618914,"option":"ROLLBACK will close and deallocate all open cursors","correct":false},{"id":1618915,"option":"ROLLBACK will not affect any open synchronous STATIC or INSENSITIVE cursors","correct":true},{"id":1618916,"option":"ROLLBACK will affect the asynchronous STATIC cursors that have been fully populated","correct":false},{"id":1618917,"option":"Open cursors of any other type will be closed and deallocated","correct":false}]},{"q":"<p>You want to use a CURSOR FOR LOOP to perform some operations automatically. Which of the following actions can be achieved automatically in the given scenario?</p>\n\n<p>1. Implicitly declaring the loop index as a %rowtype record.</p>\n\n<p>2. Retrieve records for each iteration.</p>\n\n<p>3. Opening the cursor</p>","a":[{"id":1617112,"option":"Only 1 and 2","correct":false},{"id":1617113,"option":"Only 2 and 3","correct":false},{"id":1617114,"option":"Only 1 and 3","correct":false},{"id":1617115,"option":"All 1, 2 and 3","correct":true}]},{"q":"<p>Consider the syntax for FOR LOOP cursor statement given alongside. Which of the following statements can be deduced in the given context?</p>\n\n<p>S1: The declared cursor is set up in the FOR loop.</p>\n\n<p>S2: The loop variable 'I' will behave as a cursor variable.</p>\n\n<pre class=\"prettyprint\"><code>DECLARE\nCURSOR &lt;cursor_name&gt; IS &lt;SELECT statement&gt;;\nBEGIN\n FOR I IN &lt;cursor_name&gt;\n LOOP\n .\n .\n END LOOP;\nEND;</code></pre>\n\n<p> </p>","a":[{"id":1617108,"option":"Only S1","correct":false},{"id":1617109,"option":"Only S2","correct":false},{"id":1617110,"option":"Both S1 and S2","correct":true},{"id":1617111,"option":"Neither S1 nor S2","correct":false}]},{"q":"<p>Assume that you have declared cursors in a procedure and a package specification. Which of the following options is valid in the given context?</p>","a":[{"id":1617098,"option":"Cursor declared in Package specification is Global","correct":false},{"id":1617099,"option":"Cursor declared in Procedure is restricted to that specific procedure","correct":false},{"id":1617100,"option":"Cursors declared in procedure can be invoked from other procedures too","correct":false},{"id":1617101,"option":"Both 1 and 2","correct":true}]},{"q":"<p>While writing a fetch query, you want to be sure to retrieve the first row in a cursor’s query results. Which fetch orientation option should you use in the FETCH statement in order to do so?</p>","a":[{"id":1617094,"option":"PRIOR","correct":false},{"id":1617095,"option":"NEXT","correct":false},{"id":1617096,"option":"ABSOLUTE -1","correct":false},{"id":1617097,"option":"FIRST","correct":true}]},{"q":"<p>You have a table <em>students</em> with columns id, name, and email. Which of these options is a correct way to declare a cursor for executing a SELECT query on the <em>students</em> table?</p>","a":[{"id":1617090,"option":"CURSOR c_students IS  SELECT id, name, email FROM students;","correct":true},{"id":1617091,"option":"CURSOR c_students SELECT id, name, email FROM students;","correct":false},{"id":1617092,"option":"CURSOR c_students FOR  SELECT id, name, email FROM students;","correct":false},{"id":1617093,"option":"OPEN CURSOR c_students SELECT id, name, email FROM students;","correct":false}]},{"q":"<p>You want to use cursor attributes to access some information about a certain cursor. Which of these attributes DOES NOT return a boolean value when doing so?</p>","a":[{"id":1617086,"option":"%FOUND","correct":false},{"id":1617087,"option":"%ROWCOUNT","correct":true},{"id":1617088,"option":"%OPENCOUNT","correct":false},{"id":1617089,"option":"%COUNT","correct":false}]},{"q":"<p>You want to declare an explicit cursor to control the context area when working with a PL/SQL block. Which of the following can be inferred from the given scenario?</p>\n\n<p>1. The name of this context area is the same as the cursor name.</p>\n\n<p>2. You are creating a named context area for the 'SELECT' statement that is defined in the declaration part.</p>","a":[{"id":1616918,"option":"Only 1","correct":false},{"id":1616919,"option":"Only 2","correct":false},{"id":1616920,"option":"Both 1 and 2","correct":true},{"id":1616921,"option":"Neither 1 nor 2","correct":false}]},{"q":"<p>You want to add cursors in your PL/SQL block such that programmers cannot control it and the information in it. Which of these types of cursors can you use to achieve this?</p>","a":[{"id":1616914,"option":"Implicit Cursors","correct":true},{"id":1616915,"option":"Explicit cursors","correct":false},{"id":1616916,"option":"Both 1 and 2","correct":false},{"id":1616917,"option":"Neither 1 nor 2","correct":false}]},{"q":"<p>You want to create a unique index per table that uses the primary key to organize the data that is within the table. What can be achieved by creating such a cluster?</p>","a":[{"id":1616910,"option":"You can ensure that the primary key is stored in increasing order","correct":false},{"id":1616911,"option":"You do not have to explicitly declare such a cluster","correct":false},{"id":1616912,"option":"Both 1 and 2","correct":true},{"id":1616913,"option":"None of these","correct":false}]},{"q":"<p>You want to rename a particular index in your database. Which of the following can be used to achieve this?</p>","a":[{"id":1616906,"option":"The system stored procedure sp_rename","correct":true},{"id":1616907,"option":"ALTER INDEX","correct":false},{"id":1616908,"option":"ALTER INDEXNAME","correct":false},{"id":1616909,"option":"CREATE INDEXNAME","correct":false}]},{"q":"<p>You have decided to use indexes to enhance the performance of your database. In which of the given situations should you reconsider using indexes?</p>\n\n<p>1. You are working with tables that have a column with a wide range of values.</p>\n\n<p>2. You have a table with frequent, large batch updates or insert operations.</p>\n\n<p>3. You are working on tables with columns that are frequently manipulated.</p>","a":[{"id":1616902,"option":"Only 2 and 3","correct":true},{"id":1616903,"option":"Only 1 and 3","correct":false},{"id":1616904,"option":"Only 1 and 2","correct":false},{"id":1616905,"option":"All 1, 2 and 3","correct":false}]},{"q":"<p>You want to use an index in your SQL table to improve performance as well as maintain data integrity (maintain distinct values). Which of these indexes can you use to achieve this?</p>\n\n<p> </p>","a":[{"id":1616884,"option":"CREATE UNIQUE INDEX Cust_Ind on Customer (Cust_Name);","correct":true},{"id":1616885,"option":"CREATE INDEX Cust_Ind on Customer (Cust_Name);","correct":false},{"id":1616886,"option":"Both 1 and 2","correct":false},{"id":1616887,"option":"Neither 1 nor 2","correct":false}]},{"q":"<p>You want to use a set of indexes to perform the following set operations in MS/SQL</p>\n\n<p>A. Indexes are used for searching a set of columns for a single value.</p>\n\n<p>B. Indexes are to be used for operations on columns with high selectivity.</p>\n\n<p>Select the kind of indexes that will be appropriate for usage in these situations from the given choices.</p>","a":[{"id":1616876,"option":"A. Clustered ,B. Nonclustered","correct":false},{"id":1616877,"option":"A. Clustered ,B. Clustered","correct":false},{"id":1616878,"option":"A. Nonclustered,B. Nonclustered","correct":true},{"id":1616879,"option":"A. Nonclustered,B. Clustered","correct":false}]},{"q":"<p>You are using indexes on your tables to speed up data retrievals from your database. What can be said about the given deductions in the given scenario?</p>\n\n<p>D1: An index can help speed up SELECT queries and WHERE clauses</p>\n\n<p>D2: An index can help speed up UPDATE and the INSERT statements</p>","a":[{"id":1616872,"option":"Only D1 is true","correct":true},{"id":1616873,"option":"Only D2 is true","correct":false},{"id":1616874,"option":"Both D1 and D2 are true","correct":false},{"id":1616875,"option":"Neither D1 nor D2 are true","correct":false}]},{"q":"<p>You want to delete an index 'Cust_Ind' used in a MySQL table named 'Cust_Det'. Which of these queries can you use to achieve this?</p>\n\n<p> </p>","a":[{"id":1616868,"option":"ALTER TABLE Cust_Det ,DROP INDEX Cust_Ind;","correct":true},{"id":1616869,"option":"DROP INDEX Cust_Ind;","correct":false},{"id":1616870,"option":"DROP INDEX Cust_Det.Cust_Ind;","correct":false},{"id":1616871,"option":"DROP INDEX Cust_Ind FROM Cust_Det;","correct":false}]},{"q":"<p>Which of the following SQL query will create an appropriate non-clustered index on the Cake_ID column of the OrdersTbl table shown alongside?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE OrdersTbl\n(\n Id INT,\n CustomerId INT,\nCakeId Varchar(100),\nCakeFlavor VARCHAR(50)\n)\nGO</code></pre>\n\n<p><strong>options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>CREATE NONCLUSTERED INDEX IX_OrdersTbl _CakeId\nON dbo.OrdersTbl(CakeId)\nINCLUDE ([Id],[CustomerId],[CakeFlavor])\nGO</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>CREATE NONCLUSTERED INDEX IX_OrdersTbl _Cake_ID\nON dbo.OrdersTbl(Customer_ID)\nINCLUDE ([Id],[Cake_ID],[CakeFlavor])\nGO</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>CREATE NONCLUSTERED INDEX IX_OrdersTbl _Cake_ID\nON dbo.OrdersTbl(Cake_ID)\nBEGIN\nINCLUDE ([Id],[Customer_ID],[CakeFlavor])\nEND</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>CREATE NONCLUSTERED INDEX IX_OrdersTbl _Customer_ID\nON dbo.OrdersTbl(Cake_ID)\nINCLUDE ([Cake_ID],[Customer_ID],[CakeFlavor])\nGO</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1616864,"option":"1","correct":true},{"id":1616865,"option":"2","correct":false},{"id":1616866,"option":"3","correct":false},{"id":1616867,"option":"4","correct":false}]},{"q":"<p>You have two tables STUDENTS and DEPARTMENTS, having millions of records with only 15 distinct values. In the given scenario, what type of SQL index can you use instead of a normal query to improve the performance when fetching data from the tables?</p>","a":[{"id":1616860,"option":"Unique Index","correct":false},{"id":1616861,"option":"Clustered Index","correct":false},{"id":1616862,"option":"Bit-map Index","correct":true},{"id":1616863,"option":"Non-clustered Index","correct":false}]},{"q":"<p>You want to drop a particular index from your data dictionary. Which of these is a necessary condition to achieve this?</p>","a":[{"id":1616856,"option":"You must be the owner of the index","correct":false},{"id":1616857,"option":"You must have the DROP ANY INDEX privilege","correct":false},{"id":1616858,"option":"Both 1 and 2","correct":false},{"id":1616859,"option":"Either 1 or 2","correct":true}]},{"q":"<p>A Mutating Trigger Error is encountered if a procedure that updates a column of table X is called in a database trigger of the same table. What can you do to avoid this error?</p>","a":[{"id":1616851,"option":"Procedure should be declared as an AUTONOMOUS TRANSACTION","correct":false},{"id":1616852,"option":"You need to have a row level as well as a statement level trigger","correct":false},{"id":1616853,"option":"You need to declare only a statement level trigger","correct":false},{"id":1616854,"option":"Both 1 and 2","correct":true}]},{"q":"<p>You want to use a trigger type that has meaningful access to values using both the: NEW and: OLD qualifiers. Which of these are valid triggers that can be used in the given scenario?</p>","a":[{"id":1616846,"option":"INSERT","correct":false},{"id":1616847,"option":"DELETE","correct":false},{"id":1616848,"option":"UPDATE","correct":true},{"id":1616849,"option":"None of these","correct":false}]},{"q":"<p>You want to use the INSTEAD OF trigger in a PL/SQL block. On which of the following types of triggers can this trigger be used?</p>\n\n<ol>\n\t<li>DML triggers</li>\n\t<li>DDL triggers</li>\n</ol>","a":[{"id":1616842,"option":"Only 1","correct":true},{"id":1616843,"option":"Only 2","correct":false},{"id":1616844,"option":"Both 1, 2","correct":false},{"id":1616845,"option":"None of these","correct":false}]},{"q":"<p>You issued a ROLLBACK TRANSACTION in a trigger and observe that the trigger continues the execution of the statements remaining after the ROLLBACK statement. Which of the following is likely to happen if two of these statements are modifying the data?</p>\n\n<p>1. Modifications are also rolled back</p>\n\n<p>2. Modifications are not rolled back</p>\n\n<p>3. No nested triggers are fired by the execution of these remaining statements</p>\n\n<p>4. Nested triggers are fired by the execution of these remaining statements</p>","a":[{"id":1616838,"option":"1 and 3","correct":false},{"id":1616839,"option":"1 and 4","correct":false},{"id":1616840,"option":"2 and 3","correct":true},{"id":1616841,"option":"2 and 4","correct":false}]},{"q":"<p>You want to classify a trigger when using it in a PL/SQL block. Which of these are valid parameters required to achieve this?</p>\n\n<ol>\n\t<li>Timing</li>\n\t<li>Level</li>\n\t<li>Event</li>\n</ol>\n\n<p> </p>","a":[{"id":1616830,"option":"Only 1, 2","correct":false},{"id":1616831,"option":"Only 2, 3","correct":false},{"id":1616832,"option":"Only 1, 3","correct":false},{"id":1616833,"option":"All 1, 2, 3","correct":true}]},{"q":"<p>You are using triggers when working with a PL/SQL block. Which of these benefits will you achieve by doing so?</p>\n\n<p>1. You can enforce referential integrity.</p>\n\n<p>2. You can synchronously replicate tables.</p>\n\n<p> </p>","a":[{"id":1616826,"option":"Only 1","correct":false},{"id":1616827,"option":"Only 2","correct":false},{"id":1616828,"option":"Both 1,2","correct":true},{"id":1616829,"option":"None of these","correct":false}]},{"q":"<p>You want to concatenate the left outer join and right outer join queries shown in the query given alongside. Which of the following keywords should you insert in place of XXX in line 5 in order to accomplish this?</p>\n\n<pre class=\"prettyprint\"><code>1| SELECT categories.name, entries.title, entries.created \n2| FROM categories\n3| LEFT OUTER JOIN entries \n4| ON entries.category = categories.category\n5| XXX\n6| SELECT categories.name, entries.title, entries.created \n7| FROM categories\n8| RIGHT OUTER JOIN entries \n9| ON entries.category = categories.category</code></pre>\n\n<p> </p>","a":[{"id":1616822,"option":"JOIN","correct":false},{"id":1616823,"option":"APPLY","correct":false},{"id":1616824,"option":"UNION","correct":true},{"id":1616825,"option":"PIVOT","correct":false}]},{"q":"<p>Which of these queries is a valid outer join query statement in SQL?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT employee_id, manager_id FROM company WHERE company.manager_id(+) = company.employee_id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT c1.employee_id, c1.manager_id, c2.employee_id FROM company c1, company c2 WHERE c1.manager_id(+) = c2.employee_id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT c1.employee_id, c1.manager_id, c2.employee_id FROM company c1, company c2 WHERE c1.manager_id = c2.employee_id LEFT [OUTER] JOIN;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT employee_id, manager_id FROM company WHERE company.manager_id(+) = company.employee_id RIGHT [OUTER] JOIN;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1616818,"option":"1","correct":false},{"id":1616819,"option":"2","correct":true},{"id":1616820,"option":"3","correct":false},{"id":1616821,"option":"4","correct":false}]},{"q":"<p>Consider the table Department and Employee given alongside. Which of the following queries will you use if you want to get all non-null values from both the tables?</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Department\n(\nDept_Id INT,\nDept_Name VARCHAR (50) NOT NULL,\nDept_Floor VARCHAR(50),\nPRIMARY KEY(Dept_Id)\n);\n\nCREATE TABLE Employee\n(\nEmp_Id INT,\nDept_Id INT,\nEmp_Name VARCHAR (50) NOT NULL,\nEmp_Salary INT,\nPRIMARY KEY (Emp_Id)\n);</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT Employee.Emp_Id, Employee.Emp_Name, Dept_Name, Dept_Floor\nFROM Employee \nINNER JOIN Department \nON Employee.Dept_Id = Department.Dept_Id;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT Employee.Emp_Id, Employee.Emp_Name, Dept_Name, Dept_Floor\nFROM Employee \nLEFT JOIN Department \nON Employee.Dept_Id = Department.Dept_Id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT Employee.Emp_Id, Employee.Emp_Name, Dept_Name, Dept_Floor\nFROM Employee \nLEFT OUTER JOIN Department \nON Employee.Dept_Id = Department.Dept_Id;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<p>None of these</p>\n\t</li>\n</ol>","a":[{"id":1616810,"option":"1","correct":true},{"id":1616811,"option":"2","correct":false},{"id":1616812,"option":"3","correct":false},{"id":1616813,"option":"4","correct":false}]},{"q":"<p>Which of the following operation is being performed in the following SQL query?</p>\n\n<pre class=\"prettyprint\"><code>SELECT student.stu_name, subject.sub_name, subject.marks\n FROM student, subject\n WHERE (subject.student_id= student.student_id)\n AND subject.stu_marks &gt; 60;</code></pre>\n\n<p> </p>","a":[{"id":1616794,"option":"Outer Join","correct":false},{"id":1616795,"option":"Self Join","correct":false},{"id":1616796,"option":"Inner Join","correct":true},{"id":1616797,"option":"Full Outer Join","correct":false}]},{"q":"<p>You are using 'REF CURSOR' as the data type when declaring a cursor variable in PL/SQL. In the given scenario, which of these snippets can be used to create a strong typed REF CURSOR variable named 'e_employee'?</p>","a":[{"id":1619232,"option":"DECLARE TYPE employee_t IS REF CURSOR RETURN employees%ROWTYPE;  e_employee employee_t;","correct":true},{"id":1619233,"option":"DECLARE TYPE employee_t IS REF CURSOR;  e_employee employee_t;","correct":false},{"id":1619234,"option":"DECLARE e_employee SYS_REFCURSOR;","correct":false},{"id":1619235,"option":"All 1, 2 and 3","correct":false}]},{"q":"<p>Assume that you are using SQL cursor attributes in procedural statements but not in SQL statements. In the given scenario, what do the implicit cursor attributes return if Oracle opens the SQL cursor automatically?</p>","a":[{"id":1617103,"option":"It returns NULL","correct":true},{"id":1617104,"option":"It returns FALSE","correct":false},{"id":1617105,"option":"It returns TRUE","correct":false},{"id":1617106,"option":"It returns 1","correct":false}]},{"q":"<p>Consider the table employee and employee_details given alongside Which of the following queries is optimized and better to use?</p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code> SELECT name FROM employee WHERE (salary, age ) = (SELECT MAX (salary), MAX (age) FROM employee_details) AND dept = 'Electronics';</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT name FROM employee WHERE salary = (SELECT MAX(salary) FROM employee_details) AND age = (SELECT MAX(age) FROM employee_details) AND emp_dept = 'Electronics';</code></pre>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE employee(\nid int, \nsalary int,\nage int,\nPRIMARY KEY (id)\n);\n\nCREATE TABLE employee_details(\nemployee_id int,\nemp_dept char(10),\nFOREIGN KEY(employee_id) REFERENCES employees\n);</code></pre>\n\n<p> </p>","a":[{"id":1619046,"option":"Only 1","correct":true},{"id":1619047,"option":"Only 2","correct":false},{"id":1619048,"option":"Both 1 and 2","correct":false},{"id":1619049,"option":"Neither 1 nor 2","correct":false}]},{"q":"<p>You want to use a cursor to control the context area. Which of the following statements doesn't have an implicit cursor associated with it when issued?</p>","a":[{"id":1618918,"option":"INSERT","correct":false},{"id":1618919,"option":"UPDATE","correct":false},{"id":1618920,"option":"DELETE","correct":false},{"id":1618921,"option":"DROP","correct":true}]},{"q":"<p>You are working with Azure SQL Database. A single database resource creates a database in Azure SQL Database with its own set of resources. Which of the following statements about the dynamic scalability are correct:<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>It enables your database to transparently respond to rapidly-changing resource requirements.</li>\n\t<li>It enables you to only pay for the resources that are required.</li>\n\t<li>It enables you to pay for the resources that are required and are available for the database.</li>\n</ol>","a":[{"id":1189647,"option":"1 and 2","correct":false},{"id":1189648,"option":"2 and 3","correct":false},{"id":1189649,"option":"1 and 3","correct":false},{"id":1189650,"option":"All of these","correct":true}]},{"q":"<p>You have fetched all records from an explicit cursor and closed the cursor. What will happen as a result of doing this?</p>","a":[{"id":1616922,"option":"The memory allocated to this context area will be released.","correct":true},{"id":1616923,"option":"A Boolean result 'TRUE' is returned.","correct":false},{"id":1616924,"option":"A Boolean result 'FALSE' is returned.","correct":false},{"id":1616925,"option":"None of these","correct":false}]},{"q":"<p>You have defined a trigger on a table and notice that you need to create the trigger on the view of that table. Which of the following clauses will you use to create that trigger on the view?</p>\n\n<p> </p>","a":[{"id":1616834,"option":"INPLACE OF","correct":false},{"id":1616835,"option":"ON","correct":false},{"id":1616836,"option":"INSTEAD OF","correct":true},{"id":1616837,"option":"FOR","correct":false}]},{"q":"<p>Consider you have Table <strong>Student.</strong></p>\n\n<p><strong>Table</strong>: <strong>Student</strong></p>\n\n<table border=\"1\" style=\"width: 250px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 30px;\">\n\t\t\t<p style=\"text-align: center;\"><strong>ID</strong></p>\n\t\t\t</td>\n\t\t\t<td style=\"text-align: center; width: 59px;\"><strong> Name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 60px;\"><strong>Age</strong></td>\n\t\t\t<td style=\"text-align: center; width: 73px;\"><strong>Score</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 30px;\">1</td>\n\t\t\t<td style=\"text-align: center; width: 59px;\">Alice</td>\n\t\t\t<td style=\"text-align: center; width: 60px;\">21</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 30px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 59px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 60px;\">24</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">9</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 30px;\">3</td>\n\t\t\t<td style=\"text-align: center; width: 59px;\">Ben</td>\n\t\t\t<td style=\"text-align: center; width: 60px;\">19</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 30px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 59px;\">Mike </td>\n\t\t\t<td style=\"text-align: center; width: 60px;\">28</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">6</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 30px;\">5</td>\n\t\t\t<td style=\"text-align: center; width: 59px;\">Tara</td>\n\t\t\t<td style=\"text-align: center; width: 60px;\">25</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 30px;\">6</td>\n\t\t\t<td style=\"text-align: center; width: 59px;\">Anita</td>\n\t\t\t<td style=\"text-align: center; width: 60px;\">29</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">7</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 30px;\">7</td>\n\t\t\t<td style=\"text-align: center; width: 59px;\">Lisa</td>\n\t\t\t<td style=\"text-align: center; width: 60px;\">18</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">5</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT AVG(S.age) AS Average FROM Student S Where S.age &gt;= 20 GROUP BY S.Score HAVING 1 &lt; (SELECT COUNT(*) FROM Student S2 where S.Score = S2.Score);</code></pre>\n\n<p><strong> </strong>If you are required to execute the above <strong>MySQL</strong> query, then determine the output?</p>\n\n<p><strong>1.</strong></p>\n\n<table border=\"1\" style=\"width: 70px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 58px;\"><strong>Average</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 58px;\">27.0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>2.</strong></p>\n\n<table border=\"1\" style=\"width: 70px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 58px;\"><strong>Average</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 58px;\">23.0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>3.</strong></p>\n\n<table border=\"1\" style=\"width: 70px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 58px;\"><strong>AVG</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 58px;\">27.0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>4.</strong></p>\n\n<table border=\"1\" style=\"width: 70px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 58px;\"><strong>AVG</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 58px;\">23.0</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p style=\"text-align: center;\"> </p>","a":[{"id":1582853,"option":"1","correct":false},{"id":1582854,"option":"2","correct":true},{"id":1582855,"option":"3","correct":false},{"id":1582856,"option":"4","correct":false}]},{"q":"<p>Alice is trying to convert the existing RDDs into DataFrames by using Spark SQL in her Spark application. Assume that she knows the schema while writing her Spark application. If she has inferred the RDD schema containing specific types of objects to perform this action, then which of the following methods she might have implemented with RDDs in this scenario?</p>","a":[{"id":1577928,"option":"Reflection based method","correct":true},{"id":1577929,"option":"Programmatic interface method","correct":false},{"id":1577930,"option":"Schema API method","correct":false},{"id":1577931,"option":"None of these","correct":false}]},{"q":"<p>Ben wants to work on Spark SQL CLI to run the Hive metastore service in local mode and execute queries from the command line. Assume that the configuration of Hive is done by placing his XML files <strong>hive-site.xml</strong>, <strong>core-site.xml</strong>, and <strong>hdfs-site.xml </strong> in the <strong><code>conf/</code>.  </strong>directory. Now, if he started the Spark SQL CLI to perform these actions in this scenario, then which of the following Distributed query engine directory commands must have been implemented to run the Spark SQL CLI in this scenario:</p>\n\n<p><strong>Directories</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>./bin/spark-sql/start-thriftserver.sh</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>./bin/spark-sql/beeline</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>./bin/spark-sql</code></pre>\n\n<p> </p>","a":[{"id":1575049,"option":"1","correct":false},{"id":1575050,"option":"2","correct":false},{"id":1575051,"option":"3","correct":true},{"id":1575052,"option":"None of these","correct":false}]},{"q":"<p>Based on the following tables named 'week' and 'test', if you execute the PostgreSQL query given below, what will be the output:</p>\n\n<p><strong>Table1: </strong>week</p>\n\n<p><img alt=\"\" height=\"74\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/e81ea69d-93b2-45c1-b070-57568d07280b.png\" width=\"196\"><br>\n<strong>Table2:</strong> test</p>\n\n<p><img alt=\"\" height=\"75\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/48afcb14-3da8-4fac-bebd-edcf9ce2e5ae.png\" width=\"196\"></p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT *\nFROM week\nINNER JOIN test ON true;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p><img alt=\"\" height=\"85\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/18c04770-c83c-4807-aff9-1beaa4cee5b1.png\" width=\"394\"></p>\n\n<p><strong>2.</strong></p>\n\n<p><img alt=\"\" height=\"120\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/5a125d2a-fe48-4545-a605-e5648bd2324f.png\" width=\"388\"></p>\n\n<p><strong>3.</strong></p>\n\n<p><img alt=\"\" height=\"125\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2a212a30-7a24-41f6-9c3c-2523f1adcccd.png\" width=\"393\"></p>\n\n<p><strong>4.</strong></p>\n\n<p><img alt=\"\" height=\"121\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/046d825f-1ac0-433e-a15f-4e06f372db42.png\" width=\"387\"></p>","a":[{"id":1574430,"option":"1","correct":false},{"id":1574431,"option":"2","correct":false},{"id":1574432,"option":"3","correct":false},{"id":1574433,"option":"4","correct":true}]},{"q":"<p>Based on the following table 'stock', if you execute the PostgreSQL query given below, what will be the output:<br>\n<strong>Table:</strong></p>\n\n<p><strong><img alt=\"\" height=\"143\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/b944fb74-5914-43d8-8be3-5ef71b5fd47f.png\" width=\"494\"></strong></p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>INSERT INTO stock  \nVALUES(15,'Breakfast','Kelloggs',500,'2021-11-30')  \nON CONFLICT (pr_id)  \nDO UPDATE SET brand =   \nEXCLUDED.brand || ',' || stock.brand;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p><img alt=\"\" height=\"148\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/cbfb595c-9414-400a-a495-5d28431998cb.png\" width=\"502\"></p>\n\n<p><strong>2.</strong></p>\n\n<p><img alt=\"\" height=\"143\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/b2b566bf-7dba-4160-824f-580576959c47.png\" width=\"496\"></p>\n\n<p><strong>3.</strong></p>\n\n<p><img alt=\"\" height=\"163\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7b33b9bf-ea02-47ce-9354-619ea77be6c1.png\" width=\"495\"></p>\n\n<p><strong>4.</strong></p>\n\n<p><img alt=\"\" height=\"143\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/44649f53-cd85-4ea1-b31b-0568cbccbf60.png\" width=\"494\"></p>","a":[{"id":1574414,"option":"1","correct":false},{"id":1574415,"option":"2","correct":false},{"id":1574416,"option":"3","correct":true},{"id":1574417,"option":"4","correct":false}]},{"q":"<p>Based on the following table 'stock', if you execute the PostgreSQL query given below, what will be the output:<br>\n<strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"168\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ae0c0168-abac-4e28-9c55-558f6414bad3.png\" width=\"497\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT pr_id, category, max(price),brand\nFROM stock \nGROUP BY pr_id\nHAVING max(price)&lt;1000\nORDER BY pr_id;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p><img alt=\"\" height=\"108\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2b334e6d-3729-41a6-8483-0497ade0c132.png\" width=\"264\"></p>\n\n<p><strong>2.</strong></p>\n\n<p><img alt=\"\" height=\"104\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/1192160b-66e7-43f7-a6a2-04e6cfc4dd85.png\" width=\"260\"></p>\n\n<p><strong>3.</strong></p>\n\n<p><img alt=\"\" height=\"102\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7310430c-4813-4f45-900a-32363ec3a7b5.png\" width=\"259\"></p>\n\n<p> </p>","a":[{"id":1574402,"option":"1","correct":false},{"id":1574403,"option":"2","correct":true},{"id":1574404,"option":"3","correct":false},{"id":1574405,"option":"Syntax error","correct":false}]},{"q":"<p>Based on the following table 'stock', if you execute the PostgreSQL query given below, what will be the output:<br>\n<strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"168\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a5f52f7d-603d-49f6-926a-4bf71303280c.png\" width=\"497\"></p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT pr_id, category, brand, price\nFROM stock \nWHERE\n(expiry_date BETWEEN '2021-03-31' AND '2023-12-31') AND brand IN ('Tata','Sunfeast','Saffola') AND price&lt;1000\nORDER BY category;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p><strong><img alt=\"\" height=\"83\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/89d785b1-08b7-459c-8767-600977bcf47b.png\" width=\"259\"></strong></p>\n\n<p><strong>2.</strong></p>\n\n<p><img alt=\"\" height=\"104\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/056c6008-6f67-4106-9f69-b1865c7cca6a.png\" width=\"260\"></p>\n\n<p><strong>3.</strong></p>\n\n<p><img alt=\"\" height=\"102\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/d9feb840-6c0a-4227-b184-af5c7ca07c48.png\" width=\"258\"></p>\n\n<p><strong>4.</strong></p>\n\n<p><img alt=\"\" height=\"83\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/309e2a05-0fa3-41d4-b1d2-81497e0bb8d3.png\" width=\"262\"></p>","a":[{"id":1574390,"option":"1","correct":false},{"id":1574391,"option":"2","correct":false},{"id":1574392,"option":"3","correct":false},{"id":1574393,"option":"4","correct":true}]},{"q":"<p>You want to find the total number of students studying in each department. The query given below does not work as the join statement is not correct. What would be the correct join statement to perform the task?</p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT department_name AS \"Department Name\", \nCOUNT(*) AS \"No of students\"\nFROM departments\nJOIN students\nON students.id = departments.department_id\nGROUP BY departments.department_id, department_name\nORDER BY department_name;</code></pre>\n\n<p><strong>Tables:</strong></p>\n\n<p><img alt=\"\" height=\"657\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/304fa529-96fc-4036-8ab4-9d78d5287f6b.png\" width=\"445\"></p>\n\n<p><img alt=\"\" height=\"259\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2e6ac7ce-510f-4a49-9cab-06303e19a740.png\" width=\"317\"></p>\n\n<p><strong>Join statements</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>INNER JOIN students \nON students.id = departments.department_id \nGROUP BY departments.department_id, department_name \nORDER BY department_name;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>NATURAL JOIN students \nGROUP BY departments.department_id, department_name \nORDER BY department_name;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>INNER JOIN students \nON students.department_id = departments.department_id \nGROUP BY departments.department_id, department_name \nORDER BY department_name;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>FULL OUTER JOIN students \nON students.department_id = departments.department_id \nGROUP BY departments.department_id, department_name \nORDER BY department_name;</code></pre>\n\n<p> </p>","a":[{"id":1574266,"option":"1","correct":false},{"id":1574267,"option":"2","correct":false},{"id":1574268,"option":"3","correct":true},{"id":1574269,"option":"4","correct":false}]},{"q":"<p>Based on the following tables named 'empdept_data', if you execute the PostgreSQL query given below, what will be the output?<br>\n<strong>Table1: empdept_data</strong></p>\n\n<p><img alt=\"\" height=\"147\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/e1161e04-ad42-42be-a8a6-ada2a2c99e41.png\" width=\"339\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT *, FIRST_VALUE(sal) OVER(PARTITION BY dept)first_val FROM empdept_data;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/733212dc-be27-4604-97fb-82d714e6b93a.png\" width=\"374\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"143\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a325519c-bf82-49cf-a6f3-41a249731836.png\" width=\"372\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/db48448e-4601-462c-bf8c-a458e0e5674f.png\" width=\"372\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"148\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7ad07753-9337-4253-ac9d-31263b326504.png\" width=\"373\"></p>","a":[{"id":1574262,"option":"1","correct":false},{"id":1574263,"option":"2","correct":true},{"id":1574264,"option":"3","correct":false},{"id":1574265,"option":"4","correct":false}]},{"q":"<p>Based on the following tables named 'empdept_data', if you execute the PostgreSQL query given below, what will be the output?<br>\n<strong>Table1: empdept_data</strong></p>\n\n<p><img alt=\"\" height=\"147\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/585cc318-b2b1-41eb-b761-6e56f4121e1b.png\" width=\"339\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT id, name,dept,sal, LAG(sal) OVER(PARTITION BY dept ORDER BY sal) prev_val FROM empdept_data;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"142\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/dbefd6b7-fb60-4626-b896-e3bb8d79b064.png\" width=\"408\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/667b9f06-31a1-4709-9005-a16988824ea5.png\" width=\"406\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/0e572897-0e89-4293-9603-7be51b2c3d88.png\" width=\"406\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"146\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/dae28a7b-9226-41c4-b44b-d524c596d656.png\" width=\"408\"></p>","a":[{"id":1574258,"option":"1","correct":false},{"id":1574259,"option":"2","correct":false},{"id":1574260,"option":"3","correct":false},{"id":1574261,"option":"4","correct":true}]},{"q":"<p>Based on the following tables named 'empdept_data', if you execute the PostgreSQL query given below, what will be the output?<br>\n<strong>Table1: empdept_data</strong></p>\n\n<p><img alt=\"\" height=\"147\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/df55c4bc-a94f-46ce-8499-454d06184c71.png\" width=\"339\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT id, name,dept,sal, LEAD(sal) OVER(PARTITION BY dept ORDER BY sal) prev_val FROM empdept_data;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/5683be35-5928-4d44-8f56-6fd948c35596.png\" width=\"364\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/848c8846-d8f1-4c2e-b7dc-c2c99839fda9.png\" width=\"364\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"143\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/5fc03530-85ad-46c6-89f8-4e1cd93d51a0.png\" width=\"364\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"148\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/c5562640-1816-45fd-bcc9-90df95a4f4fd.png\" width=\"363\"></p>","a":[{"id":1574254,"option":"1","correct":false},{"id":1574255,"option":"2","correct":true},{"id":1574256,"option":"3","correct":false},{"id":1574257,"option":"4","correct":false}]},{"q":"<p>Based on the following tables named 'empdept_data', if you execute the PostgreSQL query given below, what will be the output?<br>\n<strong>Table1: empdept_data</strong></p>\n\n<p><img alt=\"\" height=\"147\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7aaa4872-4518-440b-ba89-11dcfd222f27.png\" width=\"339\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT *, ROW_NUMBER() OVER(PARTITION BY dept ORDER BY sal DESC) row_num FROM empdept_data;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"144\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/23098d50-ae4a-48e7-8b3c-07c4299d1b05.png\" width=\"363\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"142\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/51877b7d-60bb-4625-96d3-566c68d612b3.png\" width=\"364\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"144\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/626b8d7d-cffc-4cf7-8a16-3243fb917bc8.png\" width=\"364\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"143\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ca1c2364-e66c-48fb-bc2a-036db2ae0d8b.png\" width=\"364\"></p>","a":[{"id":1574250,"option":"1","correct":false},{"id":1574251,"option":"2","correct":false},{"id":1574252,"option":"3","correct":true},{"id":1574253,"option":"4","correct":false}]},{"q":"<p>Based on the following table Product_Sales, if you execute the PostgreSQL query given below, what will be the output?</p>\n\n<p><strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"152\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/e11aa185-4127-4344-9ddf-7c25a726558c.png\" width=\"332\"></p>\n\n<p><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Top_Product_Sales(\n   id INT PRIMARY KEY NOT NULL,\n   product TEXT NOT NULL,\n   zone TEXT NOT NULL,\n   cost INT NOT NULL,\n   sales INT NOT NULL\n);\nWITH deleted_rows AS (\n   DELETE FROM Product_Sales\n   WHERE\n      cost &gt;= 10 AND sales &gt;= 800\n   RETURNING *\n)\nINSERT INTO Top_Product_Sales (SELECT * FROM deleted_rows);</code></pre>\n\n<p> </p>","a":[{"id":1574246,"option":"INSERT 0 5","correct":false},{"id":1574247,"option":"INSERT 7 5","correct":false},{"id":1574248,"option":"INSERT 7 2","correct":false},{"id":1574249,"option":"INSERT 0 2","correct":true}]},{"q":"<p>Based on the following table Product_Sales, if you execute the PostgreSQL query given below, what will be the output:</p>\n\n<p><strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"152\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/70c30678-a4a0-49eb-b229-70cf92ffc966.png\" width=\"332\"></p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>testdb=# SELECT zone, SUM(sales) FROM Product_Sales GROUP BY cost ORDER BY cost DESC;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p><strong><img alt=\"\" height=\"153\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/893c5fdb-b364-49a8-b3bd-7b5a036a5384.png\" width=\"129\"></strong></p>\n\n<p><strong>2.</strong></p>\n\n<p><strong><img alt=\"\" height=\"152\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/01f3cd22-c4d2-48f0-a501-b5e39759ec3a.png\" width=\"131\"></strong></p>\n\n<p><strong>3.</strong></p>\n\n<p><strong><img alt=\"\" height=\"134\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/51c8fa49-6927-4717-8df2-02af5d06405d.png\" width=\"130\"></strong></p>\n\n<p><strong>4.</strong></p>\n\n<p><strong><img alt=\"\" height=\"134\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/3f0a1ea0-41f3-4d12-9812-04a10a84139d.png\" width=\"131\"></strong></p>","a":[{"id":1574234,"option":"1","correct":false},{"id":1574235,"option":"2","correct":false},{"id":1574236,"option":"3","correct":true},{"id":1574237,"option":"4","correct":false}]},{"q":"<p>Based on the following tables named 'empdata', if you execute the PostgreSQL query given below, what will be the output:<br>\n<strong>Table1: empdata</strong></p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a78f4fc5-bc24-4418-86a5-7f20cd8b94bd.png\" width=\"303\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT *,RANK() OVER(ORDER BY sal DESC)s_rank,DENSE_RANK() OVER(ORDER BY sal DESC) dense_rank FROM empdata;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"143\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/3633c70f-3862-4ffa-9058-77b57381c826.png\" width=\"434\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"143\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/4d905a6a-f908-4b8b-ac5d-d9bda92a361f.png\" width=\"434\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"144\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/516af019-4a0d-48bd-8e97-9e93eec2d4e1.png\" width=\"434\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/eec05976-fa1a-423d-b721-cdd01f2d2735.png\" width=\"433\"></p>","a":[{"id":1574222,"option":"1","correct":false},{"id":1574223,"option":"2","correct":false},{"id":1574224,"option":"3","correct":false},{"id":1574225,"option":"4","correct":true}]},{"q":"<p>Based on the following table Std_Marks, if you execute the PostgreSQL query given below, what will be the output?<br>\nAssume, that we have a table named Std_Marks_Backup that is the backup table for the table Std_Marks</p>\n\n<p><strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"115\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/96d9c452-647b-432f-9471-e0fa84384032.png\" width=\"326\"></p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>testdb=# UPDATE Std_Marks\n   SET marks = marks * 1.5\n   WHERE class IN (SELECT class FROM Std_Marks_Backup\n      WHERE class &gt; 8);</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p><strong><img alt=\"\" height=\"115\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/4043b574-36f2-47c3-82b0-1d80da88c942.png\" width=\"332\"></strong></p>\n\n<p><strong>2.</strong></p>\n\n<p><img alt=\"\" height=\"117\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/6a305122-3cce-4bad-8827-4554072b4046.png\" width=\"334\"></p>\n\n<p><strong>3.</strong></p>\n\n<p><strong><img alt=\"\" height=\"115\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/69be4e1e-95ce-49e5-a853-e9c6f7345691.png\" width=\"333\"></strong></p>\n\n<p><strong>4. </strong></p>\n\n<p><strong><img alt=\"\" height=\"115\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/91de4504-17ea-4119-af67-a88dafca1a1f.png\" width=\"333\"></strong></p>","a":[{"id":1574226,"option":"1","correct":false},{"id":1574227,"option":"2","correct":true},{"id":1574228,"option":"3","correct":false},{"id":1574229,"option":"4","correct":false}]},{"q":"<p>Based on the following table Std_Marks, if you execute the PostgreSQL query given below, what will be the output:</p>\n\n<p><strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"115\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/0cfd14c6-cfaf-4190-9d1d-40d165d62f29.png\" width=\"326\"></p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>testdb=# SELECT * FROM Product_Sales LIMIT 1 OFFSET 2;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p><strong><img alt=\"\" height=\"78\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/17b01ae2-cd8e-4ff1-955d-05b5c83e9b5b.png\" width=\"332\"></strong></p>\n\n<p><strong>2.</strong></p>\n\n<p><strong><img alt=\"\" height=\"59\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/222c6f85-21e5-4061-a106-fbc664dd4b62.png\" width=\"332\"></strong></p>\n\n<p><strong>3.</strong></p>\n\n<p><strong><img alt=\"\" height=\"77\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/08dde8e1-65ce-4fc7-8494-288efdc92b61.png\" width=\"331\"></strong></p>\n\n<p><strong>4.</strong></p>\n\n<p><strong><img alt=\"\" height=\"40\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/f7c5deed-3a9a-4030-95c2-37ca732302b9.png\" width=\"331\"></strong></p>","a":[{"id":1574214,"option":"1","correct":false},{"id":1574215,"option":"2","correct":false},{"id":1574216,"option":"3","correct":false},{"id":1574217,"option":"4","correct":true}]},{"q":"<p>Based on the following tables named 'employees' and 'freelancers, if you execute the PostgreSQL query given below, what will be the output:<br>\n<strong>Table1: employees</strong></p>\n\n<p><img alt=\"\" height=\"106\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a90e249a-ed50-466f-afa8-0a3e6383a9b1.png\" width=\"186\"><br>\n<strong>Table2: freelancers</strong></p>\n\n<p><img alt=\"\" height=\"105\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/1500aa26-0279-4c50-8992-fe4ede0e07d9.png\" width=\"157\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM employees\nUNION \nSELECT * FROM FREELANCERS;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"184\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/f8fc8614-4542-4e2e-a6e2-e4f36171b9e3.png\" width=\"133\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"61\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/5ebc0b52-b5b6-427f-8f38-d820aeb9181a.png\" width=\"185\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"105\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/b2388a1b-3d05-4418-ae0b-c8fd650e1165.png\" width=\"159\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"105\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/554c2d8d-2ca7-4e61-ab6d-e0f96de7a743.png\" width=\"159\"></p>","a":[{"id":1574210,"option":"1","correct":false},{"id":1574211,"option":"2","correct":false},{"id":1574212,"option":"3","correct":false},{"id":1574213,"option":"4","correct":true}]},{"q":"<p>Based on the following tables named 'employees' and 'freelancers, if you execute the PostgreSQL query given below, what will be the output:<br>\n<strong>Table1: employees</strong></p>\n\n<p><img alt=\"\" height=\"106\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2c610826-64e6-4a4a-a53d-fc1f7a026dd2.png\" width=\"186\"><br>\n<strong>Table2: freelancers</strong></p>\n\n<p><img alt=\"\" height=\"105\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/55974a60-5d82-4bfb-950f-a233abc8b669.png\" width=\"157\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM employees\nEXCEPT \nSELECT * FROM freelancers;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"61\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/f3091cc7-c03e-496b-a5fa-e045cc1c1fdb.png\" width=\"185\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"65\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a34653ad-184d-4b31-990f-9ba57fdd1b5e.png\" width=\"167\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"67\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2dad866e-cf46-41d9-a9fd-7a3ea99bbda6.png\" width=\"166\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"107\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/879a2492-9586-476f-9882-d279a1ba1db6.png\" width=\"166\"></p>","a":[{"id":1574206,"option":"1","correct":false},{"id":1574207,"option":"2","correct":true},{"id":1574208,"option":"3","correct":false},{"id":1574209,"option":"4","correct":false}]},{"q":"<p>Based on the following table Product_Sales, if you execute the PostgreSQL query given below, what will be the output:</p>\n\n<p><strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"152\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/464bf7c0-fb9c-49c2-923a-604d7bd379a0.png\" width=\"332\"></p>\n\n<p><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>testdb=# SELECT * FROM Product_Sales WHERE cost::text LIKE '%0';</code></pre>\n\n<p><strong>1.</strong></p>\n\n<p><strong><img alt=\"\" height=\"99\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/5c0e1eb7-c5ef-4a1e-996a-c497876d2a34.png\" width=\"333\"></strong></p>\n\n<p><strong>2.</strong></p>\n\n<p><img alt=\"\" height=\"80\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a8e33971-6e6c-4acc-8812-b8982eabe8a5.png\" width=\"332\"></p>\n\n<p><strong>3.</strong></p>\n\n<p><strong><img alt=\"\" height=\"136\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7d44d3f2-35fd-4a56-920d-1f502de75e69.png\" width=\"334\"></strong></p>\n\n<p><strong>4.</strong></p>\n\n<p><strong><img alt=\"\" height=\"57\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a7e2e31c-a42d-456d-a782-21971bfb9ca0.png\" width=\"332\"></strong></p>","a":[{"id":1574202,"option":"1","correct":true},{"id":1574203,"option":"2","correct":false},{"id":1574204,"option":"3","correct":false},{"id":1574205,"option":"4","correct":false}]},{"q":"<p>Based on the following tables named 'employees' and 'freelancers, if you execute the PostgreSQL query given below, what will be the output:<br>\n<strong>Table1: employees</strong></p>\n\n<p><img alt=\"\" height=\"106\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/80f064a3-3f7f-4312-85bd-7d33aa706aeb.png\" width=\"186\"><br>\n<strong>Table2: freelancers</strong></p>\n\n<p><img alt=\"\" height=\"105\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7f581ebc-9401-485c-8068-1900e582b501.png\" width=\"157\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT name, address\nFROM employees\nINTERSECT\nSELECT freelancers\nFROM name, address;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"109\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/0f38ad48-4be2-432d-a967-f2ac0f445476.png\" width=\"190\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"106\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/f6b60126-acac-46cc-9052-244e46348b17.png\" width=\"160\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"61\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/8ee18b7e-c531-4172-b2a2-d7bba73158a6.png\" width=\"185\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"105\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ec071d06-a2f9-42d6-b7f4-2f481c0fcf84.png\" width=\"159\"></p>","a":[{"id":1574198,"option":"1","correct":false},{"id":1574199,"option":"2","correct":false},{"id":1574200,"option":"3","correct":true},{"id":1574201,"option":"4","correct":false}]},{"q":"<p>Based on the following tables named 'customers' and 'orders', if you execute the PostgreSQL query given below, what will be the output?<br>\n<strong>Table1: customers</strong></p>\n\n<p><img alt=\"\" height=\"102\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2228e6a2-eb93-4d52-a5f8-19de7b0724eb.png\" width=\"245\"><br>\n<strong>Table2: orders</strong></p>\n\n<p><img alt=\"\" height=\"107\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/1e75f5df-fd00-4541-9ae0-0161df144101.png\" width=\"262\"><br>\n<strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT c.cust_id AS registration_num,c.cust_name AS Name,c.address AS Address,o.order_item AS Ordered_Item\nFROM customers c\nFULL OUTER JOIN orders o\nON c.cust_id=o.cust_id\nORDER BY c.address;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"126\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/aae5d4dd-12d2-43de-8038-be887cb5a925.png\" width=\"293\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"126\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/49ae6c4e-22bc-4fbd-934f-c2ef0bbaa2c7.png\" width=\"369\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/e32c9f0b-f110-4d00-9dbd-cd85df582397.png\" width=\"389\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"106\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/e277b6bd-7a5f-479f-bb74-d83290c08176.png\" width=\"335\"></p>","a":[{"id":1574186,"option":"1","correct":false},{"id":1574187,"option":"2","correct":true},{"id":1574188,"option":"3","correct":false},{"id":1574189,"option":"4","correct":false}]},{"q":"<p>Based on the following table Product_Sales, if you execute the PostgreSQL query given below, what will be the output:</p>\n\n<p><strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"152\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/890c2904-89b0-4038-b243-698cf9e944dd.png\" width=\"332\"><br>\n </p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Top_Product_Sales(\n   id INT PRIMARY KEY NOT NULL,\n   product TEXT NOT NULL,\n   zone TEXT NOT NULL,\n   cost INT NOT NULL,\n   sales INT NOT NULL\n);\nWITH deleted_rows AS (\n   DELETE FROM Product_Sales\n   WHERE\n      cost &lt;= 10\n   RETURNING *\n)\nINSERT INTO Top_Product_Sales (SELECT * FROM deleted_rows);</code></pre>\n\n<p> </p>","a":[{"id":1574182,"option":"INSERT 0 3","correct":true},{"id":1574183,"option":"INSERT 7 3","correct":false},{"id":1574184,"option":"INSERT 7 4","correct":false},{"id":1574185,"option":"INSERT 0 4","correct":false}]},{"q":"<p>Based on the following tables named 'customers' and 'orders', if you execute the PostgreSQL query given below, what will be the output?<br>\n<strong>Table1: customers</strong></p>\n\n<p><img alt=\"\" height=\"102\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/6df635b9-371a-425a-8460-35ccdc43dcab.png\" width=\"245\"><br>\n<strong>Table2: orders</strong></p>\n\n<p><img alt=\"\" height=\"107\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/6d97641b-33dc-4eac-abe1-af926a99193b.png\" width=\"262\"><br>\n<strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT customers.cust_id,customers.cust_name,customers.address,orders.order_item\nFROM customers\nRIGHT JOIN orders\nON customers.cust_id=orders.cust_id\nWHERE customers.cust_id=115 OR orders.order_id=5760;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"69\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/162fc02e-4e28-40d7-9eaa-5de04367d531.png\" width=\"325\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"107\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/d310d9db-5d81-4616-a440-8fe4e07eaf20.png\" width=\"338\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"106\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/74130c09-5001-4623-8988-8b84f5ac2208.png\" width=\"335\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"44\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/edd3cfa7-a885-41b9-a323-98299d387679.png\" width=\"309\"></p>","a":[{"id":1574178,"option":"1","correct":true},{"id":1574179,"option":"2","correct":false},{"id":1574180,"option":"3","correct":false},{"id":1574181,"option":"4","correct":false}]},{"q":"<p>Based on the following table Product_Sales, if you execute the PostgreSQL query given below, what will be the output:</p>\n\n<p><strong>Table:</strong></p>\n\n<p><img alt=\"\" height=\"152\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a2673f9e-f8f6-4df9-acf4-419a62089b96.png\" width=\"332\"></p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>testdb=# SELECT zone, SUM(sales) FROM Product_Sales GROUP BY zone ORDER BY zone;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p><strong><img alt=\"\" height=\"150\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/05cc10e4-68c5-484f-b69a-2034e870d2ce.png\" width=\"169\"></strong></p>\n\n<p><strong>2.</strong></p>\n\n<p><strong><img alt=\"\" height=\"152\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/71ebb9e7-80e0-49a1-94f2-7830908bc168.png\" width=\"172\"></strong></p>\n\n<p><strong>3.</strong></p>\n\n<p><strong><img alt=\"\" height=\"95\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/79afe061-834b-49f8-a7ac-64e7bec6bd61.png\" width=\"170\"></strong></p>\n\n<p><strong>4.</strong></p>\n\n<p><strong><img alt=\"\" height=\"99\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2828f4b3-ef25-4e34-9a57-b27535ca448c.png\" width=\"172\"></strong></p>","a":[{"id":1574174,"option":"1","correct":false},{"id":1574175,"option":"2","correct":false},{"id":1574176,"option":"3","correct":false},{"id":1574177,"option":"4","correct":true}]},{"q":"<p>Based on the following table Std_Marks, if you execute the PostgreSQL query given below, what will be the output:</p>\n\n<p><strong>Table:</strong></p>\n\n<p><strong><img alt=\"\" height=\"115\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a60ecf81-cb77-494c-af27-c178648455ce.png\" width=\"326\"></strong></p>\n\n<p><strong>Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>WITH RECURSIVE t(n) AS (\n   VALUES (0)\n   UNION ALL\n   SELECT marks FROM Std_Marks WHERE marks &gt; 60\n)\nSELECT sum(n) FROM t</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p><strong>1.</strong></p>\n\n<table border=\"1\" style=\"width: 47px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 37px;\"><strong>sum</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 37px;\">351</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>2.</strong></p>\n\n<table border=\"1\" style=\"width: 47px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 37px;\"><strong>sum</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 37px;\">250</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>3.</strong></p>\n\n<table border=\"1\" style=\"width: 47px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 37px;\"><strong>t</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 37px;\">351</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>4.</strong></p>\n\n<table border=\"1\" style=\"width: 47px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 37px;\"><strong>t</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 37px;\">250</td>\n\t\t</tr>\n\t</tbody>\n</table>","a":[{"id":1574170,"option":"1","correct":false},{"id":1574171,"option":"2","correct":true},{"id":1574172,"option":"3","correct":false},{"id":1574173,"option":"4","correct":false}]},{"q":"<p>Based on the following tables named 'customers' and 'orders', if you execute the PostgreSQL query given below, what will be the output?<br>\n<strong>Table1: customers</strong></p>\n\n<p><img alt=\"\" height=\"102\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/8445a4fd-5176-4fac-a78b-338678504fb0.png\" width=\"245\"><br>\n<strong>Table2: orders</strong></p>\n\n<p><img alt=\"\" height=\"107\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/10bc1e2e-1ecd-48b0-84d9-ded4963d8bdc.png\" width=\"262\"><br>\n<strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT c.cust_id,c.cust_name,c.address,o.order_id\nFROM customers c\nLEFT JOIN orders o\nON c.cust_id=o.cust_id\nORDER BY cust_name;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"107\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a053b3a8-b60d-4ea9-8ade-c4db8edcc9e0.png\" width=\"338\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"105\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7428e3c5-222d-46b9-817e-7f651de76a92.png\" width=\"297\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"85\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/76407076-6e79-434e-913e-e6832d41bfeb.png\" width=\"295\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"85\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/c7337ecb-d1fb-4f61-8b44-84a39078cb18.png\" width=\"288\"></p>","a":[{"id":1572334,"option":"1","correct":false},{"id":1572335,"option":"2","correct":true},{"id":1572336,"option":"3","correct":false},{"id":1572337,"option":"4","correct":false}]},{"q":"<p>Based on the following tables named 'customers' and 'orders', if you execute the PostgreSQL query given below, what will be the output?<br>\n<strong>Table1: customers</strong></p>\n\n<p><img alt=\"\" height=\"102\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/6abca769-93be-449e-8786-4b0a810d7bb4.png\" width=\"245\"></p>\n\n<p><strong>Table2: orders</strong></p>\n\n<p><strong><img alt=\"\" height=\"107\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7cb76e90-0ee7-4fad-97fe-f07e7625c2cf.png\" width=\"262\"></strong></p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT customers.cust_id,customers.cust_name,customers.address,\norders.order_item\nFROM customers\nINNER JOIN orders\nON customers.cust_id=orders.cust_id;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"106\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/50a6e67b-c113-4469-bb81-e2192b7f86c4.png\" width=\"335\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"83\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/3729946b-f588-461a-997b-3c64714c6e06.png\" width=\"350\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"45\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/9718f7a3-e4fd-4284-84a1-8df1b8d913c9.png\" width=\"300\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"85\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/889f47bf-4026-4262-ba68-0235a529e49c.png\" width=\"318\"></p>","a":[{"id":1572158,"option":"1","correct":false},{"id":1572159,"option":"2","correct":false},{"id":1572160,"option":"3","correct":false},{"id":1572161,"option":"4","correct":true}]},{"q":"<p>Based on the following table 'ecommdata', if you execute the PostgreSQL query given below, what will be the output:</p>\n\n<p><strong>ecommdata</strong></p>\n\n<p><img alt=\"\" height=\"124\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/405f1527-398a-4099-b4c2-f231f0cd1112.png\" width=\"364\"></p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM ecommdata\nWHERE store_id IN\n(SELECT store_id FROM ecommdata where c_id&gt;500);</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"126\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/53a86a1e-3cf4-4801-ae77-4db1ff081c92.png\" width=\"350\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"129\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/86278d0d-f429-4481-a753-2a11fc29c03a.png\" width=\"339\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"83\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/3e184b7c-f061-4f7f-834e-1def979f790c.png\" width=\"358\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"85\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/02f7bf94-bd76-48bd-92fa-455ca558b06f.png\" width=\"355\"></p>","a":[{"id":1572154,"option":"1","correct":false},{"id":1572155,"option":"2","correct":false},{"id":1572156,"option":"3","correct":true},{"id":1572157,"option":"4","correct":false}]},{"q":"<p>Given below is a table students which has the list of students with marks in different subjects. You have to print the names of all students who have the highest score in each subject (order of rows does not matter). Also given is a table subjects which has the list of subjects.<br>\nA PostgreSQL query to do so is given below but it does not execute as the joining condition is wrong. Choose the correct JOIN statement from the given options.</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT\n    sub.subject, st.first_name, st.last_name, marks\nFROM\n    students st\n        JOIN                                                                                  \n    -- join statement\n    subjects sub ON st.id = sub.subject_id\nWHERE\n    (st.subject_id , marks) IN\n    (   SELECT\n            subject_id, MAX(marks)\n        FROM\n            students\n    );</code></pre>\n\n<p><img alt=\"\" height=\"664\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/921f6ccd-9b57-4f35-a552-0640ae8d54ee.png\" width=\"536\"></p>\n\n<p><img alt=\"\" height=\"155\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/75f39974-4891-40b4-a9c4-a80b87842273.png\" width=\"339\"></p>\n\n<p><strong>Join statements</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>JOIN\n    subjects sub ON st.subject_id = sub.subject_id\nWHERE\n    (st.subject_id , marks) IN\n    (   SELECT\n            subject_id, MAX(marks)\n        FROM\n            students\n        GROUP BY subject_id\n    );</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code> NATURAL JOIN\n    subjects sub\nWHERE\n    (st.subject_id , marks) IN\n    (   SELECT\n            subject_id, MAX(marks)\n        FROM\n            students\n        GROUP BY subject_id\n    );</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>JOIN\n    subjects sub ON st.subject_id = sub.subject_id\nWHERE\n    (st.subject_id , marks) IN\n    (   SELECT\n            subject_id, MAX(marks)\n        FROM\n            students\n    );</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>NATURAL JOIN\n    subjects sub ON st.subject_id = sub.subject_id\nWHERE\n    (st.subject_id , marks) IN\n    (   SELECT\n            subject_id, MAX(marks)\n        FROM\n            students\n    );</code></pre>\n\n<p> </p>","a":[{"id":1572150,"option":"1","correct":true},{"id":1572151,"option":"2","correct":false},{"id":1572152,"option":"3","correct":false},{"id":1572153,"option":"4","correct":false}]},{"q":"<p>Given below is a table 'items'. The table has many duplicate entries with items_id as one of the columns with duplicate data as well. Consider the queries given below and choose the correct option.</p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>DELETE FROM items USING   items t2\n           WHERE   t1.ctid &lt; t2.ctid AND t1.items_id=t2.items_id;</code></pre>\n\n<p><br>\n2.   </p>\n\n<pre class=\"prettyprint\"><code>DELETE FROM items i WHERE  NOT EXISTS (\n   SELECT FROM items\n   WHERE  items_id = i.items_id AND    ctid &lt; i.ctid);</code></pre>\n\n<p><br>\n3.    </p>\n\n<pre class=\"prettyprint\"><code>DELETE FROM items t1 USING ( SELECT MIN(ctid) as ctid, items_id\n        FROM items\n        GROUP BY items_id HAVING COUNT(*) &gt; 1\n      ) t2\n      WHERE t1.items_id = t2.items_id AND t1.ctid &lt;&gt; t2.ctid;</code></pre>\n\n<p><img alt=\"\" height=\"137\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/cba62e48-8141-4e8c-9759-a00eb477f822.png\" width=\"312\"></p>","a":[{"id":1572146,"option":"All queries 1, 2, and 3 will delete all duplicate entries.","correct":false},{"id":1572147,"option":"Only queries 1 and 3 will delete all duplicate entries. ","correct":true},{"id":1572148,"option":"Only queries 1 and 2 will delete all duplicate entries and query 3 deletes entries that occur more than twice.","correct":false},{"id":1572149,"option":"Only query 1 will delete all duplicate entries.","correct":false}]},{"q":"<p>The table given below shows the items bought by different people. What will be the output of the following PostgreSQL query?</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT *\nFROM (\n    SELECT item_type, COUNT(*) AS count \n    FROM items \n    GROUP BY item_type ORDER BY item_type) AS tb1\nWHERE count &gt; 2;</code></pre>\n\n<p><img alt=\"\" height=\"666\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/b893e3c5-bfad-4f83-bfa1-877590c94d0a.png\" width=\"450\"></p>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"191\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/acff634f-1901-44af-82ea-9b77b3e4bd76.png\" width=\"197\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"229\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/837fc3f9-6f7e-4a88-866a-63774e7d5334.png\" width=\"199\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"203\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/010e1217-0c03-49bc-9c47-479d48e31a43.png\" width=\"213\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"195\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/a16afa09-d527-4a62-82bc-b1064306f1f3.png\" width=\"204\"></p>","a":[{"id":1572142,"option":"1","correct":true},{"id":1572143,"option":"2","correct":false},{"id":1572144,"option":"3","correct":false},{"id":1572145,"option":"4","correct":false}]},{"q":"<p>In PostgreSQL, among the list of students given in the table below, some are seniors. What does the given query do?</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT b.first_name, b.last_name \nFROM students b \nWHERE NOT EXISTS (\nSELECT 'X' \nFROM students a \nWHERE a.senior_id = b.id);</code></pre>\n\n<p><img alt=\"\" height=\"664\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/8369cdac-73f3-4cad-872a-aa9d796f0c9f.png\" width=\"448\"></p>","a":[{"id":1572138,"option":"Fetches the first name and last name of student who are not seniors.","correct":true},{"id":1572139,"option":"Fetches the first name and last name of student who are seniors.","correct":false},{"id":1572140,"option":"Fetches the first name and last name of students of the seniormost student.","correct":false},{"id":1572141,"option":"Fetches the first name and last name of students irrespective of their seniority.","correct":false}]},{"q":"<p>For conducting a fest in XIT the students have been allotted an activity. Each senior student has to look after various events and each event is to take place at a different location in the college.<br>\nYou have to make a join of 3 tables, students, events, and location to display the activity name, senior name, and the location name.<br>\nThe output table must look like this:<br>\nevent_name | senior_first_name| senior_last_name | location_name     <br>\nThe query given below does not execute as the join statements 1 and 2 are wrong. The correct join statements to do the task would be?</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT w1.event_name, w2.first_name as “senior_first_name”, w2.last_name as “senior_last_name”, w3.location_name \nFROM events w1 \nNATURAL JOIN students w2   -- join statement 1\nJOIN locations w3 USING (location_id);       -- join statement 2</code></pre>\n\n<p><strong>Join statements</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>FROM events w1 \nINNER JOIN students w2 USING (senior_id) \nJOIN locations w3 USING (location_id);</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>FROM events w1 \nJOIN students w2 \nON (w1.senior_id = w2.id) \nJOIN locations w3 USING (location_id);</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>FROM JOIN locations w3 USING (location_id)                                                  \nJOIN events w1 \nJOIN students w2 \nON (w1.senior_id = w2.id) ;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>FROM events w1 \nFULL OUTER JOIN students w2 \nJOIN locations w3 USING (location_id);</code></pre>\n\n<p> </p>","a":[{"id":1572130,"option":"1","correct":false},{"id":1572131,"option":"2","correct":true},{"id":1572132,"option":"3","correct":false},{"id":1572133,"option":"4","correct":false}]},{"q":"<p>In PostgreSQL. for the table employees given below what is the output of the following query?</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT *, LPAD(trim(to_char(salary,'9999999')),7,'*'),\nFROM employees;</code></pre>\n\n<p><img alt=\"\" height=\"290\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2d3b86b7-eae9-43a3-b098-c094f9e2669c.png\" width=\"451\"></p>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"280\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/3da95990-400a-4053-95d6-7b12a02bdaa0.png\" width=\"449\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"280\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/cc29e504-e059-4443-90e9-28ad2bac58af.png\" width=\"453\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"285\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/68cf6299-7335-4c55-a6ce-500b9dce28d4.png\" width=\"455\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"277\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/c0ec4930-d2b4-4ba0-9bcb-b5ddb6523a8a.png\" width=\"455\"></p>\n\n<p> </p>","a":[{"id":1572126,"option":"1","correct":true},{"id":1572127,"option":"2","correct":false},{"id":1572128,"option":"3","correct":false},{"id":1572129,"option":"4","correct":false}]},{"q":"<p>In PostgreSQL, you are given below are three tables students, departments, and teachers. What would be the output if the query given below is executed:</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT s.first_name, s.last_name, d.department_name \nFROM students s \nJOIN departments d \nON (s.department_id = d.department_id) \nJOIN teachers t ON \n(d.teacher_id = t.teacher_id) \nWHERE t.teacher_name = 'Anita Green';</code></pre>\n\n<p><strong>Tables</strong></p>\n\n<p><strong>students</strong></p>\n\n<table border=\"1\" style=\"width: 266px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>id</strong></td>\n\t\t\t<td style=\"text-align: center; width: 62px;\"><strong>first_name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 63px;\"><strong>last_name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 86px;\"><strong>department_id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Alice</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Smith</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">10</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">102</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Jones</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">103</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Ben</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Johnson</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">30</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">104</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Mike</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">White</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">40</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">105</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Tara</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Green</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">50</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">106</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Anita</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Williams</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">10</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">107</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Lisa</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Davis</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">30</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">108</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Mary</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Brown</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">50</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">109</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">John</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Wilson</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">40</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">110</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Paul</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Miller</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">10</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">111</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Alice</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Jones</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">50</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">112</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Tara</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">White</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">40</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">113</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Lisa</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Green</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">30</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">114</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Johnson</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">10</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">115</td>\n\t\t\t<td style=\"text-align: center; width: 62px;\">Anita</td>\n\t\t\t<td style=\"text-align: center; width: 63px;\">Wilson</td>\n\t\t\t<td style=\"text-align: center; width: 86px;\">10</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><img alt=\"\" height=\"263\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/c89b67f9-8c0b-482d-9c2b-022c0db6b9e1.png\" width=\"463\"></p>\n\n<p><img alt=\"\" height=\"191\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/6b0f4077-ae72-4710-b757-2434612e8195.png\" width=\"285\"></p>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"281\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/9ed091a3-05d6-4ae9-a5e9-349674d4594d.png\" width=\"468\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"392\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/0b05af99-42b1-43ee-80ff-e31f18084c82.png\" width=\"467\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"126\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ec8e6909-fcc7-4d44-81c8-90ce6d6adfe9.png\" width=\"467\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"163\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/3a650bd3-642e-46a3-9e3f-984c739de1e5.png\" width=\"467\"></p>","a":[{"id":1572122,"option":"1","correct":true},{"id":1572123,"option":"2","correct":false},{"id":1572124,"option":"3","correct":false},{"id":1572125,"option":"4","correct":false}]},{"q":"<p>In PostgreSQL, you are given a table named students. The following 3 queries are implemented to the table given below. Which of the following correctly appoints the monitor of the class?</p>\n\n<p><strong>Queries</strong><br>\n1.   </p>\n\n<pre class=\"prettyprint\"><code>SELECT W1.id as \"student_id\" , W1.last_name AS \"student\",\nW2.id AS \"monitor_id\", W2.last_name AS \"monitor\"\nFROM students W1 JOIN students W2\nON W1.monitor_id= W2. id;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT W1.id as \"student_id\" , W1.last_name AS \"student\",\nW2.id AS \"monitor_id\", W2.last_name AS \"monitor\"\nFROM students W1 JOIN students W2\nON W1.monitor_id= W2.monitor_id;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT W1.id as \"student_id\" , W1.last_name AS \"student\",\nW2.id AS \"monitor_id\", W2.last_name AS \"monitor\"\nFROM students W1 NATURAL JOIN students W2</code></pre>\n\n<p><img alt=\"\" height=\"670\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/b92722df-2f9c-406d-bb93-2ff851563e2d.png\" width=\"429\"></p>","a":[{"id":1572114,"option":"Only query 1","correct":true},{"id":1572115,"option":"Both query 1 and 2","correct":false},{"id":1572116,"option":"Both query 2 and 3","correct":false},{"id":1572117,"option":"All of these queries","correct":false}]},{"q":"<p>In PostgreSQL, you are given two tables named 'students' and 'subjects'. If you are required to execute the following three queries, then which of the following statements about these queries are correct:</p>\n\n<p><img alt=\"\" height=\"587\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/6fbc0857-9fdf-4c32-ac98-306e71e15564.png\" width=\"536\"></p>\n\n<p><img alt=\"\" height=\"155\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/d5d89f42-e352-4762-9cae-2aea929f68bc.png\" width=\"339\"></p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT subject,  AVG(marks) \n     FROM students \n     NATURAL JOIN subjects \n     GROUP BY subject;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT subject,  AVG(marks) \n      FROM students \n         INNER JOIN subjects USING(subject_id)\n        GROUP BY subject;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT subject,  AVG(marks) \n        FROM subjects sub\n         INNER JOIN students s ON s.subject_id=sub.id\n          GROUP BY subject;</code></pre>\n\n<p> </p>","a":[{"id":1572110,"option":"Queries 1, 2, and 3 give the average marks for all students in each subject.","correct":false},{"id":1572111,"option":"Queries 1 and 2 give the difference between the average marks and the student's marks and the query 3 is a non-executable query.","correct":false},{"id":1572112,"option":"Queries 1, 2, and 3 give the difference between the average marks and the student's marks.","correct":false},{"id":1572113,"option":"Queries 1 and 2 give the average marks for all students in each subject and the query 3 is a non-executable query.","correct":true}]},{"q":"<p>In PostgreSQL, given below are the tables, 'students' that contains the list of students studying in the college XIT and 'departments' that has the list of departments in XIT. What will be the output, if the query given below is executed?</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT department_name AS \"Department Name\", \nCOUNT(*) AS \"Students\" \nFROM departments \nINNER JOIN students \nON students.department_id = departments.department_id \nGROUP BY departments.department_id, department_name \nORDER BY department_name;</code></pre>\n\n<p><strong>Tables</strong></p>\n\n<p><strong><img alt=\"\" height=\"490\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/7ada088a-d6c2-4954-8fea-7fa50d87e498.png\" width=\"542\"></strong></p>\n\n<p><img alt=\"\" height=\"154\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/8bab3911-8cfd-4652-adda-a84804d3371f.png\" width=\"339\"></p>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"198\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/65c864e9-2074-4883-8463-701045b589fc.png\" width=\"362\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"200\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/3724c995-2ef0-46e0-9160-7a90c8805186.png\" width=\"363\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"202\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/e1ebd24b-194c-4d94-9e79-6741ad2c9aae.png\" width=\"328\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"201\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/91db231e-06ce-45a9-9627-839bf046c6f0.png\" width=\"363\"></p>","a":[{"id":1571754,"option":"1","correct":false},{"id":1571755,"option":"2","correct":true},{"id":1571756,"option":"3","correct":false},{"id":1571757,"option":"4","correct":false}]},{"q":"<p>In PostgreSQL, for the table employees given below, what will the given 3 queries do when executed?</p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM employees ORDER BY Hire_date DESC LIMIT 1;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM employees WHERE Hire_date = (SELECT MAX  (Hire_date) FROM employees);</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM employees t1 WHERE NOT EXISTS(SELECT * FROM employees t2 WHERE t2.Hire_date &gt; t1.Hire_date);</code></pre>\n\n<p><img alt=\"\" height=\"483\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/959b2a87-0fa5-44b4-be3b-6361058270ba.png\" width=\"535\"></p>","a":[{"id":1571750,"option":"Only queries 1 and 2 fetch the row with the person hired last and 3 fetches the row with the person who was hired first.","correct":false},{"id":1571751,"option":"Only queries 1 and 2 fetch the row with the person hired first and 3 fetches the row with the person who was hired last.","correct":false},{"id":1571752,"option":"All queries 1, 2, and 3 fetch the row with the person hired first.","correct":false},{"id":1571753,"option":"All queries 1, 2, and 3 fetch the row with the person hired last","correct":true}]},{"q":"<p>You are given the table named students given below, if you execute the following PostgreSQL query what will be the output?</p>\n\n<p><img alt=\"\" height=\"283\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ec90bdfa-8607-40a0-b6de-6e364dc54547.png\" width=\"209\"></p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT *\nFROM students\nWHERE LENGTH(first_name) &gt;3;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"128\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/2ac9bf92-691d-4cc0-95bc-ec1cef18fd21.png\" width=\"201\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"166\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/8dc46d0e-fe30-4f10-9ee9-9af89ea8b4a4.png\" width=\"204\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"168\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/1c0e97e3-c759-4fdf-b165-011472abd98b.png\" width=\"202\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"168\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/01e58234-5599-4a91-ab96-1dd7cb66db25.png\" width=\"200\"></p>","a":[{"id":1571746,"option":"1","correct":false},{"id":1571747,"option":"2","correct":false},{"id":1571748,"option":"3","correct":false},{"id":1571749,"option":"4","correct":true}]},{"q":"<p>A leading college ABC is conducting the largest fest in Asia. Hence, they have divided the work between students remarkably well. They use 3 PostgreSQL tables for managing the event. For the given query what would the output table look like:</p>\n\n<p><strong>students</strong></p>\n\n<table border=\"1\" style=\"width: 316px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 84px;\">student_name</td>\n\t\t\t<td style=\"width: 66px;\">student_id</td>\n\t\t\t<td style=\"width: 97px;\">guardians_name</td>\n\t\t\t<td style=\"width: 41px;\">roll_no</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>dept</strong></p>\n\n<table border=\"1\" style=\"width: 126px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 44px;\">dept_id</td>\n\t\t\t<td style=\"width: 65px;\">dept_name</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>work</strong></p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>work_id</td>\n\t\t\t<td>work_type</td>\n\t\t\t<td>work_manager_id</td>\n\t\t\t<td>pr_lead_id</td>\n\t\t\t<td>marketing_lead_id</td>\n\t\t\t<td>dept_id</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>Select Wt. work_type, PM.student_name As project_manager, AR.student_name AS pr_lead, TL. student_name As  marketing_lead, dept.dept_name As dept From\nWork \nINNER JOIN students AS PM ON (Wt.project_manger_id=PM.student_id)\nINNER JOIN students AS AR ON (Wt.pr_lead_id=AR.student_id)\nINNER JOIN students AS TL ON (Wt.marketing_lead_id=TL.student_id)\nINNER JOIN dept As dept ON (Wt.dept_id=dept.dept_id)</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 447px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 58px;\">work_type</td>\n\t\t\t<td style=\"width: 116px;\">project_manager_id</td>\n\t\t\t<td style=\"width: 64px;\">pr_lead_id</td>\n\t\t\t<td style=\"width: 110px;\">marketing_lead_id</td>\n\t\t\t<td style=\"width: 64px;\">dept_name</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>work_type</td>\n\t\t\t<td>project_manager</td>\n\t\t\t<td>pr_lead</td>\n\t\t\t<td>marketing_lead</td>\n\t\t\t<td>dept_name</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>project_manager</td>\n\t\t\t<td>pr_lead_id</td>\n\t\t\t<td>marketing_lead_id</td>\n\t\t\t<td>dept_id</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>4.</p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>work_type</td>\n\t\t\t<td>project_manager</td>\n\t\t\t<td>pr_lead</td>\n\t\t\t<td>marketing_lead</td>\n\t\t\t<td>dept_id</td>\n\t\t</tr>\n\t</tbody>\n</table>","a":[{"id":1571742,"option":"1","correct":false},{"id":1571743,"option":"2","correct":true},{"id":1571744,"option":"3","correct":false},{"id":1571745,"option":"4","correct":false}]},{"q":"<p>In Greenplum, You are trying to create the partitioned tables. You have created a table named <strong>employees</strong> having the columns on the employee ID, date of joining for that employee, the corresponding employee's salary. You are required to distribute the data according to the employee ID among the segments. If you are required to partition the data based on the joining dates of the employees such that all the dates of joining in 2019 are included, then which of the following queries can be executed to perform this action:</p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE employees (emp_id int, join_date date, sal int)\nDISTRIBUTED BY (id)\nPARTITION BY RANGE (join_date)\n( START (joining_date '2019-01-01') \n   END (Join_date '2020-01-01') \n   EVERY (INTERVAL '1 day') );</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE employees (emp_id int, join_date date, sal int)\nDISTRIBUTED BY (emp_id)\nPARTITION BY RANGE (join_date)\n( START (join_date '2019-01-01') INCLUSIVE\n   END (Join_date '2019-12-31') EXCLUSIVE\n   EVERY (INTERVAL '1 day') );</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE employees (emp_id int, join_date date, sal int)\nDISTRIBUTED BY (emp_id)\nPARTITION BY RANGE (join_date)\n( START (DATE '2019-01-01') INCLUSIVE\n   END (DATE '2020-01-01') EXCLUSIVE\n   EVERY (INTERVAL '1 day') );</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE employees (emp_id int, join_date date, sal int)\nDISTRIBUTED BY (emp_id)\nPARTITION BY RANGE (join_date)\n( START (DATE '2019-01-01') EXCLUSIVE\n   END (DATE '2020-01-01') EXCLUSIVE\n   EVERY (INTERVAL '1 day') );</code></pre>\n\n<p> </p>","a":[{"id":1568952,"option":"1","correct":false},{"id":1568953,"option":"2","correct":false},{"id":1568954,"option":"3","correct":true},{"id":1568955,"option":"4","correct":false}]},{"q":"<p>Alice wants to choose the table storage model in his Greenplum database. She wants to create a column-oriented heap-storage table with the hash distribution policy. Also, she doesn't want to allow the update and delete operations on a table. Now, which of the following queries will be used to create a table as mentioned above:</p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE sales (a int, b text) \n    WITH (appendonly=false)\n    DISTRIBUTED RANDOMLY;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE sales (a int, b text) \n    WITH (appendonly=true)\n    DISTRIBUTED BY (a);</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE sales(a int, b text) \n    WITH (appendonly=false, orientation=column)\n    DISTRIBUTED BY (a);</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE sales (a int, b text) \n    WITH (appendonly=true, orientation=column)\n    DISTRIBUTED BY (a);</code></pre>\n\n<p> </p>","a":[{"id":1568824,"option":"1","correct":false},{"id":1568825,"option":"2","correct":false},{"id":1568826,"option":"3","correct":false},{"id":1568827,"option":"4","correct":true}]},{"q":"<p>Given below is a table of cars. Each car has the main variant, and each car is manufactured in a city. What does the query given below do?</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT city_name, car_name,\ndate_part ('year', age (now(), manufacture_date)) age \nFROM city w1 \nJOIN cars w2 \nON (w1.main_variant_id = w2. id)\nWHERE date_part('year',age(now(),manufacture_date))&gt;10;</code></pre>\n\n<p><strong><img alt=\"\" height=\"226\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/6e828f88-ca66-465c-a96f-bb6f99b0959f.png\" width=\"275\"></strong></p>\n\n<p><img alt=\"\" height=\"511\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/898f06cc-f8e8-4c54-95ce-87d9b23b7421.png\" width=\"520\"></p>","a":[{"id":1566660,"option":"Displays the city name, car name and age of all main variant cars older than 10 years.","correct":true},{"id":1566661,"option":"Displays the city name, car name and age of all cars older than 10 years.","correct":false},{"id":1566662,"option":"Displays the city name, car name and age of all main variant cars with manufacturing_date after 2010-01-01.","correct":false},{"id":1566663,"option":"Displays the city name, car name and age of all main variant with age less than 10 years.","correct":false}]},{"q":"<p>Based on the table named <strong>students</strong> that is given below, if you execute the following PostgreSQL query what will be the output?</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>Testdb=# SELECT * \nFROM students s1\nWHERE (3) = (\nSELECT COUNT (DISTINCT (s2.marks))\nFROM students s2\nWHERE s2.marks&gt;s1.marks);</code></pre>\n\n<p><strong>students</strong></p>\n\n<p><img alt=\"\" height=\"309\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/c3626d97-f55d-48e7-9cf4-d6d39f5a22af.png\" width=\"352\"></p>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"75\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ee782b00-5e7c-47c5-9ecf-60d8550e3e41.png\" width=\"351\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"89\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/9f7a926b-7d71-4f17-ae0b-d7c0384676c2.png\" width=\"340\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"75\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ddae06a1-4684-4126-b7a4-afd45f9f98db.png\" width=\"336\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"75\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/f7d34b40-b61d-49e9-ada2-055d9583097c.png\" width=\"335\"></p>","a":[{"id":1566648,"option":"1","correct":false},{"id":1566649,"option":"2","correct":false},{"id":1566650,"option":"3","correct":true},{"id":1566651,"option":"4","correct":false}]},{"q":"<p>Based on the following table employees, if you execute the PostgreSQL query given below, what will be the output?</p>\n\n<p><strong>employees</strong></p>\n\n<p><img alt=\"\" height=\"269\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/94705992-5741-4090-9049-33f5113bb046.png\" width=\"473\"></p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT emp.first_name, emp.last_name, emp.hire_date \nFROM employees emp \nJOIN employees e \nON (e.last_name = 'White') \nWHERE e.hire_date &lt; emp.hire_date;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"207\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/10e897ce-6b5c-49f6-99ad-9a3a734d8100.png\" width=\"367\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"231\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/4a2b1c1e-c96a-42e6-a2c2-677e7d443e07.png\" width=\"363\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"205\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/c7ffd518-e981-43ae-8e40-b9a90b8db26e.png\" width=\"364\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"220\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/cc173809-9339-4e41-a29e-1680e1be5925.png\" width=\"364\"></p>","a":[{"id":1566640,"option":"1","correct":true},{"id":1566641,"option":"2","correct":false},{"id":1566642,"option":"3","correct":false},{"id":1566643,"option":"4","correct":false}]},{"q":"<p>Which of the following SQL Server features are not supported by Azure SQL Database currently?</p>","a":[{"id":640587,"option":"Database mirroring","correct":false},{"id":640588,"option":"Extended stored procedures","correct":false},{"id":640589,"option":"Windows authentication","correct":false},{"id":640590,"option":"All of these","correct":true}]},{"q":"<p>In Oracle, if you are required to determine the release number of the database server that is currently installed and levels of other components then which of the following SQL queries can you use to perform this action?<br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM PRODUCT_COMPONENT_VERSION;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM ORACLE_VERSION; </code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM PRODUCT_VERSION;  </code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM V$VERSION;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":609213,"option":"1","correct":true},{"id":609214,"option":"2","correct":false},{"id":609215,"option":"3","correct":false},{"id":609216,"option":"4","correct":false}]},{"q":"<p>In SQL you are working on user-defined functions. If you are required to use CLR functions then which of the following represents the correct order of steps given below for creating and using the CLR user-defined functions:<br>\n </p>\n\n<p><strong>Steps:</strong></p>\n\n<ol>\n\t<li>Define the function as a static method of a class in a language supported by the .NET Framework.</li>\n\t<li>Register the assembly in an SQL Server by using the CREATE ASSEMBLY statement.</li>\n\t<li>Create the function that references the registered assembly by using the CREATE FUNCTION statement.</li>\n\t<li>Execute user-defined functions.</li>\n</ol>","a":[{"id":385304,"option":"1, 2, 3, 4","correct":true},{"id":385305,"option":"2, 3, 1, 4","correct":false},{"id":385306,"option":"3, 1, 2, 4","correct":false},{"id":385307,"option":"2, 1, 3, 4","correct":false}]},{"q":"<p>In Azure, you are creating a hybrid mode instance with the Azure portal &amp; Azure Database Migration Service. If you are required to communicate with Azure Database Migration Service in the cloud, then which of the following IDs should be created that the on-premises hybrid worker can use?</p>","a":[{"id":1152681,"option":"App registration ID","correct":true},{"id":1152682,"option":"Service registration ID","correct":false},{"id":1152683,"option":"Role registration ID","correct":false},{"id":1152684,"option":"Server registration ID","correct":false}]},{"q":"<p>In Azure, a custom role for the APP ID is required for the Azure Database Migration Service (DMS) at the subscription level. Which of these text files can store the following JSON code to create the roles by using the New-AzureRmRoleDefinition (AzureRM) command:<br>\n    </p>\n\n<pre class=\"prettyprint\"><code> {\n            \"Name\": \"DMS Role - App ID - Sub\",\n            \"IsCustom\": true,\n            \"Description\": \"DMS App ID access at subscription level to complete MI migrations\",\n            \"Actions\": [ \"Microsoft.Sql/locations/managedDatabaseRestoreAzureAsyncOperation/*\"],\n            \"NotActions\": [ ],\n            \"AssignableScopes\": [ \"/subscriptions/\" ]\n}</code></pre>\n\n<p><code>    </code></p>\n\n<p> </p>\n\n<ol>\n\t<li>    Azure CLI</li>\n\t<li>    AzureDMSRM</li>\n\t<li>    AZ Powershell cmdlets</li>\n</ol>","a":[{"id":1152713,"option":"1 and 2 ","correct":false},{"id":1152714,"option":"2 and 3","correct":false},{"id":1152715,"option":"1 and 3","correct":true},{"id":1152716,"option":"All of these","correct":false}]},{"q":"<p>You have created a procedure a and attempted to store it in the database using CREATE_PROCEDURE command. When you submitted it to the database, you received a syntax error. From the perspective of the schema that attempted the creation, which of the data dictionary objects now contain the source code of the procedure?</p>","a":[{"id":560365,"option":"USER_SOURCE","correct":false},{"id":560366,"option":"ALL_SOURCE","correct":false},{"id":560367,"option":"DBA_SOURCE","correct":false},{"id":560368,"option":"All of these","correct":true}]},{"q":"<p>In SQL, John runs an order entry application that requires the select, update, and insert permissions on the <strong>products</strong> tables to work. with the following requirements:</p>\n\n<ol>\n\t<li>Access to other tables in the database should not be restricted.</li>\n\t<li>John should not have any select, insert, or update permissions when accessing the table directly.</li>\n</ol>\n\n<p><br>\nIf you have created a user-database role that denies select, insert, or update permissions on the products table, then which of the following actions must be implemented before creating an application role with select, insert, and update permissions on the products tables?</p>","a":[{"id":383273,"option":"Add John as a member of the application role.","correct":false},{"id":383274,"option":"Add John as a member of the admin role.","correct":false},{"id":383275,"option":"Add John as a member of the database role. ","correct":true},{"id":383276,"option":"None of these","correct":false}]},{"q":"<p>You have a database named <em>hack_database.<strong> </strong></em>Now, if you want the objects in the <em>hack_database </em>to support values of other data types then which of the following data types will you use?</p>","a":[{"id":600715,"option":"ntext","correct":false},{"id":600716,"option":"date","correct":false},{"id":600717,"option":"smallmoney","correct":false},{"id":600718,"option":"sql_variant","correct":true}]},{"q":"<p>In SQL you have a table named <strong>student</strong>, and you want to create an index <em>idxrno </em>on the<em> irno </em>column in the student table. Now, which of the following system stored procedures can you use to verify that the index idxrno has been created in the student table?</p>","a":[{"id":385388,"option":"sp_helptext idxrno","correct":false},{"id":385389,"option":"sp_helpindex idxrno","correct":true},{"id":385390,"option":"sp_helpindex irno","correct":false},{"id":385391,"option":"sp_helptext irno","correct":false}]},{"q":"<p>You have executed the following SQL query:<br>\n<br>\n<strong>SQL query:</strong></p>\n\n<pre class=\"prettyprint\"><code>select customers.name, customers.ord_id, orders.ord_date from customers inner join orders where customers.cust_id = orders.cust_id\n\n</code></pre>\n\n<p><br>\nBoth the tables, <strong>customers</strong> and <strong>orders</strong> have 10,000 rows each. The query takes a long time to execute. Which of the following can you use to improve the query performance?</p>\n\n<p> </p>","a":[{"id":385424,"option":"Triggers","correct":false},{"id":385425,"option":"Stored procedures","correct":true},{"id":385426,"option":"Views","correct":false},{"id":385427,"option":"Batches","correct":false}]},{"q":"<p>In SQL Server, the stored procedure <strong>prcDispEmpDetails</strong> prints the details of the employees based on their employee code by using multiple base tables. Alice wants to view the names of all the tables involved in printing this report. Therefore, she issues the <code>sp_helptext</code> command for the mentioned procedure, but she is unable to view any details. Which of the following statements can be the reason for this error?<br>\n<br>\n<br>\n<strong>Statements</strong></p>\n\n<ol>\n\t<li>The database administrator has revoked read permissions from the prcDispEmpDetails procedure.<br>\n\t </li>\n\t<li>The database administrator has revoked execute permission from the system stored procedure sp_helptext.<br>\n\t </li>\n\t<li>The database administrator has created the procedure with the ‘With Recompile’ option enabled.<br>\n\t </li>\n\t<li>The database administrator has created the procedure with ‘Encryption’.</li>\n</ol>","a":[{"id":382011,"option":"1","correct":true},{"id":382012,"option":"2","correct":false},{"id":382013,"option":"3","correct":false},{"id":382014,"option":"4","correct":false}]},{"q":"<p>You are given the tables <strong>Hack_Table</strong> and <strong>HackData_Table</strong>. If you are required to execute the following SQL query, then determine its output.</p>\n\n<p><br>\n<strong>Table: Hack_Table</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_firstname</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Table: HackData_Table</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p><strong>SQL Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT Hack_Table.hack_id,HackData_Table.hack_lastname, HackData_Table.emp_id FROM HackData_Table Left JOIN Hack_Table ON HackData_Table.hack_id = Hack_Table.hack_id;\n</code></pre>\n\n<p><br>\n<br>\n </p>\n\n<p><strong>Output</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">NULL</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">NULL</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<br>\n\t<br>\n\t </li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">Ben </td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">NULL</td>\n\t\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">NULL</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t</li>\n</ol>","a":[{"id":383209,"option":"2","correct":true},{"id":383210,"option":"1","correct":false},{"id":383211,"option":"3","correct":false},{"id":383212,"option":"4","correct":false}]},{"q":"<p>In a stored database procedure, which of the following cannot be invoked (called)?</p>","a":[{"id":600695,"option":"Another stored database procedure","correct":false},{"id":600696,"option":"A stored database function","correct":false},{"id":600697,"option":"A client-side procedure","correct":true},{"id":600698,"option":"A variable declared in a stored database package specification","correct":false}]},{"q":"<p>You are given the <strong>OrdersList</strong> table that contains the details of all the orders. Now, if you are required to store the details of the orders received in the year 2017 in a new table, <strong>CurrentOrders </strong>then which of the following SQL commands can you use to do so?</p>","a":[{"id":381008,"option":"SELECT INTO","correct":true},{"id":381009,"option":"INSERT INTO","correct":false},{"id":381010,"option":"INSERT","correct":false},{"id":381011,"option":"UPDATE","correct":false}]},{"q":"<p>You have created the following dbo.Emp_records procedures and you want to check if any procedure of that name exists. If it exists already, then delete the procedure and create a new one. However, the following procedure generates an error. Identify the correct code which performs the task.</p>\n\n<pre class=\"prettyprint\"><code>IF EXISTS (SELECT * FROM sys.sys_files WHERE SCHEMA_ID=SCHEMA_ID('dbo')  \nAND name= N'Emp_records')  \nDROP PROCEDURE dbo.Emp_records  \nGO  \n\nCreate Procedure dbo.Emp_records\n(\n\n @EmpFirstName Varchar(200),\n @EmpLastName  Varchar(200),\n @EmpEmail     Varchar(50)\n) \n\nAs\n\n Begin\n\n   Insert into tbl_Employees (Firstname, lastname, Email)\n   Values(\"@EmpFirstName\", \"@EmpLastName\",\"@EmpEmail\")\n\n End\n</code></pre>","a":[{"id":381999,"option":"IF EXISTS (SELECT * FROM sys.procedures WHERE SCHEMA_ID=SCHEMA_ID('dbo')  \r\nAND name= N'Emp_records')  \r\nDROP PROCEDURE dbo.Emp_records  \r\nGO  \r\nCreate Procedure dbo.Emp_records\r\n(\r\n @EmpFirstName Varchar(200),\r\n @EmpLastName  Varchar(200),\r\n @EmpEmail     Varchar(50)\r\n) \r\nAs\r\n Begin\r\n   Insert into tbl_Employees (Firstname, lastname, Email)\r\n   Values(@EmpFirstName, @EmpLastName,@EmpEmail)\r\n End","correct":true},{"id":382000,"option":"IF EXISTS (SELECT * FROM sys.procedures WHERE SCHEMA_ID=SCHEMA_ID('dbo')  \r\nAND name= N'Emp_records')  \r\nDROP PROCEDURE dbo.Emp_records  \r\nGO  \r\nCreate Procedure dbo.Emp_records\r\n(\r\n @EmpFirstName Varchar(200),\r\n @EmpLastName  Varchar(200),\r\n @EmpEmail     Varchar(50)\r\n) \r\nAs\r\n Begin\r\n   Insert into tbl_Employees (Firstname, lastname, Email)\r\n   Values(\"@EmpFirstName\", \"@EmpLastName\",\"@EmpEmail\")\r\n End","correct":false},{"id":382001,"option":"IF EXISTS (SELECT * FROM sys.procedures WHERE SCHEMA_ID=SCHEMA_ID('dbo')  \r\nAND name= Emp_records)  \r\nDROP PROCEDURE dbo.Emp_records  \r\nGO  \r\nCreate Procedure dbo.Emp_records\r\n(\r\n @EmpFirstName Varchar(200),\r\n @EmpLastName  Varchar(200),\r\n @EmpEmail     Varchar(50)\r\n) \r\nAs\r\n Begin\r\n   Insert into tbl_Employees (Firstname, lastname, Email)\r\n   Values(@EmpFirstName, @EmpLastName,@EmpEmail)\r\n End","correct":false},{"id":382002,"option":"IF EXISTS (SELECT * FROM sys.procedures WHERE SCHEMA_ID=SCHEMA_ID('dbo')  \r\nAND name= Emp_records)  \r\nDROP PROCEDURE dbo.Emp_records  \r\nGO  \r\nCreate Procedure \r\n(\r\n @EmpFirstName Varchar(200),\r\n @EmpLastName  Varchar(200),\r\n @EmpEmail     Varchar(50)\r\n) \r\nAs\r\n Begin\r\n   Insert into tbl_Employees (Firstname, lastname, Email)\r\n   Values(@EmpFirstName, @EmpLastName,@EmpEmail)\r\n End","correct":false}]},{"q":"<p>In SQL you are working on database transactions. If the transaction you are performing on the database commits but the system immediately crashes after the commit then which of the following properties of transaction holds in this scenario?</p>","a":[{"id":383229,"option":"Atomicity","correct":false},{"id":383230,"option":"Consistency","correct":false},{"id":383231,"option":"Isolation","correct":false},{"id":383232,"option":"Durability","correct":true}]},{"q":"<p>In SQL you are working on Transact-SQL, now which of the following statements is correct about the @@SPID configuration function?<br>\n<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>The @@SPID configuration function returns the stored procedure ID of the current user process.<br>\n\t </li>\n\t<li>The @@SPID configuration function returns the session ID of the current user process.<br>\n\t </li>\n\t<li>The @@SPID configuration function returns the version of SQL Server.</li>\n</ol>","a":[{"id":600731,"option":"1","correct":false},{"id":600732,"option":"2","correct":true},{"id":600733,"option":"3","correct":false},{"id":600734,"option":"None of these","correct":false}]},{"q":"<p>In SQL you are working on dates and functions. The SQL query given below gives you the current system date in YYYY/MM/DD format. Now, which of the following SQL queries can you use to convert the date to DD/MM/YY format?<br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT GETDATE();</code></pre>\n\n<p><br>\n<br>\n<strong>SQL Queries:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT convert(varchar, getdate(), 103);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT convert \"varchar, getdate(), 103\";</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT convert(varchar,getdate());</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT convert(getdate());</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":382106,"option":"1","correct":true},{"id":382107,"option":"2","correct":false},{"id":382108,"option":"3","correct":false},{"id":382109,"option":"4","correct":false}]},{"q":"<p>Consider the given table that contains the <strong>last_name</strong> and <strong>first_name</strong> as its primary keys and the <strong>NOT NULL</strong> constraint in both its columns. If you are required to execute the following SQL query then which of the given statements is correct?<br>\n </p>\n\n<p><strong>Table: student_tbl</strong></p>\n\n<table border=\"1\" style=\"width: 193px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 78px;\"><strong>first_name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 99px;\"><strong>last_name</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 78px;\">Alice</td>\n\t\t\t<td style=\"text-align: center; width: 99px;\">Smith</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 78px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 99px;\">Jones</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 78px;\">Ben</td>\n\t\t\t<td style=\"text-align: center; width: 99px;\">Johnson</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 78px;\">Mike</td>\n\t\t\t<td style=\"text-align: center; width: 99px;\">White</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<strong>SQL Query:</strong></p>\n\n<pre class=\"prettyprint\"><code>INSERT IGNORE INTO student_tbl (last_name, first_name) VΑLUES( 'White', 'Mike');</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>An error occurs because of the INSERT statement.<br>\n\t </li>\n\t<li>A record will be inserted.</li>\n</ol>","a":[{"id":543060,"option":"1","correct":false},{"id":543061,"option":"2","correct":false},{"id":543062,"option":"1 and 2","correct":false},{"id":543063,"option":"None of these","correct":true}]},{"q":"<p>In Azure, which of the following permissions is required for the credentials that are used to connect to the target Azure SQL database instance on the Azure SQL databases?</p>","a":[{"id":1152673,"option":"CONTROL SERVER","correct":false},{"id":1152674,"option":"CONTROL DATABASE","correct":true},{"id":1152675,"option":"FIREWALL RULE","correct":false},{"id":1152676,"option":"None of these","correct":false}]},{"q":"<p>Which of the following categories identifies partially supported or unsupported features that reflect compatibility issues that might block migrating on-premises SQL Server database(s) to Azure SQL Database?</p>","a":[{"id":1152689,"option":"Compatibility issues","correct":true},{"id":1152690,"option":"SQL Server feature parity","correct":false},{"id":1152691,"option":"Both of these","correct":false},{"id":1152692,"option":"None of these","correct":false}]},{"q":"<p>You are enabled to create a managed instance and configure a virtual machine in your Azure SQL Database. Which of the following files is used to restore the new managed instance?</p>","a":[{"id":1152737,"option":".bacpac","correct":false},{"id":1152738,"option":".dacpac","correct":false},{"id":1152739,"option":".bak","correct":true},{"id":1152740,"option":".restre","correct":false}]},{"q":"If your windows firewall is opened to allow Azure Database Migration Service (DMS) to access the source SQL Server, then what is the default port number?","a":[{"id":1152669,"option":"TCP port 9354","correct":false},{"id":1152670,"option":"TCP port 1433","correct":true},{"id":1152671,"option":"TCP port 1453","correct":false},{"id":1152672,"option":"TCP port 1445","correct":false}]},{"q":"<p>In SQL, which of the following statements about the <strong>stored procedures</strong> subroutine<strong> </strong>are correct:</p>\n\n<ol>\n\t<li>Stored procedures are executable server-side routines.</li>\n\t<li>Stored procedures can be used as a security layer.</li>\n\t<li>Stored procedures cannot be used to perform input validation.</li>\n\t<li>Stored procedures save CPU resources by re-using previously cached execution plans.</li>\n</ol>\n\n<p> </p>","a":[{"id":646454,"option":"1, 2, and 3","correct":false},{"id":646455,"option":"1, 2, and 4","correct":true},{"id":646456,"option":"1, 3, and 4","correct":false},{"id":646457,"option":"All of these","correct":false}]},{"q":"<p>Consider the <strong>Toys</strong> table which has the following columns:</p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ToyID</th>\n\t\t\t<th>vToyName</th>\n\t\t\t<th>mToyRate</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t</tbody>\n</table>\n\n<p>Now, which of the following SQL queries can you use to select the following:</p>\n\n<ol>\n\t<li>Maximum toy rate</li>\n\t<li>Minimum toy rate</li>\n\t<li>Average toy rate in the same query</li>\n</ol>\n\n<p><br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Maximum'= MAX (mToyRate), 'Minimum'= MIN (mToyRate) FROM Toys\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Maximum'= MAX (mToyRate), 'Minimum'= MIN (mToyRate), 'Average'= AVG (mToyRate) FROM Toys\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Maximum'= MAX (mToyRate), 'Minimum'= MIN (mToyRate), 'Average'= AVG (mToyRate) FROM Toys\nGroup by MAX (mToyRate), MIN(mToyRate), AVG (mToyRate)\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Minimum'= MIN(mToyRate), 'Average'= AVG (mToyRate) FROM Toys</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":383189,"option":"1","correct":false},{"id":383190,"option":"2","correct":true},{"id":383191,"option":"3","correct":false},{"id":383192,"option":"4","correct":false}]},{"q":"<p>Which of the following statements represents the advantages of the TRUNCATE command over the DELETE command?<br>\n<br>\n<br>\n<strong>Statements</strong></p>\n\n<ol>\n\t<li>The TRUNCATE command uses less transaction log space.<br>\n\t </li>\n\t<li>Fewer locks are typically used when using the TRUNCATE command.<br>\n\t </li>\n\t<li>TRUNCATE TABLE removes all rows from a table, but the table structure and its columns, constraints, indexes, and so on remain.<br>\n\t </li>\n\t<li>DELETE command is faster than the TRUNCATE command.<br>\n\t </li>\n\t<li>You cannot apply the WHERE clause on the TRUNCATE command.</li>\n</ol>","a":[{"id":382150,"option":"1, 2, 3, and 5","correct":true},{"id":382151,"option":"2, 3, 4, and 5","correct":false},{"id":382152,"option":"1, 3, 4, and 5","correct":false},{"id":382153,"option":"1, 3, and 4","correct":false}]},{"q":"<p>If you are required to search for created and available file groups in the current database along with the type and read-only status, then which of the following SQL queries can you use to do so?<br>\n<br>\n<br>\n<strong>SQL Queries</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT name, type, is_read_only FROM sys.filegroups WHERE type = 'FG'</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT name, type, is_read_only FROM sys.data_spaces WHERE type = 'FG'</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT name, type, is_read_only FROM sys.groups WHERE type = 'FG'</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT name, type, is_read_only FROM sys.sysfile WHERE type = 'FG'</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":381012,"option":"1","correct":true},{"id":381013,"option":"2","correct":false},{"id":381014,"option":"3","correct":false},{"id":381015,"option":"4","correct":false}]},{"q":"<p>In an SQL, which of the following statements about a <strong>trigger</strong> is correct?<br>\n<br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>CREATE TRIGGER must be the first statement in the batch and can apply to more than one table.<br>\n\t </li>\n\t<li>A trigger can reference objects outside the current database.<br>\n\t </li>\n\t<li>SET statements cannot be specified inside a trigger.</li>\n</ol>","a":[{"id":383213,"option":"1","correct":false},{"id":383214,"option":"2","correct":true},{"id":383215,"option":"3","correct":false},{"id":383216,"option":"All of these","correct":false}]},{"q":"<p>You are given a table <strong>students_tbl</strong>. If you are required to execute the following SQL query, then determine its output.<br>\n<br>\n<strong>students_tbl:</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>student_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>student_name</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>subject_code</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>marks</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">111</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">001</td>\n\t\t\t<td style=\"text-align: center;\">40</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">222</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">005</td>\n\t\t\t<td style=\"text-align: center;\">75</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">333</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t\t<td style=\"text-align: center;\">007</td>\n\t\t\t<td style=\"text-align: center;\">99</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">444</td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t\t<td style=\"text-align: center;\">008</td>\n\t\t\t<td style=\"text-align: center;\">100</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\n<strong>SQL Query:</strong><br>\n </p>\n\n<pre class=\"prettyprint\"><code>SELECT student_id, student_name FROM students_tbl WHERE marks =  (SELECT MAX(marks) FROM students_tbl);</code></pre>\n\n<p><br>\n<br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>student_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>student_name</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">444</td>\n\t\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>student_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>student_name</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">111</td>\n\t\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t</li>\n</ol>","a":[{"id":600723,"option":"1","correct":true},{"id":600724,"option":"2","correct":false},{"id":600725,"option":"The query will give an error","correct":false},{"id":600726,"option":"None of these","correct":false}]},{"q":"<p>You have a table <strong>EmployeesTbl</strong>,<br>\n<br>\n<strong>EmployeesTbl:</strong></p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>Emp_ID</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Emp_FName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Emp_LName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Branch_City</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>JoinDate</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t<td style=\"text-align: center;\">Tacoma</td>\n\t\t\t<td style=\"text-align: center;\">2017-06-02</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">Davis</td>\n\t\t\t<td style=\"text-align: center;\">Seattle</td>\n\t\t\t<td style=\"text-align: center;\">2017-06-20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">Tara</td>\n\t\t\t<td style=\"text-align: center;\">Johnson</td>\n\t\t\t<td style=\"text-align: center;\">Redmond</td>\n\t\t\t<td style=\"text-align: center;\">2016-07-20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t<td style=\"text-align: center;\">New York</td>\n\t\t\t<td style=\"text-align: center;\">2018-07-20</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\nnow,  which of the following SQL queries can you use to obtain the list of all the employees based on the following:</p>\n\n<ol>\n\t<li>Working in Seattle, Tacoma, and Redmond</li>\n\t<li>Joined between the dates 1st June 2017 to 30th July 2017<br>\n\t<br>\n\t </li>\n</ol>\n\n<p><strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT Emp_ID, Emp_FName, Emp_LName, Branch_City FROM EmployeesTbl WHERE Branch_City IN ('Seattle', 'Tacoma', 'Redmond') AND JoinDate BETWEEN '2017-06-01' AND '2017-07-30'</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT Emp_ID, Emp_FName, Emp_LName, Branch_City FROM EmployeesTbl WHERE Branch_City IN (Seattle, Tacoma, Redmond) AND JoinDate BETWEEN '2017-06-01' AND '2017-07-30'</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT Emp_ID, Emp_FName, Emp_LName, Branch_City FROM EmployeesTbl WHERE Branch_City IN ('Seattle', 'Tacoma', 'Redmond') AND JoinDate IN BETWEEN '2017-06-01' AND '2017-07-30'\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT Emp_ID, Emp_FName, Emp_LName, Branch_City FROM EmployeesTbl WHERE Branch_City IN (''Seattle\", \"Tacoma\", \"Redmond\") AND JoinDate BETWEEN \"2017-06-01\" AND \"2017-07-30\"</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":382158,"option":"1","correct":true},{"id":382159,"option":"2","correct":false},{"id":382160,"option":"3","correct":false},{"id":382161,"option":"4","correct":false}]},{"q":"<p>You are given the following tables EmployeeTbl and Departments. Now, which of the following SQL queries will you use to get the list of all the employees working in any department?<br>\n<br>\n<strong>EmployeeTbl:</strong></p>\n\n<table align=\"left\" border=\"0\" style=\"width: 341px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 39px;\"><strong>EMP_ID</strong></td>\n\t\t\t<td style=\"width: 71px;\"><strong>User_name</strong></td>\n\t\t\t<td style=\"width: 74px;\"><strong>F_Name</strong></td>\n\t\t\t<td style=\"width: 57px;\"><strong>L_name</strong></td>\n\t\t\t<td style=\"width: 58px;\"><strong>Dep_ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 39px;\">1</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">AAlice</td>\n\t\t\t<td style=\"text-align: center; width: 74px;\">Alice</td>\n\t\t\t<td style=\"text-align: center; width: 57px;\">Smith</td>\n\t\t\t<td style=\"text-align: center; width: 58px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 39px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">BBob</td>\n\t\t\t<td style=\"text-align: center; width: 74px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 57px;\">Jones</td>\n\t\t\t<td style=\"text-align: center; width: 58px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 39px;\">3</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">BBen</td>\n\t\t\t<td style=\"text-align: center; width: 74px;\">Ben</td>\n\t\t\t<td style=\"text-align: center; width: 57px;\">Johnson</td>\n\t\t\t<td style=\"text-align: center; width: 58px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 39px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">MMike</td>\n\t\t\t<td style=\"text-align: center; width: 74px;\">Mike</td>\n\t\t\t<td style=\"text-align: center; width: 57px;\">White</td>\n\t\t\t<td style=\"text-align: center; width: 58px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 39px;\">5</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">AAnita</td>\n\t\t\t<td style=\"text-align: center; width: 74px;\">Anita</td>\n\t\t\t<td style=\"text-align: center; width: 57px;\">Williams</td>\n\t\t\t<td style=\"text-align: center; width: 58px;\">3</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 39px;\">6</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">LLisa</td>\n\t\t\t<td style=\"text-align: center; width: 74px;\">Lisa</td>\n\t\t\t<td style=\"text-align: center; width: 57px;\">Davis</td>\n\t\t\t<td style=\"text-align: center; width: 58px;\">3</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 39px;\">7</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">MMary</td>\n\t\t\t<td style=\"text-align: center; width: 74px;\">Mary</td>\n\t\t\t<td style=\"text-align: center; width: 57px;\">Brown</td>\n\t\t\t<td style=\"text-align: center; width: 58px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 39px;\">8</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">JJohn</td>\n\t\t\t<td style=\"text-align: center; width: 74px;\">John</td>\n\t\t\t<td style=\"text-align: center; width: 57px;\">Wilson</td>\n\t\t\t<td style=\"text-align: center; width: 58px;\">4</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n\n<p> </p>\n\n<p><br>\n<br>\n<strong>DepartmentsTbl:</strong></p>\n\n<table align=\"left\" class=\"pd-table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>Dep_ID</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Dep_name</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">Technical Innovations</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">Technical Support</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">Operations</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">Customer Delight</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM EmployeeTbl e1 LEFT OUTER JOIN DepartmentsTbl e2 ON e1.Dep_ID = e2.Dep_ID</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM EmployeeTbl e1 RIGHT OUTER JOIN DepartmentsTbl e2 ON e1.Dep_ID = e2.Dep_ID</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM EmployeeTbl e1 CROSS JOIN DepartmentsTbl e2 ON e1.Dep_ID = e2.Dep_ID</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM EmployeeTbl e1 FULL OUTER JOIN DepartmentsTbl e2 ON e1.Dep_ID = e2.Dep_ID</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p><br>\n </p>","a":[{"id":383277,"option":"1","correct":true},{"id":383278,"option":"2","correct":false},{"id":383279,"option":"3","correct":false},{"id":383280,"option":"4","correct":false}]},{"q":"<p>In SQL, you are working on indexing. Now, if you are required to get the pointer of the root page of an index then which of the following system compatibility views can you use to perform this action?<br>\n </p>","a":[{"id":383225,"option":"Sysobjects","correct":false},{"id":383226,"option":"Sysreferences","correct":false},{"id":383227,"option":"Sysdepends","correct":false},{"id":383228,"option":"Sysindexes","correct":true}]},{"q":"<p>You are given the table <strong>EmployeeTbl</strong>. Now, which of the following SQL queries can you use if you are required to print the list of employees who are not working in the branch located in <em>London</em>?<br>\n<br>\n<br>\n<strong>EmployeeTbl:</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>EmpID</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Emp_FName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Emp_LName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Branch_City</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">Wilson </td>\n\t\t\t<td style=\"text-align: center;\">Germany</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">Davis</td>\n\t\t\t<td style=\"text-align: center;\">Mexico</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">Tara</td>\n\t\t\t<td style=\"text-align: center;\">Johnson</td>\n\t\t\t<td style=\"text-align: center;\">London</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t\t<td style=\"text-align: center;\">Brown</td>\n\t\t\t<td style=\"text-align: center;\">New York</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>SQL Queries</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT EmpID, Emp_FName, Emp_LName, Branch_City FROM EmployeeTbl WHERE Branch_City &lt;&gt; 'London'</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT EmpID, Emp_FName, Emp_LName, Branch_City FROM EmployeeTbl WHERE Branch_City &lt;&gt; \"London\"</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT EmpID, Emp_FName, Emp_LName, Branch_City FROM EmployeeTbl WHERE Branch_City not equal to 'London'</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT EmpID, Emp_FName, Emp_LName, Branch_City FROM EmployeeTbl WHERE Branch_City &lt;&gt; London\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":382154,"option":"1","correct":true},{"id":382155,"option":"2","correct":false},{"id":382156,"option":"3","correct":false},{"id":382157,"option":"4","correct":false}]},{"q":"<p>In SQL, what is the function of the ON UPDATE CASCADE clause?</p>","a":[{"id":600571,"option":"Normalization","correct":false},{"id":600572,"option":"Data integrity","correct":true},{"id":600573,"option":"Materialized views","correct":false},{"id":600574,"option":"All of these","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p><strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>ADDRESS</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>01</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Boston</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>02</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Chicago</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>03</td>\n\t\t\t<td>Ben</td>\n\t\t\t<td>Boston</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>04</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Boston</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong> </p>\n\n<pre class=\"prettyprint\"><code>SELECT NAME FROM STUDENT WHERE ADDRESS &lt;&gt; 'Boston';\n</code></pre>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 54px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 42px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 42px;\">Bob</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 56px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 44px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 44px;\">Alice</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 44px;\">Ben</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 44px;\">Mike</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 57px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\">Ben</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376364,"option":"1","correct":true},{"id":376365,"option":"2","correct":false},{"id":376366,"option":"3","correct":false},{"id":376367,"option":"Invalid query","correct":false}]},{"q":"<p>In Azure, if you have a trigger in the data, then the trigger will enforce data integrity in the target ahead of the replicated data from the source. Which of the following SQL queries must be executed to disable triggers in the target database?</p>","a":[{"id":1152697,"option":"SELECT SchemaName, GROUP_CONCAT(DropQuery SEPARATOR ';\\n') as DropQuery, GROUP_CONCAT(AddQuery SEPARATOR ';\\n') as AddQuery","correct":false},{"id":1152698,"option":"SELECT SchemaName as DropQuery Group_CONCAT(AddQuery SEPARATOR ‘;\\n’) as AddQuery","correct":false},{"id":1152699,"option":"SELECT Concat(‘DROP TRIGGER’, Trigger_Name, ‘;’) FROM information_schema.TRIGGERS WHERE TRIGGER_SCHEMA = ‘your_schema’;","correct":true},{"id":1152700,"option":"SELECT Concat(Trigger_Name, ‘;’) FROM information_schema.TRIGGERS WHERE TRIGGER_SCHEMA=’your_schema’;","correct":false}]},{"q":"<p>In Azure, if you are required to perform the migration cutover while migration Oracle database to the Azure database for a PostgreSQL-Single server online, which of the following actions must be performed?</p>\n\n<ol>\n\t<li>    Resume all the incoming transactions that are reaching to the source database.</li>\n\t<li>    Wait until all the pending transactions have been applied to the target database.</li>\n\t<li>    By default database objects in the PostgreSQL database should be case insensitive.</li>\n\t<li>    Reconnect your application to the new Azure target database.</li>\n</ol>","a":[{"id":1152705,"option":"1, 2, and 3","correct":false},{"id":1152706,"option":"2, 3, and 4","correct":true},{"id":1152707,"option":"1, 2, and 4","correct":false},{"id":1152708,"option":"1, 3, and 4","correct":false}]},{"q":"<p>If you are required to migrate your SQL workloads to Azure while maintaining complete SQL Server compatibility and operating system-level access, then which of the following database services is used to perform this action?</p>","a":[{"id":1152729,"option":"Azure Synapse Analytics","correct":false},{"id":1152730,"option":"Azure SQL Database","correct":false},{"id":1152731,"option":"SQL Server on virtual machines","correct":true},{"id":1152732,"option":"Azure Consume DB","correct":false}]},{"q":"<p>In Azure, which of the following statements about the SQL Database service is correct:</p>\n\n<ol>\n\t<li>It enables the user to define and scale performance within two different purchasing models such as the vCore-based purchasing model and the DTU-based purchasing model.</li>\n\t<li>It is a fully managed service that has built-in high availability, backups, and other common maintenance operations.</li>\n</ol>\n\n<p> </p>","a":[{"id":1152725,"option":"1","correct":false},{"id":1152726,"option":"2","correct":false},{"id":1152727,"option":"Both of these","correct":true},{"id":1152728,"option":"None of these","correct":false}]},{"q":"Which of the following statements about the Azure Database Migration Service(DMS) are correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;It provides customers with the least comprehensive service solution.<br>&nbsp;&nbsp;&nbsp;&nbsp;It uses the Data Migration Assistant (DMA) to generate the assessment reports that provide recommendations to guide through the changes required prior to performing a migration.<br>&nbsp;&nbsp;&nbsp;&nbsp;It is a fully managed service designed to enable seamless migrations from multiple database sources to Azure Data platforms with minimal downtime (online migrations).","a":[{"id":1152685,"option":"1 and 2","correct":false},{"id":1152686,"option":"2 and 3","correct":true},{"id":1152687,"option":"1 and 3","correct":false},{"id":1152688,"option":"All of these","correct":false}]},{"q":"In Azure, if the HackerEarth2020 is the name of the Azure SQL database, then which of the following SQL queries is used to enable Change Data Capture (CDC) on an RDS SQL Server?","a":[{"id":1152693,"option":"exec msdb.dbo.rds enable cdc ‘HackerEarth2020’","correct":false},{"id":1152694,"option":"exec msdb.dbo.rds.db enable cdc ‘HackerEarth2020’","correct":false},{"id":1152695,"option":"exec msdb.dbo.rds cdc enable db ‘HackerEarth2020’","correct":true},{"id":1152696,"option":"exec msdb.dbo.rds db enable cdc ‘HackerEarth2020’","correct":false}]},{"q":"<p>In SQL, which of the following rules is valid for an <strong>OFFSET</strong> clause:</p>\n\n<ol>\n\t<li>If you specify a negative number, the OFFSET clause is treated as a NULL value and the row limiting begins with the first row.</li>\n\t<li>If you specify NULL, the OFFSET clause is treated as NULL and the row limiting begins with the first row.</li>\n\t<li>If OFFSET includes a fraction, then the fractional portion is truncated.</li>\n\t<li>If you specify a number greater than or equal to the number of rows returned by the query, then the NULL rows are returned.</li>\n</ol>","a":[{"id":621863,"option":"1","correct":false},{"id":621864,"option":"2","correct":false},{"id":621865,"option":"3","correct":true},{"id":621866,"option":"4","correct":false}]},{"q":"<p>In Oracle SQL, which of the following statements is correct about object and system privileges?</p>","a":[{"id":568337,"option":"Both object and system privileges can be granted through a single role to a user.","correct":true},{"id":568338,"option":"Both object and system privileges can be granted through a multiple roles to a user.","correct":false},{"id":568339,"option":"Both of these","correct":false},{"id":568340,"option":"None of these","correct":false}]},{"q":"<p>In SQL, what is a natural join?</p>","a":[{"id":568287,"option":"Cartesian product","correct":false},{"id":568288,"option":"Combination of Union and Cartesian product","correct":false},{"id":568289,"option":"Combination of Selection and Cartesian product","correct":false},{"id":568290,"option":"Combination of Projection and Cartesian product","correct":true}]},{"q":"<p>In SQL, which of these statements will result in the following error:</p>\n\n<p>ORA-01722: invalid number</p>","a":[{"id":560430,"option":"SELECT TO_CHAR(TO_NUMBER(-999.999))\r\nFROM dual;","correct":false},{"id":560431,"option":"SELECT TO_CHAR(TO_NUMBER('$-999.999'))\r\nFROM dual;","correct":true},{"id":560432,"option":"SELECT TO_NUMBER(TO_CHAR(999.999))\r\nFROM dual;","correct":false},{"id":560433,"option":"SELECT TO_CHAR(TO_NUMBER('-999.999'))\r\nFROM dual;","correct":false}]},{"q":"<p>If a column has a NOT NULL constraint for every row of the table, which of the following changes can you make to the table by using the ALTER TABLE command?</p>","a":[{"id":560420,"option":"Change the column’s datatype","correct":false},{"id":560421,"option":"Decrease a character type column’s width","correct":false},{"id":560422,"option":"Decrease the number of digits in the NUMBER column","correct":false},{"id":560423,"option":"None of these","correct":true}]},{"q":"<p>In Oracle SQL, which of the following statements is incorrect about the USER_INDEXES view:</p>\n\n<ol>\n\t<li>This view describes indexes owned by the previous user.</li>\n\t<li>This view does not store unique indexes created by the primary key constraint.</li>\n\t<li>This view supports parallel partitioned index scans.</li>\n</ol>","a":[{"id":568277,"option":"1 and 3","correct":false},{"id":568278,"option":"1 and 2","correct":true},{"id":568279,"option":"2 and 3","correct":false},{"id":568280,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is a valid SQL statement?</p>","a":[{"id":419202,"option":"SELECT TO_CHAR(NVL(SQRT(56789),'INVALID')) FROM dual;","correct":false},{"id":419203,"option":"SELECT (TO_CHAR(NVL(SQRT(56789),'0')) FROM dual","correct":false},{"id":419204,"option":"SELECT TO_CHAR(NVL(SQRT(56789),'TRUE')) FROM dual;","correct":false},{"id":419205,"option":"SELECT TO_CHAR(NVL(SQRT(56789),'0')) FROM dual;","correct":true}]},{"q":"<p>In SQL, which of the following is used to improve the query performance?</p>","a":[{"id":385408,"option":"Triggers","correct":false},{"id":385409,"option":"Stored procedures","correct":true},{"id":385410,"option":"Views","correct":false},{"id":385411,"option":"Batches","correct":false}]},{"q":"<p>Which of these PySpark SQL queries can be used to sort rows in ascending manner keeping null values to be first:</p>\n\n<ol>\n\t<li>SELECT name, age FROM person ORDER BY age;</li>\n\t<li>SELECT name, age FROM person ORDER BY age ASC NULLS FIRST;</li>\n</ol>","a":[{"id":1179397,"option":"1","correct":false},{"id":1179398,"option":"2","correct":false},{"id":1179399,"option":"Both of these","correct":true},{"id":1179400,"option":"None of these","correct":false}]},{"q":"<p>You are given the tables <strong>Hack_Table</strong>,&nbsp;<strong>HackData_Table</strong>,<strong>&nbsp;</strong>and <strong>HackStats_Table</strong>. If you are required to execute the following SQL query, then determine its output.</p>\n\n<p><strong>Table:&nbsp;Hack_Table</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_firstname</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">111</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t\t<td style=\"text-align: center;\">222</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t\t<td style=\"text-align: center;\">333</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t<td style=\"text-align: center;\">Paul</td>\n\t\t\t<td style=\"text-align: center;\">444</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Table: HackData_Table</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Table: HackStats_Table</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">20</td>\n\t\t\t<td style=\"text-align: center;\">111</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t\t<td style=\"text-align: center;\">222</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">53</td>\n\t\t\t<td style=\"text-align: center;\">333</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">76</td>\n\t\t\t<td style=\"text-align: center;\">444</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t<td style=\"text-align: center;\">555</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>SQL Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT Hack_Table.hack_id,HackData_Table.hack_lastname, HackData_Table.emp_id , HackStats_Table.stats FROM ((Hack_Table INNER JOIN HackData_Table ON Hack_Table.hack_id = HackData_Table.hack_id) INNER JOIN HackStats_Table ON Hack_Table.id = HackStats_Table.id and HackStats_Table.stats &gt;20 );\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<table border=\"1\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t\t<td style=\"text-align: center;\">53</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t\t<td style=\"text-align: center;\">76</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<table border=\"1\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t\t<td style=\"text-align: center;\">53</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t\t<td style=\"text-align: center;\">76</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<br>\n\t&nbsp;</li>\n\t<li>\n\t<table border=\"1\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t\t<td style=\"text-align: center;\">76</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p>&nbsp;</p>\n\t</li>\n\t<li>\n\t<table border=\"1\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t\t<td style=\"text-align: center;\">20</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t\t<td style=\"text-align: center;\">53</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t\t<td style=\"text-align: center;\">76</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t</li>\n</ol>","a":[{"id":382130,"option":"4","correct":false},{"id":382131,"option":"1","correct":true},{"id":382132,"option":"2","correct":false},{"id":382133,"option":"3","correct":false}]},{"q":"<p>You are given the tables <strong>Hack_Table</strong> and <strong>HackData_Table</strong>. If you are required to execute the following SQL query, then determine its output.</p>\n\n<p><br>\n<strong>Hack_Table</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_firstname</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p style=\"text-align: center;\"><br>\n </p>\n\n<p><strong>HackData_Table</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p style=\"text-align: center;\"> </p>\n\n<p><strong>SQL Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT Hack_Table.hack_id,HackData_Table.emp_id FROM Hack_Table INNER JOIN HackData_Table ON Hack_Table.hack_id = HackData_Table.hack_id;\n</code></pre>\n\n<p><br>\n </p>\n\n<p><strong>Output</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t \n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p style=\"text-align: center;\"><br>\n\t </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p style=\"text-align: center;\"> </p>\n\t</li>\n</ol>","a":[{"id":48798,"option":"3","correct":false},{"id":48799,"option":"1","correct":true},{"id":48800,"option":"2","correct":false},{"id":48801,"option":"None of these","correct":false}]},{"q":"<p>You are given the tables <strong>Hack_Table</strong> and <strong>HackData_Table</strong>. If you are required to execute the following SQL query, then determine its output.<br>\n<br>\n<strong>Table: Hack_Table</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_firstname</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<strong>Table: HackData_Table</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p><strong>SQL Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT Hack_Table.hack_firstname, HackData_Table.hack_lastname FROM Hack_Table JOIN HackData_Table ON Hack_Table.hack_id = HackData_Table.hack_id;\n</code></pre>\n\n<p><br>\n<br>\n<br>\n<strong>Output</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<table border=\"1\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td>Bob</td>\n\t\t\t\t<td>Ben</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Mary</td>\n\t\t\t\t<td>Alice</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Anita</td>\n\t\t\t\t<td>Smith</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td>Bob</td>\n\t\t\t\t<td>Ben</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Mary </td>\n\t\t\t\t<td>Alice</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Anita</td>\n\t\t\t\t<td>Smith</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Bob</td>\n\t\t\t\t<td>Wilson</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Mary</td>\n\t\t\t\t<td>Miller</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<br>\n\t </li>\n\t<li>\n\t<table border=\"1\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td>Bob</td>\n\t\t\t\t<td>Wilson</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>Mary</td>\n\t\t\t\t<td>Miller</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t</li>\n</ol>","a":[{"id":385205,"option":"1","correct":true},{"id":385206,"option":"2","correct":false},{"id":385207,"option":"3","correct":false},{"id":385208,"option":"None of these","correct":false}]},{"q":"<p>Which of these modes<em> </em>is associated with constraints<em> </em>in SQL?</p>","a":[{"id":649373,"option":"DEFERRED","correct":false},{"id":649374,"option":"IMMEDIATE","correct":false},{"id":649375,"option":"Both of these","correct":true},{"id":649376,"option":"None of these","correct":false}]},{"q":"<p>Consider the table <strong>student_tbl</strong>. Now, which of the following SQL queries can you use to display the records of students whose average marks is greater than 75:<br>\n </p>\n\n<p><strong>students_tbl:</strong></p>\n\n<table border=\"1\" style=\"width: 298px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 68px;\">student_id</td>\n\t\t\t<td style=\"width: 87px;\">student_name</td>\n\t\t\t<td style=\"width: 77px;\">subject_code</td>\n\t\t\t<td style=\"width: 38px;\">marks</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT student_name, subject_code, AVG (marks) FROM students_tbl WHERE AVG(marks) &gt; 75 GROUP BY subject_code;</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT student_name, subject_code, AVG (marks) FROM students_tbl HAVING AVG(marks) &gt; 75 GROUP BY subject_code;</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT student_name, subject_code, AVG (marks) FROM students_tbl GROUP BY student_name, subject_code HAVING AVG(marks) &gt; 75;</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT student_name, subject_code, AVG (marks) &gt; 75 FROM students_tbl GROUP BY subject_code;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":600727,"option":"1","correct":false},{"id":600728,"option":"2","correct":false},{"id":600729,"option":"3","correct":true},{"id":600730,"option":"4","correct":false}]},{"q":"<p>Consider the following two tables named <strong>Toys</strong> and <strong>Category</strong> with their respective columns. Now, which of the following SQL queries can you use to display the toy names and their respective category names?</p>\n\n<p><strong>Toys: </strong></p>\n\n<table border=\"1\" class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<td>ToyID</td>\n\t\t\t<td>vToyName</td>\n\t\t\t<td>CategoryId</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t</tbody>\n</table>\n\n<p><strong>Category:</strong></p>\n\n<table border=\"1\" style=\"width: 153px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 69px;\">cCategoryID</td>\n\t\t\t<td style=\"width: 68px;\">cCategory</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT t.vToyName, c.cCategory FROM Toys t INNER JOIN Category c ON t.CategoryId = c.cCategoryID\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT vToyName, cCategory FROM Toys JOIN Category ON cCategoryId = cCategoryID\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT t.vToyName, c.cCategory FROM Toys t JOIN Category c\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT t.vToyName, c.cCategory FROM Toys t, Category c ON cCategoryId = cCategoryID\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":382166,"option":"1","correct":true},{"id":382167,"option":"2","correct":false},{"id":382168,"option":"3","correct":false},{"id":382169,"option":"4","correct":false}]},{"q":"<p>The following code was used to create a stored procedure for adding the details of a new category to the table named <strong>category</strong>:</p>\n\n<pre class=\"prettyprint\"><code>CREATE PROCEDURE prcAddCategory @CategoryId\nchar(3),\n@Category char(20), @Descrip char(30)\n\nas\n\nINSERT Category\nVALUES(‘CategoryId’, ’Category’, ’Descrip’)\n\n</code></pre>\n\n<p><br>\nAfter successful creation of the following procedure the following code was used to execute the procedure for inserting a new category:</p>\n\n<pre class=\"prettyprint\"><code>Exec prcAddCategory ‘017’, ‘War Games’, ‘A wider range of toy guns’</code></pre>\n\n<p><br>\n </p>\n\n<p> </p>\n\n<p>The given code generated an error and was aborted. You need to detect the error and rectify the code.</p>","a":[{"id":382003,"option":"CREATE PROCEDURE prcAddCategory @CategoryId\r\nchar(3),\r\n@Category char(20), @Descrip char(30)\r\nas\r\nINSERT Category\r\nVALUES(@CategoryId,@Category,@Descrip)\r\n","correct":true},{"id":382004,"option":"CREATE PROCEDURE prcAddCategory @CategoryId\r\nchar(3),\r\n@Category char(20), @Descrip char(30)\r\nas\r\nINSERT Category\r\nVALUES(CategoryId, Category, Descrip)\r\n","correct":false},{"id":382005,"option":"CREATE PROCEDURE prcAddCategory @CategoryId\r\nchar(3),\r\n@Category char(20), @Descrip char(30)\r\nINSERT Category\r\nVALUES(@CategoryId,@Category,@Descrip)\r\n","correct":false},{"id":382006,"option":"CREATE PROCEDURE prcAddCategory @CategoryId\r\nchar(3),\r\n@Category char(20), @Descrip char(30)\r\nas\r\nINSERT \r\nVALUES(@CategoryId,@Category,@Descrip)\r\n","correct":false}]},{"q":"<p>You are given the following table <strong>Employee</strong>. The management of a company wants to increase the shift-time of employees from 8 hours to 10 hours. Now, which of the following SQL queries can you use to calculate the end time of the shifts based on the start time?</p>\n\n<p><br>\n<strong>Employee:</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>EmpID</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>EmpName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>EmpDept</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Starttime</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>ShiftID</strong></td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> <br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Select EmpName, ShiftID, StartTime, ‘EndTime’=date(hh,10,StartTime) From Employees\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Select EmpName, ShiftID, StartTime, ‘EndTime’=timeadd(hh,10,StartTime) From Employees\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Select EmpName, ShiftID, StartTime, ‘EndTime’=add(hh,10,StartTime) From Employees</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Select EmpName, ShiftID, StartTime, ‘EndTime’=dateadd(hh,10,StartTime) From Employees</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":382110,"option":"1","correct":false},{"id":382111,"option":"2","correct":false},{"id":382112,"option":"3","correct":false},{"id":382113,"option":"4","correct":true}]},{"q":"<p>Given below is a schedule for interviews which is required with the following information that has to be printed in alphabetical order of candidates name:</p>\n\n<pre class=\"prettyprint\"><code>Candidate Name, Interviewer, Date, Week Day\n</code></pre>\n\n<p><br>\nThe following is the structure of the original table ExternalCandidate:<br>\n<br>\n<strong>Table:</strong> <strong>ExternalCandidate</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>ID</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>vFirstName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>vLastName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>cInterviewer</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>dInterviewdate</strong></td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\nNow, which of the following SQL queries can you use to do the given task?<br>\n<br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Candidate Name' = vFirstName,'Interviewer'=cInterviewer, 'Date'=datepart(dd,dInterviewDate),\n'Week Day'=datename(dw, dInterviewdate) FROM ExternalCandidate Order by vFirstName\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Candidate Name' = vFirstName, 'Interviewer'=cInterviewer, 'Date'=datepart(dd,dInterviewDate), 'Week Day'=datename(dw, dInterviewdate) FROM ExternalCandidate\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Candidate Name' = vFirstName, 'Interviewer'=cInterviewer, 'Date'=datepart(dInterviewDate),\n'Week Day'=datename(dInterviewdate) FROM ExternalCandidate Order by vFirstName\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Candidate Name' = vFirstName, 'Interviewer'=cInterviewer,'Date'=datepart(dd,dInterviewDate),\n'Week Day'=datename(dw, dInterviewdate) FROM ExternalCandidate Order by vFirstName desc\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":383185,"option":"1","correct":true},{"id":383186,"option":"2","correct":false},{"id":383187,"option":"3","correct":false},{"id":383188,"option":"4","correct":false}]},{"q":"<p>You have executed an SQL code but the execution failed due to an error in the code. Now, which of the following system functions can you use to determine the line number at which the error has occurred?</p>","a":[{"id":383261,"option":"ERROR_LINE()","correct":true},{"id":383262,"option":"ERROR_MESSAGE()","correct":false},{"id":383263,"option":"ERROR_NUMBER()","correct":false},{"id":383264,"option":"ERROR_NO()","correct":false}]},{"q":"<p>Consider the following table:</p>\n\n<p><br>\n<strong>Table: ExternalCandidate</strong></p>\n\n<table border=\"1\" style=\"width: 400px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>vFirstName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>vLastName</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>siTestScore</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>dTestDate</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Jack</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">300</td>\n\t\t\t<td style=\"text-align: center;\">2016-03-08</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Jones</td>\n\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t<td style=\"text-align: center;\">400</td>\n\t\t\t<td style=\"text-align: center;\">2015-03-08</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Bob </td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t\t<td style=\"text-align: center;\">30</td>\n\t\t\t<td style=\"text-align: center;\">2016-03-03</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">Rachel</td>\n\t\t\t<td style=\"text-align: center;\">0</td>\n\t\t\t<td style=\"text-align: center;\">2017-08-03</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p><br>\nNow, which of the following SQL queries can you use to create a report displaying the names of candidates and their respective scores who took the test between March 5, 2016, and March 12, 2016?<br>\n<br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT vFirstName,vLastName,siTestScore,dTestDate FROM ExternalCandidate WHERE \ndTestDate between '2016-03-05' and '2016-03-12'</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT vFirstName,vLastName,siTestScore,dTestDate FROM ExternalCandidate WHERE \ndTestDate in( '2016-03-05' , '2016-03-12')\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT vFirstName,vLastName,siTestScore,dTestDate FROM ExternalCandidate WHERE \ndTestDate in( '2016-03-05' and '2016-03-12')\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT vFirstName,vLastName,siTestScore,dTestDate FROM ExternalCandidate WHERE \ndTestDate on '2016-03-05' and '2016-03-12'\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":383205,"option":"1","correct":true},{"id":383206,"option":"2","correct":false},{"id":383207,"option":"3","correct":false},{"id":383208,"option":"4","correct":false}]},{"q":"<p>If you are required to print the current system date, then which of the following SQL queries can you use to do so?<br>\n<br>\n<br>\n<strong>SQL Query</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Select getdate();</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Select datepart(today);</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Select today();</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Select year();</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":381791,"option":"1","correct":true},{"id":381792,"option":"2","correct":false},{"id":381793,"option":"3","correct":false},{"id":381794,"option":"4","correct":false}]},{"q":"<p>Alice is working on a table and she has executed two SQL select queries. Now, if she wants to merge those two SQL select queries then which of the following commands represent this task?<br>\n<br>\n<br>\n<strong>SQL Commands:</strong></p>\n\n<ol>\n\t<li>UNION ALL<br>\n\t </li>\n\t<li>UNION<br>\n\t </li>\n\t<li>JOIN</li>\n</ol>","a":[{"id":544568,"option":"1 and 2","correct":true},{"id":544569,"option":"2 and 3","correct":false},{"id":544570,"option":"1 and 3","correct":false},{"id":544571,"option":"None of these","correct":false}]},{"q":"<p>In an SQL Server, which of the following backups will ensure that the backup mode contains only the updated data since the last backup?</p>","a":[{"id":382118,"option":"Data backup ","correct":false},{"id":382119,"option":"Differential backup","correct":true},{"id":382120,"option":"Full backup","correct":false},{"id":382121,"option":"Log backup","correct":false}]},{"q":"<p>Which of the following SQL queries is used to find all the cities  from the table named <strong>weather </strong>with the weather conditions whose humidity is in the range of 60 to 100:</p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM weather WHERE humidity IN (60 to 100);</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM weather WHERE humidity NOT IN (60 AND 100);</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM weather WHERE humidity BETWEEN 60 AND 100;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM weather WHERE humidity NOT BETWEEN 60 AND 100;</code></pre>\n\n<p> </p>","a":[{"id":600611,"option":"1","correct":false},{"id":600612,"option":"2","correct":false},{"id":600613,"option":"3","correct":true},{"id":600614,"option":"4","correct":false}]},{"q":"<p>Assume a schema of Students (St_Id, St_Name, St_CourseID) and Course (Course_Id, Course_Name). If there are 100 records in the Students table and 5 records in the Course table, how many rows will be displayed in the result of the following SQL query:</p>\n\n<pre class=\"prettyprint\"><strong>Query</strong>\n</pre>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM Students, Course;</code></pre>\n\n<p> </p>","a":[{"id":600587,"option":"100","correct":false},{"id":600588,"option":"0","correct":false},{"id":600589,"option":"5","correct":false},{"id":600590,"option":"500","correct":true}]},{"q":"<p>In SQL, which of the following constraints is used to limit the range of values that can be placed in a column?</p>","a":[{"id":600627,"option":"DEFAULT","correct":false},{"id":600628,"option":"CHECK","correct":true},{"id":600629,"option":"NOT NULL","correct":false},{"id":600630,"option":"WHERE Clause","correct":false}]},{"q":"<p>If <strong>rec_id</strong> is the record id of a table <strong>table_name</strong>, then which of the following SQL queries is used to select all the even-numbered records from a table?</p>","a":[{"id":600583,"option":"SELECT * FROM table_name WHERE rec_id MOD 2 = 0","correct":false},{"id":600584,"option":"SELECT * FROM table_name WHERE rec_id % 2 = 0","correct":true},{"id":600585,"option":"SELECT * FROM table_name WHERE rec_id MOD 2 = 0","correct":false},{"id":600586,"option":"SELECT * FROM table_name WHERE rec_id % 2 != 0","correct":false}]},{"q":"<p>In SQL, if the result of the INTERSECT clause between two relations (R1 and R2) is a set of tuples, then what does the result contains?</p>","a":[{"id":568297,"option":"All the tuples of R1","correct":false},{"id":568298,"option":"All the tuples of the common columns of  R1 and R2","correct":false},{"id":568299,"option":"All the tuples of the common rows of  R1 and R2","correct":true},{"id":568300,"option":"All the tuples of R2","correct":false}]},{"q":"<p>Which of the following statement(s) about for the following SQL queries is/are true?</p>\n\n<pre class=\"prettyprint\"><code>TRUNCATE TABLE STUDENT;\nDELETE FROM STUDENT;\n</code></pre>\n\n<ol>\n\t<li>Both these queries remove the complete schema of STUDENT table.</li>\n\t<li>Both the queries are incorrect.</li>\n\t<li>We can rollback delete but cannot rollback truncate</li>\n\t<li>We cannot rollback delete but can rollback truncate</li>\n</ol>","a":[{"id":376748,"option":"1 ","correct":false},{"id":376749,"option":"3 ","correct":true},{"id":376750,"option":"1 and 3 ","correct":false},{"id":376751,"option":"2 and 4","correct":false}]},{"q":"<p>If you have executed the following SQL query on the data from the table <strong>STUDENT</strong>, then which of the following statements are correct:</p>\n\n<p>Table: STUDENT</p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>ADDRESS</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Chicago</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>John</td>\n\t\t\t<td>New York</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Boston</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>Seattle</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Ben</td>\n\t\t\t<td>Chicago</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>6</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>New York</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT * FROM STUDENT LIMIT 3;\n</code></pre>","a":[{"id":376444,"option":"It displays the first three rows of the table.","correct":true},{"id":376445,"option":"It displays the last three rows of the table.","correct":false},{"id":376446,"option":"It displays three rows in ascending order starting with ID 1, 2, and 3.","correct":false},{"id":376447,"option":"Displays error as LIMIT is not an SQL command.","correct":false}]},{"q":"<p>Based on the following tables, what is the output of the SQL query:</p>\n\n<p><strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Ben</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mike</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Alice</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>TEACHER</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Lisa</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>John</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>6</td>\n\t\t\t<td>Paul</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong> </p>\n\n<pre class=\"prettyprint\"><code>SELECT ID FROM STUDENT INTERSECT SELECT ID FROM TEACHER;\n</code></pre>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 33px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">3</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 33px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">6</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 33px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">3</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">6</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>4.</p>\n\n<table border=\"1\" style=\"width: 33px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">4</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376560,"option":"1","correct":true},{"id":376561,"option":"2","correct":false},{"id":376562,"option":"3","correct":false},{"id":376563,"option":"4","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p><strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>AGE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>John</td>\n\t\t\t<td>20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>18</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> <strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT NAME FROM STUDENT WHERE NAME LIKE '_o_' ORDER BY NAME;\n</code></pre>\n\n<p> 1.</p>\n\n<table border=\"1\" style=\"width: 57px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\">John</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 57px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\">John</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\">Bob</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 57px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 45px;\">Bob</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376788,"option":"1","correct":false},{"id":376789,"option":"2","correct":false},{"id":376790,"option":"3","correct":true},{"id":376791,"option":"None of these","correct":false}]},{"q":"<p>In MySQL, if you have executed the query, then which of the statements are correct:</p>\n\n<p>Table: <strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>AGE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>15</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>20</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>18</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>105</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>151</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<pre class=\"prettyprint\"><code>ALTER TABLE STUDENT RENAME TO S1;\n</code></pre>","a":[{"id":376524,"option":"The name of the table is changed from STUDENT to S1.\r\n","correct":true},{"id":376525,"option":"A new table S1 is created similar to the table STUDENT.","correct":false},{"id":376526,"option":"The ALTER statement cannot change the table name.","correct":false},{"id":376527,"option":"The table name cannot be changed.\r\n","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p><strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>AGE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>15</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>20</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>18</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>105</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>151</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong> </p>\n\n<pre class=\"prettyprint\"><code>select NAME from STUDENT where AGE&lt;(select avg(AGE) from STUDENT);</code></pre>\n\n<p> </p>\n\n<p>1. </p>\n\n<table border=\"1\" style=\"width: 48px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 36px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 36px;\">Alice</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 36px;\">Mike</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>2. </p>\n\n<table border=\"1\" style=\"width: 56px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 44px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 44px;\">Mike</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 44px;\">Bob</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>3. </p>\n\n<table border=\"1\" style=\"width: 59px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 47px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 47px;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 47px;\">Alice</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376492,"option":"1\r\n","correct":false},{"id":376493,"option":"2\r\n","correct":false},{"id":376494,"option":"3","correct":true},{"id":376495,"option":"Invalid query","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p>Table: <strong>Student</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Reg_no</th>\n\t\t\t<th>Name</th>\n\t\t\t<th>Address</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>John</td>\n\t\t\t<td>Seattle</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Chicago</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>Boston</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<pre class=\"prettyprint\"><code>drop table Student;\nselect * from Student;</code></pre>","a":[{"id":376464,"option":"Table does not exist\r\n","correct":true},{"id":376465,"option":"Displays only the structure of the table\r\n","correct":false},{"id":376466,"option":"Displays the complete table\r\n","correct":false},{"id":376467,"option":"Null\r\n","correct":false}]},{"q":"<p>Consider the following <strong>Employee</strong> table that contains the details of marriage details. The <strong>M_status</strong> filed contains <strong>m</strong> and <strong>s</strong> that represent married and single respectively. Which of the following SQL queries swaps all the values of <strong>s</strong> to <strong>m</strong> and <strong>m</strong> to <strong>s</strong>?</p>\n\n<p><strong>Employee table</strong></p>\n\n<table border=\"1\" style=\"width: 295px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 51px;\"><strong>ID </strong></td>\n\t\t\t<td style=\"text-align: center; width: 72px;\"><strong>Name </strong></td>\n\t\t\t<td style=\"text-align: center; width: 73px;\"><strong>M_Status </strong></td>\n\t\t\t<td style=\"text-align: center; width: 71px;\"><strong>Salary </strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 51px;\">1</td>\n\t\t\t<td style=\"text-align: center; width: 72px;\">Alice</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">m</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">2500</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 51px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 72px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">s</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">1500</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 51px;\">3</td>\n\t\t\t<td style=\"text-align: center; width: 72px;\">Ben</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">m</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">5500</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 51px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 72px;\">Lisa</td>\n\t\t\t<td style=\"text-align: center; width: 73px;\">s</td>\n\t\t\t<td style=\"text-align: center; width: 71px;\">2000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":560849,"option":"UPDATE EMPLOYEE  SET M_status = CASE M_status WHEN 'm' THEN 's' ELSE 'm' END;","correct":true},{"id":560850,"option":"UPDATE EMPLOYEE SET M_status = DECODE( 'm' ,'s' ,'s', 'm') ;","correct":false},{"id":560851,"option":"Both of these","correct":false},{"id":560852,"option":"None of these","correct":false}]},{"q":"In Azure, if you are required to cancel or delete any Database Migration Service(DMS) while migrating the PostgreSQL online database to the Azure Database, which of the following sequences of steps is correct:<br>&nbsp;&nbsp;&nbsp;&nbsp;Delete DMS service<br>&nbsp;&nbsp;&nbsp;&nbsp;Delete the task<br>&nbsp;&nbsp;&nbsp;&nbsp;Delete the project<br>&nbsp;&nbsp;&nbsp;&nbsp;Cancel any running task","a":[{"id":1152701,"option":"2 -> 1 -> 4 -> 3","correct":false},{"id":1152702,"option":"3 -> 4 -> 2 -> 1","correct":false},{"id":1152703,"option":"1 -> 3 -> 2 -> 4","correct":false},{"id":1152704,"option":"4 -> 2 -> 3 -> 1","correct":true}]},{"q":"<p>What is the output of the following SQL query:</p>\n\n<pre class=\"prettyprint\"><code>SELECT 2*2 FROM DUAL;\n</code></pre>","a":[{"id":376436,"option":"4.000000\r\n","correct":false},{"id":376437,"option":"4","correct":true},{"id":376438,"option":"2*2","correct":false},{"id":376439,"option":"None of these","correct":false}]},{"q":"<p>In SQL, an instance of a relational schema R (F1, F2, F3) contains distinct values of F1 including NULL values. Which of the following statements is incorrect about F1?</p>","a":[{"id":568292,"option":"F1 is a candidate key","correct":false},{"id":568293,"option":"F1 is not a candidate key","correct":false},{"id":568294,"option":"F1 is a primary key","correct":false},{"id":568295,"option":"1 and 3","correct":true}]},{"q":"Which of the following keywords is used to replace three or more AND and OR operators in a SQL statement?","a":[{"id":600575,"option":"LIKE Only","correct":false},{"id":600576,"option":"IN Only","correct":false},{"id":600577,"option":"NOT IN Only","correct":false},{"id":600578,"option":"Both IN and NOT IN","correct":true}]},{"q":"<p>State whether the statement is true or false: In an SQL database, a UNION operator can be used between two tables only when the column names in the first SELECT statement matches the column names in the second SELECT statement.</p>","a":[{"id":560410,"option":"1","correct":false},{"id":560411,"option":"0","correct":true},{"id":560412,"option":"Both of these","correct":false},{"id":560413,"option":"None of these","correct":false}]},{"q":"In SQL, which of the following operations is performed by the AS keyword?","a":[{"id":600579,"option":"Selection operation","correct":false},{"id":600580,"option":"Projection operation","correct":false},{"id":600581,"option":"Rename operation","correct":true},{"id":600582,"option":"Join operation","correct":false}]},{"q":"<p>What is the result of the following SQL query:</p>\n\n<pre class=\"prettyprint\"><code>SELECT TO_NUMBER('ABC') FROM dual;</code></pre>\n\n<p> </p>","a":[{"id":600591,"option":"123.0","correct":false},{"id":600592,"option":"ABC","correct":false},{"id":600593,"option":"Oracle error message","correct":true},{"id":600594,"option":"None of these","correct":false}]},{"q":"<p>Which of the following SQL queries will display the current time?</p>","a":[{"id":560415,"option":"Select TO_CHAR(SysDate, ‘HH:MI:SS’) Now from dual;","correct":true},{"id":560416,"option":"Select TO_CHAR(SysDate, ‘HH:MM:SS’) Now from dual;","correct":false},{"id":560417,"option":"Both of these","correct":false},{"id":560418,"option":"None of these","correct":false}]},{"q":"<p>You are given a table named Members_club containing columns named as, member_name and member_ID. What will be the result of the following SQL query?</p>\n\n<pre class=\"prettyprint\"><code>Select member_name from Members_club order by 2 desc;</code></pre>\n\n<p><br>\n </p>","a":[{"id":568708,"option":"The member_name of all the records will be displayed in the decreasing order of member_ID","correct":false},{"id":568709,"option":"The member_name of all the records will be displayed irrespective of the order","correct":false},{"id":568710,"option":"The member_name of all the records will be displayed in the decreasing order of member_name","correct":false},{"id":568711,"option":"An error will be displayed while executing the query","correct":true}]},{"q":"<p>Which of these statements is correct about the following SQL query:</p>\n\n<pre class=\"prettyprint\"><code>SELECT student_id, last_name;\nFROM student;\nWHERE student_id = '123';</code></pre>\n\n<p> </p>","a":[{"id":560865,"option":"The query performs an implicit data type conversion","correct":true},{"id":560866,"option":"The query performs an explicit data type conversion","correct":false},{"id":560867,"option":"The query does not performs any data type conversion","correct":false},{"id":560868,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following query:<br>\n </p>\n\n<pre class=\"prettyprint\"><code>Select FLOOR(‘-456.78’) from DUAL;</code></pre>\n\n<p> </p>","a":[{"id":560841,"option":"456","correct":false},{"id":560842,"option":"-456","correct":false},{"id":560843,"option":"0.78","correct":false},{"id":560844,"option":"-457","correct":true}]},{"q":"<p>In SQL, which of the following queries will print the serial number (SNo) of the rows that contain 'Square' in any columns (C1, C2, and C3):<br>\n </p>\n\n<pre class=\"prettyprint\"><code>1. SELECT SNo from table WHERE C1 IN ('Square');\n2. SELECT SNo from table WHERE C1 = 'Square' or C2 =’Square’ or C3=’Square’;\n3. SELECT SNo IN table WHERE C2 = 'Square';\n4. SELECT Sno FROM table WHERE 'Square' IN (C1, C2, C3)</code></pre>\n\n<p><br>\n </p>\n\n<table border=\"1\" style=\"width: 305px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 33px;\">SNo</td>\n\t\t\t<td style=\"width: 73px;\">C1</td>\n\t\t\t<td style=\"width: 73px;\">C2</td>\n\t\t\t<td style=\"width: 98px;\">C3</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 33px;\">1</td>\n\t\t\t<td style=\"width: 73px;\">Triangle</td>\n\t\t\t<td style=\"width: 73px;\">Square</td>\n\t\t\t<td style=\"width: 98px;\">Rectangle</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 33px;\">2</td>\n\t\t\t<td style=\"width: 73px;\">NULL</td>\n\t\t\t<td style=\"width: 73px;\">Triangle</td>\n\t\t\t<td style=\"width: 98px;\">Hexagon</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 33px;\">3</td>\n\t\t\t<td style=\"width: 73px;\">Square</td>\n\t\t\t<td style=\"width: 73px;\">NULL</td>\n\t\t\t<td style=\"width: 98px;\">Pentagon</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":568712,"option":"1 and 2","correct":false},{"id":568713,"option":"1 and 4","correct":false},{"id":568714,"option":"2 and 4","correct":true},{"id":568715,"option":"2","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<table border=\"1\" style=\"width: 300px;\">\n\t<caption>Student</caption>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 90px;\"><strong>ID</strong></td>\n\t\t\t<td style=\"width: 100px;\"><strong>Name</strong></td>\n\t\t\t<td style=\"width: 105px;\"><strong>Age</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 90px;\">015</td>\n\t\t\t<td style=\"width: 100px;\">Bob</td>\n\t\t\t<td style=\"width: 105px;\">20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 90px;\">020</td>\n\t\t\t<td style=\"width: 100px;\">Alice</td>\n\t\t\t<td style=\"width: 105px;\">18</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 90px;\">105</td>\n\t\t\t<td style=\"width: 100px;\">Mike</td>\n\t\t\t<td style=\"width: 105px;\">25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 90px;\">151</td>\n\t\t\t<td style=\"width: 100px;\">Tara</td>\n\t\t\t<td style=\"width: 105px;\">NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<pre class=\"prettyprint\"><code>SQL &gt; ALTER TABLE STUDENT RENAME TO S1;\n</code></pre>","a":[{"id":376512,"option":"The name of the table is changed from the STUDENT to S1.\r\n","correct":true},{"id":376513,"option":"A new table S1 is created similar to the table STUDENT.\r\n","correct":false},{"id":376514,"option":"The ALTER statement cannot change the table name.\r\n\r\n","correct":false},{"id":376515,"option":"The table name cannot be changed.\r\n","correct":false}]},{"q":"<p>The following query has been issued in a SQL Plus session.</p>\n\n<pre class=\"prettyprint\"><code> SELECT name,age,country FROM contestant\n WHERE (country,age) = (SELECT country,MIN FROM contestant GROUP BY country);\n\n</code></pre>\n\n<p>Which of the following is used to identify both the type of query and the expected result from the Oracle database?</p>\n\n<p> </p>","a":[{"id":419214,"option":"Multiple-column subquery;Oracle will return an error because '=' should replace 'IN'","correct":true},{"id":419215,"option":"Multiple–column subquery, the youngest contestant from all countries","correct":false},{"id":419216,"option":"Multiple-row subquery, the youngest contestant from all countries","correct":false},{"id":419217,"option":"Single-row subquery, the youngest contestant from one country","correct":false}]},{"q":"<p>What SQL command can be used to delete columns from a pre-existing table?</p>","a":[{"id":385213,"option":"MODIFY TABLE TableName DROP ColumnName","correct":false},{"id":385214,"option":"MODIFY TABLE TableName DROP COLUMN ColumnName","correct":false},{"id":385215,"option":"ALTER TABLE TableName DROP ColumnName","correct":false},{"id":385216,"option":"ALTER TABLE TableName DROP COLUMN ColumnName","correct":true}]},{"q":"<p>In SQL, what is the use of the function <em>COUNT(*</em>)?</p>","a":[{"id":376568,"option":"It is used to count the number of rows in the table including the rows with duplicate and NULL values.","correct":true},{"id":376569,"option":"It is used to count only the number of unique rows.\r\n","correct":false},{"id":376570,"option":"It is used to count all  rows except those with NULL values.\r\n","correct":false},{"id":376571,"option":"It is used to count the number of columns.\r\n","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n<p><strong>STUDENT</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">ID</th>\n<th align=\"center\">NAME</th>\n<th align=\"center\">AGE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">01</td>\n<td align=\"center\">Mike</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td align=\"center\">02</td>\n<td align=\"center\">Alice</td>\n<td align=\"center\">18</td>\n</tr>\n<tr>\n<td align=\"center\">03</td>\n<td align=\"center\">Mary</td>\n<td align=\"center\">25</td>\n</tr>\n<tr>\n<td align=\"center\">04</td>\n<td align=\"center\">Lisa</td>\n<td align=\"center\">NULL</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"prettyprint\"><code>SQL &gt; SELECT NAME FROM STUDENT WHERE NAME LIKE '%a%' ORDER BY NAME;\n</code></pre>","a":[{"id":376468,"option":"Alice Lisa Mary","correct":true},{"id":376469,"option":"Alice Mary Lisa Mike","correct":false},{"id":376470,"option":"Mary Lisa Alice","correct":false},{"id":376471,"option":"Alice Mary","correct":false}]},{"q":"<p>What is the output of the following SQL query:</p>\n<pre class=\"prettyprint\"><code>SQL &gt; SELECT ABS(-20) “ABSOLUTE” FROM DUAL;\n</code></pre>","a":[{"id":376604,"option":"20 is displayed with the heading ABSOLUTE\r\n","correct":true},{"id":376605,"option":"-20 is displayed with the heading ABSOLUTE\r\n","correct":false},{"id":376606,"option":"-20 is displayed without any heading","correct":false},{"id":376607,"option":"20 is displayed without any heading","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n<p>Table: <strong>STUDENT</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">ID (Primary key)</th>\n<th align=\"center\">NAME</th>\n<th align=\"center\">AGE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">015</td>\n<td align=\"center\">Bob</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td align=\"center\">020</td>\n<td align=\"center\">Alice</td>\n<td align=\"center\">18</td>\n</tr>\n<tr>\n<td align=\"center\">105</td>\n<td align=\"center\">Mike</td>\n<td align=\"center\">25</td>\n</tr>\n<tr>\n<td align=\"center\">151</td>\n<td align=\"center\">Tara</td>\n<td align=\"center\">NULL</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"prettyprint\"><code>SQL &gt; ALTER TABLE STUDENT DROP PRIMARY KEY;\n</code></pre>","a":[{"id":376544,"option":"The primary key is deleted from the table.\r\n","correct":true},{"id":376545,"option":"The primary key cannot be deleted from the table.\r\n","correct":false},{"id":376546,"option":"The ALTER statement cannot delete the primary key.\r\n","correct":false},{"id":376547,"option":"The DROP statement is not used with the ALTER statement.\r\n","correct":false}]},{"q":"<p>Based on the following table, what is the output of the following SQL query:</p>\n<p><strong>STUDENT</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">ID</th>\n<th align=\"center\">NAME</th>\n<th align=\"center\">AGE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">15</td>\n<td align=\"center\">Mike</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td align=\"center\">20</td>\n<td align=\"center\">Bob</td>\n<td align=\"center\">18</td>\n</tr>\n<tr>\n<td align=\"center\">105</td>\n<td align=\"center\">Tara</td>\n<td align=\"center\">25</td>\n</tr>\n<tr>\n<td align=\"center\">151</td>\n<td align=\"center\">Mary</td>\n<td align=\"center\">NULL</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"prettyprint\"><code>SQL &gt; SELECT ID FROM STUDENT WHERE ID LIKE '_5';\n</code></pre>","a":[{"id":376496,"option":"15","correct":true},{"id":376497,"option":"15 151","correct":false},{"id":376498,"option":"15 105 151","correct":false},{"id":376499,"option":"Error","correct":false}]},{"q":"<p>In SQL, which of the following statements is false?</p>","a":[{"id":376556,"option":"Primary key does not allow duplicate values.","correct":false},{"id":376557,"option":"In case of foreign key, a child may have duplicate and NULL values.","correct":false},{"id":376558,"option":"A table should have only one unique key.","correct":true},{"id":376559,"option":"A unique key cannot be of LONG data type.","correct":false}]},{"q":"<p>Which of these is not a basic data type in SQL?</p>","a":[{"id":376348,"option":"LONG","correct":false},{"id":376349,"option":"SHORT","correct":true},{"id":376350,"option":"NUMBER","correct":false},{"id":376351,"option":"DATE","correct":false}]},{"q":"<p>You are given the tables <strong>Hack_Table</strong>, <strong>HackData_Table</strong>,<strong> </strong>and <strong>HackStats_Table</strong>. If you are required to execute the following SQL query, then determine its output.<br>\n </p>\n\n<p><br>\n<strong>Table: Hack_Table</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_firstname</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">111</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t\t<td style=\"text-align: center;\">222</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t\t<td style=\"text-align: center;\">333</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p style=\"text-align: center;\"><br>\n </p>\n\n<p><strong>Table: HackData_Table</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\n<br>\n<strong>Table: HackStats_Table</strong></p>\n\n<table border=\"1\" style=\"width: 200px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>id</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">20</td>\n\t\t\t<td style=\"text-align: center;\">111</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t\t<td style=\"text-align: center;\">222</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">53</td>\n\t\t\t<td style=\"text-align: center;\">333</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">76</td>\n\t\t\t<td style=\"text-align: center;\">444</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t<td style=\"text-align: center;\">555</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\n<strong>SQL Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT Hack_Table.hack_id,HackData_Table.hack_lastname, HackData_Table.emp_id , HackStats_Table.stats FROM ((Hack_Table INNER JOIN HackData_Table ON Hack_Table.hack_id = HackData_Table.hack_id) INNER JOIN HackStats_Table ON Hack_Table.id = HackStats_Table.id);\n</code></pre>\n\n<p><br>\n<br>\n </p>\n\n<p><strong>Output</strong><br>\n </p>\n\n<ol>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t\t<td style=\"text-align: center;\">20</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t\t<td style=\"text-align: center;\">53</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t \n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td><strong>hack_id</strong></td>\n\t\t\t\t<td><strong>hack_lastname</strong></td>\n\t\t\t\t<td><strong>emp_id</strong></td>\n\t\t\t\t<td><strong>stats</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t\t<td style=\"text-align: center;\">20</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t\t<td style=\"text-align: center;\">53</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t\t<td style=\"text-align: center;\">76</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t\t<td style=\"text-align: center;\">76</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>hack_lastname</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>emp_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stats</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">101</td>\n\t\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t\t<td style=\"text-align: center;\">2003</td>\n\t\t\t\t<td style=\"text-align: center;\">20</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">201</td>\n\t\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t\t<td style=\"text-align: center;\">1001</td>\n\t\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">301</td>\n\t\t\t\t<td style=\"text-align: center;\">Smith</td>\n\t\t\t\t<td style=\"text-align: center;\">7008</td>\n\t\t\t\t<td style=\"text-align: center;\">53</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">401</td>\n\t\t\t\t<td style=\"text-align: center;\">Wilson</td>\n\t\t\t\t<td style=\"text-align: center;\">8005</td>\n\t\t\t\t<td style=\"text-align: center;\">NULL</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">501</td>\n\t\t\t\t<td style=\"text-align: center;\">Miller</td>\n\t\t\t\t<td style=\"text-align: center;\">5008</td>\n\t\t\t\t<td style=\"text-align: center;\">NULL</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t</li>\n</ol>","a":[{"id":383201,"option":"4","correct":false},{"id":383202,"option":"1","correct":true},{"id":383203,"option":"2","correct":false},{"id":383204,"option":"3","correct":false}]},{"q":"<p>In SQL, consider the following relations. You want to determine the names of the sailors who have reserved a red boat. Which of these queries can be used to perform this task?</p>\n\n<p><strong>Relation</strong></p>\n\n<pre class=\"prettyprint\"><code>Sailors (sid: integer, sname: string, rating: integer, age: real)\n\nBoats (bid: integer, bname: string, color: string)\n\nReserves (sid: integer, bid: integer, day: date)</code></pre>\n\n<p style=\"margin-left: 0in; margin-right: 0in;\"> </p>","a":[{"id":644695,"option":"SELECT S.sname\r\nFROM Sailors S, Reserves R, Boats B\r\nWHERE S.sid = R.sid AND R.bid = B.bid AND B.color = `red'","correct":true},{"id":644696,"option":"SELECT S.sname\r\nFROM Sailors S, Reserves R, Boats B\r\nWHERE S.sid = R.sid AND B.color = `red'","correct":false},{"id":644697,"option":"SELECT S.sname\r\nFROM Sailors S, Reserves R, Boats B\r\nWHERE R.bid = B.bid AND B.color = `red'","correct":false},{"id":644698,"option":"None of these","correct":false}]},{"q":"<p>In SQL, which of the following are the valid types of indexes:</p>\n\n<ol>\n\t<li>Bitmap index</li>\n\t<li>Dense index</li>\n\t<li>Sparse index</li>\n\t<li>Reverse index</li>\n</ol>","a":[{"id":648589,"option":"1, 2, and 3","correct":false},{"id":648590,"option":"1, 3, and 4","correct":false},{"id":648591,"option":"1 and 2","correct":false},{"id":648592,"option":"All of these","correct":true}]},{"q":"<p>In SQL, consider the following relations. You want to determine the ages of the sailors whose name begins and ends with B and has at least three characters. Which of these queries can be used to perform this task?</p>\n\n<p style=\"margin-left: 0in; margin-right: 0in;\"><strong>Relations</strong></p>\n\n<pre class=\"prettyprint\"><code>Sailors (sid: integer, sname: string, rating: integer, age: real)\n\nBoats (bid: integer, bname: string, color: string)\n\nReserves (sid: integer, bid: integer, day: date)</code></pre>\n\n<p style=\"margin-left: 0in; margin-right: 0in;\"> </p>","a":[{"id":644699,"option":"SELECT S.age\r\nFROM Sailors S\r\nWHERE S.sname LIKE `B_%B'","correct":true},{"id":644700,"option":"SELECT S.age\r\nFROM Sailors S\r\nWHERE S.sname = `B%B'","correct":false},{"id":644701,"option":"SELECT S.age\r\nFROM Sailors S\r\nWHERE S.sname LIKE `%B_B'","correct":false},{"id":644702,"option":"None of these","correct":false}]},{"q":"<p>In SQL, which of the following access control<em> </em>commands are used<em>?</em></p>","a":[{"id":648609,"option":"GRANT","correct":false},{"id":648610,"option":"REVOKE","correct":false},{"id":648611,"option":"Both of these","correct":true},{"id":648612,"option":"None of these","correct":false}]},{"q":"<p>Which of the following is the valid option for creating a <strong>trigger </strong>called <strong>incr_std<em> </em></strong>that increments a counter <strong>count</strong><em><strong> </strong></em>for each inserted tuple on the table <strong>Students </strong>that satisfies the condition <strong>age &lt;  18</strong>?</p>\n\n<p><strong>Options</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TRIGGER incr_std AFTER INSERT ON Students\n    WHEN (new.age &lt; 18)\n    FOR EACH ROW\n    BEGIN\n        count := count + 1;\n    END</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TRIGGER incr_std AFTER INSERT ON Students\n    FOR EACH ROW\n    BEGIN\n        count := count + 1;\n    END</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>DECLARE TRIGGER incr_std AFTER INSERT ON Students\n    IF (age &lt; 18)\n    FOR EACH ROW\n    BEGIN\n        count := count + 1;\n    END</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TRIGGER incr_std AFTER INSERT ON Students\n    WHEN (age &lt; 18)\n    FOR EACH ROW\n    START\n        count := count + 1;\n    STOP</code></pre>\n\n<p> </p>","a":[{"id":645007,"option":"1","correct":true},{"id":645008,"option":"2","correct":false},{"id":645009,"option":"3","correct":false},{"id":645010,"option":"4","correct":false}]},{"q":"<p>In SQL, which of the following functions is used to handle <strong>NULL</strong> values?</p>","a":[{"id":649505,"option":"IFNULL()","correct":false},{"id":649506,"option":"COALESCE()","correct":false},{"id":649507,"option":"Both of these","correct":true},{"id":649508,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements about the <strong>static </strong>(embedded) SQL are correct:</p>\n\n<ol>\n\t<li>Static SQL statements do not change at runtime.</li>\n\t<li>They are compiled during the compilation time.</li>\n\t<li>They can be hard-coded in the application.</li>\n\t<li>Parsing, validation, optimization, and generation of application plans are performed at runtime.</li>\n</ol>\n\n<p> </p>","a":[{"id":642039,"option":"1, 2, and 4","correct":false},{"id":642040,"option":"1, 2, and 3","correct":true},{"id":642041,"option":"2, 3, and 4","correct":false},{"id":642042,"option":"All of these","correct":false}]},{"q":"<p>Consider the structure for <strong>toys</strong> table given below:<br>\n<br>\n<strong>Table: toys</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>vToyName</th>\n\t\t\t<th>mToyRate</th>\n\t\t\t<th>vToyCategory</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t</tbody>\n</table>\n\n<p><br>\nNow, which of the following SQL queries can you use to select the names of all those toys which belong to the category <strong>Racer</strong>?<br>\n<br>\n<br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM toys WHERE vToyName like '%Racer%'\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM toys WHERE vToyCategory like '%Racer%'\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM toys WHERE iToyRate like '%Racer%'\n</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM toys WHERE ToyID like '%Racer%'\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":383193,"option":"1","correct":false},{"id":383194,"option":"2","correct":true},{"id":383195,"option":"3","correct":false},{"id":383196,"option":"4","correct":false}]},{"q":"<p>Consider the following table <strong>Purchase_tbl</strong>. If you are required to select the top five highest-priced objects then which of the following SQL queries can you use to perform this action?<br>\n </p>\n\n<p><strong>Table: Purchase_tbl</strong></p>\n\n<table border=\"1\" style=\"width: 356px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\"><strong>id </strong></td>\n\t\t\t<td style=\"text-align: center; width: 87px;\"><strong>date </strong></td>\n\t\t\t<td style=\"text-align: center; width: 97px;\"><strong>price </strong></td>\n\t\t\t<td style=\"text-align: center; width: 85px;\"><strong>description </strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">1</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-08-15</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">1102.13</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Jeans</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">2</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-07-16</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">622.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Sweatshirt</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">3</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-07-05</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">442.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Shoes</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">4</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-08-01</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">321.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Grocery</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">5</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-05-06</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">121.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Vegetables</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">6</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-08-15</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">20.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Batteries</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">7</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-08-15</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">125.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Socks</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">8</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-05-16</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">700.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Books</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">9</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-06-16</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">100.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Stationary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 59px;\">10</td>\n\t\t\t<td style=\"text-align: center; width: 87px;\">2017-08-12</td>\n\t\t\t<td style=\"text-align: center; width: 97px;\">125.00</td>\n\t\t\t<td style=\"text-align: center; width: 85px;\">Medicines</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM Purchase_tbl ORDER BY price DESC;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM Purchase_tbl ORDER BY price DESC WHERE COUNT = 5;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM Purchase_tbl ORDER BY price DESC LIMIT 5;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT * FROM Purchase_tbl LIMIT 5;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":543056,"option":"1","correct":false},{"id":543057,"option":"2","correct":false},{"id":543058,"option":"3","correct":true},{"id":543059,"option":"4","correct":false}]},{"q":"<p>In SQL, what is the difference between the UNION and UNION ALL operators?</p>","a":[{"id":600567,"option":"UNION ALL omits duplicates and UNION includes duplicates","correct":false},{"id":600568,"option":"UNION ALL includes duplicates and UNION omits duplicates","correct":true},{"id":600569,"option":"Both of these","correct":false},{"id":600570,"option":"None of these","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p><strong>EMPLOYEE</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>AGE</th>\n\t\t\t<th>SALARY</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>24</td>\n\t\t\t<td>15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>John</td>\n\t\t\t<td>23</td>\n\t\t\t<td>10000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>28</td>\n\t\t\t<td>15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>26</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Ben</td>\n\t\t\t<td>29</td>\n\t\t\t<td>20000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong> </p>\n\n<pre class=\"prettyprint\"><code>SELECT DISTINCT SALARY FROM EMPLOYEE ORDER BY SALARY;\n</code></pre>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 66px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">NULL</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">10000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">20000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 66px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">10000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">20000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 66px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">10000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">20000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>4.</p>\n\n<table border=\"1\" style=\"width: 66px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">10000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">NULL</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 54px;\">20000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376548,"option":"1","correct":true},{"id":376549,"option":"2","correct":false},{"id":376550,"option":"3","correct":false},{"id":376551,"option":"4","correct":false}]},{"q":"<p>Based on the following tables, what is the output of the SQL query:</p>\n\n<p>Table: <strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Ben</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mike</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Alice</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Table: <strong>TEACHER</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Lisa</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>John</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>6</td>\n\t\t\t<td>Paul</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong> </p>\n\n<pre class=\"prettyprint\"><code>SELECT ID FROM STUDENT EXCEPT SELECT ID FROM TEACHER;\n</code></pre>\n\n<p> 1. </p>\n\n<table border=\"1\" style=\"width: 38px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">4</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 38px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">3</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p> 3. </p>\n\n<table border=\"1\" style=\"width: 38px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">6</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>4.</p>\n\n<table border=\"1\" style=\"width: 38px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 26px;\">6</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376596,"option":"1","correct":true},{"id":376597,"option":"2","correct":false},{"id":376598,"option":"3","correct":false},{"id":376599,"option":"4","correct":false}]},{"q":"<p>You are given a table named CUSTOMER. If you have executed the following SQL query on the data of this table, then which of these statements in this scenario is correct?</p>\n\n<p><strong>CUSTOMER</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>LNAME</th>\n\t\t\t<th>FNAME</th>\n\t\t\t<th>WEBSITE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>3000</td>\n\t\t\t<td>Smith</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Amazon</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5000</td>\n\t\t\t<td>Jones</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Apple</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>6000</td>\n\t\t\t<td>Johnson</td>\n\t\t\t<td>Ben</td>\n\t\t\t<td>Microsoft</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>7000</td>\n\t\t\t<td>White</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Apple</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>8000</td>\n\t\t\t<td>Green</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>9000</td>\n\t\t\t<td>Davis</td>\n\t\t\t<td>Lisa</td>\n\t\t\t<td>Amazon</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>DELETE FROM CUSTOMER WHERE ID&lt;&gt;4000;\n</code></pre>","a":[{"id":376672,"option":"It deletes all of the rows.","correct":true},{"id":376673,"option":"It does not delete any rows.","correct":false},{"id":376674,"option":"It deletes the rows that has an ID '4000'","correct":false},{"id":376675,"option":"Error","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p>Table: <strong>CUSTOMER</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>LNAME</th>\n\t\t\t<th>FNAME</th>\n\t\t\t<th>WEBSITE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>6000</td>\n\t\t\t<td>Smith</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Amazon</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5000</td>\n\t\t\t<td>Jones</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Apple</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>6000</td>\n\t\t\t<td>Johnson</td>\n\t\t\t<td>Ben</td>\n\t\t\t<td>Cisco</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>7000</td>\n\t\t\t<td>White</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Apple</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>8000</td>\n\t\t\t<td>Green</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>9000</td>\n\t\t\t<td>Williams</td>\n\t\t\t<td>Anita</td>\n\t\t\t<td>Amazon</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong> </p>\n\n<pre class=\"prettyprint\"><code>SELECT FNAME FROM CUSTOMER WHERE WEBSITE = 'Amazon'\nAND ID &gt; 6000 ORDER BY LNAME;\n\n</code></pre>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 61px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 49px;\"><strong>FNAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 49px;\">Anita</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> 2.</p>\n\n<table border=\"1\" style=\"width: 61px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 49px;\"><strong>FNAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 49px;\">Alice</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 49px;\">Anita</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>3. </p>\n\n<table border=\"1\" style=\"width: 61px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 49px;\"><strong>FNAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 49px;\">Anita</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 49px;\">Alice</td>\n\t\t</tr>\n\t</tbody>\n</table>","a":[{"id":376756,"option":"1","correct":true},{"id":376757,"option":"2","correct":false},{"id":376758,"option":"3","correct":false},{"id":376759,"option":"Error","correct":false}]},{"q":"<p>In SQL, which of the following statements about the views is true?</p>","a":[{"id":376724,"option":"Views can limit the degree to which tables are exposed to the outer world.","correct":false},{"id":376725,"option":"Views can join and simplify multiple tables into one virtual table.","correct":false},{"id":376726,"option":"Views can represent a subset of the data contained in a table.","correct":false},{"id":376727,"option":"All of these","correct":true}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p><strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>AGE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>18</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Ben</td>\n\t\t\t<td>30</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>29</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT ID FROM STUDENT WHERE AGE NOT BETWEEN 20 AND 30;\n</code></pre>\n\n<p>1. </p>\n\n<table border=\"1\" style=\"width: 32px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 20px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 20px;\">2</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>2. </p>\n\n<table border=\"1\" style=\"width: 34px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 22px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 22px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 22px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 22px;\">4</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>3. </p>\n\n<table border=\"1\" style=\"width: 36px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 24px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 24px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 24px;\">4</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376404,"option":"1","correct":true},{"id":376405,"option":"2","correct":false},{"id":376406,"option":"3","correct":false},{"id":376407,"option":"Syntax error","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p><strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>AGE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>01</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>02</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>18</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>03</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>04</td>\n\t\t\t<td>Mary</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<pre class=\"prettyprint\"><code>SELECT NAME FROM STUDENT WHERE NAME LIKE 'M%' ORDER BY NAME;\n</code></pre>","a":[{"id":376440,"option":"Mike \r\nMary","correct":false},{"id":376441,"option":"Mary \r\nMike","correct":true},{"id":376442,"option":"Mike","correct":false},{"id":376443,"option":"Error","correct":false}]},{"q":"<p>The CosmosClient initialization is used to provide the client-side logical representation for an Azure cosmos database service. If the following Java code is used to configure and execute requests against the service, then which of these Java commands is used to create a CosmosDatabase method:<br>\n    </p>\n\n<pre class=\"prettyprint\"><code>    client = new CosmosClientBuilder()\n                    .setEndpoint(AccountSettings.HOST)\n                    .setKey(AccountSettings.MASTER_KEY)\n                    .setConnectionPolicy(defaultPolicy)\n                    .setConsistencyLevel(ConsistencyLevel.EVENTUAL)\n                    .buildClient();\n    </code></pre>","a":[{"id":1152741,"option":"database = client.create.CosmosDatabaseIfNotExists(databaseName).getDatabase();","correct":false},{"id":1152742,"option":"database = client.createDatabaseIfNotExists(databaseName).getDatabase(); ","correct":true},{"id":1152743,"option":"database = client.createDatabaseIfNotExits(databaseName).setDatabase();","correct":false},{"id":1152744,"option":"database = client.create.CosmosDatabaseIfNotExists(databaseName).setDatabase();","correct":false}]},{"q":"<p>What is the output of the following SQL query:</p>\n\n<pre class=\"prettyprint\"><code>SELECT CEIL(13.15) FROM DUAL;\n</code></pre>","a":[{"id":376616,"option":"14","correct":true},{"id":376617,"option":"13","correct":false},{"id":376618,"option":"13.2","correct":false},{"id":376619,"option":"13.000000","correct":false}]},{"q":"<p>In SQL, consider a table named <strong>Students</strong>. Which of these statements can be used to change the name 'Smith' into 'Jones' in the <strong>LastName</strong> column? </p>","a":[{"id":600603,"option":"UPDATE Students SET LastName= ‘Smith’ INTO LastName= ‘Jones’;","correct":false},{"id":600604,"option":"MODIFY Students SET LastName= ‘Jones’ WHERE LastName= ‘Smith’;","correct":false},{"id":600605,"option":"MODIFY Students SET LastName= ‘Smith’ INTO LastName= ‘Jones’;","correct":false},{"id":600606,"option":"UPDATE Students SET LastName= ‘Jones’ WHERE LastName= ‘Smith’;","correct":true}]},{"q":"Consider a table number_tbl in which a field is represented as col_num1. The table contains multiple rows with the following values:\n\n<pre class=\"prettyprint\">\n<code>\n1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1\n </code></pre>\nWhich of the following SQL queries adds 2 and 3 to the fields whose values are 0 and 1 respectively?","a":[{"id":600559,"option":"UPDATE number_tbl SET col_num1 = CASE WHEN col_num1 = 0 THEN col_num1 +2 ELSE col_num1 +3;","correct":true},{"id":600560,"option":"UPDATE number_tbl SET col_num1 = CASE WHEN col_num1 = 0 THEN col_num1 +2 ELSE IF col_num1 = 1 THEN col_num1 +3;","correct":false},{"id":600561,"option":"UPDATE number_tbl SET col_num1 AS CASE WHEN col_num1 = 0 THEN col_num1 +2 ELSE IF col_num1 = 1 THEN col_num1 +3;","correct":false},{"id":600562,"option":"UPDATE number_tbl SET col_num1 WHEN col_num1 = 0 THEN col_num1 +2 ELSE col_num1 +3;","correct":false}]},{"q":"In SQL, what is the ROWNUM clause?","a":[{"id":600635,"option":"It is a psuedocolumn stored in a database","correct":false},{"id":600636,"option":"It is a psuedocolumn that is not stored in a database","correct":true},{"id":600637,"option":"It is the primary key of each table","correct":false},{"id":600638,"option":"None of these","correct":false}]},{"q":"<p>In SQL, what is the function of the DISTINCT keyword?</p>","a":[{"id":560445,"option":"It allows you to eliminate all duplicate rows","correct":true},{"id":560446,"option":"It allows you to accumulate all duplicate rows","correct":false},{"id":560447,"option":"It allows you to make multiple sets of duplicate rows","correct":false},{"id":560448,"option":"None of these","correct":false}]},{"q":"<p>What will be the result of the following Oracle SQL query:</p>\n\n<pre class=\"prettyprint\"><code>SELECT REGEXP_SUBSTR('The plane leaves 02/05/04 at 04:23 pm.',\n'([0-1][0-9]|2[0-3]):[0-5][0-9]')\nFROM dual;</code></pre>\n\n<p> </p>","a":[{"id":568692,"option":"02/05/04","correct":false},{"id":568693,"option":"4:23 pm","correct":false},{"id":568694,"option":"04:23","correct":true},{"id":568695,"option":"Invalid query","correct":false}]},{"q":"<p>In SQL, which of the following syntaxes for an <strong>UPDATE</strong> statement is correct?</p>","a":[{"id":48634,"option":"Update Table table_name Columns(Col1, Col2,Col3);","correct":false},{"id":48635,"option":"Update into table_name (Col1, Col2,Col3) VALUES (Val1,Val2,Val3);","correct":false},{"id":48636,"option":"Update table_name Set Col_name=Value;","correct":true},{"id":48637,"option":"None of these","correct":false}]},{"q":"<p>In SQL, which of the following about the <strong>ORDER BY</strong> clause is true?</p>","a":[{"id":48594,"option":"It is used to sort the result.","correct":true},{"id":48595,"option":"It is used to change the sequence of columns.","correct":false},{"id":48596,"option":"It is used in the SQL server.","correct":false},{"id":48597,"option":"None of these","correct":false}]},{"q":"<p>In Hibernate, what happens if the <strong>WHERE</strong> clause is omitted from an <strong>UPDATE</strong> statement?</p>","a":[{"id":48614,"option":"There is no effect on the query and the table. ","correct":false},{"id":48615,"option":"All the records present in the table will be updated. ","correct":true},{"id":48616,"option":"Only one record will be updated. ","correct":false},{"id":48617,"option":"Only few records will be updated. ","correct":false}]},{"q":"<p>What is the output of the following SQL query:</p>\n<pre class=\"prettyprint\"><code>SELECT SUBSTRING_INDEX(\"www.abc.com\", \".\", 1);\n\n</code></pre>","a":[{"id":376676,"option":"www\r\n","correct":true},{"id":376677,"option":"www.abc\r\n","correct":false},{"id":376678,"option":"Abc.com\r\n","correct":false},{"id":376679,"option":"Com","correct":false}]},{"q":"<p>Which SQL join will return the shaded region in the following diagram:</p>\n<p><img alt=\"enter image description here\" src=\"https://he-s3.s3.amazonaws.com/media/uploads/e753e24.png\" /></p>","a":[{"id":376592,"option":"Full outer join","correct":false},{"id":376593,"option":"Inner join","correct":false},{"id":376594,"option":"Left outer join","correct":true},{"id":376595,"option":"Right outer join","correct":false}]},{"q":"<p>Which of the following commands is used to modify the structure of a table in SQL?</p>","a":[{"id":376408,"option":"MODIFY","correct":false},{"id":376409,"option":"ALTER","correct":true},{"id":376410,"option":"UPDATE","correct":false},{"id":376411,"option":"SET","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n<p>Table: STUDENT</p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">ID</th>\n<th align=\"center\">NAME</th>\n<th align=\"center\">ADDRESS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">01</td>\n<td align=\"center\">Bob</td>\n<td align=\"center\">Chicago</td>\n</tr>\n<tr>\n<td align=\"center\">03</td>\n<td align=\"center\">John</td>\n<td align=\"center\">New York</td>\n</tr>\n<tr>\n<td align=\"center\">05</td>\n<td align=\"center\">Alice</td>\n<td align=\"center\">Boston</td>\n</tr>\n<tr>\n<td align=\"center\">02</td>\n<td align=\"center\">Tara</td>\n<td align=\"center\">Seattle</td>\n</tr>\n<tr>\n<td align=\"center\">04</td>\n<td align=\"center\">Ben</td>\n<td align=\"center\">Chicago</td>\n</tr>\n<tr>\n<td align=\"center\">06</td>\n<td align=\"center\">Mike</td>\n<td align=\"center\">New York</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"prettyprint\"><code>SQL &gt; SELECT COUNT (*) FROM (SELECT DISTINCT ADDRESS FROM STUDENT);\n</code></pre>","a":[{"id":376480,"option":"Error","correct":false},{"id":376481,"option":"6","correct":false},{"id":376482,"option":"4","correct":true},{"id":376483,"option":"2","correct":false}]},{"q":"<p>What is the output for the following SQL query?</p>\n\n<p><code>SQL &gt; SELECT (10+20) AS ADDITION</code></p>","a":[{"id":376368,"option":"Syntax Error","correct":false},{"id":376369,"option":"It will display 30 with the header ADDITION","correct":true},{"id":376370,"option":"It will display the 30 without any header","correct":false},{"id":376371,"option":"30.000000","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n<p>Table: <strong>Student</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">Reg No</th>\n<th align=\"center\">Name</th>\n<th align=\"center\">Address</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">John</td>\n<td align=\"center\">Seattle</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">Bob</td>\n<td align=\"center\">Chicago</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">Mary</td>\n<td align=\"center\">Boston</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"prettyprint\"><code>SQL &gt; TRUNCATE TABLE STUDENT;\nSQL &gt; SELECT * FROM STUDENT;\n</code></pre>","a":[{"id":376452,"option":"Error\r\n","correct":false},{"id":376453,"option":"Table does not exist\r\n","correct":false},{"id":376454,"option":"Empty Set","correct":true},{"id":376455,"option":"Null\r\n","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n<p>Table: <strong>Student</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">Reg No</th>\n<th align=\"center\">Name</th>\n<th align=\"center\">Address</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">John</td>\n<td align=\"center\">Seattle</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">Bob</td>\n<td align=\"center\">Chicago</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">Mary</td>\n<td align=\"center\">Boston</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"prettyprint\"><code>SQL &gt; DELETE FROM STUDENT;\n</code></pre>","a":[{"id":376484,"option":"Table does not exist","correct":false},{"id":376485,"option":"Deletes the table from the database\r\n","correct":false},{"id":376486,"option":"Deletes all the rows but the table will be available in the database\r\n","correct":true},{"id":376487,"option":"Null\r\n","correct":false}]},{"q":"<p>Which SQL join will return the shaded area in the following diagram:</p>\n<p><img alt=\"enter image description here\" src=\"https://he-s3.s3.amazonaws.com/media/uploads/6ecf5d7.png\" /></p>","a":[{"id":376600,"option":"Full outer join","correct":true},{"id":376601,"option":"Inner join","correct":false},{"id":376602,"option":"Left outer join","correct":false},{"id":376603,"option":"Right outer join","correct":false}]},{"q":"<p>Which SQL statement should be used to select rows containing a <strong>NULL</strong> value from the following table: </p>\n<p><strong>STUDENT</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">ID</th>\n<th align=\"center\">NAME</th>\n<th align=\"center\">AGE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">01</td>\n<td align=\"center\">John</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td align=\"center\">02</td>\n<td align=\"center\">Alice</td>\n<td align=\"center\">18</td>\n</tr>\n<tr>\n<td align=\"center\">03</td>\n<td align=\"center\">Bob</td>\n<td align=\"center\">25</td>\n</tr>\n<tr>\n<td align=\"center\">04</td>\n<td align=\"center\">Ben</td>\n<td align=\"center\">NULL</td>\n</tr>\n</tbody>\n</table>","a":[{"id":376420,"option":"SELECT *FROM STUDENT WHERE AGE IS NULL;","correct":true},{"id":376421,"option":"SELECT *FROM STUDENT WHERE AGE == NULL;","correct":false},{"id":376422,"option":"SELECT *FROM STUDENT WHERE AGE EQUAL NULL;","correct":false},{"id":376423,"option":"SELECT *FROM STUDENT WHERE AGE = ‘NULL’;","correct":false}]},{"q":"<p>In SQL, which of the following is used to delete both the table data and structure?</p>","a":[{"id":48794,"option":"TRUNCATE ","correct":false},{"id":48795,"option":"DROP ","correct":true},{"id":48796,"option":"DELETE","correct":false},{"id":48797,"option":"None of these","correct":false}]},{"q":"<p>Alice is learning SQL commands. But she is confused with DDL commands. Which of the following commands are DDL commands<em><strong> </strong></em>in SQL?</p>","a":[{"id":646073,"option":"DROP","correct":false},{"id":646074,"option":"CREATE","correct":false},{"id":646075,"option":"ALTER","correct":false},{"id":646076,"option":"All of these","correct":true}]},{"q":"<p>In SQL, which of the following are <strong>Transaction Control Language </strong>(TCL) commands:</p>\n\n<ol>\n\t<li>COMMIT</li>\n\t<li>SAVEPOINT</li>\n\t<li>ROLLBACK</li>\n\t<li>MIGRATE</li>\n</ol>","a":[{"id":647135,"option":"1 and 3","correct":false},{"id":647136,"option":"1, 2, and 3","correct":true},{"id":647137,"option":"1, 3, and 4","correct":false},{"id":647138,"option":"All of these","correct":false}]},{"q":"<p>Consider the table <strong>Shipment</strong>:<br>\n<br>\n<strong>Shipment:</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>cOrderNo</th>\n\t\t\t<th>OrderName</th>\n\t\t\t<th>dShipmentDate</th>\n\t\t\t<th>dActualDeliveryDate</th>\n\t\t\t<th> </th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t</tbody>\n</table>\n\n<p><br>\nNow, which of the following SQL queries can you use to retrieve the <strong>Order Number</strong>, <strong>Shipment Date</strong>, <strong>Actual Delivery Date</strong>, and <strong>Days in Transit</strong> for every order?</p>\n\n<p><br>\n<em>Note:</em> Days in Transit can be calculated as a difference between the date of actual delivery and the date of the shipment.<br>\n<br>\n<br>\n<strong>SQL Query:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Order Number' = cOrderNo, 'Shipment Date' = dShipmentDate, 'Actual Delivery Date' = dActualDeliveryDate, 'Days in Transit' = datediff(dd, dShipmentDate, dActualDeliveryDate)        \nFROM Shipment\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Order Number' = cOrderNo, 'Shipment Date' = dShipmentDate, 'Actual Delivery Date' =\ndActualDeliveryDate, 'Days in Transit' = datediff(dShipmentDate, dActualDeliveryDate)\nFROM Shipment\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Order Number' = cOrderNo, 'Shipment Date' = dShipmentDate, 'Actual Delivery Date' =\ndActualDeliveryDate, 'Days in Transit' = datepart(dd, dShipmentDate, dActualDeliveryDate)\nFROM Shipment\n</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>SELECT 'Order Number' = cOrderNo, 'Shipment Date' = dShipmentDate, 'Actual Delivery Date' =\ndActualDeliveryDate, 'Days in Transit' = datename(dd, dShipmentDate, dActualDeliveryDate)\nFROM Shipment\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":382170,"option":"1","correct":true},{"id":382171,"option":"2","correct":false},{"id":382172,"option":"3","correct":false},{"id":382173,"option":"4","correct":false}]},{"q":"<p>What is the output of the following SQL code:<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>Declare @count int\nSelect @count=11\nWhile @count&gt;0\nBegin       \nSelect @count=@count-1\n        If @count=4\n        Begin\n                Break\n        End\n        If @count=6\n        Begin\n                Continue\n        End\n        Print @count\nEnd</code></pre>\n\n<p><br>\n<br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>10\t\n9\n8\n7\n5</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>10\t\n9\n8\n7\n6\n5</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>10\t\n9\t\n8\t\n7\t\n6\t\n5\t\n4\t\n3\t\n2\t\n1</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":381883,"option":"1","correct":true},{"id":381884,"option":"2","correct":false},{"id":381885,"option":"3","correct":false},{"id":381886,"option":"The given code runs in infinite loop","correct":false}]},{"q":"<p>You are given the table named <strong>saletbl</strong>. If you are required to execute the following SQL query, then determine its output.<br>\n<br>\n<strong>saletbl:</strong></p>\n\n<table border=\"1\" style=\"width: 100px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>stor_id</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>qty</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">15</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">15</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">15</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">15</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">20</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">35</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n<br>\n<strong>SQL Query:</strong> </p>\n\n<pre class=\"prettyprint\"><code>select stor_id, count(stor_id) from saletbl group by stor_id having avg(qty)&gt;=20 and count(stor_id)&gt;3</code></pre>\n\n<p><br>\n<br>\n<strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stor_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>count(stor_id)</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t\t<td style=\"text-align: center;\">5</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stor_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>count(stor_id)</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t\t<td style=\"text-align: center;\">5</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t\t<td style=\"text-align: center;\">0</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<br>\n\t<br>\n\t </li>\n\t<li>\n\t<table border=\"1\" style=\"width: 200px;\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\"><strong>stor_id</strong></td>\n\t\t\t\t<td style=\"text-align: center;\"><strong>count(stor_id)</strong></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t</li>\n</ol>","a":[{"id":385344,"option":"1","correct":true},{"id":385345,"option":"2","correct":false},{"id":385346,"option":"3","correct":false},{"id":385347,"option":"None of these","correct":false}]},{"q":"<p>Based on the following tables, what is the output of the SQL query:</p>\n\n<p><strong>STUDENT</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Ben</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Mike</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Alice</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>TEACHER</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Lisa</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>John</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>6</td>\n\t\t\t<td>Paul</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong> </p>\n\n<pre class=\"prettyprint\"><code>SELECT ID FROM TEACHER WHERE ID&lt;(SELECT AVG(ID) FROM TEACHER);\n</code></pre>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 33px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">4</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 33px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">3</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 33px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">6</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>4.</p>\n\n<table border=\"1\" style=\"width: 33px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\"><strong>ID</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 21px;\">6</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376576,"option":"1","correct":false},{"id":376577,"option":"2","correct":true},{"id":376578,"option":"3","correct":false},{"id":376579,"option":"4","correct":false}]},{"q":"<p>Based on the following table, what is the output of this SQL query:</p>\n\n<p>Table: <strong>EMPLOYEE</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>NAME</th>\n\t\t\t<th>DEPT_ID</th>\n\t\t\t<th>SALARY</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>10</td>\n\t\t\t<td>5000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>Ben</td>\n\t\t\t<td>20</td>\n\t\t\t<td>1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>10</td>\n\t\t\t<td>7000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>30</td>\n\t\t\t<td>3000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>Anita</td>\n\t\t\t<td>20</td>\n\t\t\t<td>2000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>SELECT SUM (SALARY) FROM EMPLOYEE GROUP BY DEPT_ID;\n</code></pre>\n\n<p>1. </p>\n\n<table border=\"1\" style=\"width: 67px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">12000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">3000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">3000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 67px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">3000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">3000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">12000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 69px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 57px;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 57px;\">5000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 57px;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 57px;\">3000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>4.</p>\n\n<table border=\"1\" style=\"width: 67px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">1000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">3000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 55px;\">5000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376528,"option":"1","correct":true},{"id":376529,"option":"2","correct":false},{"id":376530,"option":"3","correct":false},{"id":376531,"option":"4","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n\n<p><strong>CUSTOMER</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ID</th>\n\t\t\t<th>LNAME</th>\n\t\t\t<th>FNAME</th>\n\t\t\t<th>WEBSITE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>6000</td>\n\t\t\t<td>Johnson</td>\n\t\t\t<td>Alice</td>\n\t\t\t<td>Amazon</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5000</td>\n\t\t\t<td>Jones</td>\n\t\t\t<td>Bob</td>\n\t\t\t<td>Apple</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4000</td>\n\t\t\t<td>Johnson</td>\n\t\t\t<td>Ben</td>\n\t\t\t<td>Microsoft</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>7000</td>\n\t\t\t<td>White</td>\n\t\t\t<td>Mike</td>\n\t\t\t<td>Apple</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>8000</td>\n\t\t\t<td>Green</td>\n\t\t\t<td>Tara</td>\n\t\t\t<td>NULL</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>9000</td>\n\t\t\t<td>Davis</td>\n\t\t\t<td>Lisa</td>\n\t\t\t<td>Amazon</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<pre class=\"prettyprint\"><code>SELECT FNAME FROM CUSTOMER WHERE LNAME = 'Johnson' AND ID = 6000 ORDER BY FNAME;</code></pre>","a":[{"id":376712,"option":"Ben","correct":false},{"id":376713,"option":"Bob","correct":false},{"id":376714,"option":"Alice","correct":true},{"id":376715,"option":"Ben","correct":false}]},{"q":"<p>In SQL, consider the following table and the provided set of data. Which of the following queries selects the respective city name, recorded date, and weather of the cities whose name contains '<strong>i</strong>' in it? </p>\n\n<p><strong>Table: City_weather</strong></p>\n\n<table border=\"1\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>City</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Record_date</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Temp</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Humidity</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>Weather</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Athens</td>\n\t\t\t<td style=\"text-align: center;\">21-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">97</td>\n\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t<td style=\"text-align: center;\">Sunny</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Athens</td>\n\t\t\t<td style=\"text-align: center;\">22-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">97</td>\n\t\t\t<td style=\"text-align: center;\">89</td>\n\t\t\t<td style=\"text-align: center;\">Sunny</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Chicago</td>\n\t\t\t<td style=\"text-align: center;\">21-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">78</td>\n\t\t\t<td style=\"text-align: center;\">98</td>\n\t\t\t<td style=\"text-align: center;\">Rain</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Chicago</td>\n\t\t\t<td style=\"text-align: center;\">22-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">88</td>\n\t\t\t<td style=\"text-align: center;\"> </td>\n\t\t\t<td style=\"text-align: center;\">Rain</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Chicago</td>\n\t\t\t<td style=\"text-align: center;\">23-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">75</td>\n\t\t\t<td style=\"text-align: center;\"> </td>\n\t\t\t<td style=\"text-align: center;\">Rain</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Paris</td>\n\t\t\t<td style=\"text-align: center;\">22-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">62</td>\n\t\t\t<td style=\"text-align: center;\">62</td>\n\t\t\t<td style=\"text-align: center;\">Cloudy</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Paris</td>\n\t\t\t<td style=\"text-align: center;\">22-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">62</td>\n\t\t\t<td style=\"text-align: center;\">62</td>\n\t\t\t<td style=\"text-align: center;\">Cloudy</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Sydney</td>\n\t\t\t<td style=\"text-align: center;\">22-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">12</td>\n\t\t\t<td style=\"text-align: center;\">12</td>\n\t\t\t<td style=\"text-align: center;\">Snow</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Sydney</td>\n\t\t\t<td style=\"text-align: center;\">23-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">10</td>\n\t\t\t<td style=\"text-align: center;\">10</td>\n\t\t\t<td style=\"text-align: center;\">Snow</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">San Francisco</td>\n\t\t\t<td style=\"text-align: center;\">22-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">29</td>\n\t\t\t<td style=\"text-align: center;\">12</td>\n\t\t\t<td style=\"text-align: center;\">Snow</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">Sydney</td>\n\t\t\t<td style=\"text-align: center;\">23-Mar-2018</td>\n\t\t\t<td style=\"text-align: center;\">25</td>\n\t\t\t<td style=\"text-align: center;\">10</td>\n\t\t\t<td style=\"text-align: center;\">Snow</td>\n\t\t</tr>\n\t</tbody>\n</table>","a":[{"id":560861,"option":"Select City, Record_date, Weather from City_weather where City LIKE '_i%';","correct":false},{"id":560862,"option":"Select City, Record_date, Weather from City_weather where City LIKE '%i%' ;","correct":true},{"id":560863,"option":"Select City, Record_date, Weather from City_weather where City LIKE '_i_' ;","correct":false},{"id":560864,"option":"Select City, Record_date, Weather from City_weather where City LIKE 'i' ;","correct":false}]},{"q":"<p>Based on the given data in the table BIRTHDAY, what will be the result of the following SQL query:<br>\n<br>\nSelect AVG(DISTINCT Age) AS Average, SUM (DISTINCT Age) AS Total from BIRTHDAY;</p>\n\n<table border=\"1\" style=\"width: 140px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 68px;\"><strong>Firstname</strong><strong> </strong></td>\n\t\t\t<td style=\"text-align: center; width: 56px;\"><strong>Age</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 68px;\">Alice</td>\n\t\t\t<td style=\"text-align: center; width: 56px;\">42</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 68px;\">Bob</td>\n\t\t\t<td style=\"text-align: center; width: 56px;\">52</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 68px;\">Ben</td>\n\t\t\t<td style=\"text-align: center; width: 56px;\">42</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 68px;\">Mike</td>\n\t\t\t<td style=\"text-align: center; width: 56px;\">42</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 68px;\">Tara</td>\n\t\t\t<td style=\"text-align: center; width: 56px;\">42</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><br>\n </p>","a":[{"id":560873,"option":"Average          Total\r\n42                     4","correct":false},{"id":560874,"option":"Average          Total\r\n52                     4","correct":false},{"id":560875,"option":"Average          Total\r\n47                    94","correct":true},{"id":560876,"option":"None of these","correct":false}]},{"q":"<p>In SQL, which of these doesn't allow null values?</p>","a":[{"id":48806,"option":"Primary key ","correct":true},{"id":48807,"option":"Unique key ","correct":false},{"id":48808,"option":"Primary and Unique key ","correct":false},{"id":48809,"option":"Foriegn key \r\n ","correct":false}]},{"q":"<p>Based on the following tables, what is the output of these SQL queries:</p>\n<p>Table: <strong>PRODUCT</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">PID</th>\n<th align=\"center\">PNAME</th>\n<th align=\"center\">CATEGORY</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">Mango</td>\n<td align=\"center\">50</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">Banana</td>\n<td align=\"center\">50</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">Orange</td>\n<td align=\"center\">50</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">Apple</td>\n<td align=\"center\">50</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">Rice</td>\n<td align=\"center\">75</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">Dal</td>\n<td align=\"center\">25</td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">Oil</td>\n<td align=\"center\">NULL</td>\n</tr>\n</tbody>\n</table>\n<p>Table: <strong>SUMMARY</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">PID</th>\n<th align=\"center\">CURRENT</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">10</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">10</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">10</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">10</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">10</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">10</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"prettyprint\"><code>SQL &gt; UPDATE SUMMARY SET CURRENT = (SELECT CATEGORY\n   FROM PRODUCT WHERE PRODUCT.PID = SUMMARY.PID)\nWHERE EXISTS (SELECT CATEGORY FROM PRODUCT WHERE PRODUCT.PID = SUMMARY.PID);\n\nSQL&gt; SELECT CURRENT FROM SUMMARY;\n</code></pre>","a":[{"id":376476,"option":"50   50   50   50   75   10","correct":true},{"id":376477,"option":"10   10   10   10   10   10","correct":false},{"id":376478,"option":"50   50   50   50   75","correct":false},{"id":376479,"option":"50   50   50   50   50   NULL","correct":false}]},{"q":"<p>Based on the following tables, what is the output of the SQL query:</p>\n<p><strong>CUSTOMER</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">CUSTID</th>\n<th align=\"center\">NAME</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">4000</td>\n<td align=\"center\">Mike</td>\n</tr>\n<tr>\n<td align=\"center\">5000</td>\n<td align=\"center\">Tara</td>\n</tr>\n<tr>\n<td align=\"center\">6000</td>\n<td align=\"center\">Alice</td>\n</tr>\n<tr>\n<td align=\"center\">7000</td>\n<td align=\"center\">Bob</td>\n</tr>\n<tr>\n<td align=\"center\">8000</td>\n<td align=\"center\">Mary</td>\n</tr>\n<tr>\n<td align=\"center\">9000</td>\n<td align=\"center\">John</td>\n</tr>\n</tbody>\n</table>\n<p><strong>ORDER</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">ORDERID</th>\n<th align=\"center\">CUSTID</th>\n<th align=\"center\">DATE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">7000</td>\n<td align=\"center\">2016/04/17</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">5000</td>\n<td align=\"center\">2016/03/17</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">8000</td>\n<td align=\"center\">2016/03/29</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">4000</td>\n<td align=\"center\">2016/04/25</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"prettyprint\"><code>SQL &gt; SELECT NAME FROM CUSTOMER WHERE EXISTS (SELECT * FROM ORDER\n   WHERE CUSTOMER.CUSTID = ORDER.CUSTID)ORDER BY NAME;\n</code></pre>","a":[{"id":376540,"option":"Bob Tara Mary Mike","correct":false},{"id":376541,"option":"Bob Mary Mike Tara","correct":true},{"id":376542,"option":"Mike Tara Bob Mary","correct":false},{"id":376543,"option":"Error","correct":false}]},{"q":"<p>In SQL, which of the following is processed after the <strong>GROUP BY</strong> clause?</p>","a":[{"id":48558,"option":"HAVING ","correct":true},{"id":48559,"option":"WHERE ","correct":false},{"id":48560,"option":"Both of these","correct":false},{"id":48561,"option":"None of these\r\n","correct":false}]},{"q":"<p>You have two tables called <strong>Employee</strong> and <strong>Department</strong>.</p>\n\n<p><strong>Employee</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Field</th>\n\t\t\t<th>Type</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">EmployeeId</td>\n\t\t\t<td style=\"text-align: center;\">int</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">EmployeeName</td>\n\t\t\t<td style=\"text-align: center;\">text</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">DepartmentId</td>\n\t\t\t<td style=\"text-align: center;\">int</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Department</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Field</th>\n\t\t\t<th>Type</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">DepartmentId</td>\n\t\t\t<td style=\"text-align: center;\">int</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">DepartmentName</td>\n\t\t\t<td style=\"text-align: center;\">text</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Sample:</p>\n\n<p><strong>Employee</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>EmployeeId</th>\n\t\t\t<th>EmployeeName</th>\n\t\t\t<th>DepartmentId</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">John</td>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">Mike</td>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">5</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Sample:</p>\n\n<p><strong>Department</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>DepartmentId</th>\n\t\t\t<th>DepartmentName</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">IT</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">HR</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">Payroll</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">Admin</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Sample Output</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>DepartmentName</th>\n\t\t\t<th>EmployeeName</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">IT</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">IT</td>\n\t\t\t<td style=\"text-align: center;\">John</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">IT</td>\n\t\t\t<td style=\"text-align: center;\">Mike</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">HR</td>\n\t\t\t<td style=\"text-align: center;\">Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">HR</td>\n\t\t\t<td style=\"text-align: center;\">Anita</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Using the <strong>Employee</strong> and <strong>Department</strong> tables, which of the following queries will return the <strong>same sample output:</strong></p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>select DepartmentName,EmployeeName from Employee JOIN Department ON Department.DepartmentId=Employee.DepartmentId;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>select DepartmentName,EmployeeName from Employee LEFT JOIN Department ON Department.DepartmentId=Employee.DepartmentId;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>select DepartmentName,EmployeeName from Employee RIGHT JOIN Department ON Department.DepartmentId=Employee.DepartmentId;\n</code></pre>","a":[{"id":259453,"option":"Only 1","correct":false},{"id":259454,"option":"Only 2","correct":false},{"id":259455,"option":" 1 and 2","correct":true},{"id":259456,"option":"1 and 3","correct":false}]},{"q":"<p>Consider the following table Employee:</p>\n\n<p><strong>Employee</strong> </p>\n\n<table border=\"1\" style=\"width: 122px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 132px;\"><strong>Column name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 132px;\"><strong>eid</strong></td>\n\t\t\t<td style=\"text-align: center; width: 1px;\"><strong>ename</strong></td>\n\t\t\t<td style=\"text-align: center; width: 34px;\"><strong>rating</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 132px;\"><strong>Column type</strong></td>\n\t\t\t<td style=\"text-align: center; width: 132px;\">integer(primary key)</td>\n\t\t\t<td style=\"text-align: center; width: 1px;\">string</td>\n\t\t\t<td style=\"text-align: center; width: 34px;\">integer</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>Which of the following SQL queries is used to create a table with the following constraint:</p>\n\n<p><strong>Constraint</strong></p>\n\n<p>The rating must be in the range of 1 to 10.</p>\n\n<p><strong>Queries</strong></p>\n\n<p>1. </p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Employee ( eid integer,  ename varchar(40), rating integer, CHECK ( rating &gt;=1 AND rating &lt;=10));</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Employee ( eid integer,  ename varchar(40), rating integer,  CHECK ( rating &gt;=1 OR rating &lt;=10));</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Employee ( eid integer,  ename varchar(40), rating integer,  HAVING ( rating &gt;=1 AND rating &lt;=10));</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>CREATE TABLE Employee ( eid integer,  ename varchar(40), rating integer,  CHECK CONSTRAINT( rating &gt;=1 AND rating &lt;=10));</code></pre>\n\n<p> </p>","a":[{"id":646065,"option":"1","correct":true},{"id":646066,"option":"2","correct":false},{"id":646067,"option":"3","correct":false},{"id":646068,"option":"4","correct":false}]},{"q":"<p>In SQL, consider the following table named <strong>Student</strong>. You want to determine the age of the youngest student whose age is at least 18 years for each rating level with a minimum of two such students. Which of these queries can be used to perform this task?</p>\n\n<table border=\"1\" style=\"height: 112px; width: 231px;\">\n\t<caption>\n\t<p style=\"text-align: left;\"><strong>Student</strong></p>\n\t</caption>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 40px;\"><strong>Sid</strong></td>\n\t\t\t<td style=\"text-align: center; width: 56px;\"><strong>Name</strong></td>\n\t\t\t<td style=\"text-align: center; width: 45px;\"><strong>Age</strong></td>\n\t\t\t<td style=\"text-align: center; width: 63px;\"><strong>Rating</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 40px;\">101</td>\n\t\t\t<td style=\"width: 56px;\">Smith</td>\n\t\t\t<td style=\"width: 45px;\">15</td>\n\t\t\t<td style=\"width: 63px;\">5</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 40px;\">102</td>\n\t\t\t<td style=\"width: 56px;\">Bob</td>\n\t\t\t<td style=\"width: 45px;\">25</td>\n\t\t\t<td style=\"width: 63px;\">7</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 40px;\">103</td>\n\t\t\t<td style=\"width: 56px;\">Ben</td>\n\t\t\t<td style=\"width: 45px;\">19</td>\n\t\t\t<td style=\"width: 63px;\">8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 40px;\">104    </td>\n\t\t\t<td style=\"width: 56px;\">John</td>\n\t\t\t<td style=\"width: 45px;\">17</td>\n\t\t\t<td style=\"width: 63px;\">7</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Queries</strong></p>\n\n<p>1. </p>\n\n<pre class=\"prettyprint\"><code>SELECT S.Rating, S.Age FROM Student S WHERE S.Age &gt;= 18 GROUP BY S.Rating HAVING COUNT (*) &gt; 1;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT S.Rating, MIN (S.Age) FROM Student S WHERE S.Age &gt;= 18 HAVING COUNT (*) &gt; 1;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT S.Rating, MIN (S.Age) FROM Student S WHERE S.Age &gt;= 18 GROUP BY S.Rating;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT S.Rating, MIN (S.Age) FROM Student S WHERE S.Age &gt;= 18 GROUP BY S.Rating HAVING COUNT (*) &gt; 1;</code></pre>\n\n<p> </p>","a":[{"id":644712,"option":"1","correct":false},{"id":644713,"option":"2","correct":false},{"id":644714,"option":"3","correct":false},{"id":644715,"option":"4","correct":true}]},{"q":"<p>In SQL, consider the following two tables named <strong>Sailors</strong> and <strong>Reserves</strong>. You want to determine the <strong>sid</strong> of the sailors who have a rating of 10 or have a reserve boat (<strong>bid</strong>) equal to 104. Which of these queries can be used to perform this task?</p>\n\n<p><strong>Table: Sailors</strong></p>\n\n<table border=\"1\" style=\"height: 132px; width: 267px;\">\n\t<caption> </caption>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 35px;\"><strong>sid  </strong></td>\n\t\t\t<td style=\"text-align: center; width: 75px;\"><strong>sname</strong></td>\n\t\t\t<td style=\"text-align: center; width: 62px;\"><strong>rating</strong></td>\n\t\t\t<td style=\"text-align: center; width: 47px;\"><strong>age</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 35px;\">23    </td>\n\t\t\t<td style=\"width: 75px;\">Ben </td>\n\t\t\t<td style=\"width: 62px;\">7</td>\n\t\t\t<td style=\"width: 47px;\">58</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 35px;\">58    </td>\n\t\t\t<td style=\"width: 75px;\">Alice</td>\n\t\t\t<td style=\"width: 62px;\">10</td>\n\t\t\t<td style=\"width: 47px;\">45</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 35px;\">45</td>\n\t\t\t<td style=\"width: 75px;\">Bob</td>\n\t\t\t<td style=\"width: 62px;\">8</td>\n\t\t\t<td style=\"width: 47px;\">26</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Table: Reserves </strong></p>\n\n<table border=\"1\" style=\"height: 136px; width: 195px;\">\n\t<caption>\n\t<p style=\"text-align: left;\"> </p>\n\t</caption>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 52px;\"><strong>sid    </strong></td>\n\t\t\t<td style=\"text-align: center; width: 50px;\"><strong>bid</strong></td>\n\t\t\t<td style=\"text-align: center; width: 58px;\"><strong>day</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 52px;\">23</td>\n\t\t\t<td style=\"width: 50px;\">102</td>\n\t\t\t<td style=\"width: 58px;\">10/10/2018</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 52px;\">58</td>\n\t\t\t<td style=\"width: 50px;\">104</td>\n\t\t\t<td style=\"width: 58px;\">7/10/2018</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"width: 52px;\">60</td>\n\t\t\t<td style=\"width: 50px;\">115</td>\n\t\t\t<td style=\"width: 58px;\">5/5/2018</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT S.sid FROM Sailors S WHERE S.rating = 10 UNION SELECT R.sid FROM Reserves R WHERE R.bid = 104;</code></pre>\n\n<p>2. </p>\n\n<pre class=\"prettyprint\"><code>SELECT S.sid FROM Sailors S WHERE S.rating = 10 AND R.bid = 104;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT S.sid FROM Sailors S WHERE S.rating &gt; 10 INTERSECT SELECT R.sid FROM Reserves R WHERE R.bid = 104;</code></pre>\n\n<p> </p>","a":[{"id":644703,"option":"1","correct":true},{"id":644704,"option":"2","correct":false},{"id":644705,"option":"3","correct":false},{"id":644706,"option":"None of these","correct":false}]},{"q":"<p>Based on the following tables, what is the output of the SQL query:</p>\n\n<p><strong>CUSTOMER</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>CUSTID</th>\n\t\t\t<th>NAME</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>4000</td>\n\t\t\t<td>Mike</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>5000</td>\n\t\t\t<td>Alice</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>6000</td>\n\t\t\t<td>Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>7000</td>\n\t\t\t<td>Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>8000</td>\n\t\t\t<td>Ben</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>9000</td>\n\t\t\t<td>John</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>ORDERS</strong></p>\n\n<table class=\"pd-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>ORDERID</th>\n\t\t\t<th>CUSTID</th>\n\t\t\t<th>ORDER_DATE</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>1</td>\n\t\t\t<td>7000</td>\n\t\t\t<td>2016/04/17</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>2</td>\n\t\t\t<td>5000</td>\n\t\t\t<td>2016/03/17</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>3</td>\n\t\t\t<td>8000</td>\n\t\t\t<td>2016/03/29</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>4</td>\n\t\t\t<td>4000</td>\n\t\t\t<td>2016/04/25</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Query</strong> </p>\n\n<pre class=\"prettyprint\"><code>SELECT NAME FROM CUSTOMER WHERE EXISTS (SELECT * FROM ORDERS WHERE CUSTOMER.CUSTID = ORDERS.CUSTID);</code></pre>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 118px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 106px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 106px;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 106px;\">Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 106px;\">John</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 120px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 108px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 108px;\">Alice</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 108px;\">Mary</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 108px;\">Ben</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 131px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 119px;\"><strong>NAME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 119px;\">Bob</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 119px;\">Ben</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 119px;\">John</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":376516,"option":"1","correct":false},{"id":376517,"option":"2","correct":true},{"id":376518,"option":"3","correct":false},{"id":376519,"option":"None of these","correct":false}]},{"q":"<p>Based on the following table, what is the output of these SQL queries:</p>\n\n<p><strong>Table</strong>: EMPLOYEE</p>\n\n<table border=\"1\" class=\"pd-table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>ID</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>NAME</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>AGE</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>SALARY</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">01</td>\n\t\t\t<td style=\"text-align: center;\">Ben</td>\n\t\t\t<td style=\"text-align: center;\">24</td>\n\t\t\t<td style=\"text-align: center;\">15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">03</td>\n\t\t\t<td style=\"text-align: center;\">Bob</td>\n\t\t\t<td style=\"text-align: center;\">23</td>\n\t\t\t<td style=\"text-align: center;\">10000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">05</td>\n\t\t\t<td style=\"text-align: center;\">Mike</td>\n\t\t\t<td style=\"text-align: center;\">28</td>\n\t\t\t<td style=\"text-align: center;\">15000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">02</td>\n\t\t\t<td style=\"text-align: center;\">Alice</td>\n\t\t\t<td style=\"text-align: center;\">26</td>\n\t\t\t<td style=\"text-align: center;\">30000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">04</td>\n\t\t\t<td style=\"text-align: center;\">Tara</td>\n\t\t\t<td style=\"text-align: center;\">29</td>\n\t\t\t<td style=\"text-align: center;\">20000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>Queries</strong></p>\n\n<pre class=\"prettyprint\"><code>INSERT INTO EMPLOYEE (ID, NAME)VALUES(10,'Anita');</code></pre>","a":[{"id":376448,"option":"Error","correct":false},{"id":376449,"option":"It adds the value '10   Anita   NULL   NULL' to the last row of the table.","correct":true},{"id":376450,"option":"It adds the value '10   Anita   NULL   NULL' to the first row of the table.","correct":false},{"id":376451,"option":"It does not add any value to the table.","correct":false}]},{"q":"<p>Based on the following table, what is the output of the SQL query:</p>\n<p><strong>Table: STUDENT</strong></p>\n<table class=\"pd-table\">\n<thead>\n<tr>\n<th align=\"center\">Reg No</th>\n<th align=\"center\">Name</th>\n<th align=\"center\">Address</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">01</td>\n<td align=\"center\">Bob</td>\n<td align=\"center\">Chicago</td>\n</tr>\n<tr>\n<td align=\"center\">02</td>\n<td align=\"center\">John</td>\n<td align=\"center\">New York</td>\n</tr>\n<tr>\n<td align=\"center\">03</td>\n<td align=\"center\">Alice</td>\n<td align=\"center\">Chicago</td>\n</tr>\n</tbody>\n</table>\n<p><code>SQL &gt; DROP TABLE STUDENT;</code></p>","a":[{"id":376356,"option":"The query is wrong.","correct":false},{"id":376357,"option":"It will delete the table from the database.","correct":true},{"id":376358,"option":"It will delete all the rows but table will be available in the database.","correct":false},{"id":376359,"option":"Null","correct":false}]}]