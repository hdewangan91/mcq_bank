[{"q":"<p>In PL/SQL, you are working on the data types. Determine the data range for the BLOB data type?</p>","a":[{"id":1139532,"option":"128 TB - (4GB - 1) * (database_block_size)","correct":true},{"id":1139533,"option":"129 TB - (4GB - 1) * (database_block_size)","correct":false},{"id":1139534,"option":"128 TB - (4GB) * (database_block_size)","correct":false},{"id":1139535,"option":"129 TB - (4GB) * (database_block_size)","correct":false}]},{"q":"<p>In Python 3, which of the following statements about map and list comprehension is correct:</p>\n\n<ol>\n\t<li>List comprehension is used when a list of results is required whereas map comprehension can only return a map object and cannot return a list.</li>\n\t<li>List comprehension is slower than map comprehension when you want to evaluate expressions that are long or complicated to express.</li>\n</ol>","a":[{"id":1121817,"option":"1","correct":true},{"id":1121818,"option":"2","correct":false},{"id":1121819,"option":"1 and 2","correct":false},{"id":1121820,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>t = {}\nt[(11, 2, 49)] = 18\nt[(49, 10, 21)] = 7\nt[(15, 19)] = 20\ns = 0\nfor i in t: \n    s += t[i] \nprint(s**len(t))\n</code></pre>\n\n<p> </p>","a":[{"id":1121789,"option":"1085","correct":false},{"id":1121790,"option":"135","correct":false},{"id":1121791,"option":"18225","correct":false},{"id":1121792,"option":"91125","correct":true}]},{"q":"<p>In Python 3, consider the following code. If you want to obtain the provided results, determine the value of X.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>T = (1,'a', 5, 13, 'k', 10, 'b')\nR = X(4, 7)\nprint(T[R])</code></pre>\n\n<p><strong>Result</strong></p>\n\n<pre class=\"prettyprint\"><code>('k', 10, 'b')</code></pre>\n\n<p> </p>","a":[{"id":1121765,"option":"split","correct":false},{"id":1121766,"option":"slice","correct":true},{"id":1121767,"option":"join","correct":false},{"id":1121768,"option":"getstate","correct":false}]},{"q":"<p>In Python 3, which of the following statements represents the <strong>rstrip()</strong> function correctly?</p>\n\n<ol>\n\t<li>It removes spaces from the right side of the string.</li>\n\t<li>It removes any leading spaces in the string.</li>\n\t<li>It does not accept any arguments.</li>\n</ol>","a":[{"id":1121761,"option":"1 and 2","correct":false},{"id":1121762,"option":"2 and 3","correct":false},{"id":1121763,"option":"1 and 3","correct":true},{"id":1121764,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>from itertools import zip_longest\nn = [2, 6, 10, 13, 15]\nm = ['words', 'Hacker', 'Earth', 'Hi']\nl = range(3)\nresult = zip_longest(n, m, l, fillvalue = '0')\nprint(list(result))</code></pre>\n\n<p> </p>","a":[{"id":1121757,"option":"[(2, 'words', 0), (6, 'Hacker', 0), (10, 'Earth', 0), (13, 'Hi', '0'), (15, '0', '0')]","correct":false},{"id":1121758,"option":"[(2, 'words', 0), (6, 'Hacker', 1), (10, 'Earth', 2), ('0', 'Hi', '0')]","correct":false},{"id":1121759,"option":"[(2, 'words', 0), (6, 'Hacker', 1), (10, 'Earth', 2), (13, 'Hi', '0'), (15, '0', '0')]","correct":true},{"id":1121760,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def element(x): \n    return x[0] \ndef sort_list(t):  \n  return sorted(t, key = element)  \nprint(sort_list([(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]))  \n</code></pre>\n\n<p> </p>","a":[{"id":1121745,"option":"[(1, 2), (2, 1), (2, 3), (2, 5), (4, 4)] ","correct":false},{"id":1121746,"option":"[(1, 2), (2, 3), (2, 1), (2, 5), (4, 4)]","correct":false},{"id":1121747,"option":"[(1, 2), (2, 5), (2, 3), (2, 1), (4, 4)]","correct":true},{"id":1121748,"option":"[(1, 2), (2, 5), (2, 1), (2, 3), (4, 4)]","correct":false}]},{"q":"<p>You are given the following Python 3 expressions. Which of these represents:</p>\n\n<ol>\n\t<li>Data type of c</li>\n\t<li>Correct value of c</li>\n</ol>\n\n<p><strong>Expression</strong></p>\n\n<pre class=\"prettyprint\"><code>a = 0 + True * True\nb = 0 + False * True\nc = (a + b * ( b - a))**11</code></pre>\n\n<p> </p>","a":[{"id":1121741,"option":"1. Int \r\n2. c = 1","correct":true},{"id":1121742,"option":"1. Int \r\n2. c = -1","correct":false},{"id":1121743,"option":"1. Boolean \r\n2.  c = True","correct":false},{"id":1121744,"option":"Throws a runtime error","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>a = {1: 'Bob', '10abc': 'language', 1998: 'Age'}\nprint(a.get(10abc))</code></pre>\n\n<p> </p>","a":[{"id":1121725,"option":"‘language’","correct":false},{"id":1121726,"option":"None","correct":false},{"id":1121727,"option":"Bob","correct":false},{"id":1121728,"option":"SyntaxError","correct":true}]},{"q":"<p>In Python 3, which of the following statements about <strong>dictionaries</strong> are correct:</p>\n\n<ol>\n\t<li>They are an unordered collection of elements.</li>\n\t<li>The elements are stored as key-value pairs.</li>\n\t<li>They are indexed by keys.</li>\n\t<li>The values can be of any type but the keys are immutable.</li>\n</ol>","a":[{"id":1121701,"option":"1, 2, and 3","correct":false},{"id":1121702,"option":"1, 2, and 4","correct":false},{"id":1121703,"option":"2, 3, and 4","correct":false},{"id":1121704,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>from collections import Counter \ndef chars(s1,s2): \t\n\td1 = Counter(s1) \n\td2 = Counter(s2) \n\td = d1 &amp; d2 \n\tif len(d) == 0: \n\t\treturn 0\n\tchars = list(d.elements()) \n\tchars = sorted(chars) \n\treturn ''.join(chars) \ns1 = 'Python'\ns2 = 'HackerEarth'\nprint(chars(s1, s2))\n</code></pre>\n\n<p> </p>","a":[{"id":1121809,"option":"PH","correct":false},{"id":1121810,"option":"ht","correct":true},{"id":1121811,"option":"th","correct":false},{"id":1121812,"option":"oe ","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>total = 0\ncount = 0\ns = [2, 40, 65, 81]\nflag = True\nwhile flag:\n    for i in s:\n        if i % 2 == 0:\n            count += 1 \n        total = total + count\n        if total &gt; 10:\n            flag = False\nprint('The sum is ' + str(total))\n</code></pre>\n\n<p> </p>","a":[{"id":1121797,"option":"The sum is 14","correct":false},{"id":1121798,"option":"The sum is 22","correct":true},{"id":1121799,"option":"The sum is 7","correct":false},{"id":1121800,"option":"None","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>a = ['Hacker','Earth','1','2', 'Python','Language', '10']\na_to_dictionary = dict(zip(a[0::2], a[1::2]))\nprint(a_to_dictionary)</code></pre>\n\n<p> </p>","a":[{"id":1121753,"option":"{'Hacker': 'Earth', '1': 'Language', 'Python': '10'}","correct":false},{"id":1121754,"option":"{'Hacker': 'Earth', '1': '2', 'Python': 'Language'}","correct":true},{"id":1121755,"option":"{'Hacker': '1', 'Earth': '2', 'Python': 'Language'}","correct":false},{"id":1121756,"option":"{'Hacker': 'Earth', '1': '2', 'Python': 'Language’, '10' : '0'}","correct":false}]},{"q":"<p>In Python 3, which of the following are important points while you convert a list to a string:</p>\n\n<ol>\n\t<li>Using the .join method</li>\n\t<li>You are required to convert integer elements of the list into strings before starting the conversion</li>\n\t<li>Using the str() function on the elements of the list</li>\n\t<li>It is not possible to convert lists into strings</li>\n</ol>","a":[{"id":1121749,"option":"1 and 2","correct":false},{"id":1121750,"option":"2 and 3","correct":false},{"id":1121751,"option":"1, 2, and 3","correct":true},{"id":1121752,"option":"All of these","correct":false}]},{"q":"<p>In Python, consider the following list. If you perform the <strong>Join</strong> method on this list, what is the output:</p>\n\n<p><strong>List</strong></p>\n\n<pre class=\"prettyprint\"><code>L = ['A', 'B', 'C']\n</code></pre>\n\n<p><strong>Method</strong></p>\n\n<pre class=\"prettyprint\"><code>print('***'.join(L))</code></pre>\n\n<p> </p>","a":[{"id":1121713,"option":"'ABC***'","correct":false},{"id":1121714,"option":"'***ABC'","correct":false},{"id":1121715,"option":"'A***B***C'","correct":true},{"id":1121716,"option":"'A*B*C '","correct":false}]},{"q":"<p>Which of the following statements about line 2 in this Python code is correct:</p>\n\n<pre class=\"prettyprint\"><code>a = ‘HackerEarth’    #line1\nb = a[::-1]    #line2</code></pre>\n\n<p> </p>","a":[{"id":1121709,"option":"Slices HackerEarth into Earth Hacker","correct":false},{"id":1121710,"option":"Reverses the string into htraErekcaH","correct":true},{"id":1121711,"option":"Rearranges the characters of the string into rekcaH htraE","correct":false},{"id":1121712,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>l = [28.04, 51.98, 77.21, 80.8, 31.10, 10.1]\nl = [int(i) for i in l]\nl.sort()\nprint(list(l))</code></pre>\n\n<p> </p>","a":[{"id":1121705,"option":"[10.1, 28.04, 31.10, 51.98, 77.21, 80.3]","correct":false},{"id":1121706,"option":"[10, 28, 31, 51, 77, 80]","correct":true},{"id":1121707,"option":"[80.3, 77.21, 51.98, 31.10, 28.04, 10.1]","correct":false},{"id":1121708,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>L1 = [2, 's', 4]\nL2 = ['m', '1', 10]\nprint(L1+L2*2**2)</code></pre>\n\n<p> </p>","a":[{"id":1121733,"option":"[2, 's', 4, 'm', '1', 10, 2, 's', 4, 'm', '1', 10, 2, 's', 4, 'm', '1', 10, 2, 's', 4, 'm', '1', 10]","correct":false},{"id":1121734,"option":"[2, 's', 4, 'm', '1', 10, 'm', '1', 10, 'm', '1', 10, 'm', '1', 10]","correct":true},{"id":1121735,"option":"[2, ‘s’, 4, 2, ‘s’, 4, 'm', '1', 10, 'm', '1', 10]","correct":false},{"id":1121736,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>s = 'HackerEarth-testing'\nL = \"-\"\nindex = None\nfor i in range(len(s)): \n    if L == s[i]: \n        index = i \nres = s[:index] \nprint(res)  \n</code></pre>\n\n<p> </p>","a":[{"id":1121805,"option":"Hacker-testing","correct":false},{"id":1121806,"option":"HackerEarth-test","correct":false},{"id":1121807,"option":"HackerEarth","correct":true},{"id":1121808,"option":"Error","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>a = ['a','e','i','o','u','A','E','I','O','U',' ']\nb = \"HackerEarth Tests\"\nfor i in a:\n  if i not in b:\n    a = a[:a.index(i)]+a[a.index(i)+1:]\nprint(a)\n</code></pre>\n\n<p> </p>","a":[{"id":1121801,"option":"['e', 'i', 'A', 'E ']  ","correct":false},{"id":1121802,"option":"['a', 'e', 'E', '  ']  ","correct":true},{"id":1121803,"option":"['a', 'i', 'E', 'O'] ","correct":false},{"id":1121804,"option":"['a', 'e', 'E', 'I']","correct":false}]},{"q":"<p>In Python, which of the following statements about <strong>tuples</strong> is correct:</p>\n\n<ol>\n\t<li>It can be used for the purpose of keys in dictionaries.</li>\n\t<li>They are allowed to have mixed lengths.</li>\n\t<li>The order of the items in a tuple is considered when you are comparing the equality of the values in a dictionary.</li>\n</ol>","a":[{"id":1121793,"option":"1 and 2","correct":true},{"id":1121794,"option":"2 and 3","correct":false},{"id":1121795,"option":"1 and 3","correct":false},{"id":1121796,"option":"All of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>List = [] \nList.append(2) \nList.append(0) \nList.append(6) \nfor i in range(1, 4): \n    List.append((5)) \nfor i in range(1, 5):\n    List.insert(3, 'Python')\nprint(List) \n</code></pre>\n\n<p> </p>","a":[{"id":1121785,"option":"[2, 0, 6, 5, 5, 5]","correct":false},{"id":1121786,"option":"[2, 0, 6, 'Python', 'Python', 'Python', 'Python']","correct":false},{"id":1121787,"option":"[2, 0, 6, 'Python', 'Python', 'Python', 'Python', 5, 5, 5]","correct":true},{"id":1121788,"option":"TypeError","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>def compare(a, b):\n    if a == b:\n        return True\n    else:\n        return False\ndef remove_extra(a):\n    for i in a:\n        if i not in b:\n            b.append(i)\n            a.remove(i)\n    print(b)\na = [1, 1, 2, 2, 3, 4, 4, 3, 0 ,0]\nb = []\nremove_extra(a)\nprint(compare(a, b))\n</code></pre>\n\n<p> </p>","a":[{"id":1121773,"option":"[1, 2, 4, 3, 0]\r\nTrue  ","correct":false},{"id":1121774,"option":"[4, 3, 2, 1, 0]\r\nFalse ","correct":false},{"id":1121775,"option":"[1, 2, 3, 4, 0] \r\nFalse  ","correct":true},{"id":1121776,"option":"[1, 2, 3, 4, 0]\r\nTrue  ","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>l = [[1,2],[3,4],[5,6]]\nm = [(y,x) for x, y in l]\nprint(m)</code></pre>\n\n<p> </p>","a":[{"id":1121737,"option":"[(1,2), (3, 4), (5, 6)]","correct":false},{"id":1121738,"option":"[(4,3), (2, 1), (6, 5)]","correct":false},{"id":1121739,"option":"[(1, 2), (5, 6), (3, 4)]","correct":false},{"id":1121740,"option":"[(2, 1), (4, 3), (6, 5)]","correct":true}]},{"q":"<p>In Python, which of the following statements about the <strong>.isalpha()</strong> function is correct:</p>\n\n<ol>\n\t<li>Indicates whether a character is a letter or not</li>\n\t<li>Returns True if the character is a letter, else returns False</li>\n\t<li>Indicates whether a character is a number</li>\n\t<li>Can be used on string operations only</li>\n</ol>","a":[{"id":1121729,"option":"1, 2, and 3","correct":false},{"id":1121730,"option":"2, 3, and 4","correct":false},{"id":1121731,"option":"1, 2, and 4","correct":true},{"id":1121732,"option":"All of these","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>s = 'HackerEarth Python Testing' \nnVowels = 0 \nnCons = 0 \nfor char in s:   \n    if char == 'a' or char == 'e' or char == 'i' or char == 'o'  or char == 'u': \n        nVowels += 1 \n    elif char == 'o' or char == 'M': \n        print(char) \n    else: \n        nCons -= 1 \nprint(nVowels) \n</code></pre>\n\n<p> </p>","a":[{"id":1121781,"option":"10","correct":false},{"id":1121782,"option":"6","correct":true},{"id":1121783,"option":"3","correct":false},{"id":1121784,"option":"14","correct":false}]},{"q":"<p>In Python 3, which of the following statements about the <strong>set()</strong> method is correct:</p>\n\n<ol>\n\t<li>It returns True if all the iterable objects are True.</li>\n\t<li>If returns True if you have an empty iterable object.</li>\n\t<li>A dictionary can be created using this but only the keys remain after conversion and all the values are lost.</li>\n</ol>\n\n<p> </p>","a":[{"id":1121777,"option":"1 and 2","correct":false},{"id":1121778,"option":"2 and 3","correct":false},{"id":1121779,"option":"1 and 3","correct":false},{"id":1121780,"option":"All of these","correct":true}]},{"q":"<p>In Python, which of the following statements about <strong>tuple</strong> are correct:</p>\n\n<ol>\n\t<li>They are an immutable sequence</li>\n\t<li>Removing individual tuple elements is allowed</li>\n\t<li>Items in it contain values and keys</li>\n\t<li>Represented using parentheses</li>\n</ol>","a":[{"id":1121717,"option":"1 and 2","correct":false},{"id":1121718,"option":"2 and 3","correct":false},{"id":1121719,"option":"1 and 4","correct":true},{"id":1121720,"option":"2 and 4","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>greeting = 'Hacker Earth!'\ncount = 0\nfor letter in greeting:\n    count += 1\n    if count % 2 == 0:\n        print(letter, end= ' ')\n    print(letter, end= ' ')\n</code></pre>\n\n<p> </p>","a":[{"id":1121769,"option":"H a a c k k e r r   E E a r r t h h ! ","correct":true},{"id":1121770,"option":"H a a c k k e r  E E a r r t h h ! ","correct":false},{"id":1121771,"option":"H a c k e r  E a r t h ! ","correct":false},{"id":1121772,"option":"H a a c k k e r r   E E a r r t h h ! !","correct":false}]},{"q":"<p>In PL/SQL, you are working on the data types. You are required to execute the following code. If it throws the compilation errors, then which of the following Oracle errors are thrown in this scenario:</p>\n\n<pre class=\"prettyprint\"><code>DECLARE\n        p1 PLS_INTEGER := 2147483647;\n        p2 PLS_INTEGER := 1;\n        n NUMBER;\nBEGIN\n        n := p1 + p2;\nEND;\n</code></pre>\n\n<p><br>\n1. ORA-01426<br>\n2. ORA-52981<br>\n3. ORA-06512</p>","a":[{"id":1139548,"option":"1 and 2","correct":false},{"id":1139549,"option":"2 and 3","correct":false},{"id":1139550,"option":"1 and 3","correct":true},{"id":1139551,"option":"No errors will be thrown, the code compiles successfully","correct":false}]},{"q":"<p>In PL/SQL, you are working on the data types. Determine the maximum number of characters for the Single-byte character set?</p>","a":[{"id":1139536,"option":"32765","correct":false},{"id":1139537,"option":"32766","correct":false},{"id":1139538,"option":"32767","correct":true},{"id":1139539,"option":"32768","correct":false}]},{"q":"<p>Which of the following are in-built iterables in Python 3:</p>\n\n<ol>\n\t<li>Lists</li>\n\t<li>Dictionaries</li>\n\t<li>Tuples</li>\n</ol>","a":[{"id":1121821,"option":"1 and 2","correct":false},{"id":1121822,"option":"2 and 3","correct":false},{"id":1121823,"option":"1 and 3","correct":false},{"id":1121824,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>t = [(2, 1), (1, 1), (2, 4), (2, 6), (7, 5), (6, 4)] \nresult = {} \nfor i, j in t: \n     result.setdefault(j, []).append(i) \nprint(result) \n</code></pre>\n\n<p> </p>","a":[{"id":1121813,"option":"{1: [1, 1], 4: [6, 6], 6: [2], 5: [7]} ","correct":false},{"id":1121814,"option":"{1: [2, 1], 4: [2, 6], 6: [2], 5: [7]}  ","correct":true},{"id":1121815,"option":"{1: (2, 1), 4: (2, 6), 6: (2), 5: (7)} ","correct":false},{"id":1121816,"option":"{2: [1, 4, 6], 1: [1], 7: [5], 6: [4]}","correct":false}]},{"q":"<p>What is the output of the following Python 3 code:</p>\n\n<pre class=\"prettyprint\"><code>a = ('Joe', 'Alice', 'Bob', 1978, 2, 'R', 2019)\nprint(a)\ndel a\nprint(a)</code></pre>\n\n<p> </p>","a":[{"id":1121721,"option":"TypeError: type ‘a’ not defined\r\n('Joe', 'Alice', 'Bob', 1978, 2, 'R', 2019)","correct":false},{"id":1121722,"option":"('Joe', 'Alice', 'Bob', 1978, 2, 'R', 2019)\r\nNameError: name ‘a’ not defined","correct":true},{"id":1121723,"option":"NameError: name ‘a’ not defined\r\n('Joe', 'Alice', 'Bob', 1978, 2, 'R', 2019)","correct":false},{"id":1121724,"option":"('Joe', 'Alice', 'Bob', 1978, 2, 'R', 2019)\r\nTypeError: type ‘a’ not defined","correct":false}]}]