[{"q":"<p>Consider the Javascript code snippet given below. Which of the following syntaxes can be used in the missing lines of codes L1, L2, L3, and L4 to produce the output as specified in the code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>var operations= (\n    function()\n    {\n        var privateOperations= 0;\n        function ChangingEvent(val) \n        {\n            privateOperations+= val;\n            \n        }\n        return {\n            increment: function() \n            {\n                ChangingEvent(1);\n                \n            },\n            decrement: function() \n            {\n                ChangingEvent(-1);\n                \n            },\n            value: function() \n            {\n                return privateOperations;\n                \n            }\n        };\n    }\n    )\n    (  );\n\nL1 // Output is 0.\nL2\nL3\nconsole.log(operations.value()); // Output is 2.\nL4\nconsole.log(operations.value()); // Output is 1.</code></pre>\n\n<p><strong>Syntaxes:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>L1 : console.log(operations.value());\nL2 : operations.decrement();\nL3 : operations.decrement();\nL4 : operations.increment(); </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>L1 : operations.decrement();\nL2 : console.log(operations.value());\nL3 : operations.increment();\nL4 : operations.increment();</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>L1 : console.log(operations.value());\nL2 : operations.increment();\nL3 : operations.increment();\nL4 : operations.decrement(); </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>L1 : operations.increment();\nL2 : console.log(operations.value());\nL3 : operations.decrement();\nL4 : operations.decrement();</code></pre>\n\t</li>\n</ol>","a":[{"id":1420462,"option":"1","correct":false},{"id":1420463,"option":"2","correct":false},{"id":1420464,"option":"3","correct":true},{"id":1420465,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following Javascript code?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>(function () \n{\n    try \n    {\n        throw new Error(\"hackerearth\");\n    } \n    catch (h1) \n    {\n        var h1 = 31, h2 = 33;\n        console.log(h2);\n    }\n    console.log(h1);\n    console.log(h2);\n})();</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\nundefined\n33</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\n31\n33</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>33\nundefined\nundefined</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>The code gives a run-time error</code></pre>\n\t</li>\n</ol>","a":[{"id":1420437,"option":"1","correct":true},{"id":1420438,"option":"2","correct":false},{"id":1420439,"option":"3","correct":false},{"id":1420440,"option":"4","correct":false}]},{"q":"<p>Which of the following syntaxes can be used in place of XXX and YYY in the Javascript code given below&nbsp;to produce output as 4?<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>var a = [2, 5, 12, 16, 23, 35];\n\nXXX\n\nfunction abc(YYY) \n{\n  return val &gt; 20;\n}\n\nconsole.log(b);</code></pre>\n\n<p><strong>Options:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>XXX -&gt; var b = a.find(abc);\nYYY -&gt; val, index, array</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>XXX -&gt; var b = a.findIndex(abc);\nYYY -&gt; index, array</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>XXX -&gt; var b = a.findIndex(abc);\nYYY -&gt; val, index, array</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>XXXX -&gt; var b = a.find(index);\nYYYY -&gt; val, index, array</code></pre>\n\t</li>\n</ol>","a":[{"id":1420572,"option":"1","correct":false},{"id":1420573,"option":"2","correct":false},{"id":1420574,"option":"3","correct":true},{"id":1420575,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following Javascript code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>'use strict';\n(function() \n{\n    var hack = \"Hackerearth\";\n    var h = [].filter.call(hack, function(hack, i) \n    {\n        return i &gt; 6;\n        \n    });\n    console.log(h);\n    \n}());</code></pre>\n\n<p><strong>Output</strong>:</p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[ 'a', 'r', 't', 'h' ]</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[ 'e', 'a', 'r', 't', 'h' ]</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[ 'h', 't', 'r', 'a', 'e' ]</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[ 'h', 't', 'r', 'a' ]</code></pre>\n\t</li>\n</ol>","a":[{"id":1420637,"option":"2","correct":false},{"id":1420638,"option":"3","correct":false},{"id":1420639,"option":"1","correct":true},{"id":1420640,"option":"4","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>var x = 7, y = 9;\n[x, y] = [y, x]; </code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>This code swaps the values of x and y.<br>\n\t </li>\n\t<li>This code does not throw an error.<br>\n\t </li>\n\t<li>Values of x and y remain unchanged.</li>\n</ol>","a":[{"id":1468120,"option":"2 and 3","correct":false},{"id":1468121,"option":"1 and 2","correct":true},{"id":1468122,"option":"only 2","correct":false},{"id":1468123,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>function myFunction(...params) {\nreturn params;\n}\nvar x = myFunction(8,90,11);\nconsole.log(x);</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong><br>\n </p>\n\n<ol>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>[ 8, 90, 11 ]\n</code></pre>\n\t<br>\n\t </li>\n\t<li>This code does not throw an error.<br>\n\t<br>\n\t </li>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>8 90 11</code></pre>\n\t </li>\n</ol>","a":[{"id":1467969,"option":"2 and 3 ","correct":false},{"id":1467970,"option":"1 and 2","correct":true},{"id":1467971,"option":"only 2","correct":false},{"id":1467972,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>async function myFunction() {\n  return await Promise.resolve('Hi');\n}\nvar x = myFunction();\nconsole.log(x);</code></pre>\n\n<p><br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>This code prints -\n\t<pre class=\"prettyprint\"><code>Promise { &lt;pending&gt; }</code></pre>\n\t</li>\n\t<li>This code does not throw any runtime error<br>\n\t </li>\n\t<li>This code prints -\n\t<pre class=\"prettyprint\"><code>Promise { &lt;resolved&gt;: 'Hi' } </code></pre>\n\t<br>\n\t </li>\n</ol>","a":[{"id":1467957,"option":"2 and 3","correct":false},{"id":1467958,"option":"1 and 2","correct":true},{"id":1467959,"option":"only 2","correct":false},{"id":1467960,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>function myFunction()\n{\n    let x = this ? class y { } : class z { };\n    console.log(typeof x + \",\" + typeof z );  \n    \n}\nmyFunction();\n</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>function,undefined</code></pre>\n\t</li>\n\t<li>This code does not throw an error.<br>\n\t </li>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>function,function</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1467953,"option":"1 and 2","correct":true},{"id":1467954,"option":"2 and 3","correct":false},{"id":1467955,"option":"only 2","correct":false},{"id":1467956,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>(function() \n{\n    if (false) \n    {\n        let x = {\n            y() =&gt; 1 \n            \n        };\n        \n    }\n    console.log(typeof x);\n})()</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong></p>\n\n<ol>\n\t<li>This code throws an error.<br>\n\t </li>\n\t<li>This code executes successfully.<br>\n\t </li>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>object\n</code></pre>\n\t </li>\n</ol>","a":[{"id":1467949,"option":"1","correct":true},{"id":1467950,"option":"2 and 3","correct":false},{"id":1467951,"option":"2","correct":false},{"id":1467952,"option":"None of these","correct":false}]},{"q":"<p>In ES6, if you have executed the following code, then which of the following statements in this scenario is/are correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>var x = 'hi';\nfunction myFunction()\n{\n    console.log(x);\n    var x = 'hello';\n}\nmyFunction();\n</code></pre>\n\n<p><br>\n<br>\n<br>\n<strong>Statement:</strong></p>\n\n<ol>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>hi</code></pre>\n\t<br>\n\t </li>\n\t<li>This code prints-\n\t<pre class=\"prettyprint\"><code>hello</code></pre>\n\t<br>\n\t </li>\n\t<li>This code does not throw any runtime error.                                                                                                                                               </li>\n</ol>","a":[{"id":1467945,"option":"1 and 2","correct":false},{"id":1467946,"option":"2 and 3","correct":false},{"id":1467947,"option":"only 3","correct":true},{"id":1467948,"option":"All of these","correct":false}]},{"q":"<p>What is the output of the Javascript code snippet given below?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var obj = {\n x: 1,\n 5: 1,\n r: 1,\n 1: 1,\n g: 1,\n h: 1,\n 9: 1\n};\n\nobj.t = 1;\n\nconsole.log(Object.getOwnPropertyNames(obj).join(\"\"));</code></pre>\n\n<p> </p>","a":[{"id":1420492,"option":"159ghrtx","correct":false},{"id":1420493,"option":"159xrght","correct":true},{"id":1420494,"option":"519ghrtx","correct":false},{"id":1420495,"option":"519xrght","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var sum = (x, y) =&gt; x + y;\nconsole.log(sum.call(null, 20, 30));\nconsole.log(sum.apply(null, [20, 30]));\nvar xyz = sum.bind(null, 20, 30);\nconsole.log(xyz());</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong> </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\n50\nError                                                                                            </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\n50\n50</code></pre>\n\t                                                                                                                                  </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>null\nnull\nnull </code></pre>\n\t                                                                                                                                                                                                   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>50\nnull\n50</code></pre>\n\t                                                                                                                                                                                      </li>\n</ol>","a":[{"id":1420427,"option":"1","correct":false},{"id":1420428,"option":"2","correct":true},{"id":1420429,"option":"3","correct":false},{"id":1420430,"option":"4","correct":false}]},{"q":"<p>Predict the output of the Javascript code snippet given below:</p>\n\n<pre class=\"prettyprint\"><code>let set = new Set();\nset.add(5);\nset.add(\"5\");\nset.add(5);\nconsole.log(set.size);</code></pre>\n\n<p> </p>","a":[{"id":1420417,"option":"1","correct":false},{"id":1420418,"option":"2","correct":true},{"id":1420419,"option":"3","correct":false},{"id":1420420,"option":"The code will give an error","correct":false}]},{"q":"<p>Which of the following syntaxes can be used in place of <em>XXX </em>in the Javascript code given below so that invocation of the methof <em>hi()</em> produces the output as follows?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>const Hello = {\n    hi()\n    {\n        console.log(this.word + ' is good.');\n        \n    }\n};\n\nclass MyClass \n{\n    constructor(word) \n    {\n        this.word = word;\n        \n    }\n}\n\nXXX\n\nlet obj = new MyClass('Food');\nobj.hi();</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>Food is good.</code></pre>\n\n<p><br>\n<br>\n<strong>Syntaxes</strong><br>\n<br>\n1.</p>\n\n<pre class=\"prettyprint\"><code>Object.setPrototypeOf(MyClass.prototype, Hello);</code></pre>\n\n<p> </p>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>Object.setPrototypeOf(Hello.prototype, MyClass);</code></pre>\n\n<p> </p>\n\n<p>3. </p>\n\n<pre class=\"prettyprint\"><code>Object.PrototypeOf(MyClass.prototype, Hello.prototype);</code></pre>\n\n<p> </p>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>Object.prototype.prototype(MyClass, Hello);</code></pre>\n\n<p> </p>","a":[{"id":1420552,"option":"1","correct":true},{"id":1420553,"option":"2","correct":false},{"id":1420554,"option":"3","correct":false},{"id":1420555,"option":"4","correct":false}]},{"q":"<p>In Javascript, you have the following array of integers and want to determine the maximum value in the array. Which of the syntaxes given below will produce the desired result?</p>\n\n<p> </p>\n\n<p><strong>Array</strong></p>\n\n<pre class=\"prettyprint\"><code>let x = [1, 4, 8, 14, 29, 49, 68];</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Syntaxes</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>console.log(Math.max(...x));</code></pre>\n\n<p><br>\n2.</p>\n\n<pre class=\"prettyprint\"><code>console.log(Math.max.apply(Math, x));</code></pre>\n\n<p><br>\n3. </p>\n\n<pre class=\"prettyprint\"><code>console.log(Math.max(x));</code></pre>\n\n<p> </p>","a":[{"id":1420602,"option":"Only 1","correct":false},{"id":1420603,"option":"1 and 2","correct":true},{"id":1420604,"option":"1 and 3","correct":false},{"id":1420605,"option":"2 and 3","correct":false}]},{"q":"<p>Which of the following syntaxes can be used in place of XXX and YYY in the Javascript code given below to produce the output as follows?<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function fun1(y, z) \n{\n    return this.p + this.q + y + z;\n}\n\nvar add = {p: 10, q: 20}; \nXXX\nYYY</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>100\n140</code></pre>\n\n<p><br>\n<strong>Syntaxes</strong><br>\n<br>\n1. XXX - fun1.call(add, 30, 40); <br>\n    YYY - fun1.bind(add, [50, 60]);</p>\n\n<p>2. XXX - add.call(fun1, 30, 40);<br>\n    YYY - add.apply(fun1, 50, 60);</p>\n\n<p>3. XXX - fun1.call(add, 30, 40);<br>\n    YYY - fun1.apply(add, [50, 60]);</p>\n\n<p>4. XXX - fun1.call(add, 30, 40);<br>\n    YYY - fun1.bind(add, 50, 60);</p>","a":[{"id":1420527,"option":"1","correct":false},{"id":1420528,"option":"2","correct":false},{"id":1420529,"option":"3","correct":true},{"id":1420530,"option":"4","correct":false}]},{"q":"<p>In Javascript, consider the array given below and determine the output of the following operations on the array?</p>\n\n<p><strong>Array</strong></p>\n\n<pre class=\"prettyprint\"><code>let abc = [3, 6, 9, 12];</code></pre>\n\n<p> </p>\n\n<p><strong>Operations</strong></p>\n\n<p>Operation A</p>\n\n<pre class=\"prettyprint\"><code>abc.fill(2, 2);\nconsole.log(abc.toString());</code></pre>\n\n<p> </p>\n\n<p>Operation B</p>\n\n<pre class=\"prettyprint\"><code>abc.fill(0, 1, 3);\nconsole.log(abc.toString());</code></pre>\n\n<p> </p>\n\n<p>Operation C</p>\n\n<pre class=\"prettyprint\"><code>abc.copyWithin(2, 0);\nconsole.log(abc.toString());\n</code></pre>\n\n<p> </p>\n\n<p>Operation D</p>\n\n<pre class=\"prettyprint\"><code>abc.copyWithin(2, 0, 1);\nconsole.log(abc.toString());</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<p> </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A 3, 6, 2, 2\n\nB 3, 0, 0, 12\n\nC 3, 6, 3, 6\n\nD 3, 6, 3, 12</code></pre>\n\n\t<p>                                                                                                                                                                                          </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A 2, 2, 9, 12\n\nB 3, 0, 0, 12\n\nC 3, 6, 3, 6\n\nD 2, 6, 9, 12</code></pre>\n\n\t<p>                                                                                                                                                                                          </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A 3, 6, 2, 2\n\nB 3, 0, 0, 0\n\nC 9, 12, 9, 12\n\nD 2, 2, 9, 12    </code></pre>\n\n\t<p>                                                                                                                                                                                              </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A 3, 6, 2, 12\n\nB 3, 3, 6, 12\n\nC 3, 6, 3, 12\n\nD 3, 6, 3, 12</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420467,"option":"1","correct":true},{"id":1420468,"option":"2","correct":false},{"id":1420469,"option":"3","correct":false},{"id":1420470,"option":"4","correct":false}]},{"q":"<p>What is the output of the following JavaScript&nbsp;snippet:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var demo = 10; \nalert(demo + \", \" + demo2 );\nvar demo2 = 20; \n\nvar example = 53; \nvar example2; \nalert(example + \", \" + example2);\nexample2= 70; \n\nvar declare = 36; \ndeclare2 = 62;\nalert(declare + \", \" + declare2); \nvar declare2;\n\nvar half = 49; \nalert(half + \", \" + half2);\nvar half2; \nhalf2= 84;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>10, 20\nundefined, 53\n36, undefined\n49, 84</code></pre>\n\n<p>2.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>undefined, 20\n53, undefined\n36, 62 \n49, 84</code></pre>\n\n<p>3.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>10, undefined\n53, undefined\n36, 62\n49, undefined</code></pre>\n\n<p>4.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>10, 20\n53, 70\n36, undefined\nundefined, 84</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1420622,"option":"1","correct":false},{"id":1420623,"option":"2","correct":false},{"id":1420624,"option":"3","correct":true},{"id":1420625,"option":"4","correct":false}]},{"q":"<p>Which of the following Javascript code snippets will produce an error?</p>\n\n<p><br>\n1. </p>\n\n<pre class=\"prettyprint\"><code>console.log(typeof x);\nif (1==1) \n{\n    let x = \"abc\";\n}</code></pre>\n\n<p><br>\n<br>\n2.</p>\n\n<pre class=\"prettyprint\"><code>if (1==1) \n{\n    console.log(typeof x);\n    let x = \"abc\";\n}</code></pre>\n\n<p><br>\n<br>\n3. </p>\n\n<pre class=\"prettyprint\"><code>if (1==1) \n{\n    let x = \"abc\";\n    console.log(typeof x);\n}</code></pre>\n\n<p> </p>","a":[{"id":1420582,"option":"Only 1","correct":false},{"id":1420583,"option":"2 and 3","correct":false},{"id":1420584,"option":"Only 2","correct":true},{"id":1420585,"option":"1 and 3","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var demo = {};\nvar x = { id: 1},\ny = { id: 2};\ndemo[x] = \"alpha\";\ndemo[y] = \"beta\";\nconsole.log(demo[x]);\nconsole.log(demo[y]);</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong> </p>\n\n<ol>\n\t<li>alpha<br>\n\talpha                                                                                                                                                                                                   </li>\n\t<li>beta<br>\n\tbeta                                                                                                                                                                                                          </li>\n\t<li>alpha<br>\n\tbeta                                                                                                                                                                                                  </li>\n</ol>","a":[{"id":1420447,"option":"1","correct":false},{"id":1420448,"option":"2","correct":true},{"id":1420449,"option":"3","correct":false},{"id":1420450,"option":"None of these","correct":false}]},{"q":"<p>Which of the following statements is correct if the Javascript code given below produces an output as 11?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function hack_function(h)\n{\n    return function(h1) \n    {\n        return function(h2)\n        {\n            return h(h1 , h2);\n        };\n    };\n}\n\nfunction hack_opr(h1, h2)\n{\n    return h1 + h2;\n}\n\nlet hack_ans = hack_function(hack_opr);\nconsole.log(hack_ans(5)(6));</code></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>On calling the hack_ans(5), the argument gets saved in the Lexical Environment, and a new wrapper is returned function(h2)<br>\n\t<br>\n\t&nbsp;</li>\n\t<li>The result of the hack_func(h) is a wrapper function(h1)</li>\n</ol>","a":[{"id":1420452,"option":"1","correct":false},{"id":1420453,"option":"2","correct":false},{"id":1420454,"option":"Both 1 and 2","correct":true},{"id":1420455,"option":"None of these","correct":false}]},{"q":"<p>Which type of set operation is performed on the JavaScript code given below if the code produces the following output?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function SetOperations(set1, set2) \n{\n    let OperationOnSet= new Set(set1)\n    for (let i of set2) \n    {\n        OperationOnSet.delete(i)\n    }\n    return OperationOnSet\n}\n\nconst setA = new Set(['red', 'yellow', 'green']);\nconst setB = new Set(['blue', 'red', 'violet']);\n\nconst result = SetOperations(set1, set2);\n\nconsole.log(result);</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>Set {\"yellow\", \"green\"}</code></pre>","a":[{"id":1420402,"option":"Set Difference","correct":true},{"id":1420403,"option":"Set Intersection","correct":false},{"id":1420404,"option":"Set Union","correct":false},{"id":1420405,"option":"Set Subset","correct":false}]},{"q":"<p>What will be the output of the following Javascript code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>var hackerearth_details = {\n    hack_name: 'Alice Smith',\n    hack_get: function (){\n        return this.hack_name;\n    }\n};\nvar h = hackerearth_details.hack_get.bind(hackerearth_details);\nvar h1=hackerearth_details.hack_get;\nconsole.log(h());\nconsole.log(h1());\nconsole.log(hackerearth_details.hack_get());</code></pre>\n\n<p><strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Alice Smith\nundefined\nAlice Smith</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>undefined\nundefined\nAlice Smith</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Alice Smith\nAlice Smith\nAlice Smith</code></pre>\n\t</li>\n</ol>","a":[{"id":1420502,"option":"1","correct":true},{"id":1420503,"option":"2","correct":false},{"id":1420504,"option":"3","correct":false},{"id":1420505,"option":"None of these","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below:</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>console.log(Object.is(+0, -0));\nconsole.log(Object.is(NaN, NaN)); \nconsole.log(Object.is(1, 1));\nconsole.log(Object.is(1, \"1\"));</code></pre>\n\n<p><strong>Output:</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\ntrue\ntrue\nfalse                                                                            </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>true\nfalse\ntrue\nfalse                                                                                           </code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>false\nfalse\ntrue\ntrue</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>true\ntrue\ntrue\nfalse</code></pre>\n\t</li>\n</ol>","a":[{"id":1420422,"option":"1","correct":true},{"id":1420423,"option":"2","correct":false},{"id":1420424,"option":"3","correct":false},{"id":1420425,"option":"4","correct":false}]},{"q":"<p>Consider the Javascript code given below. Now if the code is executed then which of the given statements is correct about the \"this\" keyword used in the code snippet?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var add = {\n    x: 10,\n    sum: function() \n    {\n        return this.x;\n        \n    }\n    \n};\n\nconsole.log(add.sum());</code></pre>","a":[{"id":1420522,"option":"this is set to the object the method is called on","correct":true},{"id":1420523,"option":"this is set to the value of the enclosing execution context's this","correct":false},{"id":1420524,"option":"this is set to the new object being created","correct":false},{"id":1420525,"option":"None of these","correct":false}]},{"q":"<p>Consider the Javascript code snippet given below.</p>\n\n<p>The prototype of the object ex is abc and you want to change it to xyz.</p>\n\n<p>Which of the following syntaxes will you use so that the code produces the output as follows?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>let abc = {\n    getX() \n    {\n        return \"Yup\";\n    }\n    \n};\n\nlet xyz = {\n    getX() \n    {\n        return \"Nope\";\n    }\n};\nlet ex = Object.create(abc);</code></pre>\n\n<p><br>\n<strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>Nope\ntrue</code></pre>\n\n<p> </p>\n\n<p><strong>Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Object.setPrototypeOf(ex, xyz);\nconsole.log(ex.getX());\nconsole.log(Object.getPrototypeOf(ex) === xyz);                                                                                                                            </code></pre>\n\t   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Object.changePrototypeOf(ex, abc, xyz);\nconsole.log(ex.getX()); \nconsole.log(Object.getPrototypeOf(abc) === xyz);                                                                                                                          </code></pre>\n\t    </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Object.setPrototypeOf(ex, abc, xyz);\nconsole.log(xyz.getX()); console.log(Object.getPrototypeOf(abc) === xyz);                                                                                    </code></pre>\n\t   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Object.setPrototypeOf(ex, xyz);\nconsole.log(ex.getX()); console.log(Object.getPrototypeOf(ex) === abc);</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420487,"option":"1","correct":true},{"id":1420488,"option":"2","correct":false},{"id":1420489,"option":"3","correct":false},{"id":1420490,"option":"4","correct":false}]},{"q":"<p>Determine the output of the following Javascript code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var hack1 = 89;\n\nfunction hack_function()\n{\n    var hack2 = 56;\n    var hack3 = function()\n    {\n        console.log(hack2); \n        \n    }\n    \n    var hack4 = function()\n    {\n        console.log(hack1); \n        \n    }\n    \n    hack3();\n    hack4();\n}\n\n\nhack_function();\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>56<br>\n\t89<br>\n\t </li>\n\t<li>56<br>\n\tundefined<br>\n\t </li>\n\t<li>undefined<br>\n\t89<br>\n\t </li>\n\t<li>undefined<br>\n\tundefined</li>\n</ol>","a":[{"id":1420607,"option":"2","correct":false},{"id":1420608,"option":"3","correct":false},{"id":1420609,"option":"4","correct":false},{"id":1420610,"option":"1","correct":true}]},{"q":"<p>What will be the output of the following Javascript code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>let hack = 5;\nfunction hack_Opr1()\n{\n    var hack = 1;\n    \n    function hack_Opr2()\n    {\n        hack = hack + 10;\n        var hack = 51;\n        console.log(hack);\n    }\n    hack_Opr2();\n}\nhack_Opr1();</code></pre>\n\n<p> </p>","a":[{"id":1420547,"option":"61","correct":false},{"id":1420548,"option":"11","correct":false},{"id":1420549,"option":"51","correct":true},{"id":1420550,"option":"15","correct":false}]},{"q":"<p>Assume that Javascript is running in strict mode and the code snippet given below is executed in a web browser console.<br>\nWhat would be printed in the console?<br>\n<br>\n<em>Note</em>: Assume that the snippet is not present inside a function.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>this.abc = \"Something\";\nconsole.log(window.abc);</code></pre>\n\n<p> </p>","a":[{"id":1420557,"option":"Something","correct":true},{"id":1420558,"option":"undefined","correct":false},{"id":1420559,"option":"null","correct":false},{"id":1420560,"option":"0","correct":false}]},{"q":"<p>Which of the following syntaxes can be used in place of XXX in the JavaScript code snippet given below to produce the output as follows?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function* CharacterRange(a, b)\n{\n    for (let i = a; i &lt;= b; i += 1)\n    {\n        yield i;        \n    }    \n}\n\nfunction GenerateRange(a, b)\n{\n    if(typeof a === 'string')\n    {\n        let res = XXX\n        console.log(res);        \n    }\n    else \n    {\n        let res = [...CharacterRange(a, b)];\n        console.log(res);        \n    }    \n}\nGenerateRange(1, 5);\nGenerateRange('A', 'G');</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"prettyprint\"><code>[ 1, 2, 3, 4, 5 ]\n[\n  'A', 'B', 'C',\n  'D', 'E', 'F',\n  'G'\n]</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[...GenerateRange(b.charCodeAt(), a.charCodeAt())].map(n =&gt; String.fromCharCode(n));</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[...CharacterRange(b.charCodeAt(), a.charCodeAt())].map(n =&gt; String.fromCharCode(n));</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[...GenerateRange(a.charCodeAt(i), b.charCodeAt(i))].map(n =&gt; String.fromCharCode(n));</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>[...CharacterRange(a.charCodeAt(), b.charCodeAt())].map(n =&gt; String.fromCharCode(n));</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420412,"option":"1","correct":false},{"id":1420413,"option":"2","correct":false},{"id":1420414,"option":"3","correct":false},{"id":1420415,"option":"4","correct":true}]},{"q":"<p>Determine the output of the following Javascript code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>for(var hack=0; hack&lt; 6; hack++)\n{\n    setTimeout(() =&gt; console.log(hack), 0);\n}</code></pre>\n\n<p><br>\n<strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>0\n1\n2\n3\n4\n5</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>6\n6\n6\n6\n6\n6</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>5\n5\n5\n5\n5\n5\n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420632,"option":"1","correct":false},{"id":1420633,"option":"3","correct":false},{"id":1420634,"option":"2","correct":true},{"id":1420635,"option":"The code gives a compilation error","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below.<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function hackerearth_func()\n{\n    var hack1 = hack2 = 100 ;\n}\n\nhackerearth_func();\nconsole.log(typeof hack1 == 'undefined');\nconsole.log(typeof hack2 !== 'undefined');</code></pre>\n\n<p><br>\n<strong>Output</strong></p>\n\n<ol>\n\t<li>true<br>\n\ttrue<br>\n\t </li>\n\t<li>true<br>\n\tfalse<br>\n\t </li>\n\t<li>false<br>\n\tfalse</li>\n</ol>","a":[{"id":1420567,"option":"3","correct":false},{"id":1420568,"option":"1","correct":true},{"id":1420569,"option":"2","correct":false},{"id":1420570,"option":"The code gives a runtime error","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>class hackerearth extends Array \n{\n    static get [Symbol.species]() \n    { \n        return Array; \n        \n    }\n}\n\nlet hack = new Array(9, 8, 7);\nlet hack2 = hack.map(h =&gt; h * h);\n\nconsole.log(hack2 instanceof Array);\nconsole.log(hack2 instanceof hackerearth);</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>true<br>\n\ttrue<br>\n\t </li>\n\t<li>true<br>\n\tfalse<br>\n\t </li>\n\t<li>false<br>\n\ttrue<br>\n\t </li>\n\t<li>false<br>\n\tfalse</li>\n</ol>","a":[{"id":1420512,"option":"1","correct":false},{"id":1420513,"option":"2","correct":true},{"id":1420514,"option":"3","correct":false},{"id":1420515,"option":"4","correct":false}]},{"q":"<p>What output will lines 1, 2, and 3 produce when the Javascript code snippet given below is executed?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function seq()\n{\n    let i = 0;\n    return function()\n    {\n        return i++;        \n    };\n}\n\nlet seq1 = seq();\nlet seq2 = seq();\n\nalert( seq1() ); // 1\nalert( seq1() ); // 2 \nalert( seq2() ); // 3</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0 \n2. 0 \n3. 1</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0 \n2. 1 \n3. 0</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0 \n2. 1 \n3. 1</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. 0 \n2. 1 \n3. 2</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420507,"option":"1","correct":false},{"id":1420508,"option":"2","correct":true},{"id":1420509,"option":"3","correct":false},{"id":1420510,"option":"4","correct":false}]},{"q":"<p>What will happen if the Javascript code snippet given below is executed?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var add = {\n    sum: function() \n    { \n        return this.x + this.y + this.z; \n        \n    }\n    \n};\nvar par = Object.done(add);\npar.x = 3;\npar.y = 6; par.z = 9\n\nconsole.log(par.sum());</code></pre>\n\n<p> </p>\n\n<ol>\n\t<li> The code will give an error<br>\n\t </li>\n\t<li> The code prints 18<br>\n\t </li>\n\t<li> The code prints null<br>\n\t </li>\n\t<li> The code does not print anything</li>\n</ol>","a":[{"id":1420562,"option":"1","correct":true},{"id":1420563,"option":"2","correct":false},{"id":1420564,"option":"3","correct":false},{"id":1420565,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following Javascript code?<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var hack = new Object();\nhack[\"hackname1\"] = \"Alice\";\nhack[\"hackname2\"] = \"Smith\";\nhack[\"hacker\"] = 31;\n\nObject.hackerearth = function(h) \n{\n    var hackerearth = 0, h1;\n    for (h1 in h) \n    {\n        if (h.hasOwnProperty(h1)) \n        hackerearth++;\n        \n    }\n    return hackerearth;\n    \n};\nconsole.log(Object.hackerearth(hack));\n</code></pre>\n\n<p> </p>","a":[{"id":1420497,"option":"3","correct":true},{"id":1420498,"option":"0","correct":false},{"id":1420499,"option":"1","correct":false},{"id":1420500,"option":"The code gives a run-time error","correct":false}]},{"q":"<p>What will be the output of the following Javascript code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var hack={\n    \n    },\n      \n    h1={\n        key:'h1'\n        \n    },\n    h2={\n        key:'h2'\n        \n    },\n    h3={\n        key:'h3'\n        \n    };\n\n\nhack[h1]=66;\nhack[h2]=77;\nhack[h3]=88;\n\nconsole.log(hack[h1]);</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>88<br>\n\t </li>\n\t<li>66<br>\n\t </li>\n\t<li>77<br>\n\t </li>\n\t<li>undefined</li>\n</ol>","a":[{"id":1420457,"option":"2","correct":false},{"id":1420458,"option":"3","correct":false},{"id":1420459,"option":"1","correct":true},{"id":1420460,"option":"4","correct":false}]},{"q":"<p>Predict the correct values of lines A, B, and C in the Javascript code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function add(x = 11, y = 31)\n{\n    console.log(x+y);    \n}\n\nadd(5, null); //A\nadd(5); //B\nadd(5, undefined); //C</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong> </p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A. 36\nB. 36\nC. 5</code></pre>\n\t                                                                                                                                                                                                   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A. 5 \nB. 5\nC. 5</code></pre>\n\t                                                                                                                                                                                                   </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A. 36 \nB. 5\nC. 36 </code></pre>\n\t                                                                                                                                                                                                </li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>A. 5\nB. 36\nC. 36</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420432,"option":"1","correct":false},{"id":1420433,"option":"2","correct":false},{"id":1420434,"option":"3","correct":false},{"id":1420435,"option":"4","correct":true}]},{"q":"<p>Determine the output of the following Javascript code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var hack_Object = {\n    hack_property : 'Hackerearth',\n    hack_method: function(h1, h2) \n    {\n        console.log(h1 + this.hack_property + h2);       \n    }\n    \n};\n\nhack_Object.hack_method('&lt;', '&gt;');\n\nvar hack_Object2 = {\n    hack_property : 'Hack'\n};\n\nhack_Object.hack_method.call(hack_Object2 , '&lt;', '&gt;');\nhack_Object.hack_method.apply(hack_Object2 , ['&lt;', '&gt;']);</code></pre>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;Hackerearth&gt;\n&lt;Hack&gt;\n&lt;Hack&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;Hack&gt;\n&lt;Hackerearth&gt;\n&lt;Hackerearth&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;Hack&gt;\n&lt;Hackerearth&gt;\n&lt;Hack&gt;</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>&lt;Hackerearth&gt;\n&lt;Hack&gt;\n&lt;Hackerearth&gt;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420617,"option":"4","correct":false},{"id":1420618,"option":"2","correct":false},{"id":1420619,"option":"1","correct":true},{"id":1420620,"option":"3","correct":false}]},{"q":"<p>Consider the following Javascript code snippets given below. What will be the output in each case if you execute the given code for each of them?<br>\n<br>\n<strong>Code Snippets</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>let x = `What Next?`;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>let x = `\\`What\\` Next?`;</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>let x = `What\nNext?`;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p><br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>console.log(x.length);</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<p>1) </p>\n\n<pre class=\"prettyprint\"><code>Output 1: 10\nOutput 2: 12\nOutput 3: 10</code></pre>\n\n<p>    </p>\n\n<p>2)</p>\n\n<pre class=\"prettyprint\"><code>Output 1: 10\nOutput 2: 12\nOutput 3: 11</code></pre>\n\n<p> </p>\n\n<p>3)</p>\n\n<pre class=\"prettyprint\"><code>Output 1: 10\nOutput 2: 14\nOutput 3: 10</code></pre>\n\n<p>    </p>\n\n<p>4) </p>\n\n<pre class=\"prettyprint\"><code>Output 1: 10\nOutput 2: 12\nOutput 3: 4</code></pre>\n\n<p><br>\n    </p>","a":[{"id":1420597,"option":"1","correct":true},{"id":1420598,"option":"2","correct":false},{"id":1420599,"option":"3","correct":false},{"id":1420600,"option":"4","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var add = {\n    sum: function() \n    { \n        return this.x + this.y + this.z; \n        \n    }\n    \n};\nvar par = Object.done(add);\npar.x = 3;\npar.y = 6; par.z = 9\n\nconsole.log(par.sum());</code></pre>\n\n<p> </p>","a":[{"id":1420517,"option":"Error","correct":true},{"id":1420518,"option":"18","correct":false},{"id":1420519,"option":"null","correct":false},{"id":1420520,"option":"0","correct":false}]},{"q":"<p>Ben has written the following Javascript code to split an array into smaller chunks, then which of the following code snippets can he use alternatively to achieve the same?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function ArraySplit(arr, chunk)\n{\n    for (i=0; i &lt; arr.length; i += chunk)\n    {\n        let tempArr;\n        tempArr= arr.slice(i, i + chunk);\n        console.log(tempArr);        \n    }\n}\nconst FinalArray= [1, 2, 3, 4, 5, 6, 7, 8];\nconst chunk = 2;\nArraySplit(FinalArray, chunk);</code></pre>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>function ArraySplit(arr, chunk)\n{\n    while(arr.length &gt; 0) \n    {\n        let tempArr;\n        tempArr= arr.split(0, chunk);\n        console.log(tempArr);\n    }\n}\nconst FinalArray= [1, 2, 3, 4, 5, 6, 7, 8];\nconst chunk = 2;\nArraySplit(FinalArray, chunk);</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>function ArraySplit(arr, chunk)\n{\n    while(arr.length &gt; 0)\n    {\n        let tempArr;\n        tempArr= arr.splice(0, 0 + i);\n        console.log(tempArr);        \n    }    \n}\nconst FinalArray= [1, 2, 3, 4, 5, 6, 7, 8];\nconst chunk = 2;\nArraySplit(FinalArray, chunk);</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>function ArraySplit(arr, chunk) \n{\n    while(arr.length &gt; 0)\n    {\n        let tempArr;\n        tempArr= arr.split(0, chunk + i);\n        console.log(tempArr);        \n    }\n}\nconst FinalArray= [1, 2, 3, 4, 5, 6, 7, 8];\nconst chunk = 2;\nArraySplit(FinalArray, chunk);</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>function ArraySplit(arr, chunk)\n{\n    while(arr.length &gt; 0)\n    {\n        let tempArr;\n        tempArr= arr.splice(0, chunk);\n        console.log(tempArr);\n    }\n}\nconst FinalArray= [1, 2, 3, 4, 5, 6, 7, 8];\nconst chunk = 2;\nArraySplit(FinalArray, chunk);</code></pre>\n\t</li>\n</ol>","a":[{"id":1420397,"option":"1","correct":false},{"id":1420398,"option":"2","correct":false},{"id":1420399,"option":"3","correct":false},{"id":1420400,"option":"4","correct":true}]},{"q":"<p>Which of the following regex patterns syntaxes can be used in place of XXX to successfully validate an email address using the  Javascript given code snippet?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function EmailValidation(email_id) \n{\n    const regex_pattern = XXX\n \n    if (regex_pattern.test(email_id)) \n    {\n        console.log('The email address is valid');\n        \n    }\n    else \n    {\n        console.log('The email address is not valid');\n        \n    }\n}\n\nEmailValidation('javascript@gmail.com');\nEmailValidation('helloworld123@com');</code></pre>\n\n<p> </p>\n\n<p><strong>Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>/^(([^&lt;&gt;()[\\]\\\\.,;:\\s@\\\"]+(\\.[^&lt;&gt;()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}));</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>/^(([^&lt;&gt;()[\\]\\\\.,;:\\s@\\\"]+(\\.[^&lt;&gt;()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,4}))$/;</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>/^(([^&lt;&gt;()[\\]\\\\.,;:\\s@\\\"]+(\\.[^&lt;&gt;()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420392,"option":"1","correct":false},{"id":1420393,"option":"2","correct":false},{"id":1420394,"option":"3","correct":true},{"id":1420395,"option":"None of these","correct":false}]},{"q":"<p>You have created an HTML button as shown in the code given below. Which of the following statements is correct if the given code is executed?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n   &lt;body&gt;\n      &lt;button id=\"hackBtn\"&gt;Click this button&lt;/button&gt;\n      &lt;script&gt;\n         function hackFunction1() {\n          alert(\"hi\");\n         }\n          \n         function hackFunction2() {\n          alert(\"hello\");\n         }\n          \n         var btn = document.getElementById(\"hackBtn\");\n          \n         btn.addEventListener(\"click\", hackFunction1);\n         btn.addEventListener(\"click\", hackFunction2);\n      &lt;/script&gt;\n   &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The first alert box displays \"hi\" and the second alert box displays \"hello\".</li>\n\t<li>The first alert box displays \"hello\" and the second alert box displays \"hi\".</li>\n\t<li>The first alert box displays \"hello\" and \"hi\" in 2 lines.</li>\n\t<li>The first alert box displays \"hi\" and \"hello\" in 2 lines.</li>\n</ol>","a":[{"id":1420627,"option":"1","correct":true},{"id":1420628,"option":"2","correct":false},{"id":1420629,"option":"3","correct":false},{"id":1420630,"option":"4","correct":false}]},{"q":"<p>In Javascript, you are creating a generator function as shown in the code snippet given below. At which of the encoded places given in the code snippet can you use the <strong>yield</strong> keyword such that an error is not produced?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function *createIterator(a)\n{\n    XXXX\n    a.forEach(function(a) {\n        YYYY\n    }\nZZZZ);\n}</code></pre>\n\n<p> </p>\n\n<ol>\n\t<li>XXXX<br>\n\t </li>\n\t<li>YYYY<br>\n\t </li>\n\t<li>ZZZZ</li>\n</ol>","a":[{"id":1420482,"option":"only 1","correct":true},{"id":1420483,"option":"1 and 2","correct":false},{"id":1420484,"option":"only 3","correct":false},{"id":1420485,"option":"2 and 3","correct":false}]},{"q":"<p>What output will be produced when the function in the Javascript code snippet given below is called as follows:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function demo(x,y)\n{\n    x = x || 11;\n    y = y || 31;\n    console.log(x+y);\n}\n</code></pre>\n\n<p> </p>\n\n<p><strong>Function Call</strong></p>\n\n<pre class=\"prettyprint\"><code>demo( null, 6 );</code></pre>\n\n<p> </p>","a":[{"id":1420442,"option":"6","correct":false},{"id":1420443,"option":"11","correct":false},{"id":1420444,"option":"17","correct":true},{"id":1420445,"option":"Error will be returned","correct":false}]},{"q":"<p>What will be displayed at the console window when the Javascript code snippet given below is executed?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function Person(name, age) \n{\n    this.name = name;\n    this.age = age;\n    this.describe = function() \n    {\n        console.log(\"I'm \" + name + \", my age is \" + this.age);\n        \n    }    \n}\n\nvar p1 = new Person(\"Bob\", 35);\nvar p2 = new Person(\"Mary\", \"unknown, a lady never reveals her age\");\np1.name = \"Alice\";\np1.age = 25;\np2.describe();</code></pre>\n\n<p> </p>","a":[{"id":1420532,"option":"I'm Mary, my age is unknown, a lady never reveals her age\r\n","correct":true},{"id":1420533,"option":"I'm Bob, my age is 25","correct":false},{"id":1420534,"option":"I'm Alice, my age is 35","correct":false},{"id":1420535,"option":"The code gives an error","correct":false}]},{"q":"<p>What will be the output of the following Javascript code?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var hack = {\n    hacker:  \"Bob\",\n    hack_Opr: function()\n    {\n        console.log(this.hacker);\n        \n    }\n        \n}\n        \nvar hack_Opr = hack.hack_Opr;\n        \nvar h2 = {\n    hacker:\"Alice\", \n    hack_Opr\n    \n};\n\nh2.hack_Opr();\n</code></pre>\n\n<p> </p>","a":[{"id":1420537,"option":"The code gives a runtime error","correct":false},{"id":1420538,"option":"Bob","correct":false},{"id":1420539,"option":"Alice","correct":true},{"id":1420540,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the Javascript code snippet given below?<br>\n<br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function Dog(name) \n{\n    this.name = name;\n}\nDog.prototype.bark = function () \n{\n    console.log(this.name + \" likes barking! Bark!\");\n}\nvar max = new Dog(\"Max\", \"Buddy\");\nmax.bark();</code></pre>\n\n<p> </p>","a":[{"id":1420542,"option":"likes barking! Bark!","correct":false},{"id":1420543,"option":"Buddy likes barking! Bark!","correct":false},{"id":1420544,"option":"Max likes barking! Bark!","correct":true},{"id":1420545,"option":"The code will produce an error","correct":false}]},{"q":"<p>Determine the output of the following Javascript code.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>\"use strict\";\nfunction hackerearth_func()\n{\n    var hack1 = hack2 = 100 ;\n}\n\nhackerearth_func();\nconsole.log(typeof hack1 == 'undefined');\nconsole.log(typeof hack2 !== 'undefined');</code></pre>\n\n<p><br>\n<strong>Output</strong></p>\n\n<ol>\n\t<li>true<br>\n\ttrue<br>\n\t </li>\n\t<li>true<br>\n\tfalse<br>\n\t </li>\n\t<li>false<br>\n\tfalse</li>\n</ol>","a":[{"id":1420577,"option":"1","correct":false},{"id":1420578,"option":"2","correct":false},{"id":1420579,"option":"3","correct":false},{"id":1420580,"option":"The code gives an error","correct":true}]},{"q":"<p>Determine the output of the Javascript code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>function abc(object)\n{\n    return typeof object[Symbol.iterator] === \"function\";\n    \n}\nconsole.log(abc(new Map())); \nconsole.log(abc(new WeakSet()));</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>True<br>\n\tTrue                                                                                                                                                                                                   </li>\n\t<li>True<br>\n\tFalse                                                                                                                                                                                                 </li>\n\t<li>False<br>\n\tTrue                                                                                                                                                                                                   </li>\n\t<li>False<br>\n\tFalse</li>\n</ol>","a":[{"id":1420477,"option":"1","correct":false},{"id":1420478,"option":"2","correct":true},{"id":1420479,"option":"3","correct":false},{"id":1420480,"option":"4","correct":false}]},{"q":"<p>Which of the following syntaxes&nbsp;can be used in place of XXX and YYY in the given Javascript code snippet to produce output as 30?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>XXX\n\nfunction sum( YYY ) \n{\n    return a + b;\n} \nconsole.log(sum(10));</code></pre>\n\n<p><strong>Syntaxes</strong></p>\n\n<p>1.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>XXX -&gt; \n\nfunction val(x)\n{      \n    return x + 10;\n}\n\n\nYYY -&gt; \na, b = val(a)</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code> XXX -&gt; \n\nfunction val()\n{\n  return x++;\n}\n    \n\nYYY -&gt; \na, b = val()</code></pre>\n\n<p>3.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>XXX -&gt;\n\nfunction val(x)\n{\n    return x++;\n}\n\n\nYYY -&gt; \na, b = val(a)</code></pre>\n\n<p>4.&nbsp;</p>\n\n<pre class=\"prettyprint\"><code>XXX -&gt; \n\nfunction val(x)\n{\n    return x + 10;\n}\n\n\nYYY -&gt; \na, b = a</code></pre>","a":[{"id":1420592,"option":"1","correct":true},{"id":1420593,"option":"2","correct":false},{"id":1420594,"option":"3","correct":false},{"id":1420595,"option":"4","correct":false}]},{"q":"<p>Determine the output of the Javascript code snippet given below:</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var a = /xy/i,\nb = new RegExp(a, \"g\");\nconsole.log(a.test(\"xy\")); \nconsole.log(b.test(\"xy\")); \nconsole.log(a.test(\"XY\"));\nconsole.log(b.test(\"XY\"));</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>true\ntrue\ntrue\ntrue</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>true\ntrue\ntrue\nfalse</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>true\ntrue\nfalse\nfalse</code></pre>\n\n<p>4. </p>\n\n<pre class=\"prettyprint\"><code>false\nfalse\nfalse\nfalse</code></pre>\n\n<p> </p>","a":[{"id":1420587,"option":"1","correct":false},{"id":1420588,"option":"2","correct":true},{"id":1420589,"option":"3","correct":false},{"id":1420590,"option":"4","correct":false}]},{"q":"<p>Determine the output of the following Javascript code snippet.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var hack = 5;\nvar hacker1 = [];\nfor (var h = 0; h &lt; hack; h++);\n{\n    hacker1.push(h + 1);\n}\n\nconsole.log(hacker1);</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre>[ 6 ]\n\n</pre>\n\t</li>\n\t<li>\n\t<pre>[ 1, 2, 3, 4, 5 ]\n\n</pre>\n\t</li>\n\t<li>\n\t<pre>[ 5 ]</pre>\n\t</li>\n</ol>","a":[{"id":1420612,"option":"3","correct":false},{"id":1420613,"option":"1","correct":true},{"id":1420614,"option":"2","correct":false},{"id":1420615,"option":"The code gives a compilation error","correct":false}]},{"q":"<p>Consider the Javascript code snippet given below. Which of the following syntaxes can you substitute for XXXX to produce output <strong>7</strong>.</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>let a = [3, 5, 8],\n b = [9, 10, 45],\nXXXX\nconsole.log(c.length);</code></pre>\n\n<p> </p>\n\n<p><strong>Syntaxes</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>c = [0, ...a, ...b];</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>c = [0, a, b];</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>c = [a, b, a[0]];</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>c = [...a, ...b, b[2]];</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420472,"option":"1 and 4","correct":true},{"id":1420473,"option":"2, 3 and 4","correct":false},{"id":1420474,"option":"2 and 3","correct":false},{"id":1420475,"option":"1, 2 and 3","correct":false}]},{"q":"<p>Determine the output of the JavaScript code snippet given below.</p>\n\n<pre class=\"prettyprint\"><code>function Welcome(abc, xyz)\n{\n    console.log(abc);\n    console.log(xyz);\n}\nsetTimeout(Welcome, 3000, 'Goodmorning', 'everyone');\nconsole.log('You are the first person to see this');</code></pre>\n\n<p> </p>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>You are the first person to see this</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Goodmorning\neveryone\nYou are the first person to see this</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>Goodmorning\neveryone</code></pre>\n\n\t<p> </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>You are the first person to see this\nGoodmorning\neveryone</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1420407,"option":"1","correct":false},{"id":1420408,"option":"2","correct":false},{"id":1420409,"option":"3","correct":false},{"id":1420410,"option":"4","correct":true}]}]