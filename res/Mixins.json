[{"q":"<p>Lisa is using VueJS Mixins. She is using app.config.optionMergeStrategies,&nbsp;then the merge strategy receives the value of that option defined. Then what will be their first and second arguments?</p>","a":[{"id":1729269,"option":"Child and Parent Instances","correct":false},{"id":1729270,"option":"Parent and Child Instances","correct":true},{"id":1729271,"option":"Child instance and callback function","correct":false},{"id":1729272,"option":"Parent instance and callback function","correct":false}]},{"q":"<p>John is working on Mixins in VueJS. He wrote the following snippet where a mixin and the component itself contain overlapping options. There he used&nbsp;object merging concept. Then what will be the outcome of this mixin?</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>var DataMixin = {\n  data: function () {\n    return {\n      message: 'Received',\n      foo: 'John'\n    }\n  }\n}\n\nnew Vue({\n  mixins: [DataMixin],\n  data: function () {\n    return {\n      message: 'Task Completed',\n      bar: 'def'\n    }\n  },\n  created: function () {\n    console.log(this.$data)\n  }\n})</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1729265,"option":"{ message: \"Task Completed\", foo: \"John\", bar: \"def\" }","correct":true},{"id":1729266,"option":"{ message: \"Received\", foo: \"John\", bar: \"def\" }","correct":false},{"id":1729267,"option":"{ message: \"Task Completed\", foo: \"John\", bar: \"indef\" }","correct":false},{"id":1729268,"option":"No Output","correct":false}]},{"q":"<p>John is working on Mixins in VueJS. Currently, he faced a situation where both mixins and components are overlapping. Then what will happen?</p>","a":[{"id":1727856,"option":"merging","correct":true},{"id":1727857,"option":"error","correct":false},{"id":1727858,"option":"priority to last","correct":false},{"id":1727859,"option":"priority to first","correct":false}]}]