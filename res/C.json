[{"q":"<p>How many bytes of memory does the below C programme allocate for pointer \"A\"  and \"B\" respectively?</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()\n   {\n       int *B;\n       int *A;\n       A = (int*)malloc(sizeof(int)*4);\n       A = realloc(A,sizeof(int)*4);\n       B = (int*)malloc(sizeof(int)*4);\n       B = realloc(B,sizeof(int)*2);\n       return 0;\n   }</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1591084,"option":"4, 4","correct":false},{"id":1591085,"option":"8, 6","correct":false},{"id":1591086,"option":"16, 8","correct":true},{"id":1591087,"option":"4, 2","correct":false}]},{"q":"<p>What will be the output of the following C code?</p>\n\n<p><strong>C code</strong></p>\n\n<pre class=\"prettyprint\"><code> #include&lt;stdio.h&gt;\n   #include&lt;stdlib.h&gt;\n \n   int main()\n   {\n       int *pointer;\n       int var;\n       pointer = (int *)malloc(sizeof(int)*10);\n       free(pointer);\n       return 0;\n   }</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1591076,"option":"Segmentation fault","correct":false},{"id":1591077,"option":"Compilation error","correct":false},{"id":1591078,"option":"No Output and no error","correct":true},{"id":1591079,"option":"None of the above","correct":false}]},{"q":"<p>What will be the output of the following C code?</p>\n\n<p><strong>C code</strong></p>\n\n<pre class=\"prettyprint\"><code># include&lt;stdio.h&gt;\n# include&lt;stdlib.h&gt;\n  \nvoid solve(int *a)\n{\n    a = (int*)malloc(sizeof(int));\n}\n  \nint main()\n{\n    int *a;\n    solve(a);\n    *a = 12;\n    printf(\"%dn\",*a);\n    return(0);\n}</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1594000,"option":"Segmentation fault","correct":true},{"id":1594001,"option":"Compilation error","correct":false},{"id":1594002,"option":"12","correct":false},{"id":1594003,"option":"None of the above","correct":false}]},{"q":"<p>What will be the output of the following C code?</p>\n\n<p><strong>C code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n   #include&lt;stdlib.h&gt;\n \n   int main()\n   {\n       int *Apointer, *Bpointer;\n       Bpointer = malloc(8);\n       *Bpointer = 6;\n       *Apointer = free(Bpointer);\n       printf(\"%d\\n\",*Apointer);\n       return 0;\n   }</code></pre>\n\n<p> </p>\n\n<p> </p>","a":[{"id":1591072,"option":"It will print the address stored in Apointer.","correct":false},{"id":1591073,"option":"8","correct":false},{"id":1591074,"option":"6","correct":false},{"id":1591075,"option":"Error","correct":true}]},{"q":"<p>Consider you are working on <strong>Endianness</strong>. You wanted to check the endianness of a machine. So you implemented a <strong>C</strong> code to check the endianness of the machine.</p>\n\n<p><strong>C code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n#include &lt;inttypes.h&gt;\ntypedef union\n{\n    uint32_t Raw_Data;\n    uint8_t  Data_Buff[4];\n} RawData;\nint main(void)\n{\n    RawData Check;\n    Check.Raw_Data = 1;\n    if (Check.Data_Buff[0] == X)       // Line 12\n    {\n        printf(\"little-endian\");\n    }\n    else if (Check.Data_Buff[0] == Y)  // Line 16\n    {\n        printf(\"big-endian\");\n    }\n    return 0;\n}</code></pre>\n\n<p> </p>\n\n<p>In the above <strong>C</strong> code, what should be <strong>X</strong> and <strong>Y</strong> values in <strong>Line 12 </strong>and<strong> Line 16 </strong>so that the code gives the output as \"<strong>little-endian\"</strong>. Which of the following options represent the correct values of <strong>X</strong> and <strong>Y</strong>?</p>\n\n<p> </p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1. </strong></p>\n\n<pre class=\"prettyprint\"><code>X = 0, Y = 0</code></pre>\n\n<p> </p>\n\n<p><strong>2. </strong></p>\n\n<pre class=\"prettyprint\"><code>X = 0, Y = 1</code></pre>\n\n<p> </p>\n\n<p><strong>3. </strong></p>\n\n<pre class=\"prettyprint\"><code>X = 1, Y = 0</code></pre>\n\n<p> </p>\n\n<p><strong>4. </strong></p>\n\n<pre class=\"prettyprint\"><code>This code will give the Syntax Error</code></pre>\n\n<p> </p>","a":[{"id":1563866,"option":"1","correct":false},{"id":1563867,"option":"2","correct":false},{"id":1563868,"option":"3","correct":true},{"id":1563869,"option":"4","correct":false}]},{"q":"<p>What will be the output of the following C code snippet if -</p>\n\n<ol>\n\t<li>n=5, i=2, j=3, x=6  </li>\n\t<li>n=7, i=3, j=2, x=4   </li>\n\t<li>n=13, i=2, j=3, x=8 </li>\n\t<li>n=9, i=3, j=2, x=8  </li>\n</ol>\n\n<p><br>\n<strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\n\nint l_shift(int a, int b)\n{\n  return a&lt;&lt;b;\n}\n\nint and_opr(int a, int b)\n{\n  return a &amp; b;\n}\n\nint nega_opr(int a)\n{\n  return ~a;\n}\n\nvoid main() \n{\n    unsigned n;\n    \n    int i, j;\n    \n    unsigned x;\n    \n    unsigned t = l_shift(1U,j) - 1U;\n    \n    unsigned temp= and_opr((and_opr(n, l_shift(t,i))), nega_opr(l_shift(x,i)));\n\n    printf(\"%d\", nega_opr(temp));\n\n}\n\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output -</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. -5   2. -1   3. -13   4. -9</code></pre>\n\n\t<p><br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. -5   2. -11   3. -11   4. -8</code></pre>\n\n\t<p><br>\n\t<br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. -3   2. -6   3. -10   4. -7</code></pre>\n\n\t<p><br>\n\t<br>\n\t </p>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>1. -2   2. -7   3. -15   4. -10</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>\n\n<p> </p>","a":[{"id":1487660,"option":"1","correct":true},{"id":1487661,"option":"2","correct":false},{"id":1487662,"option":"3","correct":false},{"id":1487663,"option":"4","correct":false}]},{"q":"<p>In C, you are working on Multithreading in the Ubuntu environment. You have created three threads and you use a mutex to control access to the shared resource by the threads as shown in the code given below. The code is saved in a file named <strong>thread.c</strong>. Now if the given code is executed using the Linux command given below then which of the following statements is correct?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n#include&lt;pthread.h&gt;\n\n\nint hack;\npthread_mutex_t hack_lock;\npthread_t hack_id[3];\n\nvoid* hack_method(void *arg)\n{\n    pthread_mutex_lock(&amp;hack_lock);\n\n    hack = hack + 1;\n    \n    printf(\"hello %d \\n\", hack);\n    \n    printf(\"hackerearth %d \\n\", hack);\n\n    pthread_mutex_unlock(&amp;hack_lock);\n\n    return NULL;\n}\n\nint main()\n{\n    int h = 0;\n    int hack_error;\n\n    if (pthread_mutex_init(&amp;hack_lock, NULL) != 0)\n    {\n        return 1;\n    }\n\n    while(h &lt; 3)\n    {\n        hack_error = pthread_create(&amp;(hack_id[h]), NULL, &amp;hack_method, NULL);\n        if (hack_error != 0)\n            printf(\"hack_error occurred\");\n      \n        h++;\n    }\n\n    pthread_join(hack_id[0], NULL);\n    pthread_join(hack_id[1], NULL);\n    pthread_join(hack_id[2], NULL);\n    pthread_mutex_destroy(&amp;hack_lock);\n    \n    \n    return 0;\n\n}</code></pre>\n\n<p><br>\n<br>\n<strong>Command:</strong></p>\n\n<pre class=\"prettyprint\"><code>hackerearth@ubuntu:~/$ gcc thread.c -lpthread\n</code></pre>\n\n<p><br>\n<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li> The code performs thread synchronization with the use of mutex.<br>\n\t </li>\n\t<li> The mutex is destroyed after all the three threads have completed their tasks.<br>\n\t </li>\n\t<li> The code gives the following output-\n\t<pre class=\"prettyprint\"><code>hello 1 \nhackerearth 1 \nhello 2 \nhackerearth 2 \nhello 3 \nhackerearth 3 \n</code></pre>\n\t<br>\n\t </li>\n\t<li> The code gives the following output-\n\t<pre class=\"prettyprint\"><code>hello 1 \nhello 2  \nhello 3 \nhackerearth 3\nhackerearth 3\nhackerearth 3 \n</code></pre>\n\n\t<p> </p>\n\t</li>\n</ol>","a":[{"id":1564198,"option":"1, 2 and 4","correct":false},{"id":1564199,"option":"1 and 2","correct":false},{"id":1564200,"option":"1, 2 and 3","correct":true},{"id":1564201,"option":"only 2","correct":false}]},{"q":"<p>What will be the output of the following C code if -</p>\n\n<ol>\n\t<li>n=5, i=2, j=3, x=6   </li>\n\t<li>n=7, i=3, j=2, x=4   </li>\n\t<li>n=13, i=2, j=3, x=10 </li>\n\t<li>n=9, i=3, j=2, x=11 </li>\n</ol>\n\n<p> </p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main() \n{\n    unsigned n;\n    int i, j;\n    unsigned x;\n    \n    unsigned t = (1U &lt;&lt; j) - 1U;\n    unsigned ans= (n &amp; (t &lt;&lt; i)) | (x &lt;&lt; i);\n\n    printf(\"%d\", ans);\n\n}\n\n</code></pre>\n\n<p> </p>\n\n<p><strong>Output</strong></p>\n\n<p>1. </p>\n\n<pre class=\"prettyprint\"><code>1. 32   2. 44   3. 88   4. 28</code></pre>\n\n<ol>\n</ol>\n\n<p> </p>\n\n<p>2.  </p>\n\n<pre class=\"prettyprint\"><code>1. 28   2. 32   3. 44   4. 88</code></pre>\n\n<p> </p>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>1. 88   2. 44   3. 28  4. 32</code></pre>\n\n<p> </p>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>1. 28   2. 88   3. 32  4. 44</code></pre>\n\n<p> </p>","a":[{"id":1487388,"option":"1","correct":false},{"id":1487389,"option":"2","correct":true},{"id":1487390,"option":"3","correct":false},{"id":1487391,"option":"4","correct":false}]},{"q":"<p>How many times will the string \"Print this line\" appear when the following C code is executed:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n#include&lt;unistd.h&gt; \n\nint main(){\n\n   fork(); \n   fork(); \n   printf(\"Print this line\\n\");\n\nreturn 0; \n}</code></pre>\n\n<p> </p>","a":[{"id":721661,"option":"1","correct":false},{"id":721662,"option":"2","correct":false},{"id":721663,"option":"3","correct":false},{"id":721664,"option":"4","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;iostream&gt;\n#include&lt;string.h&gt;\nusing namespace std;\nint main()\n{\n   printf(\"%d\", sizeof(strlen(\"HackerEarth\")));\n}\n</code></pre>","a":[{"id":123300,"option":"Compilation error","correct":false},{"id":123301,"option":"8","correct":true},{"id":123302,"option":"4","correct":false},{"id":123303,"option":"None of these","correct":false}]},{"q":"<p>What is the erroneous statement in the following C code which is used to copy the values of array \"<em>arr1</em>\" to \"<em>arr2</em>\":</p>\n\n<pre class=\"prettyprint\"><code>int main(){\n    int arr1[]={11,22,33,44,55}, arr2[5], *p, i=1;\n    p=arr2;\n    for(i=0;i&lt;5;i++){ \n        *p = (*arr1)++; \n         p++; \n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":721534,"option":"(*arr1)++; \r\nis an erroneous expression as \"arr1\" is a constant pointer.","correct":false},{"id":721535,"option":"(*arr1)++; \r\nis an erroneous expression as it cannot refer to the values of \"arr1\".","correct":false},{"id":721536,"option":"The program does not contain any error but it will not perform the copy operation as per requirement.","correct":true},{"id":721537,"option":"The program does not contain error and it will perform the copy operation as per requirement.","correct":false}]},{"q":"<p>What will the output of the following C code be, when the following input is given:</p>\n\n<p>7<br>\nabcabca</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nchar str[101];\nint temp,i,j,n,flag;\nint main()\n{\n    scanf(\"%i %s\", &amp;n, str);\n    for(i=1;i&lt;n/2+1;i++)\n        if(str[0]==str[i]){\n            for(j=0,flag=1;j&lt;i;j++)\n                if(str[j]!=str[j+i])\n                    flag=0;\n            if(flag)\n                temp=i;\n            }\n    printf(\"%i\", (strlen(str)-2*temp)+(temp?++temp:temp));\n}</code></pre>\n\n<p> </p>","a":[{"id":721546,"option":"7","correct":false},{"id":721547,"option":"8","correct":false},{"id":721548,"option":"5","correct":true},{"id":721549,"option":"10","correct":false}]},{"q":"<p>If the input given is 6, then what is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n#include&lt;math.h&gt;\n\nint main(){\n        int n;\n        scanf(\"%d\", &amp;n);\n        \n        int ans = floor(log2(n)) + 1;\n\n        printf(\"%d\\n\", ans);\n}</code></pre>\n\n<p> </p>","a":[{"id":721562,"option":"3","correct":true},{"id":721563,"option":"4","correct":false},{"id":721564,"option":"0","correct":false},{"id":721565,"option":"6","correct":false}]},{"q":"<p>Which of these inputs is provided to the following C code, if it is given that the output is 15:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main(){\n        \n        long long n,m,a,b;\n        scanf(\"%lld %lld %lld %lld\",&amp;n,&amp;m,&amp;a,&amp;b);\n        printf(\"%lld\\n\",((n%m)*b&lt;((m-(n%m))%m)*a)?(n%m)*b:((m-(n%m))%m)*a);\n        \n        return 0;\n}</code></pre>\n\n<p> </p>","a":[{"id":721558,"option":"9 7 3 8","correct":true},{"id":721559,"option":"2 7 3 7","correct":false},{"id":721560,"option":"30 6 17 19","correct":false},{"id":721561,"option":"7 2 3 7","correct":false}]},{"q":"<p>If the function prototype is declared twice, then what is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>int func(int a);\nint func(int a);</code></pre>\n\n<p> </p>","a":[{"id":721514,"option":"Compilation error: Same function name encountered twice","correct":false},{"id":721515,"option":"Run-time error","correct":false},{"id":721516,"option":"Compilation error: Same function signature encountered twice","correct":false},{"id":721517,"option":"The given code will not lead to any error.","correct":true}]},{"q":"<p>You are given a 2D int array A of size <em>4 X 5</em>. Which of the following values is equivalent to <em>*(a + 9) </em>considering the following C code:</p>\n\n<pre class=\"prettyprint\"><code>int * a = A[0];</code></pre>\n\n<p> </p>","a":[{"id":721510,"option":"null","correct":false},{"id":721511,"option":"A[1][4]","correct":false},{"id":721512,"option":"A[0][8]","correct":true},{"id":721513,"option":"A[2][3]","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code># include &lt;stdio.h&gt;\n\nint main() {\n        char x[5] = \"hello\";\n        printf(\"%d\", *(x + 4));\n        return 0;\n}</code></pre>\n\n<p> </p>","a":[{"id":721506,"option":"111","correct":false},{"id":721507,"option":"0","correct":false},{"id":721508,"option":"Garbage value","correct":false},{"id":721509,"option":"Run-time error","correct":true}]},{"q":"<p>If a 2-D array <em>arr</em> is defined as a parameter to a function prototype, then which of the following ways is used to represent it in the function prototype declaration?</p>","a":[{"id":721502,"option":"int arr[][]","correct":false},{"id":721503,"option":"int arr","correct":false},{"id":721504,"option":"int arr[MAX_ROWS][]","correct":false},{"id":721505,"option":"int arr[][MAX_COLUMNS]","correct":true}]},{"q":"<p>You are given the following code for creating a node in LinkedList. Assume that the Node structure is having val of int type and next pointer of Node type.<br>\nWhich of these statements for the following C code is true:</p>\n\n<pre class=\"prettyprint\"><code>node* createNode(int value) {\n\n     node* linkNode;\n     linkNode-&gt;val = value;\n     linkNode-&gt;next = NULL;\n        \n     return linkNode;\n}</code></pre>\n\n<p> </p>","a":[{"id":721498,"option":"No issues with the code","correct":false},{"id":721499,"option":"Node will be created but with garbage values.","correct":false},{"id":721500,"option":"Node will be created but assignment of values to val and next pointer will result in error.","correct":false},{"id":721501,"option":"Node won't be created as memory is not allocated to it.","correct":true}]},{"q":"<p>Assume that no other file descriptors are opened while execution. If the first printf statement prints the value 3, then which of these values will be printed by the second printf statement in the following C code:</p>\n\n<pre class=\"prettyprint\"><code>int main() {\n  int df1= dup(STDOUT_FILENO);\n  int df2= dup(STDOUT_FILENO);\n        printf(\"%d \", df1);\n        printf(\"%d \", df2);\n\n        return 0;\n}</code></pre>\n\n<p> </p>","a":[{"id":721486,"option":"Any positive value","correct":false},{"id":721487,"option":"Error: Redundant command","correct":false},{"id":721488,"option":"1","correct":false},{"id":721489,"option":"4","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nmain( )\n{\nconst int x = get() ;\nprintf (\"%d\", x);\n}\nget()   \n{\nreturn (20);\n}</code></pre>\n\n<p> </p>","a":[{"id":721482,"option":"20","correct":true},{"id":721483,"option":"0","correct":false},{"id":721484,"option":"Garbage value","correct":false},{"id":721485,"option":"Error","correct":false}]},{"q":"<p>What is the error in the following C code:</p>\n\n<pre class=\"prettyprint\"><code>f ( int val1, int val2) \n{\nint val1; \nval1=22;\nreturn val1;\n}</code></pre>\n\n<p> </p>","a":[{"id":721474,"option":"Missing parentheses in return statement","correct":false},{"id":721475,"option":"Function to be defined as int f( int val1, int val2)","correct":false},{"id":721476,"option":"Re-declaration of val1","correct":true},{"id":721477,"option":"None of these","correct":false}]},{"q":"<p>In which of these sequences will the functions be called in the following C code:</p>\n\n<pre class=\"prettyprint\"><code>demo = function1 (23,14) * function2(12/4) + function3();</code></pre>\n\n<p> </p>","a":[{"id":721466,"option":"function1,function2,function3","correct":false},{"id":721467,"option":"function3,function2,function1","correct":false},{"id":721468,"option":"It varies from compiler to compiler.","correct":true},{"id":721469,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code if the array is partially initialized:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main( )\n{\nint a[5] = { 2,3};\nprintf (\"\\n%d %d %d\", a[2], a[3], a[4]);\n}</code></pre>\n\n<p> </p>","a":[{"id":721458,"option":"Garbage value","correct":false},{"id":721459,"option":"( 2, 3,3)","correct":false},{"id":721460,"option":"(3, 2 , 2)","correct":false},{"id":721461,"option":"(0,0,0)","correct":true}]},{"q":"<p>How will you define the macro in order to print 2344 on console upon execution in the following C code:</p>\n\n<pre class=\"prettyprint\"><code>int main() \n{ \n    printf(\"%d \", test(23, 44)); \n} </code></pre>\n\n<p> </p>","a":[{"id":721454,"option":"#define test(val1, val2) val1+val2","correct":false},{"id":721455,"option":"#define test(val1, val2) #val1val2","correct":false},{"id":721456,"option":"#define test(val1, val2) val1##val2","correct":true},{"id":721457,"option":"#define test(val1, val2) val1&&val2","correct":false}]},{"q":"<p>What is the value of variable <em>var1</em> after execution if variable <em>var1</em> is allocated memory next to variable <em>var2</em> in the following C code:</p>\n\n<pre class=\"prettyprint\"><code>char var2[4] = \"\";\nchar  var1 = 'a';\nstrcpy(var2, \"hello\");</code></pre>\n\n<p> </p>","a":[{"id":721450,"option":"'a'","correct":false},{"id":721451,"option":"'l'","correct":false},{"id":721452,"option":"'o'","correct":true},{"id":721453,"option":"'h'","correct":false}]},{"q":"<p>Which of the following explains the <strong> Ff</strong><strong>lush</strong> function in C?</p>","a":[{"id":126412,"option":"Flushes only the specified stream","correct":false},{"id":126413,"option":"Flushes the input or the output buffer","correct":false},{"id":126414,"option":"Flushes all streams and the specified streams","correct":true},{"id":126415,"option":"Flushes the file buffer","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt; \n \nvoid func1() { printf(\"Hackathons\\n\"); } \nvoid func2() { printf(\"Challenges\\n\"); } \n\nvoid testhack(void (*hack)()) \n{ \n    hack(); \n} \n  \nint main() \n{ \n    testhack(func1); \n    testhack(func2); \n    return 0; \n}\n</code></pre>\n\n<p> </p>","a":[{"id":700984,"option":"Hackathons\r\nChallenges","correct":true},{"id":700985,"option":"Challenges\r\nHackathons","correct":false},{"id":700986,"option":"Garbage Value","correct":false},{"id":700987,"option":"Compilation Error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n \nint main () \n{\n   char *testhack = NULL;\n   testhack = malloc(8);\n   strcpy(testhack, \"Hackathons\");\n   printf(\"testhack = %s\\n\", testhack);\n   testhack = realloc(testhack, 15);\n   strcat(testhack, \"Challenges\");   \n   printf(\"testhack = %s\\n\", testhack);\n   free(testhack);\n   return 0;\n}\n</code></pre>\n\n<p> </p>","a":[{"id":700976,"option":"testhack = Hackathons                                                                                                          \r\ntesthack = HackathonsChallenges ","correct":true},{"id":700977,"option":"testhack = Hackathons                                                                                                          \r\ntesthack = Challenges","correct":false},{"id":700978,"option":"testhack = Hackathons                                                                                                          \r\ntesthack = Hackathons","correct":false},{"id":700979,"option":"Compilation Error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n     int fun();\n    int main()\n    {\n        int (*p)() = fun;\n        (*p)();\n        return 0;\n    }\n    int fun()\n    {\n        printf(\"Hacker\\n\");\n        return 0;\n    }\n</code></pre>","a":[{"id":124708,"option":"Compilation error","correct":false},{"id":124709,"option":"Run-time error","correct":false},{"id":124710,"option":"Hacker","correct":true},{"id":124711,"option":"Garbage value","correct":false}]},{"q":"<p>Which of the following statements define the<strong> rewind()</strong> function in C?</p>","a":[{"id":125044,"option":"It re-positions the file pointer to a character reverse.","correct":false},{"id":125045,"option":"It re-positions the file pointer stream to an end of file.","correct":false},{"id":125046,"option":"It re-positions the file pointer to beginning of that line.","correct":false},{"id":125047,"option":"It re-positions the file pointer to beginning of file.","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint *testhack() \n{ \n    static int val = 5; \n    return &amp;val; \n} \n  \nint main() \n{ \n    int *hck = testhack(); \n    fflush(stdin); \n    printf(\"%d\",*hck); \n} </code></pre>\n\n<p> </p>","a":[{"id":700992,"option":"5","correct":true},{"id":700993,"option":"0","correct":false},{"id":700994,"option":"Garbage Value","correct":false},{"id":700995,"option":"Segmentation Fault","correct":false}]},{"q":"<p>In C, which of the following statements about the <strong>malloc() </strong>function are true:</p>\n\n<ol>\n\t<li>It is used to dynamically allocate memory.</li>\n\t<li>If it fails to get implemented, then it returns a null value.</li>\n\t<li>It allocates memory from a free store.</li>\n\t<li>The size of the required memory is decided by the compiler.</li>\n</ol>","a":[{"id":604375,"option":"1 and 2","correct":true},{"id":604376,"option":"3 and 4","correct":false},{"id":604377,"option":"1, 2, and 3","correct":false},{"id":604378,"option":"1, 3, and 4","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n\nvoid main()\n{\nint const *p=5; \nprintf(\"%d\",++(*p));\n}\n</code></pre>","a":[{"id":604081,"option":"5","correct":false},{"id":604082,"option":"6","correct":false},{"id":604083,"option":"Compilation error","correct":true},{"id":604084,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n\nvoid main()\n{\nchar s[]={'ab','\\n','c','\\0'};\nchar *p,*str,*str1;\np=&amp;s[3];\nstr=p;\nstr1=s;\nprintf(\"%d\",++*p + ++*str1-32);\n}</code></pre>","a":[{"id":603296,"option":"68","correct":true},{"id":603297,"option":"0","correct":false},{"id":603298,"option":"97","correct":false},{"id":603299,"option":"75","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\nint arr[20],i, sum=0;\nint *p = arr;\nfor(i=0;i&lt;20;i++)\n{\n    *(p+i) = 1;\n}\nfor(i=0;i&lt;20;i+=4)\n{\n    sum+=*(p+i);\n    printf(\" %d \",sum);\n}\n\n}</code></pre>","a":[{"id":603284,"option":"5","correct":false},{"id":603285,"option":"1 2 3 4 5","correct":true},{"id":603286,"option":"Compilation error","correct":false},{"id":603287,"option":"Runtime error","correct":false}]},{"q":"<p>In C, which of the following statements about <strong>untyped </strong>pointers<strong> </strong>is correct:</p>\n\n<ol>\n\t<li>It can point to any type of data.</li>\n\t<li>It can be declared by using the <strong>void *</strong> syntax.</li>\n\t<li>It is also referred to as <strong>generic </strong>pointers.</li>\n\t<li>It can point to only int and float data types.</li>\n</ol>","a":[{"id":603030,"option":"1, 2, and 3","correct":true},{"id":603031,"option":"2, 3, and 4","correct":false},{"id":603032,"option":"2 and 4","correct":false},{"id":603033,"option":"3 and 4","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\nint *ptr = NULL;\nprintf(\" %u\",ptr);\nreturn 0;\n}\n</code></pre>","a":[{"id":600447,"option":"0","correct":true},{"id":600448,"option":"NULL","correct":false},{"id":600449,"option":"Garbage value","correct":false},{"id":600450,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nvoid main()\n{\n   int num1, *num2, **num3;\n   num1 = 4;\n   num2 = &amp;num1;\n   num3 = &amp;num2;\n   calc_sum(num1,num2,num3);\n}\n\nvoid calc_sum(int ptr1, int *ptr2, int **ptr3)\n{\n  int y, z;\n  **ptr3 += 1;\n   z  = **ptr3;\n  *ptr2 += 2;\n   y = *ptr2;\n   ptr1+= 3;\n   printf(\"%d\",ptr1 + y + z);\n}\n\n\n\n</code></pre>","a":[{"id":600326,"option":"15","correct":false},{"id":600327,"option":"19","correct":true},{"id":600328,"option":"Runtime error","correct":false},{"id":600329,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n#include &lt;conio.h&gt;\nvoid main()\n{\nint index,*pt1,*pt2;\nindex = 39;\npt1 = &amp;index;\npt2 = pt1;\nprintf(\"%d %d %d\\n\",index,*pt1,*pt2);\n*pt1 = 13;\nprintf(\"%d %d %d\\n\",index,*pt1,*pt2);\ngetch();\n}\n</code></pre>\n\n<p> </p>","a":[{"id":598949,"option":"39 39 39\r\n13 13 13","correct":true},{"id":598950,"option":"39 39 39\r\n39 13 39","correct":false},{"id":598951,"option":"39 0 39\r\n13 13 0","correct":false},{"id":598952,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char *p;\n        p=\"hack\";\n        printf(\"%s\\n\",*&amp;*&amp;*&amp;p);\n        return 0;\n    }\n</code></pre>","a":[{"id":124888,"option":"Compilation error","correct":false},{"id":124889,"option":"Run-time error","correct":false},{"id":124890,"option":"hack ","correct":true},{"id":124891,"option":"h","correct":false}]},{"q":"<p>In C, which of the following statements about pointers is correct?</p>","a":[{"id":606572,"option":"The value of a pointer is always 32 bits","correct":false},{"id":606573,"option":"The values of pointers are always stored in machine registers","correct":true},{"id":606574,"option":"A Pointer to one type may not be cast to a pointer of another type","correct":false},{"id":606575,"option":"All of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\nint main(void)\n{\n char data[3] ={'A','B','C'};\n char *ptr = NULL;\n ptr = data;\n printf(\"%c \",*++ptr);\n return 0;\n}</code></pre>","a":[{"id":604387,"option":"A","correct":false},{"id":604388,"option":"B","correct":true},{"id":604389,"option":"C","correct":false},{"id":604390,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code?</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n#include&lt;conio.h&gt;\n\nmain()\n{\nchar *p;\np=\"Pointers\";\nprintf(\"%c\",*&amp;*p);\ngetch();\n}\n</code></pre>","a":[{"id":604085,"option":"P","correct":true},{"id":604086,"option":"o","correct":false},{"id":604087,"option":"Runtime error","correct":false},{"id":604088,"option":"Garbage value","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\nvoid main()\n{\nchar str[]=“Hello C”;\ndisplay(str);\n}\nvoid display(char *string)\n{\nprintf(“%s”,string);\n}</code></pre>","a":[{"id":603292,"option":"Hello C","correct":false},{"id":603293,"option":"Garbage value","correct":false},{"id":603294,"option":"Compilation error","correct":true},{"id":603295,"option":"Runtime error","correct":false}]},{"q":"<p>The following keyword in C language signifies the following: 1. typedef is used to define a data type with an identifier in C 2. malloc() is used to assign memory of various types to variable names in C 3. sizeof() is used to determine the size of the data in bytes of an element in C</p>","a":[{"id":557447,"option":"Statements 1, 2, and 3 are correct","correct":false},{"id":557448,"option":"Statement 1 and 3 are correct\r\nStatement 2 is incorrect","correct":true},{"id":557449,"option":"Statements 1 and 2 are correct\r\nStatement 3 is incorrect","correct":false},{"id":557450,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    #include &lt;string.h&gt;\n    int main(void)\n    {\n        char *str1 = \"Hacker\", *str2 = \"ac\", *ptr;\n        ptr = strstr(str1, str2);\n        printf(\"%s\\n\", ptr);\n    }\n</code></pre>","a":[{"id":125576,"option":"ac","correct":false},{"id":125577,"option":"acker","correct":true},{"id":125578,"option":"ker","correct":false},{"id":125579,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following statements is true for these declarations:</p>\n<pre class=\"prettyprint\"><code>short a : 17; // Statement 1\nint long y : 33; // Statement 2\n</code></pre>","a":[{"id":123700,"option":"Both are illegal","correct":true},{"id":123701,"option":"Both are legal","correct":false},{"id":123702,"option":"Only statement 1 is legal","correct":false},{"id":123703,"option":"Only statement 2 is legal","correct":false}]},{"q":"<p>In C, what is the correct syntax for calculating the <strong>modulus</strong> of a <strong>float</strong> type variable?</p>","a":[{"id":123356,"option":"a % b","correct":false},{"id":123357,"option":"modulus(a, b);","correct":false},{"id":123358,"option":"fmod(a, b);","correct":true},{"id":123359,"option":"mod(a, b);","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        printf(\"C programming %s\", \"Class by\\n\" \" HackerEarth\", \"WOW\");\n    }\n</code></pre>","a":[{"id":123172,"option":"C programming Class by\r\n ","correct":false},{"id":123173,"option":"C programming Class by\r\n HackerEarth","correct":true},{"id":123174,"option":"HackerEarth","correct":false},{"id":123175,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n           unsigned char chr;\n           chr = 129;\n           printf(\"%d\\n\", chr);\n           return 0;\n        }\n</code></pre>","a":[{"id":123128,"option":"129","correct":true},{"id":123129,"option":"-129","correct":false},{"id":123130,"option":"-128","correct":false},{"id":123131,"option":"-127","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main( )\n    {\n    int k = 35 ;\n    printf ( \"\\n%d %d %d\", k == 35, k = 50, k &gt; 40 ) ;\n    }\n</code></pre>","a":[{"id":123040,"option":"1 50 0","correct":false},{"id":123041,"option":"0 50 0","correct":true},{"id":123042,"option":"1 50 1","correct":false},{"id":123043,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        void main()\n        {\n            int a = -5;\n            int k = (a++, ++a);\n            printf(\"%d\\n\", k);\n        }\n</code></pre>","a":[{"id":122784,"option":"Compilation error","correct":false},{"id":122785,"option":"-4","correct":false},{"id":122786,"option":"-3","correct":true},{"id":122787,"option":"-2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        void main()\n        {\n            int x = 2, y = -1, z = 2;\n            int a = x &amp;&amp; y &amp;&amp; z++;\n            printf(\"%d\", a);\n        }\n</code></pre>","a":[{"id":122512,"option":"0","correct":false},{"id":122513,"option":"2","correct":false},{"id":122514,"option":"1","correct":true},{"id":122515,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define var 3\n    void main(){\n        char *cricket[var+~0]={\"hacker\",\"erth\"};\n        char *ptr=cricket[1+~0];\n        printf(\"%c\",*++ptr);\n    }\n</code></pre>","a":[{"id":125712,"option":"e","correct":false},{"id":125713,"option":"h","correct":false},{"id":125714,"option":"a","correct":true},{"id":125715,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int i, n;\n        char *x=\"Hacker\";\n        n = strlen(x);\n        *x = x[n];\n        for(i=0; i&lt;=n; i++)\n        {\n            printf(\"%s \", x);\n            x++;\n        }\n        printf(\"\\n\", x);\n        return 0;\n    }\n</code></pre>","a":[{"id":124892,"option":"Compilation error","correct":false},{"id":124893,"option":"Run-time error","correct":true},{"id":124894,"option":"er","correct":false},{"id":124895,"option":"Hacker","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>       #include&lt;stdio.h&gt;\n        #include&lt;string.h&gt;\n        int main()\n        {\n            static int num[3]={[0]=5,[2]=7};\n            printf(\"%d\",num[1]);\n        }\n</code></pre>","a":[{"id":126036,"option":"5","correct":false},{"id":126037,"option":"7","correct":false},{"id":126038,"option":"Compilation error","correct":false},{"id":126039,"option":"0","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define fun (x) (x)*10\n\n    int main()\n    {\n        int t = fun(5);\n        int i;\n        for(i = 0; i &lt; t; i++)\n        printf(\"Hello\\n\");\n    }\n</code></pre>","a":[{"id":126304,"option":"Hello","correct":false},{"id":126305,"option":"Compilation error","correct":true},{"id":126306,"option":"Runtime error","correct":false},{"id":126307,"option":"Garbage value","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define f(g,g2) g##g2\n    int main()\n    {\n        int var12 = 200;\n        printf(\"%d\", f(var,12));\n    }\n</code></pre>","a":[{"id":126292,"option":"100","correct":false},{"id":126293,"option":"200","correct":true},{"id":126294,"option":"Compilation error","correct":false},{"id":126295,"option":"1200","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    # include &lt;stdio.h&gt;\n    # define scanf  \"%s Code\"\n    main()\n    {\n        printf(scanf, scanf);\n    }\n</code></pre>","a":[{"id":126160,"option":"Code Code","correct":false},{"id":126161,"option":"%s Code Code","correct":true},{"id":126162,"option":"%s Code ","correct":false},{"id":126163,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define FUN(i, j) i##j\n    int main()\n    {\n        int va1=100;\n        int va12=200;\n        printf(\"%d\\n\", FUN(va1, 2));\n    }\n</code></pre>","a":[{"id":125512,"option":"100 200","correct":false},{"id":125513,"option":"200","correct":true},{"id":125514,"option":"100","correct":false},{"id":125515,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int i, j;\n        int p = 0, q = 1;\n\n        for(i = 0, j = 0; i &lt; p, j &lt; q; i++, j++)\n        {\n            printf(\"Hacker\\n\");\n        }\n    }\n</code></pre>","a":[{"id":126320,"option":"Compilation error","correct":false},{"id":126321,"option":"Run-time error","correct":false},{"id":126322,"option":"Hacker","correct":true},{"id":126323,"option":"Hacker  Hacker","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        void main()\n        {\n            int x = -1, y = 0, z = 5;\n            int a = x &amp;&amp; (~y) || z++;\n            printf(\"%d\", z);\n        }\n</code></pre>","a":[{"id":122500,"option":"1","correct":false},{"id":122501,"option":"5","correct":true},{"id":122502,"option":"6","correct":false},{"id":122503,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void main()\n    {\n        int k = m();\n        printf(\"%d\", k);\n    }\n    void m()\n    {\n        printf(\"hacker\");\n    }\n</code></pre>","a":[{"id":123816,"option":"hacker","correct":false},{"id":123817,"option":"hacker 6","correct":true},{"id":123818,"option":"hacker 7","correct":false},{"id":123819,"option":"Compilation fails","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        char *str = \"hello, world\";\n        char *str1 = \"hello, world\";\n        if (strcmp(str, str1)==0)\n            printf(\"equal\");\n        else\n            printf(\"unequal\");\n    }\n</code></pre>","a":[{"id":123576,"option":"unequal","correct":false},{"id":123577,"option":"equal","correct":true},{"id":123578,"option":"0","correct":false},{"id":123579,"option":"1","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n           void main()\n        {\n         signed int i = -13;\n          unsigned  int k = i % 2;\n            printf(\"%d\\n\", k);\n        }\n</code></pre>","a":[{"id":123256,"option":"-13","correct":false},{"id":123257,"option":"Compilation error","correct":false},{"id":123258,"option":"-1","correct":true},{"id":123259,"option":"1","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void main()\n    {\n        int i = -13;\n        int k = i % 2;\n        printf(\"%d\\n\", k);\n    }\n</code></pre>","a":[{"id":123252,"option":"Compilation error","correct":false},{"id":123253,"option":"Runtime error","correct":false},{"id":123254,"option":"1","correct":false},{"id":123255,"option":"-1","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int i = -9;\n            int k = i % 4+3*2.5;\n            printf(\"%d\\n\", k);\n        }\n</code></pre>","a":[{"id":122448,"option":"5","correct":false},{"id":122449,"option":"Compilation error","correct":false},{"id":122450,"option":"6","correct":true},{"id":122451,"option":"6.5","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        const int k=10;\n        int *const q=&amp;k;\n        printf(\"%d\", *q);\n    }\n</code></pre>","a":[{"id":125620,"option":"Compilation error","correct":false},{"id":125621,"option":"10","correct":true},{"id":125622,"option":"Garbage value","correct":false},{"id":125623,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        int main()\n        {\n            int i = -(-(-0));\n            int j = i++ + i--;\n            printf(\"%d\\n\", --j);\n        }\n</code></pre>","a":[{"id":122700,"option":"1","correct":false},{"id":122701,"option":"0","correct":true},{"id":122702,"option":"-1","correct":false},{"id":122703,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    char *a[10] = {\"hi\", \"hello\", \"how\"};\n    printf(\"%d %d\\n\", sizeof(a[2]), sizeof(a[0]));\n}\n</code></pre>","a":[{"id":124032,"option":"2 4","correct":false},{"id":124033,"option":"8 2","correct":false},{"id":124034,"option":"8 8","correct":true},{"id":124035,"option":"8 16","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nvoid main()\n{\n    double x = 12.12;\n    int y = x;\n    printf(\"%d \", y);\n    printf(\"%lf\", y);\n}\n</code></pre>","a":[{"id":122592,"option":"12.12, 0.000000","correct":false},{"id":122593,"option":"12, 0.000000","correct":true},{"id":122594,"option":"12.00, 0.000000","correct":false},{"id":122595,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int const p()\n        {\n            printf(\"HackerEarth.com\");\n            return 0;\n        }\n        void main()\n        {\n            p();\n        }\n</code></pre>","a":[{"id":123220,"option":"Compilation error","correct":false},{"id":123221,"option":"Runtime error","correct":false},{"id":123222,"option":"HackerEarth.com","correct":true},{"id":123223,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the  following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int x = 0, y = 2, z = 3;\n    int a = ~(~x &amp; (!y )| (~z));\n    printf(\"%d\", a);\n}\n</code></pre>","a":[{"id":122556,"option":"-1","correct":false},{"id":122557,"option":"1","correct":false},{"id":122558,"option":"Compilation error","correct":false},{"id":122559,"option":"3","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;string.h&gt;\n\nint main()\n{\n    char str1[] = \"garden\";\n\n    if (strcmp(str1, \"garden\") == 0)\n        printf(\"strlen(str1)\\n\");\n    else\n        printf(\"Not equal\\n\");\n}\n</code></pre>","a":[{"id":123596,"option":"6","correct":false},{"id":123597,"option":"Not equal","correct":false},{"id":123598,"option":"Compilation error","correct":false},{"id":123599,"option":"strlen(str1)","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int x = 9, y = 10;\n    int z;\n    z = (y++, y);\n    printf(\"%d\\n\", z);\n    return 0;\n}\n</code></pre>","a":[{"id":122896,"option":"Compilation error","correct":false},{"id":122897,"option":"10","correct":false},{"id":122898,"option":"11","correct":true},{"id":122899,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define MAX(a, b, c) (a&gt;b ? a&gt;c ? a : c: b&gt;c ? b : c)\n    int main()\n    {\n        int x;\n        x = MAX(3+2, 2+7, 2+7);\n        printf(\"%d\\n\", x);\n    }\n</code></pre>","a":[{"id":125488,"option":"5","correct":false},{"id":125489,"option":"9","correct":true},{"id":125490,"option":"Compilation error","correct":false},{"id":125491,"option":"2+7","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    struct student\n    {\n        char *c;\n        struct student point;\n    };\n    void main()\n    {\n        struct student s;\n        s.c = \"hack\";\n        printf(\"%s\", s.c);\n    }\n</code></pre>","a":[{"id":124356,"option":"Compilation failure","correct":true},{"id":124357,"option":"Run-time  error","correct":false},{"id":124358,"option":"hack","correct":false},{"id":124359,"option":"h","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;  \nint main() {     \n  printf(\"%d, %d\\n\", sizeof(NULL), sizeof(\"\"));    \n  return 0; \n} \n</code></pre>","a":[{"id":124132,"option":"8,1","correct":false},{"id":124133,"option":"16,8","correct":false},{"id":124134,"option":"8,1","correct":true},{"id":124135,"option":"Compilation failure","correct":false}]},{"q":"<p>In C, which of the following operations is valid on a <strong>char</strong> pointer?</p>","a":[{"id":124172,"option":"Input through %s","correct":false},{"id":124173,"option":"Generation of multi-dimensional array","correct":false},{"id":124174,"option":"Changing the address to point to another location","correct":true},{"id":124175,"option":"All of these","correct":false}]},{"q":"<p>In C, which of the following is used to specify the <strong>prototype</strong> of a function?</p>","a":[{"id":126072,"option":"Function definition","correct":false},{"id":126073,"option":"Function declaration","correct":true},{"id":126074,"option":"Function prototype","correct":false},{"id":126075,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char y='a';\n        int x=10;\n        float z=10.1;\n        printf(\"%d\",sizeof(10));\n        printf(\"%d\",sizeof('a'));\n        printf(\"%d\",sizeof(10.1));\n    }\n</code></pre>","a":[{"id":125820,"option":"4  8  8","correct":false},{"id":125821,"option":"4  4  4","correct":false},{"id":125822,"option":"4   4  8","correct":true},{"id":125823,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        printf(\"%d%o%x\",50,050,0x50);\n    }\n</code></pre>","a":[{"id":125816,"option":"50 40 80","correct":false},{"id":125817,"option":"Compilation error","correct":false},{"id":125818,"option":"50 50 50","correct":true},{"id":125819,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int choice = 1 ;\n        switch(choice,choice+1,choice+2)\n        {\n            case 1:\n            printf(\"\\nA\");\n            break;\n            case 2:\n            printf(\"\\nB\");\n            break;\n            case 3:\n            printf(\"\\nH\");\n            break;\n        }\n    }\n</code></pre>","a":[{"id":125784,"option":"Compilation error","correct":false},{"id":125785,"option":"B","correct":false},{"id":125786,"option":"H","correct":true},{"id":125787,"option":"A","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        printf(\"%d\\n\", strlen(\"1010101000/n\"));\n    }\n</code></pre>","a":[{"id":125596,"option":"10","correct":false},{"id":125597,"option":"11","correct":false},{"id":125598,"option":"12","correct":true},{"id":125599,"option":"13","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char ch='A';\n        printf(\"%c\", ch &gt;= 'A' &amp;&amp; ch &lt;= 'Z' ? ch + 'a' - 'A':ch);\n    }\n</code></pre>","a":[{"id":125452,"option":"a","correct":true},{"id":125453,"option":"A","correct":false},{"id":125454,"option":"b","correct":false},{"id":125455,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        printf(3+\"Hacker\");\n    }\n</code></pre>","a":[{"id":125436,"option":"Hac","correct":false},{"id":125437,"option":"ker","correct":true},{"id":125438,"option":"Hacker","correct":false},{"id":125439,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        float a=0.7;\n        if(a &lt; 0.7)\n        printf(\"Hacker\\n\");\n        else\n            printf(\"Earth\\n\");\n        return 0;\n    }\n</code></pre>","a":[{"id":124752,"option":"Hacker","correct":true},{"id":124753,"option":"Earth","correct":false},{"id":124754,"option":"0","correct":false},{"id":124755,"option":"Compilation fails","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a = 10;\n    a = ~a;\n    printf(\"%d\\n\", a);\n}\n</code></pre>","a":[{"id":122720,"option":"-10","correct":false},{"id":122721,"option":"-11","correct":true},{"id":122722,"option":"11","correct":false},{"id":122723,"option":"10","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        int a[4] = {1, 2, 3, 4};\n        int *ptr  =  &amp;a[2];\n        float n = 1;\n        ptr = ptr + n;\n        printf(\"%d\\n\", *ptr);\n    }\n</code></pre>","a":[{"id":123940,"option":"4","correct":false},{"id":123941,"option":"3","correct":false},{"id":123942,"option":"2","correct":true},{"id":123943,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following properties is used to add a <strong>scrollbar,</strong> if the contents are too big for a paragraph?</p>","a":[{"id":147825,"option":"scrollbar","correct":false},{"id":147826,"option":"size-exception","correct":false},{"id":147827,"option":"overflow","correct":true},{"id":147828,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int x = 2, y = 2;\n    int z = y &amp;&amp; (y |= 10 &amp;&amp; x);\n    printf(\"%d\\n\", z);\n    return 0;\n}\n</code></pre>","a":[{"id":122916,"option":"2","correct":false},{"id":122917,"option":"0","correct":false},{"id":122918,"option":"1","correct":true},{"id":122919,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        int main()\n        {\n            int i = 2;\n            int *p = &amp;i;\n            printf(\"%d\\n\", (++*p)++);\n        }\n</code></pre>","a":[{"id":122764,"option":"2","correct":false},{"id":122765,"option":"3","correct":false},{"id":122766,"option":"4","correct":false},{"id":122767,"option":"Compilation error","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;math.h&gt;\n    #include &lt;stdio.h&gt;\n    int main( void )\n    {\n      double w = -10.0, x = 3.0, z;\n      z = fmod( w, x );\n      printf( \"%f\",z );\n    }\n</code></pre>","a":[{"id":122432,"option":"1.000000","correct":false},{"id":122433,"option":"1","correct":false},{"id":122434,"option":"-1.000000","correct":true},{"id":122435,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    void *p;\n    int a[4] = {1, 2, 3, 4};\n    p = &amp;a[3];\n    int *ptr = &amp;a[2];\n    int n = (int*)p - ptr;\n    printf(\"%d\\n\", n);\n}\n</code></pre>","a":[{"id":123932,"option":"3","correct":false},{"id":123933,"option":"2","correct":false},{"id":123934,"option":"1","correct":true},{"id":123935,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main ()\n{\n  char a[1][5] = { \"hello\" };\n  printf (\"%s\", a[1][5]);\n  return 0;\n}\n</code></pre>","a":[{"id":124052,"option":"hello","correct":false},{"id":124053,"option":"null","correct":true},{"id":124054,"option":"o","correct":false},{"id":124055,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n    char str[] = \"hack\";\n    int i;\n    printf(\"\\n%c%c%c%c\", str[i], *(str+i), *(i+str), i[str]);\n    }\n</code></pre>","a":[{"id":126220,"option":"h h h Garbage value","correct":false},{"id":126221,"option":"hhhh","correct":true},{"id":126222,"option":"Compilation error","correct":false},{"id":126223,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;ctype.h&gt;\n    int main()\n    {\n        double i = '0';\n        if (isdigit(i))\n            printf(\"digit\\n\");\n        else\n            printf(\"not digit\\n\");\n        return 0;\n    }\n</code></pre>","a":[{"id":123548,"option":"digit","correct":false},{"id":123549,"option":"not digit","correct":false},{"id":123550,"option":"Compilation error","correct":true},{"id":123551,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int i=0;\n        while ( +(+i--) != 0)\n            i-=i++;\n        printf(\"%d\",i);\n    }\n</code></pre>","a":[{"id":126200,"option":"1","correct":false},{"id":126201,"option":"-1","correct":true},{"id":126202,"option":"2","correct":false},{"id":126203,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int x = 0, y = 2, z = 3;\n    int a = ~(~x &amp; y | z);\n    printf(\"%d\", a);\n}\n</code></pre>","a":[{"id":122548,"option":"Compilation error","correct":false},{"id":122549,"option":"4","correct":false},{"id":122550,"option":"-4","correct":true},{"id":122551,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main(void)\n    {\n        http://hackerearth.com\n        printf(\"Hello  World\");\n    }\n</code></pre>","a":[{"id":126364,"option":"Compilation error","correct":false},{"id":126365,"option":"Hello  World","correct":true},{"id":126366,"option":"Run-time error","correct":false},{"id":126367,"option":"None of these","correct":false}]},{"q":"<p>What is the value of <strong>c</strong> in the following C code:</p>\n<pre class=\"prettyprint\"><code>c = 2;\nc &lt;&lt;= 1;\n</code></pre>","a":[{"id":122808,"option":"1","correct":false},{"id":122809,"option":"3","correct":false},{"id":122810,"option":"2","correct":false},{"id":122811,"option":"4","correct":true}]},{"q":"<p>In C, which of the following processes uses the <strong>prototype</strong> of a function?</p>","a":[{"id":124648,"option":"Defining","correct":false},{"id":124649,"option":"Declaring","correct":true},{"id":124650,"option":"Prototyping","correct":false},{"id":124651,"option":"Calling","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>       #include &lt;stdio.h&gt;\n        void main()\n        {\n            char *a= \"hack\";\n            char *b = a;\n            printf(\"%c%c\", 2*[a+1], 0*[b]);\n        }\n</code></pre>","a":[{"id":122316,"option":"a , h","correct":false},{"id":122317,"option":"h , a","correct":false},{"id":122318,"option":"h, h","correct":false},{"id":122319,"option":"Compilation error","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int k = -1;\n    int m = 7;\n    k &lt; m ? k = k + 1 : m = m + 1;\n    printf(\"%d\", k);\n}\n</code></pre>","a":[{"id":122880,"option":"0","correct":false},{"id":122881,"option":"8","correct":false},{"id":122882,"option":"Compilation error","correct":true},{"id":122883,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char str[] = \"Good Coding\";\n        char *s = str;\n        printf(\"%s\\n\", s-- +4);\n        return 0;\n    }\n</code></pre>","a":[{"id":124880,"option":"Coding ","correct":true},{"id":124881,"option":"d Coding","correct":false},{"id":124882,"option":"Compilation errpr","correct":false},{"id":124883,"option":"Good","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    char str[11] = \"hacker\";\n    char *str1 = \"world\";\n    strcat(str, str1);\n    printf(\"%s %d\", str, str[1]);\n}\n</code></pre>","a":[{"id":123600,"option":"hackerworld  a","correct":false},{"id":123601,"option":"hackerworld 97","correct":true},{"id":123602,"option":"Compilation error","correct":false},{"id":123603,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        float a=0.1,b=0.9;\n        if(a+b==1.0)\n        printf(\"Equal\");\n        else\n        printf(\"Not Equal\");\n    }\n</code></pre>","a":[{"id":122340,"option":"Not Equal","correct":false},{"id":122341,"option":"Compilation error","correct":false},{"id":122342,"option":"Equal","correct":true},{"id":122343,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            if (7 &amp; 8)\n            printf(\"Hacker\");\n              if ((~6 &amp; 0x000e) == 8)\n              printf(\"Earth\\n\");\n        }\n</code></pre>","a":[{"id":122728,"option":"Compilation error","correct":false},{"id":122729,"option":"Hacker","correct":false},{"id":122730,"option":"Earth","correct":true},{"id":122731,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        char *str = \"hack,world\";\n        char *str1 = \"hack,world\";\n        if (strcmp(str, str1))\n            printf(\"equal\");\n        else\n            printf(\"unequal\");\n    }\n</code></pre>","a":[{"id":125924,"option":"equal","correct":false},{"id":125925,"option":"unequal","correct":true},{"id":125926,"option":"Compilation error","correct":false},{"id":125927,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int c = 2 ^ 3;\n    printf(\"%d\\n\", c);\n}\n</code></pre>","a":[{"id":122708,"option":"0","correct":false},{"id":122709,"option":"8","correct":false},{"id":122710,"option":"1","correct":true},{"id":122711,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a = 10;\n    a = !(~a);\n    printf(\"%d\\n\", a);\n}\n</code></pre>","a":[{"id":122724,"option":"10","correct":false},{"id":122725,"option":"1","correct":false},{"id":122726,"option":"0","correct":true},{"id":122727,"option":"-11","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code> #include &lt;stdio.h&gt;\n\n    void main()\n    {\n        int choice = 2 ;\n        switch(choice)\n        {\n        }\n    }\n</code></pre>","a":[{"id":125904,"option":"2","correct":false},{"id":125905,"option":"Compilation error","correct":false},{"id":125906,"option":"Run-time error","correct":false},{"id":125907,"option":"None of these","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>\n    int main()\n    {\n         static int a=20;\n        printf(\"%d\\n %d\\n\", a++,++a);\n\n    }\n</code></pre>","a":[{"id":122152,"option":"20, 20","correct":false},{"id":122153,"option":"20, 21","correct":false},{"id":122154,"option":"21, 20","correct":false},{"id":122155,"option":"21, 21","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        char *p[1] = {\"hackerearth\"};\n        printf(\"%s\", (p)[1]);\n        return 0;\n    }\n</code></pre>\n\n<p> </p>","a":[{"id":124212,"option":"Hackerearth","correct":false},{"id":124213,"option":"Null","correct":true},{"id":124214,"option":"Compilation error","correct":false},{"id":124215,"option":"Run-time error","correct":false}]},{"q":"<p>Which of the following defines the C language?</p>","a":[{"id":126112,"option":"Context sensitive language","correct":false},{"id":126113,"option":"Context free language","correct":true},{"id":126114,"option":"Regular language","correct":false},{"id":126115,"option":"All of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    void *p;\n    int a[4] = {1, 2, 3, 8};\n    p = &amp;a[3];\n    int *ptr = &amp;a[2];\n    int n = p - ptr;\n    printf(\"%d\\n\", n);\n}\n</code></pre>","a":[{"id":123928,"option":"1","correct":false},{"id":123929,"option":"4","correct":false},{"id":123930,"option":"Compilation fails","correct":true},{"id":123931,"option":"Runtime error","correct":false}]},{"q":"<p>Which of the following commands is used to display <strong>\\n</strong> in C?</p>","a":[{"id":125564,"option":"printf(\"\\n\");","correct":false},{"id":125565,"option":"echo \"\\\\n\";","correct":false},{"id":125566,"option":"printf('\\n');","correct":false},{"id":125567,"option":"printf(\"\\\\n\");","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int x= 10, y= 10;\n            if (x=5)\n            y--;\n            printf(\"%d, %d\", x, y--);\n        }\n</code></pre>","a":[{"id":122660,"option":"10, 9","correct":false},{"id":122661,"option":"10, 8","correct":false},{"id":122662,"option":"5, 9","correct":true},{"id":122663,"option":"5, 8","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code> #include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[4] = {1, 2, 3, 4};\n    int *p = &amp;a[1];\n    int *ptr = &amp;a[2];\n    ptr = ptr * 1;\n    printf(\"%d\\n\", *ptr);\n}\n</code></pre>","a":[{"id":123936,"option":"Compilation fails","correct":true},{"id":123937,"option":"2","correct":false},{"id":123938,"option":"3","correct":false},{"id":123939,"option":"1","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        struct student\n        {\n            char *name;\n        };\n        void main()\n        {\n            struct student s[2], r[2];\n            s[1] = s[0] = \"Hacker\";\n            printf(\"%s\", s[0].name);\n        }\n</code></pre>","a":[{"id":124340,"option":"Hacker","correct":false},{"id":124341,"option":"Compilation failure","correct":true},{"id":124342,"option":"Run-time error","correct":false},{"id":124343,"option":"H","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int y = 1, x = 2;\n    int l = (y++, x++) ? ++y : --x;\n    printf(\"%d\\n\", l);\n}\n</code></pre>","a":[{"id":122836,"option":"2","correct":false},{"id":122837,"option":"4","correct":false},{"id":122838,"option":"3","correct":true},{"id":122839,"option":"1","correct":false}]},{"q":"<p>In C, which of the following is not used with the <strong>static storage</strong> class?</p>","a":[{"id":122404,"option":"Global variables","correct":false},{"id":122405,"option":"Function parameters","correct":true},{"id":122406,"option":"Function names","correct":false},{"id":122407,"option":"Local variables","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int x = 9, y = 10;\n            int z;\n            z = (y++, y--);\n            printf(\"%d\\n\", z--);\n            return 0;\n        }\n</code></pre>","a":[{"id":122900,"option":"10","correct":false},{"id":122901,"option":"12","correct":false},{"id":122902,"option":"9","correct":false},{"id":122903,"option":"None of these","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int fun(int(*)());\n    int main()\n    {\n        fun(main);\n        printf(\"Earth\\n\");\n        return 0;\n    }\n    int fun(int (*p)())\n    {\n        printf(\"Hacker\");\n    }\n</code></pre>","a":[{"id":125272,"option":"HackerEarth","correct":true},{"id":125273,"option":"Earth","correct":false},{"id":125274,"option":"Compilation error","correct":false},{"id":125275,"option":"Hacker","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int var=10;\n        printf(1+\"hhack\",var);\n    }\n</code></pre>","a":[{"id":125828,"option":"hhack","correct":false},{"id":125829,"option":"hack","correct":true},{"id":125830,"option":"Compilation error","correct":false},{"id":125831,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[4] = {1, 2, 3, 4};\n    void *p = &amp;a[1];\n    void *ptr = &amp;a[2];\n    int n = 1;\n    n = ptr - p;\n    printf(\"%d\\n\", n);\n}\n</code></pre>","a":[{"id":123944,"option":"3","correct":false},{"id":123945,"option":"2","correct":false},{"id":123946,"option":"4","correct":true},{"id":123947,"option":"Compilation fails","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\nint  main()\n{\n    int hackvar = 2 ;\n    switch(hackvar &lt;&lt; 1)\n    {\n        case 2:\n            hackfunc1(hackvar);\n            break;\n        case 4:\n            hackfunc2(hackvar);\n            break;    \n     }\n}\nint hackfunc1(int hackvar)\n{\n    int hackvar1 = hackvar;\n    switch(hackvar1&lt;&lt;2)\n    {\n        case 2:\n        printf(2+2*2-2);\n        break;\n        case 4:\n        printf(3+3+3*3);\n        break;\n    }\n}\nint hackfunc2(int hackvar)\n{\n    int hackvar2 = hackvar;\n    switch(hackvar2&lt;&lt;3)\n    {\n        case 2:\n        printf(2+2+2+2);\n        break;\n        case 4:\n        printf(3+3*3+3);\n        break;\n    }\n}\n</code></pre>","a":[{"id":125776,"option":"4","correct":false},{"id":125777,"option":"15","correct":false},{"id":125778,"option":"8","correct":false},{"id":125779,"option":"None of these","correct":true}]},{"q":"<p>In a Linux/Unix system, what is the output of the following C program:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n#include&lt;unistd.h&gt;\n int main()\n {\n     pid_t var1;                                                                              \n     var1 = fork();                                                                           \n     if (var1 &gt; 0)\n        printf(\"%d\\n\",var1);\n     else\n        printf(\"%d\\n\", -1);                                                                   \n return 0;\n }</code></pre>\n\n<p> </p>","a":[{"id":721729,"option":"-1","correct":false},{"id":721730,"option":"0","correct":false},{"id":721731,"option":"The process ID ","correct":false},{"id":721732,"option":"The process ID and -1","correct":true}]},{"q":"<p>What will the output of the following C code be, when the following input is given:<br>\n5<br>\n11100</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n#define ZERO putc('0',stdout)\n#define ONE putc('1', stdout)\nint main(n){int z=0,o=0;\n    scanf(\"%i\", &amp;n); getchar();\n    while(n--)\n        getchar()=='0'?z++:o++;\n    if(!o)ZERO;\n    else{ONE;while(z--)ZERO;}\n    puts(\"\");\n}</code></pre>\n\n<p> </p>","a":[{"id":721550,"option":"100","correct":true},{"id":721551,"option":"1","correct":false},{"id":721552,"option":"0","correct":false},{"id":721553,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n#define one(a) two(a/2)\n#define two(b) three(b%5)\n#define three(c) c*7\nint main(){\n    int x = 10;\n    printf(\"%d\",one(x));\n}</code></pre>\n\n<p> </p>","a":[{"id":721566,"option":"Compilation error, since functions are called before they are declared/defined","correct":false},{"id":721567,"option":"Run-time error, as values are not available at run time","correct":false},{"id":721568,"option":"0","correct":true},{"id":721569,"option":"Garbage value, due to unavailability of integer values","correct":false}]},{"q":"<p>Alice wrote a program in C to implement a stack using array. She modifies the traditional version of the push function to <em>modifiedPush </em>with the following functionalities:</p>\n\n<ul>\n\t<li>She pushes the value on the top of the stack if the pushed value is greater than the value at the top of the stack. </li>\n\t<li>Otherwise, she continuously pops values from the stack until the value at the top of the stack is less than the value to be pushed and then pushes the value.</li>\n</ul>\n\n<p>Which of these correctly describes the behavior of the following C code when the<em> display() </em>function is called:</p>\n\n<pre class=\"prettyprint\"><code>display() { \nif (s.top == -1)\n    {\n        printf (\"Stack is empty\\n\");\n        return;\n    }\n    else\n    {\n      for (i = s.top; i &gt;= 0; i--)\n        {\n            printf (\"%d\\n\", s[i]);\n        }\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":721538,"option":"Values stored will be first ascending and then descending.","correct":false},{"id":721539,"option":"Values stored will be first descending and then ascending.","correct":false},{"id":721540,"option":"Values stored will be ascending .","correct":false},{"id":721541,"option":"Values stored will be descending.","correct":true}]},{"q":"<p>You are given an infinite linked list containing prime numbers. Assume that the linked list has an additional pointer called jump ptr which points to a jump node. For example, if the content of the list is 2, then its jump ptr points to a node which is two nodes after it.<br>\nWhich of these locations will the jump ptr of the 5<sup>th</sup> node point to considering the following C code:</p>\n\n<pre class=\"prettyprint\"><code>2-&gt;3-&gt;5.........</code></pre>\n\n<p> </p>","a":[{"id":721530,"option":"(5 + 11)th node","correct":false},{"id":721531,"option":"(5 + 11 + 1)th node","correct":true},{"id":721532,"option":"(11+1)th node","correct":false},{"id":721533,"option":"Cannot be determined","correct":false}]},{"q":"<p>If the address of <strong>a </strong>= <strong>X </strong>and address of <strong>b </strong>= <strong>Y</strong> initially, then what is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>int a = 10, b = 20;\nint *p = &amp;a, *q = &amp;b;\nint **p1 = &amp;p, **q1 = &amp;q;\n\nprintf(\"%x %x\\n\",*p1,*q1);</code></pre>\n\n<p> </p>","a":[{"id":721522,"option":"X X","correct":false},{"id":721523,"option":"X Y","correct":true},{"id":721524,"option":"Y X","correct":false},{"id":721525,"option":"Y Y","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>char arr[5][5] = {\n    {'h', 'e', 'l', 'l', 'o'},\n    {'h', 'a', 'v', 'e'},\n    {'a'},\n    {'g', 'r', 'e', 'a', 't'},\n    {'d', 'a', 'y'}\n};\n                                \nchar *p = arr[1];\np = p + 3;\nprintf(\"%c\", *p);</code></pre>\n\n<p> </p>","a":[{"id":721518,"option":"h","correct":false},{"id":721519,"option":"a","correct":false},{"id":721520,"option":"e","correct":true},{"id":721521,"option":"v","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\nunsigned int a = 0xffff ;\n~a;\nprintf ( \"%x\", a);\n}</code></pre>\n\n<p> </p>","a":[{"id":721478,"option":"ffff","correct":true},{"id":721479,"option":"0000","correct":false},{"id":721480,"option":"00ff","correct":false},{"id":721481,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following is used to round off a variable <strong>x</strong> of the float datatype to an int datatype value?  </p>","a":[{"id":721470,"option":"y=(int)(x+0.5);","correct":true},{"id":721471,"option":"y=int(x+05);","correct":false},{"id":721472,"option":"y=(int)x+05;","correct":false},{"id":721473,"option":"y=(int)((int)x+0.5);","correct":false}]},{"q":"<p>What is the error in the <em>while </em>loop in the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\nint i=1;\nwhile( )\n    {\n    printf (\"%d\", i++);\n    if(i&gt;10)\n        break;\n    }\n}</code></pre>\n\n<p> </p>","a":[{"id":721462,"option":"Condition in the while loop is must.","correct":true},{"id":721463,"option":"A semicolon is missing after while() loop.","correct":false},{"id":721464,"option":"While loop should be replaced with for() loop.","correct":false},{"id":721465,"option":"There is no error.","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt; \n#include &lt;stdbool.h&gt; \n\nbool match (const void *m, const void *n) \n{ \n  return ( *(int*)m == *(int*)n ); \n} \nint testhack(void *val, int size_array, int size_elem, void *x, \n           bool match (const void * , const void *)) \n{ \n    char *ptr = (char *)val; \n      int i; \n    for (i=0; i&lt;size_array; i++) \n        if (match(ptr + i*size_elem, x)) \n           return i; \n    return -1; \n}  \nint main() \n{ \n    int val[] = {7, 14, 7, 90, 70}; \n    int n = sizeof(val)/sizeof(val[0]); \n    int x = 7; \n    printf (\"value is %d\", testhack(val, n, \n                               sizeof(int), &amp;x, match)); \n    return 0; \n} \n</code></pre>\n\n<p> </p>","a":[{"id":700988,"option":"value is 7","correct":false},{"id":700989,"option":"value is 0","correct":true},{"id":700990,"option":"value is 70","correct":false},{"id":700991,"option":"Compilation Error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\nint main()\n{\nputs(func1());\nputs(func2());\n}\nchar *func1()\n{\nchar temp[] = \"program\";\nreturn temp;\n}\nchar *func2()\n{\nchar temp[] = {'p','r','o','g','r','a','m'};\nreturn temp;\n}</code></pre>\n\n<p> </p>","a":[{"id":606560,"option":"program\r\nprogram","correct":false},{"id":606561,"option":"Garbage value","correct":true},{"id":606562,"option":"Compilation error","correct":false},{"id":606563,"option":"Runtime error","correct":false}]},{"q":"<p>In C, which of the following statements about generic pointers is correct:</p>\n\n<ol>\n\t<li>It cannot be dereferenced.</li>\n\t<li>The <strong>sizeof</strong><strong>()</strong> operator cannot be used to find the size of a dangling pointer.</li>\n\t<li>It can only hold integer pointers.</li>\n\t<li>It can be held by any types of pointers without implementing the typecasting process.</li>\n</ol>","a":[{"id":600443,"option":"1 and 4","correct":true},{"id":600444,"option":"1, 2 and 4","correct":false},{"id":600445,"option":"2, 3, and 4","correct":false},{"id":600446,"option":"2 and 3","correct":false}]},{"q":"<p>In C, which of the following library functions is used to block a block of memory on the heap?</p>","a":[{"id":598945,"option":"Malloc()","correct":true},{"id":598946,"option":"Calloc()","correct":false},{"id":598947,"option":"Realloc()","correct":false},{"id":598948,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following syntaxes is used to declare a <strong>float </strong>pointer?            </p>","a":[{"id":600318,"option":"float *pointer_name;","correct":true},{"id":600319,"option":"*float pointer_name;","correct":false},{"id":600320,"option":"float $pointer_name;","correct":false},{"id":600321,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    char *getString()\n    {\n        char *str = \"Nice Coding\";\n        return str;\n    }\n    int main()\n    {\n        printf(\"%s\", getString());\n    }\n</code></pre>","a":[{"id":126152,"option":"Run-time error","correct":false},{"id":126153,"option":"Compilation error","correct":false},{"id":126154,"option":"Nice Coding","correct":true},{"id":126155,"option":"Garbage value","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int addmult(int i, int j)\n    {\n        int k, l;\n        k = i + j;\n        l = i * j;\n        return (k,l);\n    }\n    int main()\n    {\n        int a=3, b=4,c,d;\n        c = addmult(a,b);\n        d = addmult(a,b);\n        printf(\"%d %d\\n\",c,d);\n      }\n</code></pre>","a":[{"id":125288,"option":"12  12","correct":true},{"id":125289,"option":"Run-time error","correct":false},{"id":125290,"option":" 6  7","correct":false},{"id":125291,"option":"7  6","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void main()\n    {\n        int a[3] = {1, 2, 3};\n        int *p = a;\n        printf(\"%d\\t%d\", *p, a[1]);\n    }\n</code></pre>","a":[{"id":123832,"option":"2  3","correct":false},{"id":123833,"option":"1  2","correct":true},{"id":123834,"option":"Compilation fails","correct":false},{"id":123835,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define MAX 12\n    int main()\n    {\n        const int max=12;\n        char array[max];\n        char string[MAX];\n        array[0] = string[0] = 'A';\n        printf(\"%c %c\\n\", array[0], string[0]);\n    }\n</code></pre>","a":[{"id":125628,"option":"Compilation error","correct":false},{"id":125629,"option":"Run-time error","correct":false},{"id":125630,"option":"A A","correct":true},{"id":125631,"option":"A","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char str[20] = \"Hackerearth\";\n        char * p=str;\n        *(p+4)='e';\n        printf(\"%s\\n\", str);\n        return 0;\n    }\n</code></pre>","a":[{"id":124816,"option":"Compilation error","correct":false},{"id":124817,"option":"Run-time error","correct":false},{"id":124818,"option":"Hackerearth","correct":true},{"id":124819,"option":"Haceerearth","correct":false}]},{"q":"<p>In C, which of the following statements about <strong>external linkage</strong> is true?</p>","a":[{"id":124608,"option":"It denotes static variables and functions with file scope.","correct":false},{"id":124609,"option":"It denotes global variables and functions, and non-static variables.","correct":true},{"id":124610,"option":"It denotes local variables.","correct":false},{"id":124611,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        int var = 015;\n        printf(\"%d\", var);\n    }\n</code></pre>","a":[{"id":123184,"option":"015","correct":false},{"id":123185,"option":"15","correct":false},{"id":123186,"option":"13","correct":true},{"id":123187,"option":"10","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int c = 2 ^ 2;\n            printf(\"%d\\n\", c);\n        }\n</code></pre>","a":[{"id":122704,"option":"2","correct":false},{"id":122705,"option":"4","correct":false},{"id":122706,"option":"0","correct":true},{"id":122707,"option":"1","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n            int main()\n            {\n                int x= 10, y= 10;\n                if (x=5)\n                y--;\n                ++x;\n                printf(\"%d, %d\", x--, y--);\n            }\n</code></pre>","a":[{"id":122668,"option":"6, 10","correct":false},{"id":122669,"option":"7, 9","correct":false},{"id":122670,"option":"6, 9","correct":true},{"id":122671,"option":"5, 9","correct":false}]},{"q":"<p>What is the output of the  following C code:</p>\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        void main()\n        {\n            int x = 0, y = 2, z = 3;\n            int a = ~(~x &amp; y | (~z));\n            printf(\"%d\", a);\n        }\n</code></pre>","a":[{"id":122552,"option":"2","correct":false},{"id":122553,"option":"0","correct":false},{"id":122554,"option":"1","correct":true},{"id":122555,"option":"-1","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        int main()\n        {\n            int i = -(-(-3));\n            int j = i++ + i;\n            printf(\"%d\\n\", --j);\n        }\n</code></pre>","a":[{"id":122684,"option":"Compilation error","correct":false},{"id":122685,"option":"-5","correct":false},{"id":122686,"option":"-6","correct":true},{"id":122687,"option":"6","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        int main()\n        {\n            int main = -1;\n            printf(\"%d\", main);\n            return 0;\n        }\n</code></pre>","a":[{"id":122392,"option":"1","correct":false},{"id":122393,"option":"-1","correct":true},{"id":122394,"option":"Compilation error","correct":false},{"id":122395,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int x, y, z;\n        x=y=z=1;\n        z = ++x || ++y &amp;&amp; ++z;\n        printf(\"%d,%d,%d\\n\",y,x,z);\n        return 0;\n    }\n</code></pre>","a":[{"id":125196,"option":"1,1,2","correct":false},{"id":125197,"option":"1,2,1","correct":true},{"id":125198,"option":"2,2,1","correct":false},{"id":125199,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;string.h&gt;\n    #include &lt;stdio.h&gt;\n\n    int main(void)\n    {\n        char text[] = \"I learn through Hackerearth.com\";\n        char *p, c = ' ';\n        p= strrchr(text, c);\n        if (p)\n            printf(\"%d\\n\",p-text);\n        else\n            printf(\"Not found \");\n    }\n</code></pre>","a":[{"id":125568,"option":"14","correct":false},{"id":125569,"option":"15","correct":true},{"id":125570,"option":"8","correct":false},{"id":125571,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            char *c=\"Hack\";\n            printf(\"%c\",*(*&amp;(c)+1));\n        }\n</code></pre>","a":[{"id":122268,"option":"H","correct":false},{"id":122269,"option":"a","correct":true},{"id":122270,"option":"Compilation error","correct":false},{"id":122271,"option":"Random address","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    typedef struct student\n    {\n        char *a;\n    }stu;\n    int main()\n    {\n        struct student s;\n        s.a = \"hackerearth\";\n        printf(\"%s\", s.a);\n    }\n</code></pre>","a":[{"id":124444,"option":"Compilation error","correct":false},{"id":124445,"option":"Run-time error","correct":false},{"id":124446,"option":"hackerearth","correct":true},{"id":124447,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>\n    #include &lt;stdio.h&gt;\n    struct student\n    {\n        char a[5];\n    };\n    int main()\n    {\n        struct student s[] = {\"hi\",\"hacker\"};\n        printf(\"%c\", s[1].a[3]);\n    }\n</code></pre>","a":[{"id":124392,"option":"k","correct":false},{"id":124393,"option":"Compilation failure","correct":true},{"id":124394,"option":"h","correct":false},{"id":124395,"option":"hacker","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char str[] = \"HACKEREARTH\";\n        char *s = str;\n        printf(\"%s\\n\", s++ +3);\n        return 0;\n    }\n</code></pre>","a":[{"id":124876,"option":"HAC","correct":false},{"id":124877,"option":"KEREARTH","correct":true},{"id":124878,"option":"EREARTH","correct":false},{"id":124879,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        printf(\"%d, %d, %d\\n\",  sizeof(3.14l),sizeof(3.14f), sizeof(3.14));\n        return 0;\n    }\n</code></pre>","a":[{"id":124764,"option":"4, 8,16","correct":false},{"id":124765,"option":"4 ,4, 4","correct":false},{"id":124766,"option":"16, 4, 8","correct":true},{"id":124767,"option":"8, 4, 4","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;math.h&gt;\n    int main()\n    {\n        printf(\"\\n Result : %f\" , ceil(1.44) );\n        printf(\"\\n Result : %f\" , floor(1.44) );\n        }\n</code></pre>","a":[{"id":124624,"option":"Result : 2\r\nResult : 1","correct":false},{"id":124625,"option":"Result : 2.000000\r\nResult : 1.000000","correct":true},{"id":124626,"option":"Result : 2.0\r\nResult : 1.0","correct":false},{"id":124627,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n    void main()\n    {\n        char *s= \"hacker\";\n        char *p = s;\n        printf(\"%c\\t%c\", *(p + 3),  s[1]);\n    }\n</code></pre>","a":[{"id":123848,"option":"e    a","correct":false},{"id":123849,"option":"k\ta","correct":true},{"id":123850,"option":"Compilation fails","correct":false},{"id":123851,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int foo()\n    {\n        return (double)(double)5.0;\n    }\n    void main()\n    {\n        int x=0;\n        x = foo();\n        printf(\"%d\", x);\n    }\n</code></pre>","a":[{"id":123808,"option":"5.0","correct":false},{"id":123809,"option":"5.00","correct":false},{"id":123810,"option":"Compilation fails","correct":false},{"id":123811,"option":"5","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    #define PI 3.14\n    int main()\n    {\n        printf(\"%d\", sizeof(PI));\n    }\n</code></pre>","a":[{"id":123292,"option":"Compilation error","correct":false},{"id":123293,"option":"4","correct":false},{"id":123294,"option":"1","correct":false},{"id":123295,"option":"8","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void f(char *k)\n    {\n        ++k;\n        k[1] = 'm';\n        k--;\n        printf(\"%c\\n\", *k);\n    }\n    void main()\n    {\n        char s[] = \"hack\";\n        f(s);\n    }\n</code></pre>","a":[{"id":123956,"option":"a","correct":false},{"id":123957,"option":"h","correct":true},{"id":123958,"option":"c","correct":false},{"id":123959,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n        int main()\n        {\n            int a = 1, b = 2, c = -1, d = 4, e;\n            e = c + d = b * a;\n            printf(\"%d, %d\\n\", e, d);\n        }\n</code></pre>","a":[{"id":122932,"option":"3","correct":false},{"id":122933,"option":"2","correct":false},{"id":122934,"option":"1","correct":false},{"id":122935,"option":"Compilation error","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int i = -(-(-3));\n    int j = i++ + i;\n    printf(\"%d\\n\", j);\n}\n</code></pre>","a":[{"id":122680,"option":"-6","correct":false},{"id":122681,"option":"Compilation error","correct":false},{"id":122682,"option":"-4","correct":false},{"id":122683,"option":"-5","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int x = 7, y = 1;\n    int z = (y++) ? 2 : y == 1 &amp;&amp; x;\n    printf(\"%d\\n\", z--);\n    return 0;\n}\n</code></pre>","a":[{"id":122904,"option":"Compilation error","correct":false},{"id":122905,"option":"1","correct":false},{"id":122906,"option":"2","correct":true},{"id":122907,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n   signed char chr;\n   chr = 130;\n   printf(\"%d\\n\", chr);\n   return 0;\n}\n</code></pre>","a":[{"id":122408,"option":"130","correct":false},{"id":122409,"option":"126","correct":false},{"id":122410,"option":"-126","correct":true},{"id":122411,"option":"-130","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int i = -(-3);\n            int j = i++ + i;\n            printf(\"%d\\n\", j);\n        }\n</code></pre>","a":[{"id":122676,"option":"Compilation error","correct":false},{"id":122677,"option":"7","correct":true},{"id":122678,"option":"6","correct":false},{"id":122679,"option":"4","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        int *((*x)())[2];\n        x();\n        printf(\"after x\\n\");\n    }\n    int *((*x)())[2]\n    {\n        int **str;\n        str = (int*)malloc(sizeof(int)* 2);\n        return str;\n    }\n</code></pre>","a":[{"id":124096,"option":"Run-time error","correct":false},{"id":124097,"option":"Compilation failure","correct":true},{"id":124098,"option":"after x","correct":false},{"id":124099,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following is used to declare the constant <code>3.11</code> as a <strong>float</strong>?</p>","a":[{"id":126444,"option":"Use float(3.11f)","correct":false},{"id":126445,"option":"Use 3.11f","correct":true},{"id":126446,"option":"Use f(3.11)","correct":false},{"id":126447,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        char str[] = \"HackerCode\";\n        printf(\"%s \",&amp;str[2]);\n        printf(\"%s \",str);\n        printf(\"%s \",&amp;str);\n    }\n</code></pre>","a":[{"id":125884,"option":"kerCode HackerCode HackerCode ","correct":false},{"id":125885,"option":"ckerCode    HackerCode    HackerCode ","correct":true},{"id":125886,"option":"Compilation error","correct":false},{"id":125887,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    void main()\n    {\n        char str[10];\n        int i;\n        for(i=0;i&lt;5;i++)\n        i[str] = 'A';\n        i[str]='\\0';\n        printf(\"%s\",str);\n    }\n</code></pre>","a":[{"id":125880,"option":"Garbage value","correct":false},{"id":125881,"option":"Compilation error","correct":false},{"id":125882,"option":"AAAAA","correct":true},{"id":125883,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int choice = 7;\n        switch (choice)\n        {\n            printf(\"A\");\n            default:\n            printf(\"D\");\n            break;\n            case 1:\n            printf(\"E\");\n            break;\n        }\n    }\n</code></pre>","a":[{"id":125796,"option":"A  D","correct":false},{"id":125797,"option":"D","correct":true},{"id":125798,"option":"A D E","correct":false},{"id":125799,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        char str1[20] = \"Hacker\", str2[20] = \"Earth\";\n        printf(\"%s\\n\", strcat(str2, strcat(str1, str2)));\n    }\n</code></pre>","a":[{"id":125588,"option":"Compilation error","correct":false},{"id":125589,"option":"EarthHackerEarth","correct":true},{"id":125590,"option":"EarthHacker","correct":false},{"id":125591,"option":"Hacker","correct":false}]},{"q":"<p>Which of these denotes <strong>#define</strong> statements in C?</p>","a":[{"id":125548,"option":"#define CUBE(x) (X*X*X)","correct":false},{"id":125549,"option":"#define CUBE (X) (X*X*X);","correct":false},{"id":125550,"option":"#define CUBE(X)(X*X*X)","correct":true},{"id":125551,"option":"#define CUBE(X) {X*X*X}","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define S(a, b) int t; t=a, a=b, b=t;\n    int main()\n    {\n        int a=1, b=2;\n        S(a, b);\n        printf(\"%d,%d\\n\", a, b);\n    }\n</code></pre>","a":[{"id":125504,"option":"1  2 ","correct":false},{"id":125505,"option":"2   1 ","correct":true},{"id":125506,"option":"Compilation error","correct":false},{"id":125507,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define Hack  Hackerearth\n    int main()\n    {\n        printf(\"Hack\\n\");\n    }\n</code></pre>","a":[{"id":125496,"option":"Hack","correct":true},{"id":125497,"option":"Hackereearth","correct":false},{"id":125498,"option":"Compilation error","correct":false},{"id":125499,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int x = 1, y = 2;\n        if((x) &amp;&amp; (x))\n            printf(\"x = %d\\n\", x);\n        else\n            printf(\"y = %d\\n\", y);\n        return 0;\n    }\n</code></pre>","a":[{"id":125172,"option":"y= 2","correct":false},{"id":125173,"option":"x = 1","correct":true},{"id":125174,"option":"x=2","correct":false},{"id":125175,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void fun(char *k)\n    {\n        printf(\"%s\", k);\n    }\n    void main()\n    {\n        char s[] = \"hackerearth\";\n        fun(s);\n    }\n</code></pre>","a":[{"id":123948,"option":"hackerearth","correct":true},{"id":123949,"option":"h","correct":false},{"id":123950,"option":"Compilation fails","correct":false},{"id":123951,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    float f1 = 0.01;\n    if (f1 == 0.01f)\n        printf(\"equal\\n\");\n    else\n        printf(\"not equal\\n\");\n}\n</code></pre>","a":[{"id":123160,"option":"equal","correct":true},{"id":123161,"option":"not equal","correct":false},{"id":123162,"option":"Compilation error","correct":false},{"id":123163,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following operators has the lowest precedence?</p>","a":[{"id":123016,"option":"!=","correct":false},{"id":123017,"option":"&&","correct":false},{"id":123018,"option":",","correct":true},{"id":123019,"option":"?:","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int i = 0;\n    int x = i++, y = ++i;\n    printf(\"%d, %d\\n\", x, y);\n    return 0;\n}\n</code></pre>","a":[{"id":122736,"option":"1, 2","correct":false},{"id":122737,"option":"0, 1","correct":false},{"id":122738,"option":"0, 2","correct":true},{"id":122739,"option":"2, 1","correct":false}]},{"q":"<p>In C, how is the <strong>associativity</strong> of an operator determined?</p>","a":[{"id":123008,"option":"Right-to-left","correct":false},{"id":123009,"option":"Left-to-right","correct":false},{"id":123010,"option":"Random ","correct":false},{"id":123011,"option":"Right-to-left or left-to-right","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int x = 0.01;\n    if (x == 0.01)\n        printf(\"Hacker\");\n    else\n        printf(\"Earth\");\n}\n</code></pre>","a":[{"id":122568,"option":"Hacker","correct":false},{"id":122569,"option":"Compilation error","correct":false},{"id":122570,"option":"Earth","correct":true},{"id":122571,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int a = 1, b = 4, c = 0, d;\n    d = ++a &amp;&amp; ++b || ++c;\n    printf(\"%d, %d, %d\", d, a, c);\n}\n</code></pre>","a":[{"id":122780,"option":"1, 2, 1","correct":false},{"id":122781,"option":" 1, 2, 0","correct":true},{"id":122782,"option":"2, 2, 1","correct":false},{"id":122783,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int arr[10]; \n    printf(\"%d\", *arr + 40 - (*arr - (40)));\n}\n</code></pre>","a":[{"id":122248,"option":"0","correct":false},{"id":122249,"option":"80","correct":true},{"id":122250,"option":"Compilation error","correct":false},{"id":122251,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int h[4] = {1, 2, 3, 4};\n    int *a = h;\n    printf(\"%d\\t%d\", a, h);\n}\n</code></pre>","a":[{"id":122292,"option":"Compilation error","correct":false},{"id":122293,"option":"Different address is printed","correct":false},{"id":122294,"option":"Same address is printed","correct":true},{"id":122295,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n<pre class=\"prettyprint\"><code>    int main()\n    {\n        extern int a;\n        printf(\"%d\\n\", a);\n        return 0;\n    }\n\n    int a=20;\n\n</code></pre>","a":[{"id":122148,"option":"Compilation error","correct":false},{"id":122149,"option":"20","correct":true},{"id":122150,"option":"21","correct":false},{"id":122151,"option":"Garbage value","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a = -1;\n    int b = ++a + a++ + --a;\n    printf(\"%d\", b);\n}\n</code></pre>","a":[{"id":122452,"option":"0","correct":false},{"id":122453,"option":"-1","correct":false},{"id":122454,"option":"1","correct":true},{"id":122455,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    void fun(int **p)\n    {\n        static int q = 30;\n        *p = &amp;q;\n    }\n\n    int main()\n    {\n        int r = 20;\n        int *p = &amp;r;\n        fun(&amp;p);\n        printf(\"%d\", *p);\n    }\n</code></pre>","a":[{"id":126268,"option":"30","correct":true},{"id":126269,"option":"20","correct":false},{"id":126270,"option":"Random Address","correct":false},{"id":126271,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int main() = 100;\n    printf(\"%d\", main());\n    return 0;\n}\n</code></pre>","a":[{"id":123084,"option":"100","correct":false},{"id":123085,"option":"Compilation error","correct":true},{"id":123086,"option":"Runtime error","correct":false},{"id":123087,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define PRINT(k) printf(\"%d,\",k)\n    int main()\n    {\n        int x=-1, y=2, z=0;\n        PRINT(x);\n        PRINT(y);\n        PRINT(z);\n    }\n</code></pre>","a":[{"id":125492,"option":"Compilation error","correct":false},{"id":125493,"option":"Runtime error","correct":false},{"id":125494,"option":"-1,2,0,","correct":true},{"id":125495,"option":"-1,2,","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    void main(){\n        static int a=2,b=0,c=8;\n        static int *arr1[2]={&amp;a,&amp;b};\n        static int *arr2[2]={&amp;b,&amp;c};\n        int* (*arr[2])[2]={&amp;arr1,&amp;arr2};\n        printf(\"%d\\t\",*(*arr[0])[1]);\n    }\n</code></pre>","a":[{"id":125752,"option":"2","correct":false},{"id":125753,"option":"0","correct":true},{"id":125754,"option":"8","correct":false},{"id":125755,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define M(x, y) (x&lt;y)? x : y;\n    int main()\n    {\n        int x=3, y=4, z;\n        z = M(x+y/2, y-1);\n        if(z &gt; 0)\n        printf(\"%d\\n\", z);\n    }\n</code></pre>","a":[{"id":125500,"option":"4","correct":false},{"id":125501,"option":"3","correct":true},{"id":125502,"option":"2","correct":false},{"id":125503,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        static int a[10];\n        int j = 0;\n        a[j] = j ;\n        printf(\"%d, %d, %d\\n\", a[0], a[1], j);\n    }\n</code></pre>","a":[{"id":125388,"option":"0  1   0 ","correct":false},{"id":125389,"option":"0   0   0","correct":true},{"id":125390,"option":"1  1   0","correct":false},{"id":125391,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int i = !(-1);\n    int x = i++, y = ++i;\n    printf(\"%d, %d\\n\", x, y);\n    return 0;\n}\n</code></pre>","a":[{"id":122740,"option":"0, 1","correct":false},{"id":122741,"option":"-1, 0","correct":false},{"id":122742,"option":"1, 2","correct":false},{"id":122743,"option":"0, 2","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int x = -1, y = 0, z = 5;\n    int a = x &amp;&amp; (y) || z++;\n    printf(\"%d\", z);\n}\n</code></pre>","a":[{"id":122496,"option":"0","correct":false},{"id":122497,"option":"5","correct":false},{"id":122498,"option":"6","correct":true},{"id":122499,"option":"7","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int i = !(-1);\n            int x = i++, y = ++i;\n            printf(\"%d % d\\n\", ++x, ++y);\n            return 0;\n        }\n</code></pre>","a":[{"id":122744,"option":"2  3","correct":false},{"id":122745,"option":"3  4","correct":false},{"id":122746,"option":"1  3","correct":true},{"id":122747,"option":"1  4","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int i = 3;\n    int l = i / -2;\n    int k = i % -2;\n    printf(\"%d %d\\n\", l, k);\n    return 0;\n}\n</code></pre>","a":[{"id":123264,"option":"-1 1","correct":true},{"id":123265,"option":"1 1 ","correct":false},{"id":123266,"option":"1 0","correct":false},{"id":123267,"option":"0 1","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    float x = '\\n';\n    printf(\"%f\", x);\n    return 0;\n}\n</code></pre>","a":[{"id":123136,"option":"10.00","correct":false},{"id":123137,"option":"10.000000","correct":true},{"id":123138,"option":"11.000000","correct":false},{"id":123139,"option":"65.000000","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        char dest[] = {97, 97, 0};\n        char src[] = \"aaa\";\n        int i;\n        if((i = memcmp(dest, src, 2))==0)\n        printf(\"Hacking\");\n        else\n            printf(\"Missed\");\n    }\n</code></pre>","a":[{"id":125072,"option":"Missed","correct":false},{"id":125073,"option":"Hacking","correct":true},{"id":125074,"option":"Compilation error","correct":false},{"id":125075,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int x =-1;\n    if (x &gt;&gt; 1)\n       printf(\"%d\\n\", x);\n}\n</code></pre>","a":[{"id":122732,"option":"Compilation error","correct":false},{"id":122733,"option":"-1","correct":true},{"id":122734,"option":"-2","correct":false},{"id":122735,"option":"0","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    int fun(char *str1)\n    {\n        char *str2 = str1;\n        while(*++str1);\n        return (str1-str2);\n    }\n    int main()\n    {\n        char *str = \"hackerearth\";\n        printf(\"%d\", fun(str));\n    }\n</code></pre>","a":[{"id":126260,"option":"10","correct":false},{"id":126261,"option":"12","correct":false},{"id":126262,"option":"11","correct":true},{"id":126263,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a = 1, b = 3;\n    a += b -= a;\n    printf(\"%d %d\", a, b);\n}\n</code></pre>","a":[{"id":122804,"option":"Compilation error","correct":false},{"id":122805,"option":"2 3","correct":false},{"id":122806,"option":"3 2","correct":true},{"id":122807,"option":"None of these","correct":false}]},{"q":"<p>In C, what is the difference between the <strong>ASCII</strong> values of the uppercase and the lowercase forms of the same alphabet?</p>","a":[{"id":123572,"option":"1","correct":false},{"id":123573,"option":"16","correct":false},{"id":123574,"option":"32","correct":true},{"id":123575,"option":"64","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    double a = -1.00000;\n    double b = 5.6;\n    float c;\n    c = a - b;\n    printf(\"%f\",  c);\n}\n</code></pre>","a":[{"id":122480,"option":"-6","correct":false},{"id":122481,"option":"-6.6","correct":false},{"id":122482,"option":"-6.600000","correct":true},{"id":122483,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following describes <strong><code>extern int i?</code></strong></p>","a":[{"id":124632,"option":"Declaration","correct":true},{"id":124633,"option":"Definition","correct":false},{"id":124634,"option":"Function","correct":false},{"id":124635,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        int main =100;\n        printf(\"%d\", main);\n        return 0;\n    }\n</code></pre>","a":[{"id":123088,"option":"Compilation error","correct":false},{"id":123089,"option":"100","correct":true},{"id":123090,"option":"Runtime error","correct":false},{"id":123091,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int c = 2 ^ 3 ^ 0;\n            printf(\"%d\\n\", c);\n        }\n</code></pre>","a":[{"id":122712,"option":"1","correct":true},{"id":122713,"option":"8","correct":false},{"id":122714,"option":"0","correct":false},{"id":122715,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nmain()\n{\n   int a, b;\n   a = 10;\n   printf(\"%d\", (a == 1) ? 20:30);\n}\n</code></pre>","a":[{"id":122832,"option":"20","correct":false},{"id":122833,"option":"Compilation error","correct":false},{"id":122834,"option":"30","correct":true},{"id":122835,"option":"1","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int y = 3;\n    int x = (1 % 2) * 3 / 2;\n    printf(\"Value of x is %d\", x);\n}\n</code></pre>","a":[{"id":122424,"option":"Value of x is 0","correct":false},{"id":122425,"option":"Value of x is 2","correct":false},{"id":122426,"option":"Value of x is 1","correct":true},{"id":122427,"option":"Value of x is 4","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        float a = 2.45555555555;\n        printf(\"%f\", a);\n    }\n</code></pre>","a":[{"id":123344,"option":"2.455","correct":false},{"id":123345,"option":"2.455555","correct":true},{"id":123346,"option":"2.45","correct":false},{"id":123347,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int i = !(10+(-1));\n            int j = ++i + i;\n            printf(\"%d\\n\", j);\n        }\n</code></pre>","a":[{"id":122696,"option":"0","correct":false},{"id":122697,"option":"2","correct":true},{"id":122698,"option":"1","correct":false},{"id":122699,"option":"3","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int i = 11;\n    int *p = &amp;i;\n    printf(\"%d\\n\", *p);\n}\n</code></pre>","a":[{"id":122752,"option":"Compilation error","correct":false},{"id":122753,"option":"Memory address of i","correct":false},{"id":122754,"option":"Run-time error","correct":false},{"id":122755,"option":"11","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nvoid main()\n{\n    int a = 0;\n    int k = (a++, ++a,--a, a++);\n    printf(\"%d\\n\", k);\n}\n</code></pre>","a":[{"id":122788,"option":"0","correct":false},{"id":122789,"option":"1","correct":true},{"id":122790,"option":"2","correct":false},{"id":122791,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define R 20\n    #define C 20\n    int main()\n    {\n        int (*p)[R][C];\n        printf(\"%d\",  sizeof(*p));\n    }\n</code></pre>","a":[{"id":126288,"option":"800","correct":false},{"id":126289,"option":"1600","correct":true},{"id":126290,"option":"1000","correct":false},{"id":126291,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint foo()\n{\n    return (double)(char) 5.0;\n}\n\nvoid main()\n{\n    int x = 0;\n    x = foo();\n    printf(\"%d\", x);\n}\n</code></pre>","a":[{"id":123804,"option":"5","correct":true},{"id":123805,"option":"5.0","correct":false},{"id":123806,"option":"5.00","correct":false},{"id":123807,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        char str1[20] = \"Hacker\", str2[20] = \"Earth\";\n        printf(\"%s\\n\", strcpy(str2, strcat(str1, str2)));\n    }\n</code></pre>","a":[{"id":125584,"option":"Hacker","correct":false},{"id":125585,"option":"Earth","correct":false},{"id":125586,"option":"HackerEarth","correct":true},{"id":125587,"option":"Compilation error","correct":false}]},{"q":"<p>In C, which of the following can be assigned to a <strong>float</strong> variable?</p>","a":[{"id":123392,"option":"4.666666","correct":false},{"id":123393,"option":"4.666","correct":false},{"id":123394,"option":"4","correct":false},{"id":123395,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #define CUBE(x) (x*x*x)\n    int main()\n    {\n        int a, b=4;\n        a = CUBE(b++);\n        printf(\"%d, %d\\n\", a, b);\n    }\n</code></pre>","a":[{"id":125520,"option":"64, 4","correct":false},{"id":125521,"option":"120, 7","correct":true},{"id":125522,"option":"64, 7","correct":false},{"id":125523,"option":"None of  these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void main()\n    {\n        char *s= \"hackerearth\";\n        char *p = s + 2;\n        printf(\"%c\\t%c\", *p, s[1]);\n    }\n</code></pre>","a":[{"id":123920,"option":"c\th","correct":false},{"id":123921,"option":"k      h","correct":false},{"id":123922,"option":"c\ta","correct":true},{"id":123923,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int a, b=3;\n        a = (b++*b++*b++);\n        printf(\"%d, %d\\n\", a, b);\n    }\n</code></pre>","a":[{"id":125524,"option":"27,  4","correct":false},{"id":125525,"option":"60,  6","correct":true},{"id":125526,"option":"27,  6","correct":false},{"id":125527,"option":"60,  5","correct":false}]},{"q":"<p>In C, what is the maximum number of digits that can be presented after the decimal point for a <strong>float</strong> variable?</p>","a":[{"id":123396,"option":"3","correct":false},{"id":123397,"option":"6","correct":true},{"id":123398,"option":"9","correct":false},{"id":123399,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nunion temp\n{\n    char a;\n    char b;\n    int c;\n} t;\n\nint main()\n{\n    printf(\"%d\", sizeof(t));\n    return 0;\n}\n</code></pre>","a":[{"id":123324,"option":"8","correct":false},{"id":123325,"option":"6","correct":false},{"id":123326,"option":"4","correct":true},{"id":123327,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int x = 4, z = 3;\n    int y = (x &lt;&lt; 3) + (~z) - (++x);\n    printf(\" %d\\n\", y);\n}\n</code></pre>","a":[{"id":122536,"option":"0","correct":false},{"id":122537,"option":"-1","correct":false},{"id":122538,"option":"23","correct":true},{"id":122539,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        int f = 0, g = 1;\n        int i;\n        for(i = 0; i &lt;4; i++)\n        {\n            printf(\"%d\", f);\n            f = f + g;\n            g = f - g;\n        }\n    }\n</code></pre>","a":[{"id":126276,"option":"0 1 1 2","correct":true},{"id":126277,"option":"0 0 1 1","correct":false},{"id":126278,"option":"0  1  0 2","correct":false},{"id":126279,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following statements is correct?</p>","a":[{"id":124128,"option":"The '%' operator can be used with 'float' values","correct":false},{"id":124129,"option":"The pointer to a function is not allowed","correct":false},{"id":124130,"option":"A string literal always ends with '\\0'","correct":true},{"id":124131,"option":"It does not allow dynamic allocation of arrays","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char str[20] = \"Mack\";\n        char *const p=str;\n        *p='H';\n        printf(\"%s\\n\", str);\n        return 0;\n    }\n</code></pre>","a":[{"id":124804,"option":"Mack","correct":false},{"id":124805,"option":"Hack","correct":true},{"id":124806,"option":"Compilation error","correct":false},{"id":124807,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int x= 10, y= 10;\n    if (x == (-1))\n        y--;\n    ++x;\n    printf(\"%d, %d\", x--, y--);\n}\n</code></pre>","a":[{"id":122672,"option":"Compilation error","correct":false},{"id":122673,"option":"11, 11","correct":false},{"id":122674,"option":"11, 10","correct":true},{"id":122675,"option":"9, 10","correct":false}]},{"q":"<p>In C, you are working with assignment operators.</p>\n\n<p>You are given two variables <em>a</em> and <em>b</em>. If you are required to perform various operations using these assignment operators, then which of the following statements about these operations are correct:</p>\n\n<ol>\n\t<li><em>a + = b</em> can also be written as <em>a + 1 = b</em></li>\n\t<li><em>a - = b</em> can also be written as <em>a = a - b</em></li>\n\t<li><em>a * = b</em> can also be written as <em>a *1 = b</em></li>\n\t<li><em>a / = b </em>can also be written as <em>a = a / b</em></li>\n</ol>","a":[{"id":1400540,"option":"1 and 3","correct":false},{"id":1400541,"option":"2 and 4","correct":true},{"id":1400542,"option":"All of these","correct":false},{"id":1400543,"option":"None of these","correct":false}]},{"q":"<p>In C, if you are required to arrange the following operators from lowest to the highest precedence order, then which of these sequences of these operators is correct:</p>\n\n<ol>\n\t<li><span class=\"mathjax-latex\">\\(&gt;&gt;\\)</span></li>\n\t<li><span class=\"mathjax-latex\">\\(\\&amp;\\)</span></li>\n\t<li><span class=\"mathjax-latex\">\\(\\sim\\)</span></li>\n\t<li><span class=\"mathjax-latex\">\\(*\\)</span></li>\n\t<li><span class=\"mathjax-latex\">\\(()\\)</span></li>\n</ol>","a":[{"id":122460,"option":"5, 3, 4, 1, 2","correct":false},{"id":122461,"option":"2, 1, 4, 3, 5","correct":true},{"id":122462,"option":"5, 1, 2, 3, 4","correct":false},{"id":122463,"option":"2, 1, 5, 3, 4","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int i,j;\n    for (i = 0; i &lt;=10; i++)\n    {\n        for (j&lt;=4;j++;j=0)\n        {\n            for(i=j;i&lt;=j;i++)\n            {\n                j = myhackFunc(j);\n            }\n        } \n    }\n    printf(\"%d\",j);\n}\nint myhackFunc(int i)\n{\n    static int hackvar = 0;\n    hackvar = hackvar + i*i+i-i/i;\n    if(hackvar&gt;=i*i+i)\n    {\n        return(hackvar+i-i*i);\n    }\n    else\n    {\n        return(hackvar+i*i+i);\n    }\n}\n</code></pre>","a":[{"id":126096,"option":"10","correct":false},{"id":126097,"option":"1","correct":true},{"id":126098,"option":"0","correct":false},{"id":126099,"option":"Runtime error","correct":false}]},{"q":"<p>In C or C++, which of the following statements is the valid definition of <strong>pointers</strong>?</p>","a":[{"id":597108,"option":"Pointers are variables that stores the address of another variable.","correct":true},{"id":597109,"option":"Pointers are variables that stores the value of another variable.","correct":false},{"id":597110,"option":"Pointers are variables that stores the data type of another variable.","correct":false},{"id":597111,"option":"Pointers are variables that stores the state of another variable.","correct":false}]},{"q":"<p>In C++, which of the following is the correct syntax to declare a pointer?</p>","a":[{"id":597124,"option":"datatype *pointer_name;","correct":true},{"id":597125,"option":"datatype &pointer_name;","correct":false},{"id":597126,"option":"datatype #pointer_name;","correct":false},{"id":597127,"option":"None of these","correct":false}]},{"q":"<p>In C and C++, which of the following statements about the function <strong>memcpy() </strong>are true?</p>\n\n<ol>\n\t<li>It is used to copy a memory block from one location to another.</li>\n\t<li>It is declared in the string.h header file.</li>\n\t<li>It does not check for overflow.</li>\n</ol>","a":[{"id":606662,"option":"1 and 2","correct":false},{"id":606663,"option":"1 and 3","correct":false},{"id":606664,"option":"2 and 3","correct":false},{"id":606665,"option":"All of these","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\n     char *a= \"hack\";\n     char *b = a;\n     printf(\"%c\\t%c\", *(a-0), *(b-0));\n}\n</code></pre>","a":[{"id":122308,"option":"Compilation error","correct":false},{"id":122309,"option":"h    h","correct":true},{"id":122310,"option":"k    k","correct":false},{"id":122311,"option":"None of these","correct":false}]},{"q":"<p>Which of these three C sorting algorithms has the least complexity if the array is already sorted:</p>\n\n<pre class=\"prettyprint\"><code>1. for (i = 1; i &lt; n; i++){\n    key = arr[i]; j = i - 1;\n    while (j &gt;= 0 &amp;&amp; arr[j] &gt; key){\n      arr[j+1] = arr[j]; j = j - 1;\n    }\n    arr[j+1] = key;\n   }\n------------------------------------------------\n2. for (i = 0; i &lt; n-1; i++)      \n    for (j = 0; j &lt; n - i - 1; j++) \n      if (arr[j] &gt; arr[j+1])\n          t = arr[j], arr[j] = arr[j+1], arr[j+1] = t;\n------------------------------------------------\n3. for (i = 0; i &lt; n-1; i++)      \n    for (j = i+1; j &lt; n; j++) \n      if (arr[i] &gt; arr[j])\n          t = arr[i], arr[i] = arr[j], arr[j] = t;</code></pre>\n\n<p> </p>","a":[{"id":721526,"option":"All Algorithms have equal complexity","correct":false},{"id":721527,"option":"Algorithm 1","correct":true},{"id":721528,"option":"Algorithm 2","correct":false},{"id":721529,"option":"Algorithm 3","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\nunsigned testhack(unsigned int val, unsigned int a) \n{ \n    if (val == 0)  return a; \n  \n    return testhack(val-1, val*a); \n} \nunsigned int hck(unsigned int val) \n{ \n   return testhack(val, 1); \n} \n\nint main() \n{ \n    printf(\"%d\",hck(5));\n    return 0; \n} \n</code></pre>\n\n<p> </p>","a":[{"id":700980,"option":"5","correct":false},{"id":700981,"option":"Infinite loop","correct":false},{"id":700982,"option":"120","correct":true},{"id":700983,"option":"Compilation Error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nvoid main()\n{\nchar str[40],one,two;\nstrcpy(str,\"This is a character string.\");\none = str[0];\ntwo = *str;\nprintf(\"%c %c\\n\",one,two);\none = str[8];\ntwo = *(str+8);\nprintf(\"%c %c\",one,two);\n}</code></pre>\n\n<p> </p>","a":[{"id":598953,"option":"T T\r\nc c","correct":false},{"id":598954,"option":"T T\r\na a","correct":true},{"id":598955,"option":"null null\r\na a","correct":false},{"id":598956,"option":"T null\r\na null","correct":false}]},{"q":"<p>In C, which of the following statements about <strong>dangling</strong> pointers is correct?</p>","a":[{"id":600439,"option":"It has no data type associated with it","correct":false},{"id":600440,"option":"It points to a memory location that has been deleted","correct":true},{"id":600441,"option":"It is not initialized","correct":false},{"id":600442,"option":"It can point to any type of data","correct":false}]},{"q":"<p>What is the output of the following C code?</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\nint x,y,z,w;\nint *pa, *pb, *pc;\nx=10,y=30, z= 15;\npa = &amp;x;\npb = &amp;y;\npc = pb;\nprintf(\"%d %d %d\", *pb, *pb, *pa);\n}</code></pre>","a":[{"id":603280,"option":"10 30 30 ","correct":false},{"id":603281,"option":"10 30 10","correct":false},{"id":603282,"option":"30 30 10","correct":true},{"id":603283,"option":"Runtime error","correct":false}]},{"q":"<p>In C, which of the following statements is used to declare a pointer to an array of three integers?           </p>","a":[{"id":604383,"option":"int (*p)[3];","correct":true},{"id":604384,"option":"int (*p)(3);","correct":false},{"id":604385,"option":"int [*p][3];","correct":false},{"id":604386,"option":"None of these","correct":false}]},{"q":"<p>In C, which of the following statements about the <strong>malloc() </strong>function is correct?</p>","a":[{"id":600555,"option":"Allocates requested size of bytes and returns a void pointer that points to the first byte of the allocated space","correct":true},{"id":600556,"option":"Allocates space for an array of elements, initializes them to zero, and then returns a void pointer to the memory","correct":false},{"id":600557,"option":"Modifies the size of the previously allocated space","correct":false},{"id":600558,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nvoid getValue(int *ptr)\n{\n    *ptr = 30;\n}\nint main()\n{\n  int y = 20;\n  getValue(&amp;y);\n  printf(\"%d\", y);\n  return 0;\n}</code></pre>","a":[{"id":599372,"option":"30","correct":true},{"id":599373,"option":"20","correct":false},{"id":599374,"option":"Compilation error","correct":false},{"id":599375,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\nvoid main()\n{\nint a=10;\nvoid *ptr; \nptr=&amp;a; \nprintf(\"%d\",*((int*) ptr));\n}</code></pre>\n\n<p> </p>","a":[{"id":606658,"option":"10","correct":true},{"id":606659,"option":"Random memory address","correct":false},{"id":606660,"option":"Compilation error","correct":false},{"id":606661,"option":"Runtime error","correct":false}]},{"q":"<p>In C, which of the following header file contains memory management functions?</p>","a":[{"id":604399,"option":"stdio.h","correct":false},{"id":604400,"option":"conio.h","correct":false},{"id":604401,"option":"stdlib.h","correct":true},{"id":604402,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        int main()\n        {\n            int a = -2;\n            int b = 0;\n            int y = (b == 0) ? a :(a &gt; b);\n            printf(\"%d\\n\", y);\n        }\n</code></pre>","a":[{"id":122844,"option":"0","correct":false},{"id":122845,"option":"1","correct":false},{"id":122846,"option":"-2","correct":true},{"id":122847,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        int j=func(11);\n        printf(\"%d\",j);\n    }\n    int func(int i)\n    {\n        if(i%2) return (i++);\n        else return func(func(i-1));\n    }\n</code></pre>","a":[{"id":126280,"option":"10","correct":false},{"id":126281,"option":"Compilation error","correct":false},{"id":126282,"option":"9","correct":false},{"id":126283,"option":"11","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void m(int *p)\n    {\n        int i = 0;\n        for(i = 0;i &lt;4; i++)\n        printf(\"%d\\t\", p[i]);\n    }\n    void main()\n    {\n        int a[5] = {6, 5, 3};\n        m(&amp;a);\n    }\n</code></pre>","a":[{"id":124140,"option":"Compilation fails","correct":false},{"id":124141,"option":"6 5 3 0","correct":true},{"id":124142,"option":"6 5 3\t","correct":false},{"id":124143,"option":"6 5 3 NULL","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n  int  a = 2, c = 1 ;\n  c = (c) ? a = -1 : 2;\n  printf(\"%d\",c);\n}\n</code></pre>","a":[{"id":122876,"option":"2","correct":false},{"id":122877,"option":"1","correct":false},{"id":122878,"option":"-1","correct":true},{"id":122879,"option":"2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int x=foo(513, 2);\n        printf(\"%d\",x);\n    }\n    int foo(int n,int r)\n    {\n        if (n  &gt; 0)\n            return (n%r +  foo (n/r, r ));\n        else\n            return 0;\n    }\n</code></pre>","a":[{"id":126132,"option":"5","correct":false},{"id":126133,"option":"2","correct":true},{"id":126134,"option":"8","correct":false},{"id":126135,"option":"9","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        int main()\n        {\n            int x=10;\n            int y=20;\n            int *y=&amp;x;\n            hack((&amp;x));\n        }\n        void hack(int *p)\n        {\n            printf(\"%d\\n\", *p);\n        }\n</code></pre>","a":[{"id":122264,"option":"10","correct":false},{"id":122265,"option":"20","correct":false},{"id":122266,"option":"Compilation error","correct":true},{"id":122267,"option":"Garbage value","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int choice = 1 ;\n        switch(choice)\n        {\n            case 'A':\n            case 'a':\n            printf(\"\\nA\");\n            break;\n            case 'B':\n            case 'b':\n            printf(\"\\nB\");\n            break;\n        }\n    }\n</code></pre>","a":[{"id":125788,"option":"A","correct":false},{"id":125789,"option":"B","correct":false},{"id":125790,"option":"Compilation error","correct":false},{"id":125791,"option":"None of these","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int X=400;\n    int main()\n    {\n        int X=200;\n        printf(\"%d\\n\", X);\n        return 0;\n    }\n</code></pre>","a":[{"id":124664,"option":"400","correct":false},{"id":124665,"option":"200","correct":true},{"id":124666,"option":"Compilation error","correct":false},{"id":124667,"option":"Run-time error","correct":false}]},{"q":"<p>Which of the following is the correct comparison of the sizes of the data types in C?</p>","a":[{"id":123148,"option":"Char > int > float","correct":false},{"id":123149,"option":"Int > char > float","correct":false},{"id":123150,"option":"Char < int < double","correct":true},{"id":123151,"option":"Double > char > int","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int i = (10 + 1);\n    int j = ++i + i;\n    printf(\"%d\\n\", j);\n}\n</code></pre>","a":[{"id":122688,"option":"Compilation error","correct":false},{"id":122689,"option":"23","correct":false},{"id":122690,"option":"24","correct":true},{"id":122691,"option":"21","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    void a = 0.1,b = 0.9;\n    if(a + b == 1.00)\n        printf(\"1\");\n    else\n        printf(\"0\");\n}\n</code></pre>","a":[{"id":122348,"option":"1","correct":false},{"id":122349,"option":"Compilation error","correct":true},{"id":122350,"option":"0","correct":false},{"id":122351,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    char *str = \"Hacker\";\n    char *str1 = \"Earth\";\n    printf(\"%d %d\", sizeof(str), sizeof(str1));\n}\n\n</code></pre>","a":[{"id":122284,"option":"4 8","correct":false},{"id":122285,"option":"8 8","correct":true},{"id":122286,"option":"8 4","correct":false},{"id":122287,"option":"4 4","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int y = 3;\n    int x = (10 % 2) * 3 / 2;\n    printf(\"%d\", x);\n}\n</code></pre>","a":[{"id":122420,"option":"1","correct":false},{"id":122421,"option":"0","correct":true},{"id":122422,"option":"7","correct":false},{"id":122423,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void main()\n    {\n        char *a[10] = {\"hi\", \"hello\", \"how\"};\n        printf(\"%d\\n\", sizeof(a[1]));\n    }\n</code></pre>","a":[{"id":124028,"option":"7","correct":false},{"id":124029,"option":"2","correct":false},{"id":124030,"option":"8","correct":true},{"id":124031,"option":"16","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n       main()\n       {\n           if (sizeof(int) &gt; -1)\n               printf(\"1\");\n           else\n               printf(\"0\");\n       }\n</code></pre>","a":[{"id":122364,"option":"Compilation error","correct":false},{"id":122365,"option":"1","correct":false},{"id":122366,"option":"0","correct":true},{"id":122367,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    float a = 0.1, b = 0.9;\n    if(a + b == 1.00000000)\n        printf(\"Equal\");\n    else\n        printf(\"Not Equal\");\n}\n</code></pre>","a":[{"id":122344,"option":"Not Equal","correct":false},{"id":122345,"option":"Equal","correct":true},{"id":122346,"option":"Compilation error","correct":false},{"id":122347,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    char *x = \"hack\";\n    char *y = *(&amp;x);\n    printf(\"%p\\t%p\", x, y);\n}\n</code></pre>","a":[{"id":122296,"option":"Same address is printed","correct":true},{"id":122297,"option":"Different address is printed","correct":false},{"id":122298,"option":"Compilation error","correct":false},{"id":122299,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int x=foo(345, 10);\n        printf(\"%d\",x);\n    }\n    int foo(int n,int r)\n    {\n        if (n  &gt; 0)\n            return (n%r +  foo (n/r, r ));\n        else\n            return 0;\n    }\n</code></pre>","a":[{"id":126136,"option":"8","correct":false},{"id":126137,"option":"10","correct":false},{"id":126138,"option":"12","correct":true},{"id":126139,"option":"16","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int i = -9;\n    int k = i % 4;\n    printf(\"%d\\n\", k);\n}\n</code></pre>","a":[{"id":122444,"option":"1","correct":false},{"id":122445,"option":"-1","correct":true},{"id":122446,"option":"0","correct":false},{"id":122447,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a;\n    int *b = 4;\n    printf(\"%d %d\", sizeof(a), sizeof(*b));\n}\n</code></pre>","a":[{"id":122276,"option":"Compilation error","correct":false},{"id":122277,"option":"4 8","correct":false},{"id":122278,"option":"4 4 ","correct":true},{"id":122279,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a = 10, b = 5, c = 4;\n    int d;\n    d = a == (b + c);\n    printf(\"%d\", d);\n}\n</code></pre>","a":[{"id":122488,"option":"Compilation error","correct":false},{"id":122489,"option":"1","correct":false},{"id":122490,"option":"0","correct":true},{"id":122491,"option":"9","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        int x = 2 * 9 / 3 + 9;\n        printf(\"%d\",x);\n    }\n</code></pre>","a":[{"id":123276,"option":"10","correct":false},{"id":123277,"option":"15","correct":true},{"id":123278,"option":"20","correct":false},{"id":123279,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int x = 10;\n    hack((&amp;x));\n}\nvoid hack(int *p)\n{\n    printf(\"%d\\n\", *p);\n}\n</code></pre>","a":[{"id":122260,"option":"Compilation error","correct":false},{"id":122261,"option":"10","correct":true},{"id":122262,"option":"Garbage value","correct":false},{"id":122263,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int x;\n    x = (5 * 9) / 3 + 9;\n    printf(\"%d\", x);\n}\n</code></pre>","a":[{"id":122576,"option":"Compilation error","correct":false},{"id":122577,"option":"24","correct":true},{"id":122578,"option":"27","correct":false},{"id":122579,"option":"21","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int x = 1, y = 0, z = 3,m;\n           return( x &gt; y ? printf(\"%d\", z) :printf(\"%d\", z));\n        }\n</code></pre>","a":[{"id":122520,"option":"1","correct":false},{"id":122521,"option":"0","correct":false},{"id":122522,"option":"3","correct":true},{"id":122523,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        int i = 5;\n        i = i / 3;\n        printf(\"%d\\n\", i);\n        return 0;\n    }\n</code></pre>","a":[{"id":123268,"option":"3","correct":false},{"id":123269,"option":"2","correct":false},{"id":123270,"option":"1","correct":true},{"id":123271,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int x = 5, y = 1;\n    int z = (y++) ? 2 : y == 1 &amp;&amp; x || y;\n    printf(\"%d\\n\", --z);\n    return 0;\n}\n</code></pre>","a":[{"id":122908,"option":"2","correct":false},{"id":122909,"option":"1","correct":true},{"id":122910,"option":"Compilation error","correct":false},{"id":122911,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int a = 1, b = 3;\n            a += b -= a-=b;\n            printf(\"%d %d\", a, b);\n        }\n</code></pre>","a":[{"id":122800,"option":"3, 4","correct":false},{"id":122801,"option":"3, 5","correct":true},{"id":122802,"option":"2, 4","correct":false},{"id":122803,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n\nint main()\n{\n    int a = 1, b = 0, c = *(&amp;a);\n    *((a+1 == 1) ? &amp;b : &amp;a) = a ? ++b : ++c;\n    printf(\"%d, %d, %d\\n\", a, b, c);\n    return 0;\n}\n</code></pre>","a":[{"id":122252,"option":"2, 1, 2","correct":false},{"id":122253,"option":"1, 1, 1","correct":true},{"id":122254,"option":"1, 2, 1","correct":false},{"id":122255,"option":"Compilation error ","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a = 1, b = -1, c;\n    c = a++ + b;\n    printf(\"%d, %d\", a, b);\n}\n</code></pre>","a":[{"id":122648,"option":"-2, 1","correct":false},{"id":122649,"option":"-1, -1","correct":false},{"id":122650,"option":"2, 1","correct":false},{"id":122651,"option":"2, -1","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int *ptr = (int *)100;\n            ptr = ptr + 2;\n            printf(\"%u\", ptr);\n        }\n</code></pre>","a":[{"id":122324,"option":"116","correct":false},{"id":122325,"option":"108","correct":true},{"id":122326,"option":"104","correct":false},{"id":122327,"option":"Compilation error","correct":false}]},{"q":"<p>If the following is the input, then determine the output of the following C code:</p>\n\n<p><strong>Input</strong></p>\n\n<p>3 2 1 3</p>\n\n<p><strong>Code</strong></p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\nint main()\n{\n    int n,s[1001],i,t,j;\n    scanf(\"%d\",&amp;n);\n    for(i=0;i&lt;n;i++)\n    {\n        scanf(\"%d\",&amp;s[i]);\n    }\n    for(i=0;i&lt;n;i++)\n        for(j=i+1;j&lt;n;j++)\n            if(s[j]&lt;s[i])\n            {\n                t=s[j];\n                s[j]=s[i];\n                s[i]=t;\n            }\n    int c=n/2-1;\n    int d=(n+1)/2-1;\n    if(n%2!=0) \n        printf(\"%d\",s[d]);\n    else \n        printf(\"%d\",s[c]);\n}</code></pre>\n\n<p> </p>","a":[{"id":721554,"option":"2","correct":true},{"id":721555,"option":"1","correct":false},{"id":721556,"option":"3","correct":false},{"id":721557,"option":"Compilation error","correct":false}]},{"q":"<p>In C or C++, which of the following characters is used to declare a <strong>pointer</strong> variable?</p>","a":[{"id":597116,"option":"&","correct":false},{"id":597117,"option":"*","correct":true},{"id":597118,"option":"#","correct":false},{"id":597119,"option":"%","correct":false}]},{"q":"<p>In C or C++, which of the following statements about <strong>pointers </strong>are correct:</p>\n\n<ol>\n\t<li>It is used to store the value of another variable.</li>\n\t<li>It is used to allocate memory dynamically to parameters.</li>\n\t<li>It can point to only integer variables.</li>\n\t<li>The value of a null pointer is 0</li>\n</ol>\n\n<p> </p>","a":[{"id":597112,"option":"2 and 4","correct":true},{"id":597113,"option":"1, 2, and 3\r\n","correct":false},{"id":597114,"option":"1, 3, and 4","correct":false},{"id":597115,"option":"1 and 3","correct":false}]},{"q":"<p>If <code>x</code> and <code>y</code> are two <strong>pointers</strong> in C, which of the following <strong>arithmetic operations</strong> is valid?</p>","a":[{"id":123912,"option":"x ^ y","correct":false},{"id":123913,"option":"x & y","correct":false},{"id":123914,"option":"x | y","correct":false},{"id":123915,"option":"None of these","correct":true}]},{"q":"<p>Which of these corrections will fix the following <strong>Fibonacci </strong>C code:</p>\n\n<pre class=\"prettyprint\"><code>int fibonacci(int n) {   \n      \n if(n == 1)\n   return 1;\n        \nreturn fibonacci(n-1)  + fibonacci(n-2);\n}</code></pre>\n\n<p> </p>","a":[{"id":721494,"option":"if(n==2)\r\nreturn 1;","correct":false},{"id":721495,"option":"if(n == 3)\r\nreturn 2;","correct":false},{"id":721496,"option":"if(n == 0)\r\nreturn 0;","correct":true},{"id":721497,"option":"if(n == 0)\r\nreturn -1;","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int *ptr;\n    int x;\n\n    ptr = &amp;x;\n    *ptr = 0;\n\n    *ptr += 5;\n    (*ptr)++;\n    printf(\" x = %d\\n\", x);\n    printf(\" *ptr = %d\", *ptr);\n    return 0;\n}\n\n</code></pre>","a":[{"id":599376,"option":"x = 6 \r\n*ptr = 6","correct":true},{"id":599377,"option":"x = 0\r\n*ptr = 6","correct":false},{"id":599378,"option":"x = 5\r\n*ptr = 6","correct":false},{"id":599379,"option":"x = 5\r\n*ptr = 5","correct":false}]},{"q":"<p>In C, which of the following statements about the <strong>calloc() </strong>function is correct:</p>\n\n<ol>\n\t<li>It is used to allocate memory dynamically.</li>\n\t<li>The memory allocated by using the calloc() function is initialized with zero.</li>\n\t<li>It does not initialize the allocated memory.</li>\n\t<li>It takes two arguments.        </li>\n</ol>","a":[{"id":604391,"option":"1 and 3","correct":false},{"id":604392,"option":"1, 2, and 4\r\n","correct":true},{"id":604393,"option":"1, 3, and 4\r\n","correct":false},{"id":604394,"option":"1 and 2","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int a[][3] = {10, 20, 30, 40, 50, 60, 70, 120};\n    int (*ptr)[5] = a;\n    printf(\"%d %d \", (*ptr)[0], (*ptr)[2]);\n    ++ptr;\n    printf(\"%d %d\", (*ptr)[1], (*ptr)[3]);\n}\n</code></pre>","a":[{"id":600306,"option":"10 20 30 40","correct":false},{"id":600307,"option":"10 30 70 0","correct":true},{"id":600308,"option":"0 30 20 50","correct":false},{"id":600309,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\nmain()\n{\nstruct num\n{\n   int x=3;\n}\nstruct num *s=malloc(sizeof(struct num));\nprintf(\"%d\",s-&gt;x);\nreturn 0;\n}</code></pre>","a":[{"id":604403,"option":"3","correct":false},{"id":604404,"option":"0","correct":false},{"id":604405,"option":"Runtime error","correct":false},{"id":604406,"option":"Compilation error","correct":true}]},{"q":"<p>In C, which of the following functions is used to deallocate the dynamically-allocated memory?</p>","a":[{"id":604089,"option":"Clear()","correct":false},{"id":604090,"option":"Free()","correct":true},{"id":604091,"option":"Release()","correct":false},{"id":604092,"option":"Delete()","correct":false}]},{"q":"<p>In C, which of the following operators is used<strong> </strong>to retrieve the address of a variable?</p>","a":[{"id":600314,"option":"#","correct":false},{"id":600315,"option":"$","correct":false},{"id":600316,"option":"&","correct":true},{"id":600317,"option":"*","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    void main()\n    {\n        static int n=3;\n        printf(\"%d \",--n);\n        if(n)\n        main();\n    }\n</code></pre>","a":[{"id":125856,"option":"3 2 1 0 ","correct":false},{"id":125857,"option":"2 1 0 ","correct":true},{"id":125858,"option":"Compilation error","correct":false},{"id":125859,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int y = 3;\n    int z = (--y) + (y = 10);\n    printf(\"%d\\n\", z);\n}\n</code></pre>","a":[{"id":122888,"option":"13","correct":false},{"id":122889,"option":"12","correct":false},{"id":122890,"option":"20","correct":true},{"id":122891,"option":"Compilation error","correct":false}]},{"q":"<p>In C, what is the size of the array if it is declared as <code>float arr[3][2][2]</code>?</p>","a":[{"id":126024,"option":"72","correct":false},{"id":126025,"option":"48","correct":true},{"id":126026,"option":"24","correct":false},{"id":126027,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        const int num ;\n        num = 10;\n        printf(\"%d\",num);\n    }\n</code></pre>","a":[{"id":125852,"option":"10","correct":false},{"id":125853,"option":"Compilation error","correct":true},{"id":125854,"option":"Run-time error","correct":false},{"id":125855,"option":"Garbage value","correct":false}]},{"q":"<p>In C, which of these <strong>library functions</strong> is used to <strong>dynamically</strong> allocate memory?</p>","a":[{"id":125036,"option":"calloc()","correct":false},{"id":125037,"option":"malloc() ","correct":false},{"id":125038,"option":"both calloc() and malloc() ","correct":true},{"id":125039,"option":"memalloc()","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code># include &lt;stdio.h&gt;\n\nint main()\n{\n    printf(\"Welcome to code earth!\\n\");\n    main();\n}\n</code></pre>","a":[{"id":122164,"option":"Run-time error","correct":false},{"id":122165,"option":"Welcome to code Earth!","correct":false},{"id":122166,"option":"Compilation error","correct":false},{"id":122167,"option":"Prints \"Welcome to code earth!\" infinite times","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    int x = 10, y = 10;\n    if (x = 5)\n        y--;\n    ++x;\n    printf(\"%d, %d\", x, y--);\n}\n</code></pre>","a":[{"id":122664,"option":"Compilation error","correct":false},{"id":122665,"option":"7, 9","correct":false},{"id":122666,"option":"6, 9","correct":true},{"id":122667,"option":"6, 10","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n   int c = NULL + 5;\n   printf(\"%d\", c);\n}\n</code></pre>","a":[{"id":122256,"option":"NULL","correct":false},{"id":122257,"option":"5","correct":true},{"id":122258,"option":"Compilation error","correct":false},{"id":122259,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int *p = (int *)20;\n    int *q = (int *)30;\n    printf(\"%d\", q - p);\n}\n</code></pre>","a":[{"id":122328,"option":"Compilation error","correct":false},{"id":122329,"option":"2","correct":true},{"id":122330,"option":"10","correct":false},{"id":122331,"option":"Garbage value","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char h[]=\"hac\\0ker\";\n    int i=0;\n    for(; h[i] ;)\n    {\n        printf(\"\\n%c%c%c%c\",*&amp;h[i],*(*&amp;h+i),*(i+&amp;*h),i[*&amp;h]);\n        i++;\n    } \n}\n</code></pre>","a":[{"id":122228,"option":"Compilation error","correct":false},{"id":122229,"option":"hhhh\r\naaaa\r\ncccc","correct":true},{"id":122230,"option":"kkk\r\neee\r\nrrr","correct":false},{"id":122231,"option":"hhhh\r\naaaa\r\ncccc\r\nkkk\r\neee\r\nrrr","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    char *a[10] = {\"hi\", \"hello\", \"how\"};\n    int i = 0;\n    for (i = 0;i &lt; 6;i++)\n        printf(\"%s \", a[i]);\n}\n</code></pre>","a":[{"id":124044,"option":"hi hello how null","correct":false},{"id":124045,"option":"Compilation fails","correct":false},{"id":124046,"option":"hi hello how null null null","correct":true},{"id":124047,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    unsigned int a = 20;\n    a = ~a;\n    printf(\"%d\\n\", a);\n}\n</code></pre>","a":[{"id":122716,"option":"-20","correct":false},{"id":122717,"option":"19","correct":false},{"id":122718,"option":"-21","correct":true},{"id":122719,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>  #include &lt;stdio.h&gt;\n    void m(int *p, int *q)\n    {\n        int temp = *p;\n        *p = *q;\n        *q = temp;\n    }\n    void main()\n    {\n        int a = 6, b = 5;\n        m(&amp;a, &amp;b);\n        printf(\"%d %d\\n\", a, b);\n    }\n</code></pre>","a":[{"id":124136,"option":"6 5","correct":false},{"id":124137,"option":"5 6","correct":true},{"id":124138,"option":"6 6","correct":false},{"id":124139,"option":"5 5","correct":false}]},{"q":"<p>In C, how is a <strong>3-dimensional array</strong> passed as an argument to a function?</p>","a":[{"id":125980,"option":"void func(a);","correct":true},{"id":125981,"option":"void func(&a);","correct":false},{"id":125982,"option":"void func(*a);","correct":false},{"id":125983,"option":"void func(**a);","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n\nvoid main()\n{\n    int a = 10,b = 20, c;\n\n    if(c == a||b &lt; 10)\n        printf(\"True\");\n    printf(\"False\");\n}\n</code></pre>","a":[{"id":122136,"option":"0","correct":false},{"id":122137,"option":"1","correct":false},{"id":122138,"option":"True","correct":false},{"id":122139,"option":"False","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int i = 10;\n    int *j = &amp;i;\n    int **k = &amp;j;\n    int ***l = &amp;k;\n    printf(\"%d %d %d %d\\n\", i, *j, **k, ***l);\n}\n</code></pre>","a":[{"id":122336,"option":"10 10 10 junk","correct":false},{"id":122337,"option":"10 10 10 10","correct":true},{"id":122338,"option":"It will print the address","correct":false},{"id":122339,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char str[] = \"hacker\";\n        char *s1 = str, *s2 = str;\n        int i;\n\n        for(i = 0; i  &lt; 2; i++)\n        {\n            printf(\" %c \", *str);\n            ++s1;\n        }\n        for(i =2; i &lt; 3; i++)\n        {\n            printf(\" %c \", *s2);\n            ++s2;\n        }\n    }\n</code></pre>","a":[{"id":126216,"option":"h  h  h  h","correct":false},{"id":126217,"option":"h  h  h ","correct":true},{"id":126218,"option":"h  h  a","correct":false},{"id":126219,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int a[2][3] = {2,0,3,2,30,40};\n        printf(\"%d %d \\n\", *(*(a+0)+0), *(*(a+0)+2));\n    }\n</code></pre>","a":[{"id":126352,"option":"2   2","correct":false},{"id":126353,"option":"2    3","correct":true},{"id":126354,"option":"2   30","correct":false},{"id":126355,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\nint *ptr,list[100],i;\nfor (i = 0;i &lt; 100;i++)\n{\n    list[i] = i + 10;\n}\nptr = list + 27;\nprintf(\"%d\\n\",list[27]);\nprintf(\"%d\\n\",*ptr);\n}</code></pre>\n\n<p> </p>","a":[{"id":598957,"option":"37\r\n37","correct":true},{"id":598958,"option":"27\r\n27","correct":false},{"id":598959,"option":"137\r\n137","correct":false},{"id":598960,"option":"Runtime error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nchar *names[] = {\"Alice\", \"Smith\", \"Jones\", \"Mike\"};\nchar **new_name[] = {names+3, names+2, names+1, names};\nchar ***final_str = new_name;\n\nint main()\n{\n    printf(\"%s \", **++final_str);\n    printf(\"%s \", *--*++final_str+3);\n    return 0;\n}\n</code></pre>","a":[{"id":600298,"option":"Jones ce","correct":true},{"id":600299,"option":"Smith ce","correct":false},{"id":600300,"option":"Jones Mike","correct":false},{"id":600301,"option":"Mike Jones","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n\nmain()\n{\nint c[ ]={2.8,3.4,4,6.7,5};\nint j, *q=c;\nfor(j=0;j&lt;5;j++)\n{\n    printf(\"%d \",*c);\n    ++q;\n}\n}</code></pre>","a":[{"id":603288,"option":"2 2 2 2 2 ","correct":true},{"id":603289,"option":"1 2 3 4 5 ","correct":false},{"id":603290,"option":"2 3 4 6 5 ","correct":false},{"id":603291,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n#include &lt;conio.h&gt;\n#include &lt;stdlib.h&gt;\nvoid main()\n{\n    int i;\n    int *ptr = (int *) malloc(5 * sizeof(int));\n\n    for (i=4; i&gt;=0; i--)\n    {\n        *(ptr + i) = i+6;\n    }\n\n    printf(\"%d \", *ptr+4);\n    printf(\"%d \", (*ptr)++);\n    printf(\"%d \", *++ptr);\n    printf(\"%d \", ++*ptr);\n    getch();\n}\n</code></pre>","a":[{"id":600310,"option":"6 7 8 10","correct":false},{"id":600311,"option":"2 4 3 7","correct":false},{"id":600312,"option":"4 6 7 8","correct":false},{"id":600313,"option":"10 6 7 8","correct":true}]},{"q":"<p>In C, which of the following statements about the <strong>memchr() </strong>function<strong> </strong>is correct? </p>","a":[{"id":606666,"option":"It is used to locate a character in a block of memory.","correct":true},{"id":606667,"option":"It is used to fill a block of memory.","correct":false},{"id":606668,"option":"It is used to copy the characters from a string.","correct":false},{"id":606669,"option":"It is used to compare two blocks of memory.","correct":false}]},{"q":"<p>In C, which of the following statements is used to allocate memory to an array of 10 integers?</p>","a":[{"id":606584,"option":"int *ptr = (int *)malloc(10, sizeof(int));","correct":false},{"id":606585,"option":"int *ptr = (int *)malloc(10*sizeof(int));","correct":true},{"id":606586,"option":"int *ptr = (int *)calloc(10, sizeof(int));","correct":false},{"id":606587,"option":"int *ptr = (int )malloc(10, sizeof(int));","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        int f[2][3]={{1,2,3,},{4,5,6}},i=1,j=0;\n        f[i][j]=f[j][i];\n        printf(\"%d%d\",f[i][j],f[j+1][i+1]);\n    }\n</code></pre>","a":[{"id":126020,"option":"24","correct":false},{"id":126021,"option":"26","correct":true},{"id":126022,"option":"1 4","correct":false},{"id":126023,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main(void)\n    {\n        char p;\n        char buff[10] = {1, 2, 3, 4, 5, 6, 9, 8};\n        p = (buff + 1)[5];\n        printf(\"%d\", p);\n    }\n</code></pre>","a":[{"id":125668,"option":"6","correct":false},{"id":125669,"option":"9","correct":true},{"id":125670,"option":"5","correct":false},{"id":125671,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    void f(int *p, int *q)\n    {\n        q=p;\n        *q= 2;\n    }\n    int i = 2, j = 1;\n    int main()\n    {\n        f(&amp;i, &amp;j);\n        printf(\"%d %d \\n\", i, j);\n    }\n</code></pre>","a":[{"id":126120,"option":"Compilation error","correct":false},{"id":126121,"option":"1  2 ","correct":false},{"id":126122,"option":"2  1 ","correct":true},{"id":126123,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    void main()\n    {\n        int a[5] = {5, 1,-1, 20, 25};\n        int i, j, m;\n        i = ++a[1];\n        j = a[1]++;\n        m = a[i++];\n        printf(\"%d, %d, %d\", i, j, m);\n    }\n</code></pre>","a":[{"id":125664,"option":"3, 2, 20","correct":false},{"id":125665,"option":"2, 2, -1","correct":false},{"id":125666,"option":"3, 2, -1","correct":true},{"id":125667,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int ***r, **q, *p, i=5;\n        p = &amp;i;\n        q = &amp;p;\n        r = &amp;q;\n        printf(\"%d, %d, %d\\n\", *p, **q, ***r);\n        return 0;\n    }\n</code></pre>","a":[{"id":124820,"option":"Compilation fails","correct":false},{"id":124821,"option":"Run-time error","correct":false},{"id":124822,"option":"5,   5,   5","correct":true},{"id":124823,"option":"5,  5,  Garbage value","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        char str[20] = \"MackerAarth\";\n        char *const p=str;\n        *p='H';\n        *(p+6)='e';\n        printf(\"%s\\n\", str);\n        return 0;\n    }\n</code></pre>","a":[{"id":124808,"option":"Compilation error","correct":false},{"id":124809,"option":"Run-time error","correct":false},{"id":124810,"option":"Hackerearth","correct":true},{"id":124811,"option":"HackeeAarth","correct":false}]},{"q":"<p>In C, which of the following methods is used to find the size of the array <code>int a[10]</code>?</p>","a":[{"id":123316,"option":"sizeof(*a);","correct":false},{"id":123317,"option":"sizeof(a);","correct":true},{"id":123318,"option":"sizeof(a[10]);","correct":false},{"id":123319,"option":"10 * sizeof(a);","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    enum { O = -1, M, B = 5, P};\n    printf(\"M = %d\\n\", M);\n}\n</code></pre>","a":[{"id":122416,"option":"M = 1","correct":false},{"id":122417,"option":"M = 0","correct":true},{"id":122418,"option":"M = 3","correct":false},{"id":122419,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        void main()\n        {\n            int y = 3;\n            int x = (3% 2) * (3*2%10);\n            printf(\"Value of x is %d\", x);\n        }\n</code></pre>","a":[{"id":122428,"option":"Value of x is 0","correct":false},{"id":122429,"option":"Value of x is 1","correct":false},{"id":122430,"option":"Value of x is 6","correct":true},{"id":122431,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n\nvoid main()\n{\n    int x = 20, y, z;\n    y = x = 10;\n    z = x &lt; 20;\n    printf(\"%d, %d, %d\", z, x, y);\n}\n</code></pre>","a":[{"id":122132,"option":"10, 0, 10","correct":false},{"id":122133,"option":"1, 10,  10","correct":true},{"id":122134,"option":"10, 10, 1","correct":false},{"id":122135,"option":"0, 10, 10","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a = 1, b = 1, d = 1;\n    printf(\"%d, %d, %d\", ++a + ++a + a++, a++, ++d + d++ + a++);\n}\n</code></pre>","a":[{"id":122652,"option":"9, 2, 9","correct":false},{"id":122653,"option":"15, 2, 9","correct":false},{"id":122654,"option":"15, 2, 6","correct":true},{"id":122655,"option":"9, 2, 6","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n\nvoid main()\n{\n    int x = 6,y = 4, z;\n    z = x++ + --y;\n    printf(\"%d\", z);\n}\n</code></pre>","a":[{"id":122140,"option":"10","correct":false},{"id":122141,"option":"8","correct":false},{"id":122142,"option":"11","correct":false},{"id":122143,"option":"9","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int k = 10;\n    int m = 7;\n    return(k &gt; m ?  printf(\"%d\",++k): ++m);           \n}\n</code></pre>","a":[{"id":122828,"option":"10","correct":false},{"id":122829,"option":"8","correct":false},{"id":122830,"option":"11","correct":true},{"id":122831,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int x, y, z;\n        x=y=z=1;\n        z = ++x ||--y || ++z;\n        printf(\"%d,%d,%d\\n\",y,x,z);\n\n    }\n</code></pre>","a":[{"id":125200,"option":"1,2,2","correct":false},{"id":125201,"option":"1,2,1","correct":true},{"id":125202,"option":"2,2,2","correct":false},{"id":125203,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int f(int *a, int n)\n    {\n        if(n &lt;= 0) return 0;\n        else if(*a % 2 == 0)\n        return *a + f(a+1, n-1);\n        else return *a - f(a+1, n-1);\n        }\n    int main()\n    {\n        int a[] = {12, 7, 13, 4, 11,0};\n        printf(\"%d\", f(a, 6));\n    }\n</code></pre>","a":[{"id":126124,"option":"21","correct":true},{"id":126125,"option":"18","correct":false},{"id":126126,"option":"7","correct":false},{"id":126127,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void m()\n    {\n        printf(\"hack\");\n    }\n    int main()\n    {\n        m();\n    }\n</code></pre>","a":[{"id":123788,"option":"Compilation fails","correct":false},{"id":123789,"option":"hack","correct":true},{"id":123790,"option":"Run-time error","correct":false},{"id":123791,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    int main()\n    {\n        int a[2][2] = { 1, 2, 3, 4};\n        printf(\"%u, %u\\n\", *(a[0]+1), *(*(a+0)+1));\n        return 0;\n    }\n</code></pre>","a":[{"id":124852,"option":"Compilation error","correct":false},{"id":124853,"option":"2, 3 ","correct":false},{"id":124854,"option":"2, Garbage value","correct":false},{"id":124855,"option":"2, 2","correct":true}]},{"q":"<p>What is the output of the following C code: </p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n#include &lt;conio.h&gt;\nvoid main()\n{\n    int arr[ ] = { 10, 20, 30, 45, 67, 56, 74 } ;\n    int *i, *j ;\n    i = &amp;arr[1] ;\n    j = &amp;arr[5] ;\n    printf ( \"%d %d\", j - i, *j - *i ) ;\n    getch();\n}\n</code></pre>\n\n<p> </p>","a":[{"id":598965,"option":"4   36","correct":true},{"id":598966,"option":"36   4","correct":false},{"id":598967,"option":"4   4","correct":false},{"id":598968,"option":"36   36 ","correct":false}]},{"q":"<p>In C, which of the following is the correct syntax of the <strong>realloc() </strong>function?</p>","a":[{"id":604395,"option":"void *realloc(void *ptr, size_t size);","correct":true},{"id":604396,"option":"void realloc(void *ptr, size_t size);","correct":false},{"id":604397,"option":"int *realloc(void *ptr, size_t size);","correct":false},{"id":604398,"option":"void *realloc(size_t size);","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    void main(){\n        int array[2][3]={5,10,15,20,25,30};\n        int (*ptr)[2][3]=&amp;array;\n        printf(\"%d\\t\",*(*(*ptr+1)+2));\n    }\n</code></pre>","a":[{"id":125748,"option":"5","correct":false},{"id":125749,"option":"15","correct":false},{"id":125750,"option":"30","correct":true},{"id":125751,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    int main()\n    {\n        char *a[3] = {\"hello\", \"this\"};\n        printf(\"%s\", a[1]);\n    }\n</code></pre>","a":[{"id":124396,"option":"hello","correct":false},{"id":124397,"option":"this","correct":true},{"id":124398,"option":"t","correct":false},{"id":124399,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n    void main()\n    {\n        int look[100] = {1, 2, 3, 4};\n        printf(\"%d\", look[5]);\n    }\n</code></pre>","a":[{"id":124412,"option":"1","correct":false},{"id":124413,"option":"Compilation error","correct":false},{"id":124414,"option":"4","correct":false},{"id":124415,"option":"0","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int ary[3] = {10, 20, 30};\n    int *p = ary + 1;\n    printf(\"%d\\n\", p[-20]);\n}\n</code></pre>","a":[{"id":122320,"option":"Compilation error","correct":false},{"id":122321,"option":"0","correct":true},{"id":122322,"option":"Garbage value","correct":false},{"id":122323,"option":"-10","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>     #include &lt;stdio.h&gt;\n        void main()\n        {\n            char *a= \"hack\";\n            char *b = a;\n            printf(\"%c\\t%c\", a[3], b[0]);\n        }\n</code></pre>","a":[{"id":122300,"option":"Compilation error","correct":false},{"id":122301,"option":"Garbage value","correct":false},{"id":122302,"option":"k   h","correct":true},{"id":122303,"option":"Run-time error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\nint main()\n{\n    static int array[] = {20,30,40,50};\n    int i, *v;\n    v = &amp;array[3] - 3;\n    for(i = 1;i &lt;= 3;i++)\n    {\n        printf(\"%d \", v[i]);\n    }\n}\n</code></pre>","a":[{"id":122240,"option":"20 30 40 50","correct":false},{"id":122241,"option":"Garbage value","correct":false},{"id":122242,"option":"30 40 50","correct":true},{"id":122243,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[5] = {1, 2, 4, 2, 5};\n    a[7] = 6;\n    printf(\"%d\", a[7]);\n    return 0;\n}\n</code></pre>","a":[{"id":122352,"option":"0","correct":false},{"id":122353,"option":"Run-time error","correct":false},{"id":122354,"option":"Garbage value","correct":false},{"id":122355,"option":"6","correct":true}]},{"q":"<p>In C, what does the following declaration signify:</p>\n<pre class=\"prettyprint\"><code>    char *a[20];\n</code></pre>","a":[{"id":125656,"option":"a is an array of characters.","correct":false},{"id":125657,"option":"a is an array of 20 character pointers.","correct":true},{"id":125658,"option":"a is an array of function pointers.","correct":false},{"id":125659,"option":"a is a pointer to an array of characters.","correct":false}]},{"q":"<p>What is the output of the following C code:</p>\n<pre class=\"prettyprint\"><code>    #include&lt;stdio.h&gt;\n    #include&lt;string.h&gt;\n    int main()\n    {\n        char p[]=\"%d\";\n        p[1]='c';\n        printf(p,68);\n    }\n</code></pre>","a":[{"id":125964,"option":"C","correct":false},{"id":125965,"option":"D","correct":true},{"id":125966,"option":"E","correct":false},{"id":125967,"option":"Compilation error","correct":false}]},{"q":"<p>What is the output of the following C code:\n</p><pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    static int array[] = {'c','a','t','s'};\n    int i,*v;\n    v = &amp;array[3] - 3;\n    for(i = 0;i &lt; 3;i++)\n    {\n        printf(\"%c\",array[i], v[i]);\n    }\n}\n</code></pre><p></p>","a":[{"id":122244,"option":"cat cat","correct":false},{"id":122245,"option":"cats cats","correct":false},{"id":122246,"option":"cat","correct":true},{"id":122247,"option":"None of these","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n<pre class=\"prettyprint\"><code>    #include &lt;stdio.h&gt;\n        int main()\n        {\n            int a;\n            int *b=4;\n            printf(\"%d%d\",sizeof(a),sizeof(b));\n        }\n</code></pre>","a":[{"id":122280,"option":"Compilation error","correct":false},{"id":122281,"option":" 4 4","correct":false},{"id":122282,"option":"48","correct":true},{"id":122283,"option":"Random memory address","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;stdio.h&gt;\n\nvoid main()\n{\n    int h = 8;\n    int b = h++ + h++ + h++;\n    printf(\"%d\\n\", h);\n}\n</code></pre>","a":[{"id":122184,"option":" 9 ","correct":false},{"id":122185,"option":" 10 ","correct":false},{"id":122186,"option":" 12 ","correct":false},{"id":122187,"option":" 11 ","correct":true}]},{"q":"<p>In C, the smallest element of an array index is called the ____________________________________.</p>","a":[{"id":126080,"option":"Lower bond","correct":true},{"id":126081,"option":"Upper bond","correct":false},{"id":126082,"option":"Extraction","correct":false},{"id":126083,"option":"None of these","correct":false}]},{"q":"<p>What is the error in the following C code:</p>\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n\nint main()\n{\n    char str[] = \"qwertyABC\";\n    printf(\"%.#s %2s\", str, str);\n    return 0;\n}\n</code></pre>","a":[{"id":4034,"option":"Error: in array declaration   ","correct":false},{"id":4035,"option":"Error: in the printf statement   ","correct":false},{"id":4036,"option":"Error: unspecified character in the printf   ","correct":false},{"id":4037,"option":"No error   ","correct":true}]},{"q":"<p>What is the output of the following C code:</p>\n\n<pre class=\"prettyprint\"><code>#include&lt;stdio.h&gt;\n#define element (sizeof(array) / sizeof(array[0]))\nint array[] = {1, 2, 3, 4};\nint main()\n{\n    int a=2+2*2+4*4;\n    for(int i =-a; i &lt;= (signed int)(element-2); i++)\n        for(i=0;i&lt;=sizeof(array)/6;i++)\n            printf(\"%d \", array[i+1]);        \n}</code></pre>","a":[{"id":126272,"option":"2 3 4","correct":true},{"id":126273,"option":"4 3 2 1","correct":false},{"id":126274,"option":"1 2 3 4","correct":false},{"id":126275,"option":"1 1 1 1","correct":false}]},{"q":"<p>What is the output of the following C code snippet:</p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\n#include &lt;string.h&gt;\nusing namespace std;\nint main()\n{\n     static char a[]=\"hacker\";\n     printf(\"%d\",strlen(a));\n     printf(\"%c\",*(a+strlen(a)-1));\n}</code></pre>","a":[{"id":122232,"option":"7r","correct":false},{"id":122233,"option":"6h","correct":false},{"id":122234,"option":"7h","correct":false},{"id":122235,"option":"6r","correct":true}]}]