[{"q":"<p>In RESTful web services, you are working on the messaging technique. Which of the following are the components of an HTTP Request:</p>\n\n<ol>\n\t<li>Verb</li>\n\t<li>URI</li>\n\t<li>HTTP Version</li>\n\t<li>Request Header and Request Body</li>\n</ol>","a":[{"id":1435584,"option":"1, 2, and 3","correct":false},{"id":1435585,"option":"2, 3, and 4","correct":false},{"id":1435586,"option":"1, 3, and 4","correct":false},{"id":1435587,"option":"All of these","correct":true}]},{"q":"<p>Consider the Flask program given alongside.</p>\n\n<pre class=\"prettyprint\"><code>from flask import Flask, request\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef demo():\n    return 'Method used is: %s' % request.method\n   \nif __name__==\"__main__\":\n app.run(debug=True)</code></pre>\n\n<p><br>\nWhat is the output of the program when executed on localhost?</p>","a":[{"id":1764981,"option":"Method used is: POST","correct":false},{"id":1764982,"option":"Method used is: GET","correct":true},{"id":1764983,"option":"Method used is: HEAD","correct":false},{"id":1764984,"option":"Method used is: NONE","correct":false}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>.&nbsp;</strong>You have the following HTML code in <em>login.html</em> file in which you have a form that is used to send the information to the server.</p>\n\n<pre class=\"prettyprint\"><code>{% extends \"base.html\" %}\n{% block title %}Login Page{% endblock %}\n\n{% block content %}\n&lt;form action=\"#\" method=\"post\"&gt;\n    &lt;p&gt;Name:&lt;/p&gt;\n    &lt;p&gt;&lt;input type=\"text\" name=\"nm\" /&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;input type=\"submit\" value=\"submit\"/&gt;&lt;/p&gt;\n&lt;/form&gt;\n{% endblock %}</code></pre>\n\n<p>Once you hit the submit button you get&nbsp;redirected to a page that displays the name the user entered. In order to render this template using python you run the following code.&nbsp;But unfortunately the code does not render the template. What are the errors in //Line1 and //Line2 which needs to be corrected in order to get the right result?</p>\n\n<pre class=\"prettyprint\"><code>from flask import Flask, redirect, url_for, render_template, request\n\napp = Flask(_name_)\n\n@app.route(\"/\")\ndef home():\n    return render_template(\"index.html\")\n\n@app.route(\"/login\", methods=[\"HEAD\", \"GET\"])// Line1\ndef login():\n    if request.method == \"HEAD\":  //Line2\n        user = request.form[\"nm\"]\n        return redirect(url_for(\"user\", usr=user))\n    else:\n        return render_template(\"login.html\")\n\n@app.route(\"/&lt;usr&gt;\")\ndef user(usr):\n    return f\"&lt;h1&gt;{usr}&lt;/h1&gt;\"\nif _name_ == \"_main_\":\n    app.run(debug=True)</code></pre>","a":[{"id":1740608,"option":"In //Line1 methods should be HEAD and POST and in //Line2 method should be POST","correct":false},{"id":1740609,"option":"In //Line1 methods should be GET and POST and in //Line2 method should be GET","correct":false},{"id":1740610,"option":"In //Line1 methods should be GET and POST and in //Line2 method should be POST","correct":true},{"id":1740611,"option":"In //Line1 methods should be HEAD and POST and in //Line2 method should be HEAD","correct":false}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>. The&nbsp;</strong>HTTP protocol is the basis for data communication on World Wide Web. Suppose you want to send the data in unencrypted form to the server without the response body. Which of the following HTTP method will you use?</p>","a":[{"id":1739860,"option":"GET","correct":false},{"id":1739861,"option":"PUT","correct":false},{"id":1739862,"option":"HEAD","correct":true},{"id":1739863,"option":"POST","correct":false}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>. </strong>If you make&nbsp;any request other than&nbsp;<em><code>GET</code></em>&nbsp;to a route without the&nbsp;<code>methods</code>&nbsp;argument and a list of methods, then which of the following HTTP status code will you get as a result?</p>","a":[{"id":1738652,"option":"200 OK","correct":false},{"id":1738653,"option":"502 Bad Gateway","correct":false},{"id":1738654,"option":"404 Not Found","correct":false},{"id":1738655,"option":"405 Method Not Allowed","correct":true}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>. </strong>Which of the following HTTP methods&nbsp;is used to replace all the current representation of the target resource with the uploaded content?</p>\n\n<p>&nbsp;</p>","a":[{"id":1735414,"option":"GET","correct":false},{"id":1735415,"option":"PUT","correct":true},{"id":1735416,"option":"REPLACE","correct":false},{"id":1735417,"option":"POST","correct":false}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>.&nbsp;</strong>Flask supports various types of the HTTP protocol for data retrieval. You have to choose all the correct options that are supported on Flask. Which of the following HTTP methods are supported by Flask?</p>\n\n<p><strong>Options</strong></p>\n\n<ol>\n\t<li>PUT</li>\n\t<li>DELETE</li>\n\t<li>HEAD</li>\n\t<li>TAIL</li>\n\t<li>GET</li>\n</ol>","a":[{"id":1735410,"option":"1, 2, 5 ","correct":false},{"id":1735411,"option":"1, 2, 3, 4","correct":false},{"id":1735412,"option":"1, 2, 3, 5","correct":true},{"id":1735413,"option":"All of these","correct":false}]},{"q":"<p>You are working on a Django project.&nbsp;Your task is to access a book&nbsp;library over HTTP using the views as an API. It is preferable to ask the API when the most recent book got published. Which of the following code will you use for the same:</p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>from django.urls import path\nfrom books.views import BookListView\nurlpatterns = [path('books/', BookListView.as_view()),]</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>from django.urls import path\nfrom books.views import BookListView\nurlpatterns = [path(BookListView.as_view()),]</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>from books.views import BookListView\nurlpatterns = [path('books/', BookListView.as_view()),]</code></pre>\n\t</li>\n</ol>","a":[{"id":1670804,"option":"1","correct":true},{"id":1670805,"option":"2","correct":false},{"id":1670806,"option":"3","correct":false},{"id":1670807,"option":"None of these","correct":false}]},{"q":"<p>You are using Java Servlet 4.0's servlet-mapping discovery API to find a servlet’s mapping URL at runtime. In order to achieve this, you have obtained an instance of an interface 'X' by calling getHttpServletMapping() on an instance of 'X'. What is 'X' in the given context?</p>","a":[{"id":1655761,"option":"HttpServletMapping","correct":false},{"id":1655762,"option":"HttpServletRequest","correct":true},{"id":1655763,"option":"HttpServletRequestWrapper","correct":false},{"id":1655764,"option":"HttpSessionEvent","correct":false}]},{"q":"<p>You want to add a search bar in your app such that it requests data using the HttpClient because it provides typed request and response objects. Also, you want to add testability features to your app. You are providing user service by first fetching the user ID, name, and city. Alongside are given the steps to do that. Select the correct sequence in which you would follow the steps.</p>\n\n<pre class=\"prettyprint\"><code>I. fetchUserProfile() {\n this.userProfileService.getUserProfile()\n .subscribe((data: User) =&gt; this.user = {\n id: data['userId'],\n name: data['firstName'],\n city: data['city']\n });\n}\nII. import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst userProfileUrl: string = 'assets/data/profile.json';\n\n@Injectable()\nexport class UserProfileService {\n constructor(private http: HttpClient) { }\n\n getUserProfile() {\n return this.http.get(this.userProfileUrl);\n }\n}\nIII. import { HttpClientModule } from '@angular/common/http';\n@NgModule({\n imports: [\n BrowserModule,\n // import HttpClientModule after BrowserModule.\n HttpClientModule,\n ],\n ......\n })\n export class AppModule {}</code></pre>\n\n<p> </p>","a":[{"id":1654049,"option":"I -> II -> III","correct":false},{"id":1654050,"option":"II -> I -> III","correct":false},{"id":1654051,"option":"III -> II -> I","correct":true},{"id":1654052,"option":"I -> III -> II","correct":false}]},{"q":"<p>You are using Java Servlet 4.0's servlet-mapping discovery API to find a servlet’s mapping URL at runtime. In the given scenario, which of these methods of the HttpServletMapping interface can return the type of the match as DEFAULT?</p>","a":[{"id":1655765,"option":"getMatchValue()","correct":false},{"id":1655766,"option":"getPattern()","correct":false},{"id":1655767,"option":"getServletName()","correct":false},{"id":1655768,"option":"getMappingMatch()","correct":true}]},{"q":"<p>A servlet throws a ServletException during the service of a request. What could be a possible reason for this to occur and what should you do to avoid it?</p>","a":[{"id":1655757,"option":"The servlet is unable to handle requests temporarily, and the request should be resent","correct":false},{"id":1655758,"option":"The servlet is unable to handle requests permanently, and the request should be sent to another servlet container","correct":false},{"id":1655759,"option":"An error occurred during the processing of the request, and the container should clean up the request","correct":true},{"id":1655760,"option":"An error occurred during the processing of the request, and the container should drop the request","correct":false}]},{"q":"<p>A client wants to request a resource from your HTTP servlet. However, the resource will only be returned if it has been modified recently. Which of these methods of the HttpServlet interface can be used to implement such a conditional GET request?</p>","a":[{"id":1655749,"option":"getConditional","correct":false},{"id":1655750,"option":"doGet","correct":false},{"id":1655751,"option":"getLastModified","correct":true},{"id":1655752,"option":"doGetConditional","correct":false}]},{"q":"<p>You are using the HttpServlet abstract subclass to add additional methods to a basic servlet instance. In the given context, which of the following method responds with the HTTP methods that are supported by the servlet?</p>","a":[{"id":1655745,"option":"doOptions","correct":true},{"id":1655746,"option":"doMethods","correct":false},{"id":1655747,"option":"doTypes","correct":false},{"id":1655748,"option":"doTrace","correct":false}]},{"q":"<p>You are using the getLocales method of the ServletRequest interface when determining the preferred locale of the sender. In the given context, what will the getLocales method return?</p>","a":[{"id":1655741,"option":"It returns an Enumeration of Locale objects, in the decreasing order of acceptable locales for the client","correct":true},{"id":1655742,"option":"It returns an Enumeration of Locale objects, in the  decreasing order of acceptable locales for the servlet","correct":false},{"id":1655743,"option":"It returns an List of Locale objects, in the increasing order of acceptable locales for the client","correct":false},{"id":1655744,"option":"It returns an List of Locale objects, in the increasing order of acceptable locales for the servlet","correct":false}]},{"q":"<p>You want to supply dynamically generated metadata at the end of your response from a servlet. How would you as the sender do this when working with Java servlets 4.0?</p>","a":[{"id":1655737,"option":"Use the Append() method in the HttpServletResponse to do this","correct":false},{"id":1655738,"option":"Use the metadata() method in the HttpServletResponse to do this","correct":false},{"id":1655739,"option":"Use the Trailer response header","correct":true},{"id":1655740,"option":"Use the Meta response header","correct":false}]},{"q":"<p>You want to access and mutate the default request character encoding for the current servlet context when working with Java servlet 4.0. Which of these methods of the servletContext interface can you use to achieve this?</p>","a":[{"id":1655733,"option":"getRequestCharacterEncoding()","correct":false},{"id":1655734,"option":"setRequestCharacterEncoding()","correct":false},{"id":1655735,"option":"Both 1 and 2","correct":true},{"id":1655736,"option":"Neither 1 nor 2","correct":false}]},{"q":"<p>You want a framework to obtain information about the URL that activated a particular servlet request when working with Java servlet 4.0. What can you use to achieve this?</p>","a":[{"id":1655729,"option":"You need to use the interface HttpServletMapping","correct":true},{"id":1655730,"option":"You need to use the interface HttpPersistence","correct":false},{"id":1655731,"option":"You need to use both the interfaces HttpServletMapping and HttpPersistence","correct":false},{"id":1655732,"option":"You need to use the interface routeBuilder","correct":false}]},{"q":"<p>Which of the following is a valid way in which request parameters are stored for Java servlets?</p>","a":[{"id":1655725,"option":"They are stored as ordered list of values","correct":false},{"id":1655726,"option":"They are stored as unordered list of values","correct":false},{"id":1655727,"option":"They are stored as a set of name-value pairs","correct":true},{"id":1655728,"option":"They are stored as a set of name-key pairs","correct":false}]},{"q":"<p>You are using the methods of the ServletRequest interface to access request parameters when working with Java servlets. In the given context, how can you get the first value in the array of string objects returned by getParameterValues?</p>","a":[{"id":1655721,"option":"Using getParameterValues(1)","correct":false},{"id":1655722,"option":"Using getParameterValues(0)","correct":false},{"id":1655723,"option":"Using getParameter","correct":true},{"id":1655724,"option":"None of these","correct":false}]},{"q":"<p>Alice is working for a library. She has developed RESTful Web Services for that library to perform various tasks such as getting the different catalog entries, returning the issued book, or issuing a new book available in the library. One day, Bob tried to delete the available list of books from the books API. Now, the librarian wants the RESTful Web Services that is constructed around his library operations to be secured such that only he has access to make changes in the API of the library. Alice has secured the API information by implementing HTTPS in it. If she has implemented a Secure Socket Layer (SSL) in this procedure, which of the following statements represent the advantages of using this protocol in this scenario:</p>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>The authentication credentials can be simplified to a randomly generated access token.</li>\n\t<li>The server will compare the current timestamp to the request timestamp and only accept the request within a reasonable timeframe.</li>\n\t<li>The token is delivered in the username field of HTTP Basic Auth.</li>\n</ol>","a":[{"id":1566664,"option":"1 and 2","correct":false},{"id":1566665,"option":"2 and 3","correct":false},{"id":1566666,"option":"1 and 3","correct":true},{"id":1566667,"option":"All of these","correct":false}]},{"q":"<p>uri is an ansible module that is used to send any kind of HTTP request. You are using ansible modules for interacting directly with rabbitmq but, you are not having ssh daemon in the docker container for Ansible to connect to. How would you use the rabbitmq docker container and explore the API?</p>","a":[{"id":1534488,"option":"docker run -d --name rabbitmq-mgmt1 --m json.tool rabbitmq:3.6-management-alpine","correct":false},{"id":1534489,"option":"rabbitmq-api-playbook.yml docker run","correct":false},{"id":1534490,"option":"docker run -d --name rabbitmq-mgmt1 -p 127.0.0.1:15672:15672 rabbitmq:3.6-management-alpine","correct":true},{"id":1534491,"option":"rabbitmq-api-playbook.yml docker run -p 127.0.0.1:15672:15672 rabbitmq:","correct":false}]},{"q":"<p>You are visiting</p>\n\n<pre class=\"prettyprint\"><code> http:///api/v1/model_verbose_name_plural for returning {{ model_verbose_name_plural }}</code></pre>\n\n<p>.However, you want to check them in ascending order while making a GET request. What would you do to get the required page?</p>","a":[{"id":1534480,"option":"Configure the model_verbose_model by specifying query_order=ASC","correct":false},{"id":1534481,"option":"Visit http://<Tower server name>/api/v1/model_verbose_name_plural?order_by=-{{ order_field }}","correct":false},{"id":1534482,"option":"Configure the model_verbose_model by ASC keyword.","correct":false},{"id":1534483,"option":"Visit http://<Tower server name>/api/v1/model_verbose_name_plural?order_by={{ order_field }}","correct":true}]},{"q":"<p>In Angular 4, which of the following options is used to set the HTTP request header?</p>","a":[{"id":644108,"option":"HTTP Interceptors","correct":true},{"id":644109,"option":"HttpClient Injectable class","correct":false},{"id":644110,"option":"Both of these","correct":false},{"id":644111,"option":"None of these","correct":false}]}]