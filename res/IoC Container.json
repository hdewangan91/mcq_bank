[{"q":"<p>Alice wants to implement IoC in his program to configure the object. She knows that the IoC container is responsible to instantiate, configure and assemble the objects. Which of the following statements is NOT true about IoC in <em>Spring</em>?</p>\n\n<p><strong>Statements</strong></p>\n\n<p>1. If we have spring bean configuration xml file in a standalone application, then we can use AnnotationConfigApplicationContext to load the file and get the container object.</p>\n\n<p>2. Spring IoC is the mechanism to achieve loose-coupling between Objects dependencies.</p>\n\n<p>3. Spring IoC container is the program that injects dependencies into an object and makes it ready for our use.</p>\n\n<p>4. If we are using Spring in standalone Java applications and using annotations for Configuration, then we can use AnnotationConfigApplicationContext to initialize the container and get the bean objects.</p>","a":[{"id":1655569,"option":"1","correct":true},{"id":1655570,"option":"2","correct":false},{"id":1655571,"option":"3","correct":false},{"id":1655572,"option":"4","correct":false}]},{"q":"<p>Ben wants to use the ApplicationContext<strong> </strong><em>IoC Container</em> in one of his programs during development. What classes would can he use for the implementation of ApplicationContext?</p>\n\n<p> </p>","a":[{"id":1655565,"option":"AdvancedApplicationContext, FileApplicationContext","correct":false},{"id":1655566,"option":"FileSystemXmlApplicationContext, ClassPathXmlApplicationContext, WebXmlApplicationContext","correct":true},{"id":1655567,"option":"FileSystemApplicationContext, ClassPathApplicationContext","correct":false},{"id":1655568,"option":"FileSystemApplicationContext, ClassPathApplicationContext, WebApplicationContext","correct":false}]},{"q":"<p>Alice wanted to use IoC containers to assemble the dependencies between the objects. Which of the following are correct IoC containers that she can use in <em>Spring</em>?</p>","a":[{"id":1655561,"option":"BeanFactory, ApplicationContext, IocContextFactory","correct":false},{"id":1655562,"option":"BeanFactory, BeanContext, IocContextFactory","correct":false},{"id":1655563,"option":"BeanFactory, ApplicationContext","correct":true},{"id":1655564,"option":"BeanFactory, ApplicationContext, BeanContext","correct":false}]},{"q":"<p>Your team decided to use the<em><strong> </strong>Spring Boot</em> framework for the development of the web app because of its advantageous features. You want to implement inversion of control in your program. Which of these techniques would you not use to do so?</p>","a":[{"id":1655557,"option":"an interface injection","correct":false},{"id":1655558,"option":"using a service locator pattern","correct":false},{"id":1655559,"option":"a constructor injection","correct":false},{"id":1655560,"option":"using a function locator pattern","correct":true}]},{"q":"<p>During the development of a <em>Spring Boot</em> application, Bob wants to declare a JNDI Object reference. Which of these will he use?</p>","a":[{"id":1655553,"option":"JndiObject","correct":false},{"id":1655554,"option":"JndiObjectFactory","correct":false},{"id":1655555,"option":"JndiObjectFactoryBean","correct":true},{"id":1655556,"option":"JndiFactoryBean","correct":false}]},{"q":"<p>You have a class 'A' that requires an instance of class 'B' through constructor injection. Also, class 'B' requires an instance of class 'A' through constructor injection.<br>\nWhat will the Spring IoC container do if you configure beans for classes 'A' and 'B' to be injected into each other?</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1.</strong></p>\n\n<p>It will throw a BeanCurrentlyInCreationException.</p>\n\n<p><strong>2.</strong></p>\n\n<p>It will start using setter injection instead for both classes</p>\n\n<p><strong>3.</strong></p>\n\n<p>It will start using setter injection instead for one of the classes</p>\n\n<p><strong>4.</strong></p>\n\n<p>None of these</p>","a":[{"id":1655881,"option":"1","correct":true},{"id":1655882,"option":"2","correct":false},{"id":1655883,"option":"3","correct":false},{"id":1655884,"option":"4","correct":false}]},{"q":"<p>Alice is working on Spring, when building a service abstraction which of the following ways can she use to make the bean available for Spring Dependency Injection?</p>\n\n<p> </p>\n\n<ol>\n\t<li>annotating the class<br>\n\t </li>\n\t<li>Maven Configuration<br>\n\t </li>\n\t<li>Java Config</li>\n</ol>","a":[{"id":1473962,"option":"1 and 3","correct":true},{"id":1473963,"option":"2 and 3","correct":false},{"id":1473964,"option":"1 and 2","correct":false},{"id":1473965,"option":"All of these","correct":false}]}]