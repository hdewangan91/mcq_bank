[{"q":"<p>You want to create an application using Flask that passes the data into an HTML file and displays that data in the browser. From the application file, pass the following values in the HTML file:<br>\n<strong>Title</strong>: My web page, content: Learn Python with me!<br>\n<br>\nCreate an HTML file named mypage.html and display the value of the title variable as the title of the web page. Also, display the value of the content variable using the largest heading tag in HTML.<br>\n<br>\nIdentify the correct code for the app.py and mypage.html files to build the above application.</p>\n\n<p><strong>Options</strong></p>\n\n<p><strong>1</strong></p>\n\n<pre class=\"prettyprint\"><code># app.py\n\nfrom flask import Flask, render_template\n\napp = Flask(__name__) \n@app.route(\"/\")\ndef home( title='My web page',\n        content='Learn Python with me!'):\n    return render_html(mypage.html)\n    \nif __name__==\"__main__\":\n app.run(debug=True)\n\n# mypage.html\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;{title}&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;{content} &lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><strong>2</strong></p>\n\n<pre class=\"prettyprint\"><code># app.py\n\nfrom flask import Flask, render_template\n\napp = Flask(__name__) \n@app.route(\"/\")\ndef home():\n    return render_template(\n        'mypage.html',\n        title='My web page',\n        content='Learn Python with me!'\n    )\n    \nif __name__==\"__main__\":\n app.run(debug=True)\n\n# mypage.html\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;{{title}}&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;{{content}} &lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><strong>3</strong></p>\n\n<pre class=\"prettyprint\"><code># app.py\n\nfrom flask import Flask, render_template\n\napp = Flask(__name__) \n@app.route(\"/\")\ndef home():\n    return render_template(\n        'mypage.html',\n       &lt; title='My web page'&gt;,\n        &lt;content='Learn Python with me!'&gt;\n    )\n    \nif __name__==\"__main__\":\n app.run(debug=True)\n\n# mypage.html\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;{%title%}&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;{%content%} &lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p><strong>4</strong></p>\n\n<pre class=\"prettyprint\"><code># app.py\n\nfrom flask import Flask, render_template\n\napp = Flask(__name__,  title='My web page',\n        content='Learn Python with me!') \n@app.route(\"/\")\ndef home():\n    return render_template('mypage.html')\n    )\n    \nif __name__==\"__main__\":\n app.run(debug=True)\n\n# mypage.html\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;title&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;content &lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p>&nbsp;</p>","a":[{"id":1764977,"option":"1","correct":false},{"id":1764978,"option":"2","correct":true},{"id":1764979,"option":"3","correct":false},{"id":1764980,"option":"4","correct":false}]},{"q":"<p>You want to build your website using Flask. You have created the code for the website using an HTML file named index.html. Which of the following methods of the Flask will return output for the HTML file?<br>\n&nbsp;</p>","a":[{"id":1764973,"option":"render_html('index.html')","correct":false},{"id":1764974,"option":"url_for('index.html')","correct":false},{"id":1764975,"option":"show_template('index.html')","correct":false},{"id":1764976,"option":"render_template('index.html')","correct":true}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>.&nbsp;</strong>Which of the following method can be used to render the \"index.html\" template file in which we will be passing some variables to be displayed?</p>\n\n<p>&nbsp;</p>","a":[{"id":1740616,"option":"display_template() method","correct":false},{"id":1740617,"option":"render() method","correct":false},{"id":1740618,"option":"render_template() method","correct":true},{"id":1740619,"option":"redirect() method","correct":false}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>.&nbsp;</strong>You have the following HTML code in a file named <em>index.html.&nbsp;</em></p>\n\n<pre class=\"prettyprint\"><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;{{ title }}&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;ol&gt;\n        {% for member in members: %}\n        &lt;li&gt;{{ member }}&lt;/li&gt;\n    {% endfor %}\n    &lt;/ol&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p>You want to pass two variables in this template, title, and list of usernames. Which of the following code in Python can render templates?</p>\n\n<p><strong>Code</strong></p>\n\n<ol>\n\t<li>\n\t<pre class=\"prettyprint\"><code>@app.route('/')\n@app.route('/index')\ndef index():\n    users = [ 'Alice','Bob','Ben' ]\n    return render_template('index.html', title=&lt;'HELLO Members!'&gt;, members=&lt;users&gt;)</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>@app.route('/', '/index')\ndef index():\n    users = [ 'Alice','Bob','Ben' ]\n    return render_template('index.html', title={{'HELLO Members!'}}, members={{users}})</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>@app.route(/, /index)\ndef index():\n    users = { 'Alice','Bob','Ben' }\n    return render_template('index.html', title=&lt;{'HELLO Members!'}&gt;, members=&lt;{users}&gt;)</code></pre>\n\t</li>\n\t<li>\n\t<pre class=\"prettyprint\"><code>@app.route('/')\n@app.route('/index')\ndef index():\n    users = [ 'Alice','Bob','Ben' ]\n    return render_template('index.html', title='HELLO Members!', members=users)</code></pre>\n\t</li>\n</ol>","a":[{"id":1740604,"option":"1","correct":false},{"id":1740605,"option":"2","correct":false},{"id":1740606,"option":"3","correct":false},{"id":1740607,"option":"4","correct":true}]},{"q":"<p>You want to build a web application using <em>Flask</em><strong>. </strong>&nbsp;Why would you want to build URLs using the URL reversing function instead&nbsp;of hard-coding them into your templates in Flask? Which of the following statements is the reason for this?</p>\n\n<p><strong>Statements</strong></p>\n\n<ol>\n\t<li>Reversing is often more descriptive than hard-coding the URLs.</li>\n\t<li>You can change your URLs but you have to manually change the hard-coded URLs.</li>\n\t<li>URL building handles escaping of special characters transparently.</li>\n\t<li>The generated paths are always absolute, avoiding unexpected behavior of relative paths in browsers.</li>\n</ol>","a":[{"id":1738601,"option":"1 and 2","correct":false},{"id":1738602,"option":"3 and 4","correct":true},{"id":1738603,"option":"1, 2 and 3","correct":false},{"id":1738604,"option":"2, 3 and 4","correct":false}]},{"q":"<p>Which of the following statements is correct if you execute the following C++ code?<br>\n<br>\n<strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\n \ntemplate &lt;typename T&gt;\nstruct func \n{\n   void x() \n   { \n       cout &lt;&lt; \"hi\" &lt;&lt; endl; \n       \n   }\n   void y() \n   { \n       cout &lt;&lt; \"hello\" &lt;&lt; endl; \n       \n   }\n};\n\ntemplate &lt;&gt;\nvoid func&lt;int&gt;::x()\n{ \n   cout &lt;&lt; \"hello world\" &lt;&lt; endl; \n}\nint main() \n{\n   func&lt;int&gt; t;\n   t.x();         \n   t.y();         \n}</code></pre>\n\n<p> </p>\n\n<p><strong>Statements:</strong><br>\n </p>\n\n<p>1. The code produces the following output-</p>\n\n<pre class=\"prettyprint\"><code>hi\nhello</code></pre>\n\n<p> </p>\n\n<p>2. The code produces the following output-</p>\n\n<pre class=\"prettyprint\"><code>hello world\nhello</code></pre>\n\n<p> <br>\n<br>\n3. The code produces the following output-</p>\n\n<pre class=\"prettyprint\"><code>hello world\nhi   \nhello</code></pre>\n\n<p><br>\n<br>\n4. The code does not give any runtime error</p>","a":[{"id":1488439,"option":"1 and 4","correct":false},{"id":1488440,"option":"2 and 4","correct":true},{"id":1488441,"option":"3 and 4","correct":false},{"id":1488442,"option":"None of these","correct":false}]},{"q":"<p>What will be the output for the following C++ code?</p>\n\n<p><strong>Code:</strong></p>\n\n<pre class=\"prettyprint\"><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass F\n{\n    \n};\n  \nclass S : public F\n{\n    \n};\n\ntemplate&lt;typename X, typename Y&gt;\nclass check\n{\n    class F { };\n    static F find( ... ); \n    \n    class T { F f[2]; };\n    static T find( Y* );\n    \n    public:\n    enum \n    { \n        m = sizeof(T) == sizeof(find(static_cast&lt;X*&gt;(0)))\n        \n    };\n    \n};\n\ntemplate &lt;class Q, class R&gt; \n\nbool checkIf() \n{\n    return check&lt;Q, R&gt;::m;\n}\n\n\nint main()\n{\n    \n    check &lt;class F, class S&gt; t (F,S);\n    cout &lt;&lt; checkIf&lt;class F, class S&gt;() &lt;&lt;endl;\n    return 0;\n    \n}</code></pre>\n\n<p> </p>","a":[{"id":1488095,"option":"0","correct":true},{"id":1488096,"option":"1","correct":false},{"id":1488097,"option":"NULL","correct":false},{"id":1488098,"option":"cannot determine the output","correct":false}]},{"q":"<p>In Angular 2, what is $parse used for?</p>","a":[{"id":388718,"option":"Converts an AngularJS expression into a function","correct":true},{"id":388719,"option":"Calls $compile ","correct":false},{"id":388720,"option":"Converts AngularJS scope values to VanillaJS values","correct":false},{"id":388721,"option":"Converts AngularJS code to VanillaJS","correct":false}]},{"q":"<p>In Angular 2, which of the following pipes formats the date value according to the locale rules?</p>","a":[{"id":388806,"option":"DataPipe","correct":false},{"id":388807,"option":"DatePipe","correct":true},{"id":388808,"option":"DatePipe.format()","correct":false},{"id":388809,"option":"None of these","correct":false}]},{"q":"<p>In Angular 2, which of the following functions returns the HTML template?</p>","a":[{"id":388726,"option":"styleUrls","correct":false},{"id":388727,"option":"templateUrl","correct":true},{"id":388728,"option":"styles","correct":false},{"id":388729,"option":"template","correct":false}]},{"q":"<p>In AngularJS, if you are required to bind your data to HTML by using the expressions, then which of the following braces is used to perform this action?</p>","a":[{"id":388714,"option":"{ }","correct":false},{"id":388715,"option":"{{ }}","correct":true},{"id":388716,"option":"[( )}","correct":false},{"id":388717,"option":"{[ ]}","correct":false}]},{"q":"<p>In Flask, which of these provides the data from a client to server?</p>","a":[{"id":129680,"option":"Response ","correct":false},{"id":129681,"option":"Request ","correct":true},{"id":129682,"option":"Both of these","correct":false},{"id":129683,"option":"Params","correct":false}]},{"q":"<p>In Flask, which of the following methods is used to store the uploaded files on a server?</p>","a":[{"id":129724,"option":"store() ","correct":false},{"id":129725,"option":"save() ","correct":true},{"id":129726,"option":"save_file() ","correct":false},{"id":129727,"option":"file() ","correct":false}]},{"q":"<p>In Flask, which of the following methods is used to navigate between pages?</p>","a":[{"id":129780,"option":"navigate() ","correct":false},{"id":129781,"option":"redirect() ","correct":true},{"id":129782,"option":"goto()","correct":false},{"id":129783,"option":"None of these","correct":false}]},{"q":"<p>In Angular 4, which of the following statements about <strong>ngIf </strong>along<strong> </strong>with <strong>then</strong> and <strong>else </strong>template is incorrect?</p>","a":[{"id":643690,"option":"The 'then' template of ngIf cannot be changed because it is an inline template.","correct":true},{"id":643691,"option":"If 'then' template is bound to have different values then it displays <ng-template> body having the template reference value as 'then' value.","correct":false},{"id":643692,"option":"The value of 'then' block and 'else' block can be changed at the runtime.","correct":false},{"id":643693,"option":"None of these","correct":false}]},{"q":"<p>In AngularJS, which of the following callbacks is used to know the contents of <em>ngView</em>?</p>","a":[{"id":388722,"option":"$viewContentLoaded","correct":true},{"id":388723,"option":"$viewLoaded ","correct":false},{"id":388724,"option":"$onLoaded","correct":false},{"id":388725,"option":"$onViewLoaded","correct":false}]},{"q":"<p>In Angular2, you are working on the templates, which of these directives in the following JavaScript code is used to iterate over the lists:</p>\n\n<pre class=\"prettyprint\"><code>&lt;h2&gt;Items List&lt;/h2&gt;\n\n&lt;p&gt;&lt;i&gt;Pick an item from the list&lt;/i&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li *ngFor=\"let item of items\" (click)=\"selectItem(item)\"&gt;\n    {{item.name}}\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;app-item-detail *ngIf=\"selectedItem\" [item]=\"selectedItem\"&gt;&lt;/app-item-detail&gt;</code></pre>\n\n<p> </p>","a":[{"id":388183,"option":"*ngIF","correct":false},{"id":388184,"option":"*ngFor","correct":true},{"id":388185,"option":"<app-item-detail>","correct":false},{"id":388186,"option":"None of these","correct":false}]},{"q":"<p>In C++, which of the following statements about the <strong>function template</strong> is true?</p>","a":[{"id":146874,"option":"Function templates are special functions that can operate with integer data types","correct":false},{"id":146875,"option":"Function templates are special functions that can operate with character data types","correct":false},{"id":146876,"option":"Function templates are special functions that can operate with generic types","correct":true},{"id":146877,"option":"None of these","correct":false}]},{"q":"<p>In Flask, which of the following response codes will be displayed if no <strong>keys</strong> are present in the form?</p>","a":[{"id":129700,"option":"404","correct":false},{"id":129701,"option":"200","correct":false},{"id":129702,"option":"400","correct":true},{"id":129703,"option":"None of these","correct":false}]},{"q":"<p>How many blueprints can be created in an application?</p>","a":[{"id":129512,"option":"One","correct":false},{"id":129513,"option":"Same as the number of keys","correct":false},{"id":129514,"option":"As many as needed","correct":true},{"id":129515,"option":"Same as the number of templates","correct":false}]},{"q":"<p>In Flask, which of the following displays the logs of a server instead of \"404 page not found\" error message while routing the application to another URL?</p>","a":[{"id":129880,"option":"Logs ","correct":false},{"id":129881,"option":"Logging ","correct":false},{"id":129882,"option":"Logger ","correct":true},{"id":129883,"option":"Log","correct":false}]},{"q":"<p>In Flask, which of the following methods is used instead of a <strong>template engine</strong>?</p>","a":[{"id":129840,"option":"close()","correct":false},{"id":129841,"option":"quit()","correct":false},{"id":129842,"option":"escape()","correct":true},{"id":291477,"option":"None of these","correct":false}]},{"q":"<p>In Flask, which of the following is used to generate URL for <strong>static</strong> files?</p>","a":[{"id":129664,"option":"url_static ","correct":false},{"id":129665,"option":"static ","correct":true},{"id":129666,"option":"static_url ","correct":false},{"id":129667,"option":"All of these","correct":false}]}]