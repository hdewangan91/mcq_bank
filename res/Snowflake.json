[{"q":"<p>In Snowflake, you are unloading data from a database table. You are required to unload a table named '<strong>usertable</strong>' into a file named '<strong>userfile.csv</strong>' in named storage. Also, you are required to increase the <strong>MAX_FILE_SIZE</strong> such that the large data sets can be accommodated. Now, which of the following commands is used to perform these actions in this scenario:<br>\n<br>\n1.</p>\n\n<pre class=\"prettyprint\"><code>MOVE @mystage/userfile.csv.gz from usertable\nSingle=true\nmax_file_size=INT_MAX;</code></pre>\n\n<p><br>\n2.</p>\n\n<pre class=\"prettyprint\"><code>MOVE @mystage/userfile.csv.gz from usertable\nSingle=true\nmax_file_size=INT_MAX;\nCOMPRESSION = -f</code></pre>\n\n<p><br>\n3.</p>\n\n<pre class=\"prettyprint\"><code>MOVE @mystage/userfile.csv.gz from usertable\nSingle=true\nmax_file_size=INT_MAX;\nCOMPRESSION = -f\nfile_format = csv</code></pre>\n\n<p><br>\n4.</p>\n\n<pre class=\"prettyprint\"><code>copy into @mystage/userfile.csv.gz from usertable\nfile_format = (type=csv compression='gzip')\nSingle=true\nmax_file_size=4900000000;</code></pre>\n\n<p> </p>","a":[{"id":1544809,"option":"1","correct":false},{"id":1544810,"option":"2","correct":false},{"id":1544811,"option":"3","correct":false},{"id":1544812,"option":"4","correct":true}]},{"q":"<p>In Snowflake, you are working on various views. Which of the following clauses and functions cannot be included in a Materialized view:</p>\n\n<ol>\n\t<li>Where Clause.</li>\n\t<li>Window functions.</li>\n\t<li>HAVING clauses.</li>\n\t<li>ORDER BY clause.</li>\n</ol>","a":[{"id":1544817,"option":"1, 3, and 4","correct":false},{"id":1544818,"option":"2, 3, and 4","correct":true},{"id":1544819,"option":"1, 2, and 4","correct":false},{"id":1544820,"option":"1, 2, and 3","correct":false}]},{"q":"<p>In Snowflake, you are working on the implementation of the secure data sharing. Which of the following statements about the Shares are correct:<br>\n<strong>Statements</strong></p>\n\n<ol>\n\t<li>They are the Snowflake objects that encapsulate all of the information required to share a database.</li>\n\t<li>Each Share consists of the privileges that grant access to the database(s) and the schema containing the objects to share.</li>\n\t<li>Each Share consists of the privileges that grant access to the specific objects in the database.</li>\n</ol>","a":[{"id":1544757,"option":"1 and 2","correct":false},{"id":1544758,"option":"2 and 3","correct":false},{"id":1544759,"option":"1 and 3","correct":false},{"id":1544760,"option":"All of these","correct":true}]},{"q":"<p>In Snowflakes, you are working on the Semi-Structured data considerations. You have a data that returns both SQL NULL and VARIANT null values on querying the data of two columns named a and b. If you are required to convert a VARIANT null value to SQL NULL, then which of the following queries in this scenario are correct:<br>\n<br>\n<strong>Queries</strong><br>\n1.</p>\n\n<pre class=\"prettyprint\"><code>select\n                parse_json('{ \"a\": null }'):a,\n                to_json(parse_json('{ \"a\": null }'):a);</code></pre>\n\n<p><br>\n2.</p>\n\n<pre class=\"prettyprint\"><code>select\n                parse_json('{ \"a\": null }'):a,\n                to_char(parse_json('{ \"a\": null }'):a);</code></pre>\n\n<p><br>\n3.</p>\n\n<pre class=\"prettyprint\"><code>select\n                parse_json('{ \"a\": null }'):a,\n                to_null(parse_json('{ \"a\": null }'):a);</code></pre>\n\n<p><br>\n4.</p>\n\n<pre class=\"prettyprint\"><code>select\n                parse_json('{ \"a\": null }'):a,\n                to_parse(parse_json('{ \"a\": null }'):a);</code></pre>\n\n<p> </p>","a":[{"id":1544753,"option":"1","correct":false},{"id":1544754,"option":"2","correct":true},{"id":1544755,"option":"3","correct":false},{"id":1544756,"option":"4","correct":false}]},{"q":"<p>In Snowflake, you are working on the table structures. If you are required to implement a clustering key while defining a clustered table, then which of the following data types are invalid for this clustering key:<br>\n<strong>Data types:</strong></p>\n\n<ol>\n\t<li>VARIANT</li>\n\t<li>OBJECT</li>\n\t<li>STRING</li>\n\t<li>ARRAY</li>\n</ol>","a":[{"id":1544785,"option":"2 and 4","correct":false},{"id":1544786,"option":"2 and 3","correct":false},{"id":1544787,"option":"1, 2, and 4","correct":true},{"id":1544788,"option":"1, 2, and 3","correct":false}]},{"q":"<p>In Snowflake, you are copying data into the target tables while loading the data from the local file system. You are given a file named file.csv.gz. While copying this to the target table, if this file has the corrupted data, then the entire loading process get aborted. Now, which of the following syntaxes can be used to load the file named file.csv.gz into the mycsvtable table such that above issues can be skipped:<br>\n<br>\n1.</p>\n\n<pre class=\"prettyprint\"><code>insert into target_table\n    from @mystage/file.csv.gz\n    file_format = (format_name = mycsvformat);</code></pre>\n\n<p><br>\n2.</p>\n\n<pre class=\"prettyprint\"><code>copy into target_table\n    from @mystage/file.csv.gz\n    file_format = (format_name = mycsvformat)\n    on_error = 'abort_statement';</code></pre>\n\n<p><br>\n3.</p>\n\n<pre class=\"prettyprint\"><code>copy into target_table\n    from @mystage/file.csv.gz\n    file_format = (format_name = mycsvformat)\n    on_error = 'skip_file';</code></pre>\n\n<p><br>\n4.</p>\n\n<pre class=\"prettyprint\"><code>Load data into target_table\n    from @mystage/file.csv.gz\nformat_name = mycsvformat;</code></pre>\n\n<p> </p>","a":[{"id":1544801,"option":"1","correct":false},{"id":1544802,"option":"2","correct":false},{"id":1544803,"option":"3","correct":true},{"id":1544804,"option":"4","correct":false}]},{"q":"<p>In Snowflake, which of the following statements about the Transient tables are correct:<br>\n<br>\n<strong>Statements</strong></p>\n\n<ol>\n\t<li>They persist until explicitly dropped and are available to all users with the appropriate privileges.</li>\n\t<li>They are similar to permanent tables but do not contain Fail-safe period</li>\n\t<li>The default value of the time travel retention period in these days is 0 days.</li>\n\t<li>They are specifically designed for transitory data that needs to be maintained beyond each session, but does not need the same level of data protection and recovery provided by permanent tables.</li>\n</ol>","a":[{"id":1544825,"option":"1, 2, and 3","correct":false},{"id":1544826,"option":"2, 3, and 4","correct":false},{"id":1544827,"option":"1, 2, and 4","correct":true},{"id":1544828,"option":"1, 3, and 4","correct":false}]},{"q":"<p>In Snowflake, you are working on the SnowSQL variables. If you are requried to list all the current variables, then which of the following commands can used to peform this action in this scenario:</p>\n\n<ol>\n\t<li>!variables</li>\n\t<li>!vars</li>\n\t<li>list_variables</li>\n\t<li>desc_vars</li>\n</ol>","a":[{"id":1544781,"option":"3 and 4","correct":false},{"id":1544782,"option":"Only 4","correct":false},{"id":1544783,"option":"Only 1","correct":false},{"id":1544784,"option":"1 and 2","correct":true}]},{"q":"<p>In Snowflake, you are working on the sequences. Determine the output of the following query:</p>\n\n<p><strong>Query</strong></p>\n\n<pre class=\"prettyprint\"><code>create or replace table sequence_demo (i integer default seq_dummy.nextval, dummy smallint);\ninsert into sequence_demo (dummy) values (0);\n\ninsert into sequence_demo (dummy) select dummy from sequence_demo;\ninsert into sequence_demo (dummy) select dummy from sequence_demo;\ninsert into sequence_demo (dummy) select dummy from sequence_demo;\ninsert into sequence_demo (dummy) select dummy from sequence_demo;\ninsert into sequence_demo (dummy) select dummy from sequence_demo;\n\nselect i from sequence_demo order by i limit 5;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<table border=\"1\" style=\"width: 30px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">3</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">5</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>2.</p>\n\n<table border=\"1\" style=\"width: 30px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">4</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">8</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">16</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>3.</p>\n\n<table border=\"1\" style=\"width: 30px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">0</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">2</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">3</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center; width: 19px;\">4</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>","a":[{"id":1544853,"option":"1","correct":true},{"id":1544854,"option":"2","correct":false},{"id":1544855,"option":"3","correct":false},{"id":1544856,"option":"Incorrect statement to execute","correct":false}]},{"q":"<p>In Snowflake, you are working on various GRANT privileges. If you are required to grant the global CREATE DATA EXCHANGE LISTING privilege to 'sysadmin' role in a Data Exchange, then which of the commands must be executed in this scenario:</p>\n\n<p><strong>Statements</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>use role accountadmin;\n\ngrant create data exchange listing on account to role sysadmin;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>use role accountadmin;\n\ngrant create share on account to systadmin;</code></pre>\n\n<p> </p>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>use role accountadmin;\n\ngrant select data exchange on account to systadmin;</code></pre>\n\n<p> </p>","a":[{"id":1544761,"option":"1","correct":true},{"id":1544762,"option":"2","correct":false},{"id":1544763,"option":"3","correct":false},{"id":1544764,"option":"None of these","correct":false}]},{"q":"<p>In Snowflake, which of the following statements about the structured data and the semi-structured data are correct:<br>\n<strong>Statements:</strong></p>\n\n<ol>\n\t<li>Structured data does not require a prior definition of a schema and can constantly evolve, i.e. new attributes can be added at any time whereas the Semi-Structured data requires a fixed schema that is defined before the data can be loaded and queried in a relational database system.</li>\n\t<li>Unlike structured data, which represents data as a flat table, semi-structured data can contain n-level hierarchies of nested information.</li>\n</ol>","a":[{"id":1544749,"option":"1","correct":false},{"id":1544750,"option":"2","correct":true},{"id":1544751,"option":"Both of these","correct":false},{"id":1544752,"option":"None of these","correct":false}]},{"q":"<p>In Snowflake, what will be the output if the code given below is executed?<br>\n </p>\n\n<pre class=\"prettyprint\"><code>create or replace sequence sequence_sample start = 1 increment = 2;\nselect sequence_sample.nextval;\ncreate or replace table sequence_sample_table (i integer);\ninsert into sequence_sample_table (i) values (sequence_sample.nextval);\nselect i from sequence_sample_table;</code></pre>\n\n<p> </p>","a":[{"id":1544813,"option":"1","correct":false},{"id":1544814,"option":"3","correct":true},{"id":1544815,"option":"2","correct":false},{"id":1544816,"option":"4","correct":false}]},{"q":"<p>In Snowflake, you are working on the Database replication considerations. You have observed that external tables are being implemented in the primary database currently. This caused the replication or refresh operation to fail with the following error message:</p>\n\n<pre class=\"prettyprint\"><code>003906 (55000): SQL execution error:\nPrimary database contains an external table ''.Replication of a database with external table is not supported</code></pre>\n\n<p><br>\nNow, which of the following actions can be performed to overcome this limitation?</p>","a":[{"id":1544765,"option":"Move the external tables into a separate database that is not replicated.","correct":true},{"id":1544766,"option":"If you are not migrating your databases to another account, you could clone the primary database, drop the external table from the clone, and then replicate the cloned database.","correct":false},{"id":1544767,"option":"Move the external tables into a separate database that is already replicated.","correct":false},{"id":1544768,"option":"If you are not migrating your databases to another account, you could clone the external database, drop the external table from the clone, and then replicate the cloned database.","correct":false}]},{"q":"<p>In Snowflake, you are copying data from an internal stage. You have implemented the following command to load the data from all the files prefixed with staged in your stage by using the named format such as 'my_csv_format' that is created in load data. Now, which of the following types of stages is represented in implementing this scenario:<br>\n<br>\n<strong>Command:</strong></p>\n\n<pre class=\"prettyprint\"><code>copy into mytable from @~/staged file_format = (format_name = 'my_csv_format');</code></pre>\n\n<p> </p>","a":[{"id":1544797,"option":"User Stage","correct":true},{"id":1544798,"option":"Table Stage","correct":false},{"id":1544799,"option":"Named Stage","correct":false},{"id":1544800,"option":"View Stage","correct":false}]},{"q":"<p>In Snowflake, you are given the table <strong>EVENTS</strong>. Which query can get the events (EVENT_IDs) details that have started on a day and end on the next day:</p>\n\n<p><strong>EVENTS</strong></p>\n\n<table border=\"1\" style=\"width: 500px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>EVENT_ID</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>START_TIME </strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>END_TIME</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">abc</td>\n\t\t\t<td style=\"text-align: center;\">2020-12-18 14:55:01.0000000</td>\n\t\t\t<td style=\"text-align: center;\">2020-12-19 12:30:03.0000000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">ken</td>\n\t\t\t<td style=\"text-align: center;\">2020-09-03 03:27:01.0000000</td>\n\t\t\t<td style=\"text-align: center;\">2020-09-03 08:05:28.0000000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">qsb</td>\n\t\t\t<td style=\"text-align: center;\">2021-01-07 23:29:49.0000000</td>\n\t\t\t<td style=\"text-align: center;\">2021-01-08 02:46:25.0000000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">ght</td>\n\t\t\t<td style=\"text-align: center;\">2020-09-09 12:44:50.0000000</td>\n\t\t\t<td style=\"text-align: center;\">2020-09-10 01:23:39.0000000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">sam</td>\n\t\t\t<td style=\"text-align: center;\">2020-12-14 12:26:51.0000000</td>\n\t\t\t<td style=\"text-align: center;\">2020-12-14 12:27:02.0000000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">nuu</td>\n\t\t\t<td style=\"text-align: center;\">2019-09-13 04:08:54.0000000</td>\n\t\t\t<td style=\"text-align: center;\">2019-09-13 04:23:38.0000000</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p> </p>\n\n<p><strong>SQL Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * from EVENTS where to_date(start_time) - to_date(end_time) = 1;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * from EVENTS where Datediff(day,start_time::date, end_time::date) = 1;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * from EVENTS where to_date(start_time) - to_date(end_time) = 0;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT * from EVENTS where Datediff(day,end_time::date, start_time::date) = 1;</code></pre>\n\n<p> </p>","a":[{"id":1544849,"option":"1","correct":false},{"id":1544850,"option":"2","correct":true},{"id":1544851,"option":"3","correct":false},{"id":1544852,"option":"4","correct":false}]},{"q":"<p>In Snowflake, you are working on the Sequences. If you are required to return two columns a and b with the same generated sequence value, then which of the following SQL query can be used to perform this action:<br>\n<br>\n<strong>SQL queries</strong><br>\n1.</p>\n\n<pre class=\"prettyprint\"><code>create or replace sequence seq1;\nSelect seq1.nextval a, seq1.nextval b from dual;</code></pre>\n\n<p><br>\n2.</p>\n\n<pre class=\"prettyprint\"><code>create or replace sequence seq1;\nselect b, a.nextval from b, table(getnextval(seq1)) a;</code></pre>\n\n<p><br>\n3.</p>\n\n<pre class=\"prettyprint\"><code>create or replace sequence seq1;\nselect b, a.nextval from b, table(getnextval(seq1)) seq1.nextval b from dual;</code></pre>\n\n<p><br>\n4.</p>\n\n<pre class=\"prettyprint\"><code>create or replace sequence seq1;\nSelect seqref.a a, seqref.a b from (select seq1.nextval a from dual) seqref;</code></pre>\n\n<p> </p>","a":[{"id":1544833,"option":"1","correct":false},{"id":1544834,"option":"2","correct":false},{"id":1544835,"option":"3","correct":false},{"id":1544836,"option":"4","correct":true}]},{"q":"<p>You want to run a SQL script during a connection to the Snowflake using the -f connection parameter. You also need to specify an output file for the script. Make sure that the standard output is turned off. The startup and exit messages also needs to be turned off. Which of the following codes would you use to perform the given operation:<br>\n<br>\n1.</p>\n\n<pre class=\"prettyprint\"><code>snowsql -a user#&gt; -u username -f /tmp/input_script.sql</code></pre>\n\n<p><br>\n2.</p>\n\n<pre class=\"prettyprint\"><code>snowsql -a db -u username -f /tmp/input_script.sql -o output_file=/tmp/output.csv -o quiet=true -o friendly=false -o header=false -o output_format=csv</code></pre>\n\n<p><br>\n3.</p>\n\n<pre class=\"prettyprint\"><code>user#&gt; !source file friendly=false -o header=false -o output_format=csv</code></pre>\n\n<p><br>\n4.</p>\n\n<pre class=\"prettyprint\"><code>user#&gt; !source file friendly=false -o header=false -o output_format=csv !set variable_substitution=true -f /tmp/input_script.sql -o output_file=/tmp/output.csv</code></pre>\n\n<p> </p>","a":[{"id":1544789,"option":"1","correct":false},{"id":1544790,"option":"2","correct":true},{"id":1544791,"option":"3","correct":false},{"id":1544792,"option":"4","correct":false}]},{"q":"<p>John has a table named <strong>orders</strong> as given below. He wants to take out the month value from the <strong>order_date</strong> column so that he can view the month-wise data.<br>\nIn Snowflake, which of the following query will be used to select the month from date:</p>\n\n<p><strong>orders</strong></p>\n\n<p><img alt=\"\" height=\"124\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/d0ee1562-9c05-4b29-8993-64b6e2a4a8e9.png\" width=\"225\"></p>\n\n<p><strong>Queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT date_trunc('month') from order_date as mon from orders;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT DATE_FROM_PARTS(2) AS mon from orders;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT extract (month from order_date) as mon from orders;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT TIME_SLICE(2) from orders;</code></pre>\n\n<p> </p>","a":[{"id":1544841,"option":"1","correct":false},{"id":1544842,"option":"2","correct":false},{"id":1544843,"option":"3","correct":true},{"id":1544844,"option":"4","correct":false}]},{"q":"<p>In Snowflake, you are bulk loading the data from the local file system into the tables. If you are required to upload one or more data files to a Snowflake stage and to load the contents of the staged files into a Snowflake database table, then which of the following commands will you use to perform these actions in this scenario?</p>","a":[{"id":1544793,"option":"SEND and MOVE","correct":false},{"id":1544794,"option":"PUT and COPY INTO","correct":true},{"id":1544795,"option":"COPY INTO and MOVE","correct":false},{"id":1544796,"option":"COPY and SEND","correct":false}]},{"q":"<p>In Snowflake, you are setting the scaling policy for a multi-cluster warehouse. You are using the ‘Economy’ Scaling policy to conserve credits so that you don't need to start additional clusters, instead the running clusters could be fully loaded, which could lead to some of the queries taking comparatively longer completion time. When would the clusters start in such case?</p>","a":[{"id":1544777,"option":"If the system estimates there’s enough query load to keep the cluster busy for at least 6 minutes","correct":true},{"id":1544778,"option":"If the system estimates that the query time limit has crossed","correct":false},{"id":1544779,"option":"When a query is queued or the system detects that there’s one more query","correct":false},{"id":1544780,"option":"When a query is queued for more than 10 seconds or the system detects that there’s one more query","correct":false}]},{"q":"<p>In Snowflake, you are working on the Empty strings and NULL values while unloading your data from a database table. Which of the following will you set to enclose your strings in quotes such that empty strings are distinguishable from the NULLs in the output CSV files?</p>","a":[{"id":1544805,"option":"CREATE FILE FORMAT","correct":false},{"id":1544806,"option":"EMPTY_FIELD_AS_NULL","correct":false},{"id":1544807,"option":"FIELD_OPTIONALLY_ENCLOSED_BY","correct":true},{"id":1544808,"option":"STRING_ENCLOSED_BY","correct":false}]},{"q":"<p>Anita has a table named <strong>op_timestamp</strong> where she is storing the records for all the operations done by her over the database concerning time. She wants to extract the following data from a table- year, month, day, and quarter.</p>\n\n<p>In Snowflake, how will you query a table to get the required data?   </p>\n\n<p><strong>order_date</strong></p>\n\n<table border=\"1\" style=\"width: 431px;\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\"><strong>OP</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>DATE</strong></td>\n\t\t\t<td style=\"text-align: center;\"><strong>TIME</strong></td>\n\t\t\t<td style=\"text-align: center; width: 157px;\"><strong>TIME_STAMP</strong></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">1</td>\n\t\t\t<td style=\"text-align: center;\">22-06-16</td>\n\t\t\t<td style=\"text-align: center;\">19:12:25</td>\n\t\t\t<td style=\"text-align: center; width: 157px;\">2016-06-18 19:12:25</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">2</td>\n\t\t\t<td style=\"text-align: center;\">03-02-16</td>\n\t\t\t<td style=\"text-align: center;\">09:12:27</td>\n\t\t\t<td style=\"text-align: center; width: 157px;\">2016-02-03 09:12:27</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">3</td>\n\t\t\t<td style=\"text-align: center;\">17-09-16</td>\n\t\t\t<td style=\"text-align: center;\">23:19:32</td>\n\t\t\t<td style=\"text-align: center; width: 157px;\">2016-09-17 23:19:32</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style=\"text-align: center;\">4</td>\n\t\t\t<td style=\"text-align: center;\">15-08-16</td>\n\t\t\t<td style=\"text-align: center;\">17:05:36</td>\n\t\t\t<td style=\"text-align: center; width: 157px;\">2016-08-15 17:05:36</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p><strong>SQL queries</strong></p>\n\n<p>1.</p>\n\n<pre class=\"prettyprint\"><code>SELECT CONVERT_TIMEZONE time_stamp OVER ('year','month','day','quarter') from op_timestamp;</code></pre>\n\n<p>2.</p>\n\n<pre class=\"prettyprint\"><code>SELECT date_part(year,time_stamp), date_part(month, time_stamp), date_part(day, time_stamp),date_part(quarter,time_stamp) from op_timestamp;</code></pre>\n\n<p>3.</p>\n\n<pre class=\"prettyprint\"><code>SELECT TIMESTAMPADD('year') from time_stamp,\n           TIMESTAMPADD('month') from time_stamp,\n           TIMESTAMPADD('day') from time_stamp,\n           TIMESTAMPADD('quarter') from time_stamp\n         WITH op_timestamp;</code></pre>\n\n<p>4.</p>\n\n<pre class=\"prettyprint\"><code>SELECT time_stamp TO_YEAR AS year,\n            time_stamp TO_MONTH AS month,\n            time_stamp TO_DAY AS day,\n            time_stamp TO_QUARTER AS quarter\n FROM  op_timestamp;</code></pre>\n\n<p> </p>","a":[{"id":1544837,"option":"1","correct":false},{"id":1544838,"option":"2","correct":true},{"id":1544839,"option":"3","correct":false},{"id":1544840,"option":"4","correct":false}]},{"q":"<p>In Snowflake, you are working on its architecture. Which of the following is used to handle the queries where each node in the cluster stores a portion of the entire data set locally?</p>","a":[{"id":1544769,"option":"Dependent Warehouse","correct":false},{"id":1544770,"option":"Metadata Optimizer","correct":false},{"id":1544771,"option":"MPP compute clusters","correct":true},{"id":1544772,"option":"Infrastructure Warehousing","correct":false}]},{"q":"<p>In Snowflake, you are working on the Multi-cluster warehouse. You want to start the clusters in Snowflakes as soon as the warehouse is started so that the resources are accessible to the warehouse. Which of the following modes would you use to get the required control to handle the concurrent user sessions and queries?</p>","a":[{"id":1544773,"option":"Auto-scale","correct":false},{"id":1544774,"option":"Minimized","correct":false},{"id":1544775,"option":"Maximized","correct":true},{"id":1544776,"option":"Consideration","correct":false}]},{"q":"<p>In Snowflake, you are working on the Sequence semantics. If the value 100 was generated with a step of -5, determine the values that are reserved in this scenario?</p>","a":[{"id":1544829,"option":"100 to 105","correct":false},{"id":1544830,"option":"96 to 100","correct":true},{"id":1544831,"option":"95 to 100","correct":false},{"id":1544832,"option":"100 to 500","correct":false}]},{"q":"<p>In Snowflake, you are working on various views. You require your Snowflake query optimizer to use some internal optimizations to process views and queries together. Also, you are required to ensure that the views are enabled to be evaluated in a faster efficient manner as compared to the seperate evaluations. Which of the following types of views can be implemented to perform these actions in this scenario?</p>","a":[{"id":1544821,"option":"Materialized View","correct":false},{"id":1544822,"option":"Conditional View","correct":false},{"id":1544823,"option":"Non-materialized view","correct":true},{"id":1544824,"option":"Non-Conditional View","correct":false}]},{"q":"<p>In Snowflake, you are working on the semi-structured data. If you are required to extract select columns from a staged Parquet file into separate table columns, then which of the following statements can be used to perform this action in this scenario?</p>","a":[{"id":1544745,"option":"CREATE TABLE","correct":false},{"id":1544746,"option":"CREATE TABLE AS EXTRACT","correct":false},{"id":1544747,"option":"CREATE TABLE AS SELECT","correct":true},{"id":1544748,"option":"None of these","correct":false}]},{"q":"<p>In Snowflake, you are given two tables <strong>inventory</strong> and <strong>orders</strong>. If you are required to execute the following SQL query, then determine its output:</p>\n\n<p><strong>inventory</strong></p>\n\n<p><img alt=\"\" height=\"109\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/56392ea3-142f-4d3d-ac54-d87ceec7f711.png\" width=\"234\"></p>\n\n<p><strong>orders</strong></p>\n\n<p><img alt=\"\" height=\"106\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/e11e17e0-18ca-4a18-b147-4bc3c47e3133.png\" width=\"227\"></p>\n\n<p><strong>SQL query</strong></p>\n\n<pre class=\"prettyprint\"><code>with recursive orderdb as \n(select i.item_no,i.quantity,o.cust_id, o.order_id\nfrom inventory i\njoin orders o\non i.name=o.order_item)\nselect * from orderdb where quantity=(select max(quantity) from orderdb)</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"48\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/afef2faf-69d7-43bf-bab1-2d8781acd037.png\" width=\"309\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"48\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/9e0ba78c-ee73-4c62-8864-1b31bfb0156f.png\" width=\"306\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"48\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/f1bfcfdd-d04b-4697-a883-af7d1b530689.png\" width=\"372\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"65\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/0881b5ee-a7fd-40c1-820b-7bde9493d22c.png\" width=\"372\"></p>\n\n<p> </p>","a":[{"id":1544621,"option":"1","correct":false},{"id":1544622,"option":"2","correct":true},{"id":1544623,"option":"3","correct":false},{"id":1544624,"option":"4","correct":false}]},{"q":"<p>In Snowflake, you are given the table<strong> purchase_orders</strong>. If you are required to execute the following SQL query, then determine its output:</p>\n\n<p><strong>purchase_orders</strong></p>\n\n<p><img alt=\"\" height=\"147\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/6093d2c5-8c2d-44b7-96db-7be859d3fa74.png\" width=\"405\"></p>\n\n<p><strong>SQL query</strong></p>\n\n<pre class=\"prettyprint\"><code>WITH RECURSIVE regional_po (region, country, dept, part_no, amount) AS (\nSELECT region,country,dept, part_no, amount FROM purchase_orders WHERE order_date&gt;'2015-03-01')\nSELECT region,dept, SUM(amount) FROM regional_po\nGROUP BY region, dept;</code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"145\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/da092237-df41-4792-8a50-7139f6fcc8ed.png\" width=\"196\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"126\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/74b0c5f8-06d5-4164-9340-d897c72a97b3.png\" width=\"196\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"83\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/d8155a18-d645-462d-83d3-5a372c69404a.png\" width=\"194\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"85\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/c1c044dd-0d00-44e3-a194-803b98ac5ad4.png\" width=\"197\"></p>","a":[{"id":1544617,"option":"1","correct":false},{"id":1544618,"option":"2","correct":false},{"id":1544619,"option":"3","correct":false},{"id":1544620,"option":"4","correct":true}]},{"q":"<p>In Snowflake, you are given the table <strong>stafffdb</strong>. If you are required to execute the following SQL query, then determine its output:</p>\n\n<p><strong>staffdb</strong></p>\n\n<p><img alt=\"\" height=\"131\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/77f26bea-1b50-434a-a24d-4cd894e58a11.png\" width=\"256\"></p>\n\n<p><strong>SQL query</strong></p>\n\n<pre class=\"prettyprint\"><code>WITH comp_employees AS (\n  SELECT  id,  name, dept,\n        CASE \n            WHEN salary&gt; 40000 THEN 'company_role'\n            ELSE 'External_role'\n        END    \n  AS hire_type\n    FROM staffdb )\nSELECT id, name, dept\nFROM comp_employees \nWHERE hire_type= 'company_role'\nORDER BY name; </code></pre>\n\n<p><strong>Output</strong></p>\n\n<p>1.</p>\n\n<p><img alt=\"\" height=\"88\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/0f5172bd-1a48-494e-a0ff-b1f2813cefe8.png\" width=\"216\"></p>\n\n<p>2.</p>\n\n<p><img alt=\"\" height=\"86\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/ed612b1b-72a3-47f2-95e6-9cf5dd976876.png\" width=\"212\"></p>\n\n<p>3.</p>\n\n<p><img alt=\"\" height=\"90\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/c19dfd5b-371d-4c96-a74d-34fa93ab8002.png\" width=\"216\"></p>\n\n<p>4.</p>\n\n<p><img alt=\"\" height=\"91\" src=\"https://he-s3.s3.ap-southeast-1.amazonaws.com/media/uploads/f18da29d-f129-4893-a11a-7fdc548360b0.png\" width=\"215\"></p>","a":[{"id":1544613,"option":"1","correct":false},{"id":1544614,"option":"2","correct":true},{"id":1544615,"option":"3","correct":false},{"id":1544616,"option":"4","correct":false}]}]